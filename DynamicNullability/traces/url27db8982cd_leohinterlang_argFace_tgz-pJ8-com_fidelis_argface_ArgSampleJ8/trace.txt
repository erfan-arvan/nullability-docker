Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 8 times.  Unmatched entries are ignored!
Unterminated calls:
  com.fidelis.argface.ArgSample.main(java.lang.String[]) : 1 invocation
  com.fidelis.argface.ArgSample.otherTests() : 1 invocation
  com.fidelis.argface.ArgSample.testCommandLine(java.lang.String) : 1 invocation
  com.fidelis.argface.ArgStandard.parse(java.lang.String[]) : 1 invocation
  com.fidelis.argface.ArgBase.parseArguments(java.lang.String[]) : 1 invocation
  com.fidelis.argface.ArgBase.parseArguments(com.fidelis.argface.ArgNode, java.lang.String[]) : 1 invocation
  com.fidelis.argface.ArgBase.parseArgTwo(com.fidelis.argface.ArgNode) : 1 invocation
  com.fidelis.argface.ArgPattern.matchUsage(com.fidelis.argface.ArgNode) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
com.fidelis.argface.ArgBase:::OBJECT
this has only one value
this.getClass().getName() == com.fidelis.argface.ArgStandard.class
this.parser has only one value
this.parser != null
this.parser.source.getClass().getName() == com.fidelis.argface.TokenString.class
this.parser.delimiters has only one value
this.parser.delimiters != null
this.parser.delimiters.toString == " \t\n'-+|[]<>()=:,/"
this.parser.programName.toString == "ArgSample"
this.parser.optionalDepth == 0
this.parser.optionDefForm == false
this.parser.exor == false
this.parser.newOption == false
this.parser.specOptions == false
this.parser.operand.type == 1
this.parser.operand.name has only one value
this.parser.operand.name != null
this.parser.operand.name.toString == "file"
this.parser.operand.fieldName.toString == "fileOperand"
this.parser.operand.optional == false
this.parser.operand.field == null
this.parser.operand.repeat == true
this.parser.operand.repeatList == false
this.parser.operand.list[] elements != null
this.parser.operand.list[].getClass().getName() elements == java.lang.String.class
this.parser.operand.list.getClass().getName() == java.util.ArrayList.class
this.parser.operand.value.toString one of { "file3", "more6" }
this.parser.operand.count one of { 0, 3, 9 }
this.parser.option.spec == 3
this.parser.option.name has only one value
this.parser.option.name != null
this.parser.option.name.toString == "z"
this.parser.option.altName has only one value
this.parser.option.altName != null
this.parser.option.altName.toString == "sleep"
this.parser.option.fieldName.toString == "zOption"
this.parser.option.field == null
this.parser.option.has == false
this.parser.option.count == 0
this.parser.option.creation == false
this.parser.option.argName == null
this.parser.option.argFieldName == null
this.parser.option.argField == null
this.parser.option.argSetter == null
this.parser.option.argValue == null
this.parser.option.argOptional == false
this.parser.option.argRepeat == false
this.parser.option.argSet == false
this.parser.option.repeat == false
this.parser.option.repeatList == false
this.parser.option.list == null
this.parser.option.help has only one value
this.parser.option.help != null
this.parser.option.help.toString == "dormant state when completed"
this.parser.argList.home has only one value
this.parser.argList.home != null
this.parser.argList.curr != null
this.parser.listStack has only one value
this.parser.listStack != null
this.parser.listStack.getClass().getName() == java.util.ArrayDeque.class
this.parser.varList has only one value
this.parser.varList != null
this.parser.varList[] elements != null
this.parser.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.parser.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.parser.varList.getClass().getName() == java.util.ArrayList.class
this.parser.litList has only one value
this.parser.litList != null
this.parser.litList[] elements != null
this.parser.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.parser.litList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.parser.litList.getClass().getName() == java.util.ArrayList.class
this.parser.optionList has only one value
this.parser.optionList != null
this.parser.optionList[] elements != null
this.parser.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.parser.optionList.getClass().getName() == java.util.ArrayList.class
this.help has only one value
this.help != null
this.help.argList.home has only one value
this.help.argList.home != null
this.help.argList.curr != null
this.help.optionList[] elements != null
this.help.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.help.optionList.getClass().getName() == java.util.ArrayList.class
this.help.suppressHelp == false
this.help.usageText.toString == "Usage:\n  ArgSample set [-x|--extend | -y|--yield | -z|--sleep] [-e] [[upper | lower |\n            any] <pattern>] <other> \n  ArgSample (match [upper | lower | any] <other>) | (ending <file>) | (<other>\n            match <pattern>) [set | clear] \n  ArgSample [-a|--after <lines>] [-b|--before <lines>] [-c] [-d] [-e] match |\n            starting | ending | <other> <pattern> <file>... \n  ArgSample -h|--help | -v|--version | --about \n"
this.help.versionText.toString == "ArgSample version 1.0.0"
this.help.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
this.help.helpText.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
this.help.problemUsage has only one value
this.help.problemUsage != null
this.help.problemUsage[] elements != null
this.help.problemUsage[].getClass().getName() elements == com.fidelis.argface.ArgNode.class
this.help.problemUsage.getClass().getName() == java.util.ArrayList.class
this.help.problemText has only one value
this.help.problemText != null
this.help.problemText[] elements != null
this.help.problemText[].getClass().getName() elements == java.lang.String.class
this.help.problemText.getClass().getName() == java.util.ArrayList.class
this.util has only one value
this.util != null
com.fidelis.argface.ArgUtil.instance has only one value
com.fidelis.argface.ArgUtil.instance != null
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base != null
com.fidelis.argface.ArgUtil.base.getClass().getName() == com.fidelis.argface.ArgStandard.class
com.fidelis.argface.ArgUtil.instance.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.parser has only one value
com.fidelis.argface.ArgUtil.base.parser != null
com.fidelis.argface.ArgUtil.base.help has only one value
com.fidelis.argface.ArgUtil.base.help != null
com.fidelis.argface.ArgUtil.base.util has only one value
com.fidelis.argface.ArgUtil.base.util != null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.pattern != null
com.fidelis.argface.ArgUtil.base.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.base.usageText.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
com.fidelis.argface.ArgUtil.base.versionText.toString == "ArgSample version 1.0.0"
com.fidelis.argface.ArgUtil.base.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
com.fidelis.argface.ArgUtil.base.helpText.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.base.allowOverwrite == null
com.fidelis.argface.ArgUtil.base.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.varList[] elements != null
com.fidelis.argface.ArgUtil.base.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.litList[] elements != null
com.fidelis.argface.ArgUtil.base.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.optionList[] elements != null
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.helpOption == false
com.fidelis.argface.ArgUtil.base.versionOption == false
com.fidelis.argface.ArgUtil.base.aboutOption == false
com.fidelis.argface.ArgUtil.base.nonOptionList[] elements != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() elements == java.lang.String.class
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.targetOperands[] elements != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.targetOptions[] elements != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
this.util.programName.toString == "ArgSample"
this.util.operandSuffix.toString == "Operand"
this.util.optionSuffix.toString == "Option"
this.pattern has only one value
this.pattern != null
this.pattern.argList.home has only one value
this.pattern.argList.home != null
this.pattern.argList.curr != null
this.pattern.nonOptionList[] elements != null
this.pattern.nonOptionList[].getClass().getName() elements == java.lang.String.class
this.pattern.nonOptionList.getClass().getName() == java.util.ArrayList.class
this.pattern.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
this.pattern.help == null
this.pattern.listStack has only one value
this.pattern.listStack != null
this.pattern.listStack.getClass().getName() == java.util.ArrayDeque.class
this.pattern.patternList has only one value
this.pattern.patternList != null
this.pattern.patternList[] == []
this.pattern.patternList[].getClass().getName() == []
this.pattern.patternList.getClass().getName() == java.util.ArrayList.class
this.pattern.saveList has only one value
this.pattern.saveList != null
this.pattern.saveList[] elements != null
this.pattern.saveList[].getClass().getName() elements == com.fidelis.argface.ArgNode.class
this.pattern.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.pattern.saveList.getClass().getName() == java.util.ArrayList.class
this.pattern.prevIndex one of { 0, 3, 4 }
this.pattern.failBase.south has only one value
this.pattern.failBase.south != null
this.pattern.failBase.east has only one value
this.pattern.failBase.east != null
this.pattern.failBase.entry has only one value
this.pattern.failBase.entry != null
this.pattern.failBase.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.pattern.failBase.optional == false
this.pattern.failBase.repeat == false
this.pattern.failBase.spec == 0
this.pattern.failNode == null
this.pattern.lastBase == null
this.pattern.lastFail == null
this.pattern.patternMin one of { 0, 3 }
this.pattern.patternMax one of { 0, 999 }
this.pattern.targetOperands has only one value
this.pattern.targetOperands != null
this.pattern.targetOperands[] elements != null
this.pattern.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.pattern.targetOperands.getClass().getName() == java.util.ArrayList.class
this.programName.toString == "ArgSample"
this.usageText.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
this.versionText.toString == "ArgSample version 1.0.0"
this.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
this.helpText.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
this.optionSuffix.toString == "Option"
this.operandSuffix.toString == "Operand"
this.allowOverwrite == null
this.varList[] contains no nulls and has only one value, of length 3
this.varList[] elements != null
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.varList.getClass().getName() == java.util.ArrayList.class
this.litList[] contains no nulls and has only one value, of length 8
this.litList[] elements != null
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.litList.getClass().getName() == java.util.ArrayList.class
this.optionList[] elements != null
this.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.optionList.getClass().getName() == java.util.ArrayList.class
this.argList.home has only one value
this.argList.home != null
this.argList.home.south has only one value
this.argList.home.south != null
this.argList.home.east has only one value
this.argList.home.east != null
this.argList.home.entry has only one value
this.argList.home.entry != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.repeat == false
this.argList.home.spec == 0
this.argList.curr != null
this.argList.curr.entry != null
this.argList.curr.optional == false
this.argList.curr.spec == 0
this.helpOption == false
this.versionOption == false
this.aboutOption == false
this.nonOptionList[] elements != null
this.nonOptionList[].getClass().getName() elements == java.lang.String.class
this.nonOptionList.getClass().getName() == java.util.ArrayList.class
this.targetOperands[] elements != null
this.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.targetOperands.getClass().getName() == java.util.ArrayList.class
this.targetOptions[] elements != null
this.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.targetOptions.getClass().getName() == java.util.ArrayList.class
this.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
size(this.parser.operand.list[]) one of { 0, 3, 9 }
size(this.parser.operand.list[])-1 != 0
size(this.parser.varList[]) one of { 0, 3 }
size(this.parser.varList[])-1 != 0
size(this.parser.litList[]) one of { 0, 8 }
size(this.parser.litList[])-1 != 0
size(this.parser.optionList[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1, 2 }
size(this.pattern.saveList[]) one of { 0, 4 }
size(this.pattern.saveList[])-1 != 0
size(this.pattern.targetOperands[]) one of { 0, 5, 16 }
size(this.pattern.targetOperands[])-1 != 0
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.targetOperands[]) one of { 0, 5, 16 }
size(this.targetOperands[])-1 != 0
size(this.targetOptions[]) one of { 0, 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.ArgBase():::EXIT
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.usageText == null
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText == null
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
===========================================================================
com.fidelis.argface.ArgBase.addLetters(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters != null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.addLetters(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.toString == orig(arg0.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters != null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
com.fidelis.argface.ArgUtil.base.letters.toString >= orig(com.fidelis.argface.ArgUtil.base.letters.toString)
this.letters.toString >= orig(this.letters.toString)
===========================================================================
com.fidelis.argface.ArgBase.addNonOption(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
arg0 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 2 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[])-1 != 0
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 0, 2 }
size(this.targetOptions[])-1 != 0
===========================================================================
com.fidelis.argface.ArgBase.addNonOption(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
size(com.fidelis.argface.ArgUtil.base.nonOptionList[])-1 == orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[]))
size(this.pattern.nonOptionList[])-1 == orig(size(this.pattern.nonOptionList[]))
size(this.nonOptionList[])-1 == orig(size(this.nonOptionList[]))
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) >= 1
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 2 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[])-1 != 0
size(this.pattern.nonOptionList[]) >= 1
size(this.optionList[]) == 11
size(this.nonOptionList[]) >= 1
size(this.targetOptions[]) one of { 0, 2 }
size(this.targetOptions[])-1 != 0
===========================================================================
com.fidelis.argface.ArgBase.arrayToString(java.lang.String[]):::ENTER
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.usageText == null
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText == null
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] contains no nulls and has only one value, of length 19
arg0[].toString == [ArgSample, set [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ], [-e] [[upper | lower | any] <pattern>] <other>, ArgSample, ((match [upper | lower | any] <other>) |,  (ending <file>) |,  (<other> match <pattern>)), [set | clear], ArgSample, [-a, --after  <lines>] 'number of lines after a match', [-b, --before <lines>] 'number of lines before a match', [-cde], match|starting|ending|<other> <pattern> <file>..., Options:, -c confirm actions, -d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?, -e, --exit exit on error, -y, --yield yeild to substitutions, -z, --sleep dormant state when completed]
size(arg0[]) == 19
===========================================================================
com.fidelis.argface.ArgBase.arrayToString(java.lang.String[]):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.option == orig(this.parser.option)
this.parser.argList == orig(this.parser.argList)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.usageText == orig(this.usageText)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.litList == orig(this.litList)
this.optionList == orig(this.optionList)
this.argList == orig(this.argList)
this.letters == orig(this.letters)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0[] == orig(arg0[])
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.usageText == null
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText == null
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0[] contains no nulls and has only one value, of length 19
arg0[].toString == [ArgSample, set [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ], [-e] [[upper | lower | any] <pattern>] <other>, ArgSample, ((match [upper | lower | any] <other>) |,  (ending <file>) |,  (<other> match <pattern>)), [set | clear], ArgSample, [-a, --after  <lines>] 'number of lines after a match', [-b, --before <lines>] 'number of lines before a match', [-cde], match|starting|ending|<other> <pattern> <file>..., Options:, -c confirm actions, -d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?, -e, --exit exit on error, -y, --yield yeild to substitutions, -z, --sleep dormant state when completed]
return has only one value
return.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
===========================================================================
com.fidelis.argface.ArgBase.checkAllOptions():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.checkAllOptions():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.checkArgSet(com.fidelis.argface.ArgOption):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 2
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[] contains no nulls and has only one value, of length 2
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) == 2
size(this.help.problemText[]) == 2
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.checkArgSet(com.fidelis.argface.ArgOption):::EXIT1513
===========================================================================
com.fidelis.argface.ArgBase.checkArgSet(com.fidelis.argface.ArgOption):::EXIT1513;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.checkArgSet(com.fidelis.argface.ArgOption):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argFieldName.toString == orig(arg0.argFieldName.toString)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 2
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[] contains no nulls and has only one value, of length 2
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == true
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) == 2
size(this.help.problemText[]) == 2
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.checkArgSet(com.fidelis.argface.ArgOption):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.checkOperand(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.value != null
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch != null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.patternMatch != null
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
this.patternMatch != null
arg0 != null
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.checkOperand(java.lang.String):::EXIT254
===========================================================================
com.fidelis.argface.ArgBase.checkOperand(java.lang.String):::EXIT254;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.checkOperand(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.value != null
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch != null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.patternMatch != null
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
this.patternMatch != null
return == true
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.checkOperand(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.checkOption(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
arg0 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2, 3 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.checkOption(java.lang.String):::EXIT245
this.parser.operand.list[] contains no nulls and has only one value, of length 9
this.parser.operand.list[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.parser.operand.has == true
this.parser.operand.value has only one value
this.parser.operand.value.toString == "more6"
this.parser.operand.count == 9
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.nonOptionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 16
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.targetOptions[] contains no nulls and has only one value, of length 2
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternMatch has only one value
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "<other> <pattern> <file>..."
this.pattern.argList.curr has only one value
this.pattern.nonOptionList[] contains no nulls and has only one value, of length 11
this.pattern.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.pattern.patternMatch has only one value
this.pattern.patternMatch.toString == "<other> <pattern> <file>..."
this.pattern.saveList[] contains no nulls and has only one value, of length 4
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex == 3
this.pattern.failBase == null
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[] contains no nulls and has only one value, of length 16
this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[] contains no nulls and has only one value, of length 11
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.targetOperands[] contains no nulls and has only one value, of length 16
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOptions[] contains no nulls and has only one value, of length 2
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternMatch has only one value
this.patternMatch.toString == "<other> <pattern> <file>..."
arg0.toString one of { "<file>", "<other>", "<pattern>" }
return == false
size(this.parser.operand.list[]) == 9
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 16
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) == 11
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) == 16
size(this.nonOptionList[]) == 11
size(this.targetOperands[]) == 16
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.checkOption(java.lang.String):::EXIT245;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.checkOption(java.lang.String):::EXIT247
return == true
===========================================================================
com.fidelis.argface.ArgBase.checkOption(java.lang.String):::EXIT247;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.checkOption(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
(return == false)  ==>  (arg0.toString one of { "<file>", "<other>", "<pattern>" })
(return == false)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList[] contains no nulls and has only one value, of length 11)
(return == false)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String])
(return == false)  ==>  (com.fidelis.argface.ArgUtil.base.patternMatch has only one value)
(return == false)  ==>  (com.fidelis.argface.ArgUtil.base.patternMatch.toString == "<other> <pattern> <file>...")
(return == false)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 16)
(return == false)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(return == false)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] contains no nulls and has only one value, of length 2)
(return == false)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(return == false)  ==>  (size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) == 11)
(return == false)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 16)
(return == false)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2)
(return == false)  ==>  (size(this.nonOptionList[]) == 11)
(return == false)  ==>  (size(this.parser.operand.list[]) == 9)
(return == false)  ==>  (size(this.pattern.nonOptionList[]) == 11)
(return == false)  ==>  (size(this.pattern.saveList[]) == 4)
(return == false)  ==>  (size(this.pattern.targetOperands[]) == 16)
(return == false)  ==>  (size(this.targetOperands[]) == 16)
(return == false)  ==>  (size(this.targetOptions[]) == 2)
(return == false)  ==>  (this.argList.curr has only one value)
(return == false)  ==>  (this.argList.curr.east == null)
(return == false)  ==>  (this.argList.curr.entry has only one value)
(return == false)  ==>  (this.argList.curr.repeat == true)
(return == false)  ==>  (this.help.argList.curr has only one value)
(return == false)  ==>  (this.help.problemText[] == [])
(return == false)  ==>  (this.help.problemText[].getClass().getName() == [])
(return == false)  ==>  (this.help.problemUsage[] == [])
(return == false)  ==>  (this.help.problemUsage[].getClass().getName() == [])
(return == false)  ==>  (this.nonOptionList[] contains no nulls and has only one value, of length 11)
(return == false)  ==>  (this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String])
(return == false)  ==>  (this.parser.argList.curr has only one value)
(return == false)  ==>  (this.parser.operand.count == 9)
(return == false)  ==>  (this.parser.operand.has == true)
(return == false)  ==>  (this.parser.operand.list[] contains no nulls and has only one value, of length 9)
(return == false)  ==>  (this.parser.operand.list[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String])
(return == false)  ==>  (this.parser.operand.value has only one value)
(return == false)  ==>  (this.parser.operand.value.toString == "more6")
(return == false)  ==>  (this.pattern.argList.curr has only one value)
(return == false)  ==>  (this.pattern.failBase == null)
(return == false)  ==>  (this.pattern.nonOptionList[] contains no nulls and has only one value, of length 11)
(return == false)  ==>  (this.pattern.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String])
(return == false)  ==>  (this.pattern.patternMatch has only one value)
(return == false)  ==>  (this.pattern.patternMatch.toString == "<other> <pattern> <file>...")
(return == false)  ==>  (this.pattern.patternMax == 999)
(return == false)  ==>  (this.pattern.patternMin == 3)
(return == false)  ==>  (this.pattern.prevIndex == 3)
(return == false)  ==>  (this.pattern.saveList[] contains no nulls and has only one value, of length 4)
(return == false)  ==>  (this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(return == false)  ==>  (this.pattern.targetOperands[] contains no nulls and has only one value, of length 16)
(return == false)  ==>  (this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(return == false)  ==>  (this.patternMatch has only one value)
(return == false)  ==>  (this.patternMatch.toString == "<other> <pattern> <file>...")
(return == false)  ==>  (this.targetOperands[] contains no nulls and has only one value, of length 16)
(return == false)  ==>  (this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(return == false)  ==>  (this.targetOptions[] contains no nulls and has only one value, of length 2)
(return == false)  ==>  (this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(return == true)  ==>  (com.fidelis.argface.ArgUtil.base.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." })
(return == true)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] })
(return == true)  ==>  (size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 })
(return == true)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5, 16 })
(return == true)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 })
(return == true)  ==>  (size(this.help.problemText[]) one of { 0, 2, 3 })
(return == true)  ==>  (size(this.help.problemUsage[]) one of { 0, 2, 3 })
(return == true)  ==>  (size(this.nonOptionList[]) one of { 0, 5, 11 })
(return == true)  ==>  (size(this.parser.operand.list[]) one of { 0, 3, 9 })
(return == true)  ==>  (size(this.pattern.nonOptionList[]) one of { 0, 5, 11 })
(return == true)  ==>  (size(this.pattern.saveList[]) one of { 0, 4 })
(return == true)  ==>  (size(this.pattern.targetOperands[]) one of { 0, 5, 16 })
(return == true)  ==>  (size(this.targetOperands[]) one of { 0, 5, 16 })
(return == true)  ==>  (size(this.targetOptions[]) one of { 1, 2 })
(return == true)  ==>  (this.help.problemText[].getClass().getName() elements == java.lang.String.class)
(return == true)  ==>  (this.help.problemUsage[].getClass().getName() elements == com.fidelis.argface.ArgNode.class)
(return == true)  ==>  (this.parser.operand.count one of { 0, 3, 9 })
(return == true)  ==>  (this.parser.operand.value.toString one of { "file3", "more6" })
(return == true)  ==>  (this.pattern.failBase.east != null)
(return == true)  ==>  (this.pattern.failBase.east has only one value)
(return == true)  ==>  (this.pattern.failBase.entry != null)
(return == true)  ==>  (this.pattern.failBase.entry has only one value)
(return == true)  ==>  (this.pattern.failBase.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(return == true)  ==>  (this.pattern.failBase.south != null)
(return == true)  ==>  (this.pattern.failBase.south has only one value)
(return == true)  ==>  (this.pattern.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." })
(return == true)  ==>  (this.pattern.patternMax one of { 0, 999 })
(return == true)  ==>  (this.pattern.patternMin one of { 0, 3 })
(return == true)  ==>  (this.pattern.prevIndex one of { 0, 3, 4 })
(return == true)  ==>  (this.pattern.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] })
(return == true)  ==>  (this.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." })
(return == true)  ==>  (this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] })
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2, 3 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.checkOption(java.lang.String):::EXIT;condition="return == true"
return == true
===========================================================================
com.fidelis.argface.ArgBase.checkOption(java.lang.String):::EXIT;condition="not(return == true)"
this.parser.operand.list[] contains no nulls and has only one value, of length 9
this.parser.operand.list[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.parser.operand.has == true
this.parser.operand.value has only one value
this.parser.operand.value.toString == "more6"
this.parser.operand.count == 9
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.nonOptionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 16
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.targetOptions[] contains no nulls and has only one value, of length 2
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternMatch has only one value
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "<other> <pattern> <file>..."
this.pattern.argList.curr has only one value
this.pattern.nonOptionList[] contains no nulls and has only one value, of length 11
this.pattern.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.pattern.patternMatch has only one value
this.pattern.patternMatch.toString == "<other> <pattern> <file>..."
this.pattern.saveList[] contains no nulls and has only one value, of length 4
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex == 3
this.pattern.failBase == null
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[] contains no nulls and has only one value, of length 16
this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[] contains no nulls and has only one value, of length 11
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.targetOperands[] contains no nulls and has only one value, of length 16
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOptions[] contains no nulls and has only one value, of length 2
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternMatch has only one value
this.patternMatch.toString == "<other> <pattern> <file>..."
arg0.toString one of { "<file>", "<other>", "<pattern>" }
return == false
size(this.parser.operand.list[]) == 9
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 16
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) == 11
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) == 16
size(this.nonOptionList[]) == 11
size(this.targetOperands[]) == 16
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.count(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
arg0 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2, 3 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.count(java.lang.String):::EXIT151
return == 1
===========================================================================
com.fidelis.argface.ArgBase.count(java.lang.String):::EXIT157
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.value != null
this.parser.operand.count one of { 3, 9 }
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternMatch != null
this.pattern.argList.curr has only one value
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternMatch != null
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternMatch != null
return one of { 1, 3, 9 }
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemText[]) one of { 0, 2 }
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.count(java.lang.String):::EXIT160
this.parser.operand.list[] contains no nulls and has only one value, of length 3
this.parser.operand.list[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.parser.operand.has == true
this.parser.operand.value has only one value
this.parser.operand.value.toString == "file3"
this.parser.operand.count == 3
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 2
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[] contains no nulls and has only one value, of length 2
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.nonOptionList[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.targetOptions[] contains no nulls and has only one value, of length 2
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternMatch has only one value
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.argList.curr has only one value
this.pattern.nonOptionList[] contains no nulls and has only one value, of length 5
this.pattern.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.pattern.patternMatch has only one value
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.saveList[] contains no nulls and has only one value, of length 4
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex == 4
this.pattern.failBase has only one value
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[] contains no nulls and has only one value, of length 5
this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[] contains no nulls and has only one value, of length 5
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.targetOperands[] contains no nulls and has only one value, of length 5
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOptions[] contains no nulls and has only one value, of length 2
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternMatch has only one value
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.toString one of { "afterLines", "beforeLines" }
return == 0
size(this.parser.operand.list[]) == 3
size(this.help.problemUsage[]) == 2
size(this.help.problemText[]) == 2
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) == 5
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 5
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) == 5
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) == 5
size(this.nonOptionList[]) == 5
size(this.targetOperands[]) == 5
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.count(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
return >= 0
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2, 3 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.createAboutOption():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 10
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 10
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 10
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 10
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 10
size(this.help.optionList[]) == 10
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 10
size(this.optionList[]) == 10
===========================================================================
com.fidelis.argface.ArgBase.createAboutOption():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 10
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 10
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 10
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 10
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
return.spec == 3
return.name has only one value
return.name.toString == "about"
return.altName == null
return.fieldName == null
return.field == null
return.setter == null
return.has == false
return.count == 0
return.creation == true
return.argName == null
return.argFieldName == null
return.argField == null
return.argSetter == null
return.argValue == null
return.argOptional == false
return.argRepeat == false
return.argSet == false
return.repeat == false
return.repeatList == false
return.list == null
return.help has only one value
return.help.toString == "show information about this program"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 10
size(this.help.optionList[]) == 10
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 10
size(this.optionList[]) == 10
===========================================================================
com.fidelis.argface.ArgBase.createHelpOption():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.createHelpOption():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
return.spec == 3
return.name has only one value
return.name.toString == "h"
return.altName has only one value
return.altName.toString == "help"
return.fieldName == null
return.field == null
return.setter == null
return.has == false
return.count == 0
return.creation == true
return.argName == null
return.argFieldName == null
return.argField == null
return.argSetter == null
return.argValue == null
return.argOptional == false
return.argRepeat == false
return.argSet == false
return.repeat == false
return.repeatList == false
return.list == null
return.help has only one value
return.help.toString == "show this help text"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.createOption(java.lang.String, java.lang.String, java.lang.String):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.help.argList has only one value
this.help.optionList has only one value
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.argList has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.toString one of { "a", "h", "v" }
arg1.toString one of { "about", "help", "version" }
arg2.toString one of { "show information about this program", "show this help text", "show version information" }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 8, 9, 10 }
size(this.help.optionList[]) one of { 8, 9, 10 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 9, 10 }
size(this.optionList[]) one of { 8, 9, 10 }
===========================================================================
com.fidelis.argface.ArgBase.createOption(java.lang.String, java.lang.String, java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg2.toString == orig(arg2.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.help.argList has only one value
this.help.optionList has only one value
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.argList has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg2.toString one of { "show information about this program", "show this help text", "show version information" }
return.spec == 3
return.name.toString one of { "about", "h", "v" }
return.altName.toString one of { "help", "version" }
return.fieldName == null
return.field == null
return.setter == null
return.has == false
return.count == 0
return.creation == true
return.argName == null
return.argFieldName == null
return.argField == null
return.argSetter == null
return.argValue == null
return.argOptional == false
return.argRepeat == false
return.argSet == false
return.repeat == false
return.repeatList == false
return.list == null
return.help.toString one of { "show information about this program", "show this help text", "show version information" }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 8, 9, 10 }
size(this.help.optionList[]) one of { 8, 9, 10 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 9, 10 }
size(this.optionList[]) one of { 8, 9, 10 }
===========================================================================
com.fidelis.argface.ArgBase.createVersionOption():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 9
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 9
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 9
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 9
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 9
size(this.help.optionList[]) == 9
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 9
size(this.optionList[]) == 9
===========================================================================
com.fidelis.argface.ArgBase.createVersionOption():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 9
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 9
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 9
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 9
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
return.spec == 3
return.name has only one value
return.name.toString == "v"
return.altName has only one value
return.altName.toString == "version"
return.fieldName == null
return.field == null
return.setter == null
return.has == false
return.count == 0
return.creation == true
return.argName == null
return.argFieldName == null
return.argField == null
return.argSetter == null
return.argValue == null
return.argOptional == false
return.argRepeat == false
return.argSet == false
return.repeat == false
return.repeatList == false
return.list == null
return.help has only one value
return.help.toString == "show version information"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 9
size(this.help.optionList[]) == 9
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 9
size(this.optionList[]) == 9
===========================================================================
com.fidelis.argface.ArgBase.findAlternative(com.fidelis.argface.ArgNode, java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0 != null
arg0.south.east == null
arg0.south.entry != null
arg0.south.repeat == false
arg0.south.spec one of { 0, 2 }
arg0.east == null
arg0.entry != null
arg0.repeat == false
arg0.spec one of { 0, 2, 3 }
arg1 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgBase.findAlternative(com.fidelis.argface.ArgNode, java.lang.String):::EXIT1098
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 3
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.pattern.argList.curr has only one value
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.patternMatch == null
arg1.toString one of { "about", "version" }
orig(arg0) has only one value
orig(arg0.south) has only one value
orig(arg0.south.south) == null
orig(arg0.south.entry) has only one value
orig(arg0.south.entry.getClass().getName()) == com.fidelis.argface.ArgOption.class
orig(arg0.south.optional) == false
orig(arg0.south.spec) == 0
orig(arg0.entry) has only one value
orig(arg0.entry.getClass().getName()) == com.fidelis.argface.ArgOption.class
orig(arg0.optional) == false
orig(arg0.spec) == 0
size(this.help.problemUsage[]) == 3
size(this.help.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgBase.findAlternative(com.fidelis.argface.ArgNode, java.lang.String):::EXIT1108
this.argList.curr.south != null
return == null
size(this.help.problemUsage[]) one of { 0, 1, 2 }
size(this.help.problemText[]) one of { 0, 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.findAlternative(com.fidelis.argface.ArgNode, java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg1.toString == orig(arg1.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
return.spec == 3
return.name.toString one of { "about", "v" }
return.altName.toString == "version"
return.fieldName.toString one of { "aboutOption", "versionOption" }
return.field == null
return.has == false
return.count == 0
return.creation == true
return.argName == null
return.argFieldName == null
return.argField == null
return.argSetter == null
return.argValue == null
return.argOptional == false
return.argRepeat == false
return.argSet == false
return.repeat == false
return.repeatList == false
return.list == null
return.help.toString one of { "show information about this program", "show version information" }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgBase.findGroup(com.fidelis.argface.ArgList, java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[] elements has only one value
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0 != null
arg0.home != null
arg0.home.east != null
arg0.home.entry != null
arg0.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.home.repeat == false
arg0.home.spec one of { 0, 1 }
arg0.curr != null
arg0.curr.entry != null
arg0.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.curr.repeat == false
arg0.curr.spec one of { 0, 1 }
arg1 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 1 }
size(this.help.problemText[]) one of { 0, 1 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgBase.findGroup(com.fidelis.argface.ArgList, java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.home == orig(arg0.home)
arg0.home.south == orig(arg0.home.south)
arg0.home.east == orig(arg0.home.east)
arg0.home.entry == orig(arg0.home.entry)
arg0.home.entry.getClass().getName() == orig(arg0.home.entry.getClass().getName())
arg0.home.optional == orig(arg0.home.optional)
arg0.home.repeat == orig(arg0.home.repeat)
arg0.home.spec == orig(arg0.home.spec)
arg0.curr.entry.getClass().getName() == orig(arg0.curr.entry.getClass().getName())
arg0.curr.repeat == orig(arg0.curr.repeat)
arg1.toString == orig(arg1.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[] elements has only one value
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.home != null
arg0.home.east != null
arg0.home.entry != null
arg0.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.home.repeat == false
arg0.home.spec one of { 0, 1 }
arg0.curr != null
arg0.curr.east != null
arg0.curr.entry != null
arg0.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.curr.repeat == false
arg0.curr.spec one of { 0, 1 }
return == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 1 }
size(this.help.problemText[]) one of { 0, 1 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
arg0.curr.spec >= orig(arg0.curr.spec)
===========================================================================
com.fidelis.argface.ArgBase.findNamedOperand(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.value != null
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch != null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.patternMatch != null
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
this.patternMatch != null
arg0 != null
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.findNamedOperand(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.value != null
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch != null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.patternMatch != null
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
this.patternMatch != null
return.type one of { 1, 2 }
return.name != null
return.fieldName != null
return.optional == false
return.setter != null
return.field == null
return.repeatList == false
return.list[] elements != null
return.list[].getClass().getName() elements == java.lang.String.class
return.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
return.list.getClass().getName() == java.util.ArrayList.class
return.has == true
return.value != null
return.count one of { 1, 3, 9 }
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
size(return.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgBase.findNamedOption(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
arg0 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2, 3 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.findNamedOption(java.lang.String):::EXIT272
return != null
===========================================================================
com.fidelis.argface.ArgBase.findNamedOption(java.lang.String):::EXIT275
arg0.toString == orig(arg0.toString)
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.value != null
this.parser.operand.count one of { 3, 9 }
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternMatch != null
this.pattern.argList.curr has only one value
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternMatch != null
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternMatch != null
return == null
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemText[]) one of { 0, 2 }
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.findNamedOption(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
return.spec one of { 1, 3 }
return.name != null
return.fieldName != null
return.field == null
return.setter != null
return.has == true
return.count == 1
return.argName.toString == "lines"
return.argFieldName.toString one of { "afterLines", "beforeLines" }
return.argField == null
return.argValue.toString == "5"
return.argOptional == false
return.argRepeat == false
return.repeat == false
return.repeatList == false
return.list == null
return.help != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2, 3 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.findOperand(java.lang.String, java.util.List):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.value != null
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch != null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.patternMatch != null
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
this.patternMatch != null
arg0 != null
arg1 != null
arg1[] elements != null
arg1[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
arg1[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg1.getClass().getName() == java.util.ArrayList.class
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
size(arg1[]) one of { 3, 8 }
===========================================================================
com.fidelis.argface.ArgBase.findOperand(java.lang.String, java.util.List):::EXIT304
return != null
===========================================================================
com.fidelis.argface.ArgBase.findOperand(java.lang.String, java.util.List):::EXIT307
this.parser.operand.list[] contains no nulls and has only one value, of length 3
this.parser.operand.list[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.parser.operand.value has only one value
this.parser.operand.value.toString == "file3"
this.parser.operand.count == 3
this.help.problemUsage[] contains no nulls and has only one value, of length 2
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[] contains no nulls and has only one value, of length 2
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.nonOptionList[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.targetOptions[] contains no nulls and has only one value, of length 2
com.fidelis.argface.ArgUtil.base.patternMatch has only one value
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.nonOptionList[] contains no nulls and has only one value, of length 5
this.pattern.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.pattern.patternMatch has only one value
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.saveList[] contains no nulls and has only one value, of length 4
this.pattern.prevIndex == 4
this.pattern.failBase has only one value
this.pattern.targetOperands[] contains no nulls and has only one value, of length 5
this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.nonOptionList[] contains no nulls and has only one value, of length 5
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.targetOperands[] contains no nulls and has only one value, of length 5
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOptions[] contains no nulls and has only one value, of length 2
this.patternMatch has only one value
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.toString one of { "afterLines", "beforeLines", "ending" }
return == null
size(this.parser.operand.list[]) == 3
size(this.help.problemUsage[]) == 2
size(this.help.problemText[]) == 2
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) == 5
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 5
size(this.pattern.nonOptionList[]) == 5
size(this.pattern.targetOperands[]) == 5
size(this.nonOptionList[]) == 5
size(this.targetOperands[]) == 5
===========================================================================
com.fidelis.argface.ArgBase.findOperand(java.lang.String, java.util.List):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
arg1[] == orig(arg1[])
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.value != null
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch != null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.patternMatch != null
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
this.patternMatch != null
arg1[] elements != null
arg1[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
arg1[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
return.type one of { 1, 2 }
return.name != null
return.fieldName != null
return.optional == false
return.setter != null
return.field == null
return.repeatList == false
return.list[] elements != null
return.list[].getClass().getName() elements == java.lang.String.class
return.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
return.list.getClass().getName() == java.util.ArrayList.class
return.has == true
return.value != null
return.count one of { 1, 3, 9 }
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
size(return.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgBase.findOption(com.fidelis.argface.ArgNode, java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0 != null
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east != null
arg0.east.entry != null
arg0.east.repeat == false
arg0.east.spec one of { 0, 1 }
arg0.entry != null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.repeat == false
arg0.spec one of { 0, 1 }
arg1 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.findOption(com.fidelis.argface.ArgNode, java.lang.String):::EXIT1067
arg0.south.south == null
arg0.south.east has only one value
arg0.south.entry has only one value
arg0.south.optional == false
arg0.south.spec == 0
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.spec == 0
arg0.optional == false
arg0.spec == 0
return.altName.toString one of { "after", "before", "help" }
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
===========================================================================
com.fidelis.argface.ArgBase.findOption(com.fidelis.argface.ArgNode, java.lang.String):::EXIT1083
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 3
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.pattern.argList.curr has only one value
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternMatch == null
arg0.south == null
arg0.east has only one value
arg0.east.south has only one value
arg0.east.east == null
arg0.east.entry has only one value
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == false
arg0.east.spec == 0
arg0.entry has only one value
arg0.optional == false
arg0.spec == 0
arg1.toString one of { "about", "version" }
return.spec == 3
return.name.toString one of { "about", "v" }
return.altName.toString == "version"
return.fieldName.toString one of { "aboutOption", "versionOption" }
return.creation == true
return.argName == null
return.argFieldName == null
return.argSetter == null
return.help.toString one of { "show information about this program", "show version information" }
orig(arg0) has only one value
size(this.help.problemUsage[]) == 3
size(this.help.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgBase.findOption(com.fidelis.argface.ArgNode, java.lang.String):::EXIT1088
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
this.argList.curr.south != null
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
return == null
size(this.help.problemUsage[]) one of { 0, 1, 2 }
size(this.help.problemText[]) one of { 0, 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.findOption(com.fidelis.argface.ArgNode, java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
arg1.toString == orig(arg1.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east != null
arg0.east.entry != null
arg0.east.repeat == false
arg0.east.spec one of { 0, 1 }
arg0.entry != null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.repeat == false
arg0.spec one of { 0, 1 }
return.spec one of { 1, 3 }
return.field == null
return.has == false
return.count == 0
return.argName.toString == "lines"
return.argFieldName.toString one of { "afterLines", "beforeLines" }
return.argField == null
return.argValue == null
return.argOptional == false
return.argRepeat == false
return.argSet == false
return.repeat == false
return.repeatList == false
return.list == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.findOption(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.findOption(java.lang.String):::EXIT1052
return != null
===========================================================================
com.fidelis.argface.ArgBase.findOption(java.lang.String):::EXIT1055
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch has only one value
this.pattern.patternMatch has only one value
this.pattern.saveList[] contains no nulls and has only one value, of length 4
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex == 4
this.pattern.failBase has only one value
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[] contains no nulls and has only one value, of length 5
this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOperands[] contains no nulls and has only one value, of length 5
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternMatch has only one value
arg0.toString == "cd"
return == null
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 5
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) == 5
size(this.targetOperands[]) == 5
===========================================================================
com.fidelis.argface.ArgBase.findOption(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
(return != null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
(return != null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value)
(return != null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class)
(return != null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] })
(return != null)  ==>  (return.argField == null)
(return != null)  ==>  (return.argFieldName.toString one of { "afterLines", "beforeLines" })
(return != null)  ==>  (return.argName.toString == "lines")
(return != null)  ==>  (return.argValue == null)
(return != null)  ==>  (return.field == null)
(return != null)  ==>  (return.fieldName != null)
(return != null)  ==>  (return.help != null)
(return != null)  ==>  (return.list == null)
(return != null)  ==>  (return.name != null)
(return != null)  ==>  (return.setter != null)
(return != null)  ==>  (return.spec one of { 1, 3 })
(return != null)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 })
(return != null)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 })
(return != null)  ==>  (size(this.pattern.saveList[]) one of { 0, 4 })
(return != null)  ==>  (size(this.pattern.targetOperands[]) one of { 0, 5 })
(return != null)  ==>  (size(this.targetOperands[]) one of { 0, 5 })
(return != null)  ==>  (size(this.targetOptions[]) one of { 0, 1 })
(return != null)  ==>  (this.help.problemText[].getClass().getName() elements == java.lang.String.class)
(return != null)  ==>  (this.help.problemUsage[].getClass().getName() elements == com.fidelis.argface.ArgNode.class)
(return != null)  ==>  (this.pattern.patternMax one of { 0, 999 })
(return != null)  ==>  (this.pattern.patternMin one of { 0, 3 })
(return != null)  ==>  (this.pattern.prevIndex one of { 0, 4 })
(return != null)  ==>  (this.pattern.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] })
(return != null)  ==>  (this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
(return != null)  ==>  (this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
(return != null)  ==>  (this.targetOptions[] elements has only one value)
(return != null)  ==>  (this.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class)
(return != null)  ==>  (this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] })
(return == null)  ==>  (arg0.toString == "cd")
(return == null)  ==>  (com.fidelis.argface.ArgUtil.base.patternMatch has only one value)
(return == null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)
(return == null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(return == null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] == [])
(return == null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [])
(return == null)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 5)
(return == null)  ==>  (size(this.pattern.saveList[]) == 4)
(return == null)  ==>  (size(this.pattern.targetOperands[]) == 5)
(return == null)  ==>  (size(this.targetOperands[]) == 5)
(return == null)  ==>  (this.help.problemText[] == [])
(return == null)  ==>  (this.help.problemText[].getClass().getName() == [])
(return == null)  ==>  (this.help.problemUsage[] == [])
(return == null)  ==>  (this.help.problemUsage[].getClass().getName() == [])
(return == null)  ==>  (this.pattern.failBase has only one value)
(return == null)  ==>  (this.pattern.patternMatch has only one value)
(return == null)  ==>  (this.pattern.patternMax == 999)
(return == null)  ==>  (this.pattern.patternMin == 3)
(return == null)  ==>  (this.pattern.prevIndex == 4)
(return == null)  ==>  (this.pattern.saveList[] contains no nulls and has only one value, of length 4)
(return == null)  ==>  (this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(return == null)  ==>  (this.pattern.targetOperands[] contains no nulls and has only one value, of length 5)
(return == null)  ==>  (this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(return == null)  ==>  (this.patternMatch has only one value)
(return == null)  ==>  (this.targetOperands[] contains no nulls and has only one value, of length 5)
(return == null)  ==>  (this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(return == null)  ==>  (this.targetOptions[] == [])
(return == null)  ==>  (this.targetOptions[].getClass().getName() == [])
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
return.spec one of { 1, 3 }
return.name != null
return.fieldName != null
return.field == null
return.setter != null
return.has == false
return.count == 0
return.argName.toString == "lines"
return.argFieldName.toString one of { "afterLines", "beforeLines" }
return.argField == null
return.argValue == null
return.argOptional == false
return.argRepeat == false
return.argSet == false
return.repeat == false
return.repeatList == false
return.list == null
return.help != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.findOptionAbb(com.fidelis.argface.ArgNode, java.lang.String):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 1, 2 }
size(this.help.problemText[]) one of { 0, 1, 2 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.findOptionAbb(com.fidelis.argface.ArgNode, java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
arg1.toString == orig(arg1.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
return == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 1, 2 }
size(this.help.problemText[]) one of { 0, 1, 2 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.getAboutText():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.argList has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 10, 11 }
size(this.help.optionList[]) one of { 10, 11 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 10, 11 }
size(this.optionList[]) one of { 10, 11 }
===========================================================================
com.fidelis.argface.ArgBase.getAboutText():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.argList has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
return.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 10, 11 }
size(this.help.optionList[]) one of { 10, 11 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 10, 11 }
size(this.optionList[]) one of { 10, 11 }
===========================================================================
com.fidelis.argface.ArgBase.getHelpText():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.getHelpText():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
return.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.getOperandSuffix():::ENTER
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
===========================================================================
com.fidelis.argface.ArgBase.getOperandSuffix():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.option == orig(this.parser.option)
this.parser.argList == orig(this.parser.argList)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.litList == orig(this.litList)
this.optionList == orig(this.optionList)
this.argList == orig(this.argList)
this.letters == orig(this.letters)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
return has only one value
return.toString == "Operand"
===========================================================================
com.fidelis.argface.ArgBase.getOptionSuffix():::ENTER
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
===========================================================================
com.fidelis.argface.ArgBase.getOptionSuffix():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.option == orig(this.parser.option)
this.parser.argList == orig(this.parser.argList)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.litList == orig(this.litList)
this.optionList == orig(this.optionList)
this.argList == orig(this.argList)
this.letters == orig(this.letters)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
return has only one value
return.toString == "Option"
===========================================================================
com.fidelis.argface.ArgBase.getVersionText():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.usageText == null
this.help.versionText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.argList has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 9, 11 }
size(this.help.optionList[]) one of { 9, 11 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 9, 11 }
size(this.optionList[]) one of { 9, 11 }
===========================================================================
com.fidelis.argface.ArgBase.getVersionText():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.usageText == null
this.help.versionText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.argList has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
return.toString == "ArgSample version 1.0.0"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 9, 11 }
size(this.help.optionList[]) one of { 9, 11 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 9, 11 }
size(this.optionList[]) one of { 9, 11 }
===========================================================================
com.fidelis.argface.ArgBase.has(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
arg0 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.has(java.lang.String):::EXIT128
===========================================================================
com.fidelis.argface.ArgBase.has(java.lang.String):::EXIT128;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.has(java.lang.String):::EXIT134
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.count one of { 3, 9 }
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.pattern.argList.curr has only one value
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemText[]) one of { 0, 2 }
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.has(java.lang.String):::EXIT134;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.has(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.south == null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.has(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.initLetters():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName == null
this.parser.operand.setter == null
this.parser.operand.list == null
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName == null
this.parser.option.setter == null
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.initLetters():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName == null
this.parser.operand.setter == null
this.parser.operand.list == null
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName == null
this.parser.option.setter == null
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == ""
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.isPosixFormat():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.isPosixFormat():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return == false
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.isPosixFormat():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.isSortOptions():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.isSortOptions():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.isSortOptions():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.isSuppressHelp():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.isSuppressHelp():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return == false
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.isSuppressHelp():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.letterArg(java.lang.String, java.lang.String):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0 has only one value
arg0 != null
arg0.toString == "xyzeabcd"
arg1 != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.letterArg(java.lang.String, java.lang.String):::EXIT1441
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
arg1.toString one of { "about", "help", "version" }
===========================================================================
com.fidelis.argface.ArgBase.letterArg(java.lang.String, java.lang.String):::EXIT1441;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.letterArg(java.lang.String, java.lang.String):::EXIT1457
arg1.toString one of { "a", "b" }
size(this.help.problemUsage[]) one of { 0, 1, 2 }
size(this.help.problemText[]) one of { 0, 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.letterArg(java.lang.String, java.lang.String):::EXIT1457;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.letterArg(java.lang.String, java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.usageText != null
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.toString == "xyzeabcd"
return == false
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.letterArg(java.lang.String, java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.letterGroup(java.lang.String, java.lang.String):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0 has only one value
arg0.toString == "xyzeabcd"
arg1.toString one of { "a", "b", "cd" }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 1, 2 }
size(this.help.problemText[]) one of { 0, 1, 2 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.letterGroup(java.lang.String, java.lang.String):::EXIT1403
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.patternMatch == null
arg1.toString one of { "a", "b" }
return == false
===========================================================================
com.fidelis.argface.ArgBase.letterGroup(java.lang.String, java.lang.String):::EXIT1403;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.letterGroup(java.lang.String, java.lang.String):::EXIT1431
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch has only one value
this.pattern.patternMatch has only one value
this.pattern.saveList[] contains no nulls and has only one value, of length 4
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex == 4
this.pattern.failBase has only one value
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[] contains no nulls and has only one value, of length 5
this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOperands[] contains no nulls and has only one value, of length 5
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternMatch has only one value
arg1.toString == "cd"
return == true
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 5
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) == 5
size(this.targetOperands[]) == 5
===========================================================================
com.fidelis.argface.ArgBase.letterGroup(java.lang.String, java.lang.String):::EXIT1431;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.letterGroup(java.lang.String, java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (arg1.toString one of { "a", "b" })
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (com.fidelis.argface.ArgUtil.base.patternMatch == null)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (return == false)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.pattern.failBase == null)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.pattern.patternMatch == null)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.pattern.patternMax == 0)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.pattern.patternMin == 0)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.pattern.prevIndex == 0)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.pattern.saveList[] == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.pattern.saveList[].getClass().getName() == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.pattern.targetOperands[] == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.pattern.targetOperands[].getClass().getName() == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.patternMatch == null)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.targetOperands[] == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  <==>  (this.targetOperands[].getClass().getName() == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] })
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 })
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (size(this.help.problemText[]) one of { 0, 1, 2 })
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (size(this.help.problemUsage[]) one of { 0, 1, 2 })
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (size(this.targetOptions[]) one of { 0, 1 })
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (this.help.problemText[].getClass().getName() elements == java.lang.String.class)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (this.help.problemUsage[].getClass().getName() elements == com.fidelis.argface.ArgNode.class)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (this.targetOptions[] elements has only one value)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (this.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class)
(com.fidelis.argface.ArgUtil.base.targetOperands[] == [])  ==>  (this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] })
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (arg1.toString == "cd")
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (com.fidelis.argface.ArgUtil.base.patternMatch has only one value)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (return == true)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 5)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (size(this.pattern.saveList[]) == 4)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (size(this.pattern.targetOperands[]) == 5)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (size(this.targetOperands[]) == 5)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.pattern.failBase has only one value)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.pattern.patternMatch has only one value)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.pattern.patternMax == 999)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.pattern.patternMin == 3)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.pattern.prevIndex == 4)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.pattern.saveList[] contains no nulls and has only one value, of length 4)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.pattern.targetOperands[] contains no nulls and has only one value, of length 5)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.patternMatch has only one value)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.targetOperands[] contains no nulls and has only one value, of length 5)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  <==>  (this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>...")
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.help.problemText[] == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.help.problemText[].getClass().getName() == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.help.problemUsage[] == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.help.problemUsage[].getClass().getName() == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.pattern.failBase.east has only one value)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.pattern.failBase.entry has only one value)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.pattern.failBase.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.pattern.failBase.south has only one value)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.pattern.patternMatch.toString == "ending <pattern> <file>...")
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.pattern.saveList[].getClass().getName() elements == com.fidelis.argface.ArgNode.class)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.pattern.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.patternMatch.toString == "ending <pattern> <file>...")
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class)
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.targetOptions[] == [])
(com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5)  ==>  (this.targetOptions[].getClass().getName() == [])
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.toString == "xyzeabcd"
arg1.toString one of { "a", "b", "cd" }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 1, 2 }
size(this.help.problemText[]) one of { 0, 1, 2 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.letterGroup(java.lang.String, java.lang.String):::EXIT;condition="return == true"
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch has only one value
this.pattern.patternMatch has only one value
this.pattern.saveList[] contains no nulls and has only one value, of length 4
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex == 4
this.pattern.failBase has only one value
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[] contains no nulls and has only one value, of length 5
this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOperands[] contains no nulls and has only one value, of length 5
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternMatch has only one value
arg1.toString == "cd"
return == true
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 5
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) == 5
size(this.targetOperands[]) == 5
===========================================================================
com.fidelis.argface.ArgBase.letterGroup(java.lang.String, java.lang.String):::EXIT;condition="not(return == true)"
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.patternMatch == null
arg1.toString one of { "a", "b" }
return == false
===========================================================================
com.fidelis.argface.ArgBase.mutexAlternative(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 3
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0 has only one value
arg0.south has only one value
arg0.south.south has only one value
arg0.south.east == null
arg0.south.entry has only one value
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east == null
arg0.entry has only one value
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg1.spec == 3
arg1.name.toString one of { "about", "v" }
arg1.altName.toString == "version"
arg1.fieldName.toString one of { "aboutOption", "versionOption" }
arg1.field == null
arg1.has == false
arg1.count == 0
arg1.creation == true
arg1.argName == null
arg1.argFieldName == null
arg1.argField == null
arg1.argSetter == null
arg1.argValue == null
arg1.argOptional == false
arg1.argRepeat == false
arg1.argSet == false
arg1.repeat == false
arg1.repeatList == false
arg1.list == null
arg1.help.toString one of { "show information about this program", "show version information" }
arg2[] == []
arg2[].getClass().getName() == []
arg2.getClass().getName() == java.util.ArrayList.class
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) == 3
size(this.help.problemText[]) == 3
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.mutexAlternative(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT1193
===========================================================================
com.fidelis.argface.ArgBase.mutexAlternative(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT1193;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.mutexAlternative(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg1.spec == orig(arg1.spec)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.altName == orig(arg1.altName)
arg1.altName.toString == orig(arg1.altName.toString)
arg1.fieldName == orig(arg1.fieldName)
arg1.fieldName.toString == orig(arg1.fieldName.toString)
arg1.field == orig(arg1.field)
arg1.setter == orig(arg1.setter)
arg1.has == orig(arg1.has)
arg1.count == orig(arg1.count)
arg1.creation == orig(arg1.creation)
arg1.argName == orig(arg1.argName)
arg1.argFieldName == orig(arg1.argFieldName)
arg1.argField == orig(arg1.argField)
arg1.argSetter == orig(arg1.argSetter)
arg1.argValue == orig(arg1.argValue)
arg1.argOptional == orig(arg1.argOptional)
arg1.argRepeat == orig(arg1.argRepeat)
arg1.argSet == orig(arg1.argSet)
arg1.repeat == orig(arg1.repeat)
arg1.repeatList == orig(arg1.repeatList)
arg1.list == orig(arg1.list)
arg1.help == orig(arg1.help)
arg1.help.toString == orig(arg1.help.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 3
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg1.spec == 3
arg1.name.toString one of { "about", "v" }
arg1.altName.toString == "version"
arg1.fieldName.toString one of { "aboutOption", "versionOption" }
arg1.field == null
arg1.has == false
arg1.count == 0
arg1.creation == true
arg1.argName == null
arg1.argFieldName == null
arg1.argField == null
arg1.argSetter == null
arg1.argValue == null
arg1.argOptional == false
arg1.argRepeat == false
arg1.argSet == false
arg1.repeat == false
arg1.repeatList == false
arg1.list == null
arg1.help.toString one of { "show information about this program", "show version information" }
arg2[] contains no nulls and has only one value, of length 3
arg2[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
arg2[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) == 3
size(this.help.problemText[]) == 3
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.mutexAlternative(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.mutexCollect(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.south.south == null
arg0.south.east has only one value
arg0.south.entry has only one value
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg1.spec == 3
arg1.field == null
arg1.has == false
arg1.count == 0
arg1.argName.toString == "lines"
arg1.argFieldName.toString one of { "afterLines", "beforeLines" }
arg1.argField == null
arg1.argValue == null
arg1.argOptional == false
arg1.argRepeat == false
arg1.argSet == false
arg1.repeat == false
arg1.repeatList == false
arg1.list == null
arg2[] == []
arg2[].getClass().getName() == []
arg2.getClass().getName() == java.util.ArrayList.class
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 2, 3 }
size(this.help.problemText[]) one of { 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.mutexCollect(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT1151
arg2[] == orig(arg2[])
arg1.name.toString one of { "a", "b", "h" }
arg1.altName.toString one of { "after", "before", "help" }
arg1.fieldName.toString one of { "afterOption", "beforeOption", "helpOption" }
arg1.help.toString one of { "number of lines after a match", "number of lines before a match", "show this help text" }
arg2[] == []
arg2[].getClass().getName() == []
return == false
===========================================================================
com.fidelis.argface.ArgBase.mutexCollect(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT1151;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.mutexCollect(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT1160
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 3
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
this.pattern.argList.curr has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
arg0.south == null
arg0.east has only one value
arg0.east.south has only one value
arg0.east.east == null
arg0.east.entry has only one value
arg0.east.optional == false
arg0.entry has only one value
arg1.name.toString one of { "about", "v" }
arg1.altName.toString == "version"
arg1.fieldName.toString one of { "aboutOption", "versionOption" }
arg1.creation == true
arg1.argName == null
arg1.argFieldName == null
arg1.argSetter == null
arg1.help.toString one of { "show information about this program", "show version information" }
arg2[] contains no nulls and has only one value, of length 3
arg2[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return == true
orig(arg0) has only one value
size(this.help.problemUsage[]) == 3
size(this.help.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgBase.mutexCollect(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT1160;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.mutexCollect(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
arg1.spec == orig(arg1.spec)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.altName == orig(arg1.altName)
arg1.altName.toString == orig(arg1.altName.toString)
arg1.fieldName == orig(arg1.fieldName)
arg1.fieldName.toString == orig(arg1.fieldName.toString)
arg1.field == orig(arg1.field)
arg1.setter == orig(arg1.setter)
arg1.has == orig(arg1.has)
arg1.count == orig(arg1.count)
arg1.creation == orig(arg1.creation)
arg1.argName == orig(arg1.argName)
arg1.argName.toString == orig(arg1.argName.toString)
arg1.argFieldName == orig(arg1.argFieldName)
arg1.argFieldName.toString == orig(arg1.argFieldName.toString)
arg1.argField == orig(arg1.argField)
arg1.argSetter == orig(arg1.argSetter)
arg1.argValue == orig(arg1.argValue)
arg1.argOptional == orig(arg1.argOptional)
arg1.argRepeat == orig(arg1.argRepeat)
arg1.argSet == orig(arg1.argSet)
arg1.repeat == orig(arg1.repeat)
arg1.repeatList == orig(arg1.repeatList)
arg1.list == orig(arg1.list)
arg1.help == orig(arg1.help)
arg1.help.toString == orig(arg1.help.toString)
(arg1.name.toString one of { "a", "b", "h" })  <==>  (arg1.altName.toString one of { "after", "before", "help" })
(arg1.name.toString one of { "a", "b", "h" })  <==>  (arg1.fieldName.toString one of { "afterOption", "beforeOption", "helpOption" })
(arg1.name.toString one of { "a", "b", "h" })  <==>  (arg1.help.toString one of { "number of lines after a match", "number of lines before a match", "show this help text" })
(arg1.name.toString one of { "a", "b", "h" })  <==>  (arg2[] == [])
(arg1.name.toString one of { "a", "b", "h" })  <==>  (arg2[].getClass().getName() == [])
(arg1.name.toString one of { "a", "b", "h" })  <==>  (return == false)
(arg1.name.toString one of { "a", "b", "h" })  ==>  (arg0.south.east has only one value)
(arg1.name.toString one of { "a", "b", "h" })  ==>  (arg0.south.entry has only one value)
(arg1.name.toString one of { "a", "b", "h" })  ==>  (arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(arg1.name.toString one of { "a", "b", "h" })  ==>  (arg0.south.south == null)
(arg1.name.toString one of { "a", "b", "h" })  ==>  (arg1.argFieldName.toString one of { "afterLines", "beforeLines" })
(arg1.name.toString one of { "a", "b", "h" })  ==>  (arg1.argName.toString == "lines")
(arg1.name.toString one of { "a", "b", "h" })  ==>  (arg2[] == orig(arg2[]))
(arg1.name.toString one of { "a", "b", "h" })  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value)
(arg1.name.toString one of { "a", "b", "h" })  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class)
(arg1.name.toString one of { "a", "b", "h" })  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] })
(arg1.name.toString one of { "a", "b", "h" })  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 })
(arg1.name.toString one of { "a", "b", "h" })  ==>  (size(this.help.problemText[]) one of { 2, 3 })
(arg1.name.toString one of { "a", "b", "h" })  ==>  (size(this.help.problemUsage[]) one of { 2, 3 })
(arg1.name.toString one of { "a", "b", "h" })  ==>  (size(this.targetOptions[]) one of { 0, 1 })
(arg1.name.toString one of { "a", "b", "h" })  ==>  (this.help.problemText[].getClass().getName() one of { [java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String] })
(arg1.name.toString one of { "a", "b", "h" })  ==>  (this.help.problemUsage[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] })
(arg1.name.toString one of { "a", "b", "h" })  ==>  (this.targetOptions[] elements has only one value)
(arg1.name.toString one of { "a", "b", "h" })  ==>  (this.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class)
(arg1.name.toString one of { "a", "b", "h" })  ==>  (this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] })
(arg1.name.toString one of { "about", "v" })  <==>  (arg1.altName.toString == "version")
(arg1.name.toString one of { "about", "v" })  <==>  (arg1.fieldName.toString one of { "aboutOption", "versionOption" })
(arg1.name.toString one of { "about", "v" })  <==>  (arg1.help.toString one of { "show information about this program", "show version information" })
(arg1.name.toString one of { "about", "v" })  <==>  (arg2[] contains no nulls and has only one value, of length 3)
(arg1.name.toString one of { "about", "v" })  <==>  (arg2[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(arg1.name.toString one of { "about", "v" })  <==>  (return == true)
(arg1.name.toString one of { "about", "v" })  <==>  (size(arg2[]) == 3)
(arg1.name.toString one of { "about", "v" })  ==>  (arg0.east has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (arg0.east.east == null)
(arg1.name.toString one of { "about", "v" })  ==>  (arg0.east.entry has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (arg0.east.optional == false)
(arg1.name.toString one of { "about", "v" })  ==>  (arg0.east.south has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (arg0.entry has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (arg0.south == null)
(arg1.name.toString one of { "about", "v" })  ==>  (arg1.argFieldName == null)
(arg1.name.toString one of { "about", "v" })  ==>  (arg1.argName == null)
(arg1.name.toString one of { "about", "v" })  ==>  (arg1.argSetter == null)
(arg1.name.toString one of { "about", "v" })  ==>  (arg1.creation == true)
(arg1.name.toString one of { "about", "v" })  ==>  (arg2[].getClass().getName() elements == com.fidelis.argface.ArgOption.class)
(arg1.name.toString one of { "about", "v" })  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] == [])
(arg1.name.toString one of { "about", "v" })  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [])
(arg1.name.toString one of { "about", "v" })  ==>  (orig(arg0) has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (size(this.help.problemText[]) == 3)
(arg1.name.toString one of { "about", "v" })  ==>  (size(this.help.problemUsage[]) == 3)
(arg1.name.toString one of { "about", "v" })  ==>  (this.argList.curr has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (this.argList.curr.east has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (this.argList.curr.entry has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (this.argList.curr.south == null)
(arg1.name.toString one of { "about", "v" })  ==>  (this.help.argList.curr has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String])
(arg1.name.toString one of { "about", "v" })  ==>  (this.help.problemUsage[] contains no nulls and has only one value, of length 3)
(arg1.name.toString one of { "about", "v" })  ==>  (this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(arg1.name.toString one of { "about", "v" })  ==>  (this.parser.argList.curr has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (this.pattern.argList.curr has only one value)
(arg1.name.toString one of { "about", "v" })  ==>  (this.targetOptions[] == [])
(arg1.name.toString one of { "about", "v" })  ==>  (this.targetOptions[].getClass().getName() == [])
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.south.south == null
arg0.south.east has only one value
arg0.south.entry has only one value
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg1.spec == 3
arg1.field == null
arg1.has == false
arg1.count == 0
arg1.argName.toString == "lines"
arg1.argFieldName.toString one of { "afterLines", "beforeLines" }
arg1.argField == null
arg1.argValue == null
arg1.argOptional == false
arg1.argRepeat == false
arg1.argSet == false
arg1.repeat == false
arg1.repeatList == false
arg1.list == null
arg2[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
arg2[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 2, 3 }
size(this.help.problemText[]) one of { 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.mutexCollect(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT;condition="return == true"
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 3
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
this.pattern.argList.curr has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
arg0.south == null
arg0.east has only one value
arg0.east.south has only one value
arg0.east.east == null
arg0.east.entry has only one value
arg0.east.optional == false
arg0.entry has only one value
arg1.name.toString one of { "about", "v" }
arg1.altName.toString == "version"
arg1.fieldName.toString one of { "aboutOption", "versionOption" }
arg1.creation == true
arg1.argName == null
arg1.argFieldName == null
arg1.argSetter == null
arg1.help.toString one of { "show information about this program", "show version information" }
arg2[] contains no nulls and has only one value, of length 3
arg2[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return == true
orig(arg0) has only one value
size(this.help.problemUsage[]) == 3
size(this.help.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgBase.mutexCollect(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption, java.util.List):::EXIT;condition="not(return == true)"
arg2[] == orig(arg2[])
arg1.name.toString one of { "a", "b", "h" }
arg1.altName.toString one of { "after", "before", "help" }
arg1.fieldName.toString one of { "afterOption", "beforeOption", "helpOption" }
arg1.help.toString one of { "number of lines after a match", "number of lines before a match", "show this help text" }
arg2[] == []
arg2[].getClass().getName() == []
return == false
===========================================================================
com.fidelis.argface.ArgBase.mutexOption(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.south.south == null
arg0.south.east has only one value
arg0.south.entry has only one value
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg1.spec == 3
arg1.field == null
arg1.has == false
arg1.count == 0
arg1.argName.toString == "lines"
arg1.argFieldName.toString one of { "afterLines", "beforeLines" }
arg1.argField == null
arg1.argValue == null
arg1.argOptional == false
arg1.argRepeat == false
arg1.argSet == false
arg1.repeat == false
arg1.repeatList == false
arg1.list == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 2, 3 }
size(this.help.problemText[]) one of { 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.mutexOption(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption):::EXIT1141
===========================================================================
com.fidelis.argface.ArgBase.mutexOption(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption):::EXIT1141;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.mutexOption(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
arg1.spec == orig(arg1.spec)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.altName == orig(arg1.altName)
arg1.altName.toString == orig(arg1.altName.toString)
arg1.fieldName == orig(arg1.fieldName)
arg1.fieldName.toString == orig(arg1.fieldName.toString)
arg1.field == orig(arg1.field)
arg1.setter == orig(arg1.setter)
arg1.has == orig(arg1.has)
arg1.count == orig(arg1.count)
arg1.creation == orig(arg1.creation)
arg1.argName == orig(arg1.argName)
arg1.argName.toString == orig(arg1.argName.toString)
arg1.argFieldName == orig(arg1.argFieldName)
arg1.argFieldName.toString == orig(arg1.argFieldName.toString)
arg1.argField == orig(arg1.argField)
arg1.argSetter == orig(arg1.argSetter)
arg1.argValue == orig(arg1.argValue)
arg1.argOptional == orig(arg1.argOptional)
arg1.argRepeat == orig(arg1.argRepeat)
arg1.argSet == orig(arg1.argSet)
arg1.repeat == orig(arg1.repeat)
arg1.repeatList == orig(arg1.repeatList)
arg1.list == orig(arg1.list)
arg1.help == orig(arg1.help)
arg1.help.toString == orig(arg1.help.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] elements has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] elements has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.south.south == null
arg0.south.east has only one value
arg0.south.entry has only one value
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg1.spec == 3
arg1.field == null
arg1.has == false
arg1.count == 0
arg1.argName.toString == "lines"
arg1.argFieldName.toString one of { "afterLines", "beforeLines" }
arg1.argField == null
arg1.argValue == null
arg1.argOptional == false
arg1.argRepeat == false
arg1.argSet == false
arg1.repeat == false
arg1.repeatList == false
arg1.list == null
return == false
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 2, 3 }
size(this.help.problemText[]) one of { 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.mutexOption(com.fidelis.argface.ArgNode, com.fidelis.argface.ArgOption):::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgBase.parseArgOne(com.fidelis.argface.ArgNode, java.lang.String[]):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
arg0 != null
arg0.south.east != null
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east != null
arg0.east.entry != null
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry != null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg1 != null
arg1.getClass().getName() == java.lang.String[].class
arg1[] elements != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
===========================================================================
com.fidelis.argface.ArgBase.parseArgOne(com.fidelis.argface.ArgNode, java.lang.String[]):::EXIT1018
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemText[] == orig(this.help.problemText[])
orig(com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName()) one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
orig(this.pattern.nonOptionList[].getClass().getName()) one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
orig(this.nonOptionList[].getClass().getName()) one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[])) one of { 0, 11 }
orig(size(this.pattern.nonOptionList[])) one of { 0, 11 }
orig(size(this.nonOptionList[])) one of { 0, 11 }
===========================================================================
com.fidelis.argface.ArgBase.parseArgOne(com.fidelis.argface.ArgNode, java.lang.String[]):::EXIT857
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemText[] == orig(this.help.problemText[])
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
this.targetOptions[] == orig(this.targetOptions[])
this.help.usageText has only one value
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch has only one value
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch has only one value
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.saveList[] contains no nulls and has only one value, of length 4
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex == 4
this.pattern.failBase has only one value
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[] contains no nulls and has only one value, of length 5
this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] contains no nulls and has only one value, of length 5
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternMatch has only one value
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.east.optional == false
arg1[] contains no nulls and has only one value, of length 12
arg1[].toString == [-cd, total, patternValue, file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
return == -1
orig(com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName()) one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
orig(this.pattern.nonOptionList[].getClass().getName()) one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
orig(this.nonOptionList[].getClass().getName()) one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
orig(arg1) has only one value
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 5
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) == 5
size(this.targetOperands[]) == 5
orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[])) one of { 0, 5 }
orig(size(this.pattern.nonOptionList[])) one of { 0, 5 }
orig(size(this.nonOptionList[])) one of { 0, 5 }
orig(size(arg1[])) == 12
===========================================================================
com.fidelis.argface.ArgBase.parseArgOne(com.fidelis.argface.ArgNode, java.lang.String[]):::EXIT887
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.nonOptionList[] == orig(this.nonOptionList[])
this.targetOptions[] == orig(this.targetOptions[])
size(this.help.problemUsage[])-1 == orig(size(this.help.problemUsage[]))
size(this.help.problemText[])-1 == orig(size(this.help.problemText[]))
this.help.usageText has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternMatch == null
return == -1
size(this.help.problemUsage[]) one of { 1, 2, 3 }
size(this.help.problemText[]) one of { 1, 2, 3 }
orig(size(arg1[])) one of { 1, 9 }
===========================================================================
com.fidelis.argface.ArgBase.parseArgOne(com.fidelis.argface.ArgNode, java.lang.String[]):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
arg1[] == orig(arg1[])
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOptions has only one value
this.targetOptions != null
this.patternWatch == true
this.preParseDone == true
arg0.south.east != null
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east != null
arg0.east.entry != null
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry != null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg1[] elements != null
return >= -1
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
size(this.help.problemUsage[]) >= orig(size(this.help.problemUsage[]))
size(this.help.problemUsage[])-1 <= orig(size(this.help.problemUsage[]))
size(this.help.problemUsage[])-1 >= orig(size(this.help.problemUsage[]))-1
size(this.help.problemText[]) >= orig(size(this.help.problemText[]))
size(this.help.problemText[])-1 <= orig(size(this.help.problemText[]))
size(this.help.problemText[])-1 >= orig(size(this.help.problemText[]))-1
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) != orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[]))-1
size(com.fidelis.argface.ArgUtil.base.nonOptionList[])-1 != orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[]))
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) >= orig(size(com.fidelis.argface.ArgUtil.base.targetOptions[]))
size(com.fidelis.argface.ArgUtil.base.targetOptions[])-1 >= orig(size(com.fidelis.argface.ArgUtil.base.targetOptions[]))-1
size(this.pattern.nonOptionList[]) != orig(size(this.pattern.nonOptionList[]))-1
size(this.pattern.nonOptionList[])-1 != orig(size(this.pattern.nonOptionList[]))
size(this.nonOptionList[]) != orig(size(this.nonOptionList[]))-1
size(this.nonOptionList[])-1 != orig(size(this.nonOptionList[]))
size(this.targetOptions[]) >= orig(size(this.targetOptions[]))
size(this.targetOptions[])-1 >= orig(size(this.targetOptions[]))-1
===========================================================================
com.fidelis.argface.ArgBase.parseArgTwo(com.fidelis.argface.ArgNode):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgBase.parseArgTwo(com.fidelis.argface.ArgNode):::EXIT1033
===========================================================================
com.fidelis.argface.ArgBase.parseArgTwo(com.fidelis.argface.ArgNode):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList[].getClass().getName() == orig(this.pattern.nonOptionList[].getClass().getName())
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.patternWatch == true
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.targetOperands has only one value
this.targetOptions has only one value
this.patternWatch == true
this.preParseDone == true
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
return == 0
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) % orig(size(com.fidelis.argface.ArgUtil.base.targetOperands[]))-1 == 0
size(this.pattern.targetOperands[]) % orig(size(this.pattern.targetOperands[]))-1 == 0
size(this.targetOperands[]) % orig(size(this.targetOperands[]))-1 == 0
===========================================================================
com.fidelis.argface.ArgBase.parseArguments(com.fidelis.argface.ArgNode, java.lang.String[]):::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.nonOptionList[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.east != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions != null
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0 != null
arg0.south.east != null
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east != null
arg0.east.entry != null
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry != null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg1 != null
arg1.getClass().getName() == java.lang.String[].class
arg1[] elements != null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(this.pattern.nonOptionList[]) one of { 0, 5 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5 }
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgBase.parseArguments(com.fidelis.argface.ArgNode, java.lang.String[]):::EXIT753
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.help.argList.curr == orig(this.help.argList.curr)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOptions[] == orig(this.targetOptions[])
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.help.usageText has only one value
this.help.usageText != null
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.argList.curr.south != null
this.argList.curr.east != null
this.argList.curr.repeat == false
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.south != null
arg0.east.east != null
return == -1
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.targetOperands[]) one of { 0, 5 }
orig(size(this.help.problemUsage[])) one of { 0, 1, 2 }
orig(size(this.help.problemText[])) one of { 0, 1, 2 }
orig(size(arg1[])) one of { 1, 9, 12 }
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) <= orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[]))
size(com.fidelis.argface.ArgUtil.base.nonOptionList[])-1 <= orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[]))-1
size(this.pattern.nonOptionList[]) <= orig(size(this.pattern.nonOptionList[]))
size(this.pattern.nonOptionList[])-1 <= orig(size(this.pattern.nonOptionList[]))-1
size(this.nonOptionList[]) <= orig(size(this.nonOptionList[]))
size(this.nonOptionList[])-1 <= orig(size(this.nonOptionList[]))-1
===========================================================================
com.fidelis.argface.ArgBase.parseArguments(com.fidelis.argface.ArgNode, java.lang.String[]):::EXIT759
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemText[] == orig(this.help.problemText[])
orig(com.fidelis.argface.ArgUtil.base.nonOptionList[]) == []
orig(com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName()) == []
orig(this.pattern.nonOptionList[]) == []
orig(this.pattern.nonOptionList[].getClass().getName()) == []
orig(this.nonOptionList[]) == []
orig(this.nonOptionList[].getClass().getName()) == []
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) % orig(size(com.fidelis.argface.ArgUtil.base.targetOperands[]))-1 == 0
size(this.pattern.targetOperands[]) % orig(size(this.pattern.targetOperands[]))-1 == 0
size(this.targetOperands[]) % orig(size(this.targetOperands[]))-1 == 0
===========================================================================
com.fidelis.argface.ArgBase.parseArguments(com.fidelis.argface.ArgNode, java.lang.String[]):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
arg1[] == orig(arg1[])
(return == -1)  <==>  (com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString))
(return == -1)  <==>  (this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName()))
(return == -1)  <==>  (this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString))
(return == -1)  <==>  (this.patternMatch.toString == orig(this.patternMatch.toString))
(return == -1)  ==>  (arg0.east.east != null)
(return == -1)  ==>  (arg0.south != null)
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList[] == [])
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == [])
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch))
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>...")
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands))
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[]))
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] == [])
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[]))
(return == -1)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [])
(return == -1)  ==>  (orig(com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName()) elements == java.lang.String.class)
(return == -1)  ==>  (orig(com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName()) one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] })
(return == -1)  ==>  (orig(com.fidelis.argface.ArgUtil.base.targetOperands) != null)
(return == -1)  ==>  (orig(com.fidelis.argface.ArgUtil.base.targetOperands) has only one value)
(return == -1)  ==>  (orig(size(arg1[])) one of { 1, 9, 12 })
(return == -1)  ==>  (orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[])) one of { 0, 5 })
(return == -1)  ==>  (orig(size(this.help.problemText[])) one of { 0, 1, 2 })
(return == -1)  ==>  (orig(size(this.help.problemUsage[])) one of { 0, 1, 2 })
(return == -1)  ==>  (orig(size(this.nonOptionList[])) one of { 0, 5 })
(return == -1)  ==>  (orig(size(this.pattern.nonOptionList[])) one of { 0, 5 })
(return == -1)  ==>  (orig(this.argList.curr.south) != null)
(return == -1)  ==>  (orig(this.nonOptionList[].getClass().getName()) elements == java.lang.String.class)
(return == -1)  ==>  (orig(this.nonOptionList[].getClass().getName()) one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] })
(return == -1)  ==>  (orig(this.pattern.argList) != null)
(return == -1)  ==>  (orig(this.pattern.argList) has only one value)
(return == -1)  ==>  (orig(this.pattern.nonOptionList) != null)
(return == -1)  ==>  (orig(this.pattern.nonOptionList) has only one value)
(return == -1)  ==>  (orig(this.pattern.nonOptionList[].getClass().getName()) elements == java.lang.String.class)
(return == -1)  ==>  (orig(this.pattern.nonOptionList[].getClass().getName()) one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] })
(return == -1)  ==>  (orig(this.pattern.patternWatch) == true)
(return == -1)  ==>  (orig(this.targetOperands) != null)
(return == -1)  ==>  (orig(this.targetOperands) has only one value)
(return == -1)  ==>  (size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) <= orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[])))
(return == -1)  ==>  (size(com.fidelis.argface.ArgUtil.base.nonOptionList[])-1 <= orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[]))-1)
(return == -1)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 })
(return == -1)  ==>  (size(this.nonOptionList[]) <= orig(size(this.nonOptionList[])))
(return == -1)  ==>  (size(this.nonOptionList[])-1 <= orig(size(this.nonOptionList[]))-1)
(return == -1)  ==>  (size(this.pattern.nonOptionList[]) <= orig(size(this.pattern.nonOptionList[])))
(return == -1)  ==>  (size(this.pattern.nonOptionList[])-1 <= orig(size(this.pattern.nonOptionList[]))-1)
(return == -1)  ==>  (size(this.pattern.targetOperands[]) one of { 0, 5 })
(return == -1)  ==>  (size(this.targetOperands[]) one of { 0, 5 })
(return == -1)  ==>  (this.argList.curr == orig(this.argList.curr))
(return == -1)  ==>  (this.argList.curr.east != null)
(return == -1)  ==>  (this.argList.curr.east == orig(this.argList.curr.east))
(return == -1)  ==>  (this.argList.curr.entry == orig(this.argList.curr.entry))
(return == -1)  ==>  (this.argList.curr.repeat == false)
(return == -1)  ==>  (this.argList.curr.repeat == orig(this.argList.curr.repeat))
(return == -1)  ==>  (this.argList.curr.south != null)
(return == -1)  ==>  (this.argList.curr.south == orig(this.argList.curr.south))
(return == -1)  ==>  (this.help.argList.curr == orig(this.help.argList.curr))
(return == -1)  ==>  (this.help.usageText != null)
(return == -1)  ==>  (this.help.usageText has only one value)
(return == -1)  ==>  (this.nonOptionList[] == [])
(return == -1)  ==>  (this.nonOptionList[].getClass().getName() == [])
(return == -1)  ==>  (this.parser.argList.curr == orig(this.parser.argList.curr))
(return == -1)  ==>  (this.parser.operand.count == 0)
(return == -1)  ==>  (this.parser.operand.count == orig(this.parser.operand.count))
(return == -1)  ==>  (this.parser.operand.has == false)
(return == -1)  ==>  (this.parser.operand.has == orig(this.parser.operand.has))
(return == -1)  ==>  (this.parser.operand.list[] == [])
(return == -1)  ==>  (this.parser.operand.list[] == orig(this.parser.operand.list[]))
(return == -1)  ==>  (this.parser.operand.list[].getClass().getName() == [])
(return == -1)  ==>  (this.parser.operand.value == null)
(return == -1)  ==>  (this.parser.operand.value == orig(this.parser.operand.value))
(return == -1)  ==>  (this.pattern.argList == orig(this.pattern.argList))
(return == -1)  ==>  (this.pattern.argList.curr == orig(this.pattern.argList.curr))
(return == -1)  ==>  (this.pattern.failBase == orig(this.pattern.failBase))
(return == -1)  ==>  (this.pattern.nonOptionList == orig(this.pattern.nonOptionList))
(return == -1)  ==>  (this.pattern.nonOptionList[] == [])
(return == -1)  ==>  (this.pattern.nonOptionList[].getClass().getName() == [])
(return == -1)  ==>  (this.pattern.patternMatch == orig(this.pattern.patternMatch))
(return == -1)  ==>  (this.pattern.patternMatch.toString == "ending <pattern> <file>...")
(return == -1)  ==>  (this.pattern.patternMax == orig(this.pattern.patternMax))
(return == -1)  ==>  (this.pattern.patternMin == orig(this.pattern.patternMin))
(return == -1)  ==>  (this.pattern.patternWatch == orig(this.pattern.patternWatch))
(return == -1)  ==>  (this.pattern.prevIndex == orig(this.pattern.prevIndex))
(return == -1)  ==>  (this.pattern.prevIndex one of { 0, 4 })
(return == -1)  ==>  (this.pattern.saveList[] == orig(this.pattern.saveList[]))
(return == -1)  ==>  (this.pattern.targetOperands[] == orig(this.pattern.targetOperands[]))
(return == -1)  ==>  (this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
(return == -1)  ==>  (this.patternMatch == orig(this.patternMatch))
(return == -1)  ==>  (this.patternMatch.toString == "ending <pattern> <file>...")
(return == -1)  ==>  (this.targetOperands == orig(this.targetOperands))
(return == -1)  ==>  (this.targetOperands[] == orig(this.targetOperands[]))
(return == -1)  ==>  (this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
(return == -1)  ==>  (this.targetOptions[] == [])
(return == -1)  ==>  (this.targetOptions[] == orig(this.targetOptions[]))
(return == -1)  ==>  (this.targetOptions[].getClass().getName() == [])
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.pattern.argList has only one value
this.pattern.argList != null
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList != null
this.pattern.patternWatch == true
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOperands has only one value
this.targetOperands != null
this.targetOptions has only one value
this.targetOptions != null
this.patternWatch == true
this.preParseDone == true
arg0.south.east != null
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east != null
arg0.east.entry != null
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry != null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg1[] elements != null
return >= -1
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
this.parser.operand.count >= orig(this.parser.operand.count)
this.pattern.patternMin >= orig(this.pattern.patternMin)
this.pattern.patternMax >= orig(this.pattern.patternMax)
size(this.parser.operand.list[]) >= orig(size(this.parser.operand.list[]))
size(this.parser.operand.list[])-1 != orig(size(this.parser.operand.list[]))
size(this.parser.operand.list[])-1 >= orig(size(this.parser.operand.list[]))-1
size(this.help.problemUsage[]) >= orig(size(this.help.problemUsage[]))
size(this.help.problemUsage[])-1 <= orig(size(this.help.problemUsage[]))
size(this.help.problemUsage[])-1 >= orig(size(this.help.problemUsage[]))-1
size(this.help.problemText[]) >= orig(size(this.help.problemText[]))
size(this.help.problemText[])-1 <= orig(size(this.help.problemText[]))
size(this.help.problemText[])-1 >= orig(size(this.help.problemText[]))-1
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) != orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[]))-1
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) % orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[]))-1 == 0
orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[])) % size(com.fidelis.argface.ArgUtil.base.nonOptionList[])-1 == 0
size(com.fidelis.argface.ArgUtil.base.nonOptionList[])-1 != orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[]))
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) >= orig(size(com.fidelis.argface.ArgUtil.base.targetOperands[]))
size(com.fidelis.argface.ArgUtil.base.targetOperands[])-1 != orig(size(com.fidelis.argface.ArgUtil.base.targetOperands[]))
size(com.fidelis.argface.ArgUtil.base.targetOperands[])-1 >= orig(size(com.fidelis.argface.ArgUtil.base.targetOperands[]))-1
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) >= orig(size(com.fidelis.argface.ArgUtil.base.targetOptions[]))
size(com.fidelis.argface.ArgUtil.base.targetOptions[])-1 >= orig(size(com.fidelis.argface.ArgUtil.base.targetOptions[]))-1
size(this.pattern.nonOptionList[]) != orig(size(this.pattern.nonOptionList[]))-1
size(this.pattern.nonOptionList[]) % orig(size(this.pattern.nonOptionList[]))-1 == 0
orig(size(this.pattern.nonOptionList[])) % size(this.pattern.nonOptionList[])-1 == 0
size(this.pattern.nonOptionList[])-1 != orig(size(this.pattern.nonOptionList[]))
size(this.pattern.saveList[]) >= orig(size(this.pattern.saveList[]))
size(this.pattern.saveList[])-1 != orig(size(this.pattern.saveList[]))
size(this.pattern.saveList[])-1 >= orig(size(this.pattern.saveList[]))-1
size(this.pattern.targetOperands[]) >= orig(size(this.pattern.targetOperands[]))
size(this.pattern.targetOperands[])-1 != orig(size(this.pattern.targetOperands[]))
size(this.pattern.targetOperands[])-1 >= orig(size(this.pattern.targetOperands[]))-1
size(this.nonOptionList[]) != orig(size(this.nonOptionList[]))-1
size(this.nonOptionList[]) % orig(size(this.nonOptionList[]))-1 == 0
orig(size(this.nonOptionList[])) % size(this.nonOptionList[])-1 == 0
size(this.nonOptionList[])-1 != orig(size(this.nonOptionList[]))
size(this.targetOperands[]) >= orig(size(this.targetOperands[]))
size(this.targetOperands[])-1 != orig(size(this.targetOperands[]))
size(this.targetOperands[])-1 >= orig(size(this.targetOperands[]))-1
size(this.targetOptions[]) >= orig(size(this.targetOptions[]))
size(this.targetOptions[])-1 >= orig(size(this.targetOptions[]))-1
===========================================================================
com.fidelis.argface.ArgBase.parseArguments(java.lang.String[]):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.value.toString == "file3"
this.parser.operand.count one of { 0, 3 }
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.nonOptionList[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.patternWatch == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.getClass().getName() == java.lang.String[].class
size(this.parser.operand.list[]) one of { 0, 3 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 8, 11 }
size(this.help.optionList[]) one of { 8, 11 }
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 11 }
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(this.pattern.nonOptionList[]) one of { 0, 5 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) one of { 8, 11 }
size(this.nonOptionList[]) one of { 0, 5 }
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgBase.parseArguments(java.lang.String[]):::EXIT735
===========================================================================
com.fidelis.argface.ArgBase.parseArguments(java.lang.String[]):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.optionList == orig(this.help.optionList)
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
arg0[] == orig(arg0[])
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.patternWatch == true
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.targetOperands has only one value
this.targetOptions has only one value
this.patternWatch == true
this.preParseDone == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.parser.operand.list[])-1 % orig(size(this.parser.operand.list[]))-1 == 0
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) % orig(size(com.fidelis.argface.ArgUtil.base.targetOperands[]))-1 == 0
size(this.pattern.targetOperands[]) % orig(size(this.pattern.targetOperands[]))-1 == 0
size(this.targetOperands[]) % orig(size(this.targetOperands[]))-1 == 0
===========================================================================
com.fidelis.argface.ArgBase.parseUsage():::ENTER
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
===========================================================================
com.fidelis.argface.ArgBase.parseUsage():::EXIT689
===========================================================================
com.fidelis.argface.ArgBase.parseUsage():::EXIT689;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.parseUsage():::EXIT
this.parser == orig(this.parser)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.parseUsage():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.postProcess():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName == null
this.parser.operand.setter == null
this.parser.operand.list == null
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName == null
this.parser.option.setter == null
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.postProcess():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.postProcess():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOperand):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName == null
this.parser.option.setter == null
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == ""
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0.type one of { 1, 2 }
arg0.fieldName == null
arg0.optional == false
arg0.setter == null
arg0.field == null
arg0.repeatList == false
arg0.list == null
arg0.has == false
arg0.value == null
arg0.count == 0
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOperand):::EXIT1319
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOperand):::EXIT1319;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOperand):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list[].getClass().getName() == orig(this.parser.operand.list[].getClass().getName())
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.type == orig(arg0.type)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.optional == orig(arg0.optional)
arg0.field == orig(arg0.field)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.has == orig(arg0.has)
arg0.value == orig(arg0.value)
arg0.count == orig(arg0.count)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName == null
this.parser.option.setter == null
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == ""
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0.type one of { 1, 2 }
arg0.optional == false
arg0.field == null
arg0.repeatList == false
arg0.list[] == []
arg0.list[].getClass().getName() == []
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == false
arg0.value == null
arg0.count == 0
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
this.parser.operand.list[] is the reverse of orig(this.parser.operand.list[])
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOperand):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOption):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0.spec one of { 1, 3 }
arg0.fieldName == null
arg0.field == null
arg0.setter == null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOption):::EXIT1352
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOption):::EXIT1352;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOption):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.field == orig(arg0.field)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argField == orig(arg0.argField)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
com.fidelis.argface.ArgUtil.base.letters.toString > orig(com.fidelis.argface.ArgUtil.base.letters.toString)
this.letters.toString > orig(this.letters.toString)
===========================================================================
com.fidelis.argface.ArgBase.postProcess(com.fidelis.argface.ArgOption):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.preParse():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.patternWatch == true
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.programName has only one value
this.usageText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.patternWatch == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 8, 11 }
size(this.help.optionList[]) one of { 8, 11 }
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 11 }
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) one of { 8, 11 }
size(this.nonOptionList[]) one of { 0, 5, 11 }
===========================================================================
com.fidelis.argface.ArgBase.preParse():::EXIT1246
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.optionList[] == orig(this.parser.optionList[])
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList[] == orig(this.help.optionList[])
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionList[] == orig(this.optionList[])
this.argList.curr == orig(this.argList.curr)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.nonOptionList == orig(this.nonOptionList)
this.targetOptions == orig(this.targetOptions)
this.preParseDone == orig(this.preParseDone)
this.help.usageText has only one value
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.patternWatch == true
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.targetOperands has only one value
===========================================================================
com.fidelis.argface.ArgBase.preParse():::EXIT1246;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.preParse():::EXIT1302
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.argList.curr has only one value
this.help.argList.curr has only one value
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands == null
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternMatch == null
orig(this.parser.argList.curr) has only one value
orig(this.parser.optionList[]) contains no nulls and has only one value, of length 8
orig(this.parser.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
orig(this.help.argList.curr) has only one value
orig(this.help.optionList[]) contains no nulls and has only one value, of length 8
orig(this.help.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
orig(this.help.versionText) == null
orig(this.help.aboutText) == null
orig(this.help.helpText) == null
orig(com.fidelis.argface.ArgUtil.base.versionText) == null
orig(com.fidelis.argface.ArgUtil.base.aboutText) == null
orig(com.fidelis.argface.ArgUtil.base.helpText) == null
orig(com.fidelis.argface.ArgUtil.base.suppressHelp) == null
orig(com.fidelis.argface.ArgUtil.base.posixFormat) == null
orig(com.fidelis.argface.ArgUtil.base.sortOptions) == null
orig(com.fidelis.argface.ArgUtil.base.optionList[]) contains no nulls and has only one value, of length 8
orig(com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
orig(com.fidelis.argface.ArgUtil.base.nonOptionList) == null
orig(com.fidelis.argface.ArgUtil.base.targetOptions) == null
orig(com.fidelis.argface.ArgUtil.base.preParseDone) == false
orig(this.versionText) == null
orig(this.aboutText) == null
orig(this.helpText) == null
orig(this.suppressHelp) == null
orig(this.posixFormat) == null
orig(this.sortOptions) == null
orig(this.optionList[]) contains no nulls and has only one value, of length 8
orig(this.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
orig(this.argList.curr) has only one value
orig(this.argList.curr.east) has only one value
orig(this.argList.curr.entry) has only one value
orig(this.nonOptionList) == null
orig(this.targetOptions) == null
orig(this.preParseDone) == false
orig(size(this.parser.optionList[])) == 8
orig(size(this.help.optionList[])) == 8
orig(size(com.fidelis.argface.ArgUtil.base.optionList[])) == 8
orig(size(this.optionList[])) == 8
===========================================================================
com.fidelis.argface.ArgBase.preParse():::EXIT1302;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.preParse():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.optionList == orig(this.help.optionList)
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName())
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList[].getClass().getName() == orig(this.nonOptionList[].getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions[].getClass().getName() == orig(this.targetOptions[].getClass().getName())
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
(this.help.usageText == null)  <==>  (com.fidelis.argface.ArgUtil.base.targetOperands == null)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.aboutText) == null)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.helpText) == null)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.nonOptionList) == null)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.optionList[]) contains no nulls and has only one value, of length 8)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.posixFormat) == null)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.preParseDone) == false)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.sortOptions) == null)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.suppressHelp) == null)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.targetOptions) == null)
(this.help.usageText == null)  <==>  (orig(com.fidelis.argface.ArgUtil.base.versionText) == null)
(this.help.usageText == null)  <==>  (orig(size(com.fidelis.argface.ArgUtil.base.optionList[])) == 8)
(this.help.usageText == null)  <==>  (orig(size(this.help.optionList[])) == 8)
(this.help.usageText == null)  <==>  (orig(size(this.optionList[])) == 8)
(this.help.usageText == null)  <==>  (orig(size(this.parser.optionList[])) == 8)
(this.help.usageText == null)  <==>  (orig(this.aboutText) == null)
(this.help.usageText == null)  <==>  (orig(this.help.aboutText) == null)
(this.help.usageText == null)  <==>  (orig(this.help.helpText) == null)
(this.help.usageText == null)  <==>  (orig(this.help.optionList[]) contains no nulls and has only one value, of length 8)
(this.help.usageText == null)  <==>  (orig(this.help.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(this.help.usageText == null)  <==>  (orig(this.help.versionText) == null)
(this.help.usageText == null)  <==>  (orig(this.helpText) == null)
(this.help.usageText == null)  <==>  (orig(this.nonOptionList) == null)
(this.help.usageText == null)  <==>  (orig(this.optionList[]) contains no nulls and has only one value, of length 8)
(this.help.usageText == null)  <==>  (orig(this.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(this.help.usageText == null)  <==>  (orig(this.parser.optionList[]) contains no nulls and has only one value, of length 8)
(this.help.usageText == null)  <==>  (orig(this.parser.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(this.help.usageText == null)  <==>  (orig(this.posixFormat) == null)
(this.help.usageText == null)  <==>  (orig(this.preParseDone) == false)
(this.help.usageText == null)  <==>  (orig(this.sortOptions) == null)
(this.help.usageText == null)  <==>  (orig(this.suppressHelp) == null)
(this.help.usageText == null)  <==>  (orig(this.targetOptions) == null)
(this.help.usageText == null)  <==>  (orig(this.versionText) == null)
(this.help.usageText == null)  <==>  (this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.help.usageText == null)  <==>  (this.pattern.argList == null)
(this.help.usageText == null)  <==>  (this.pattern.nonOptionList == null)
(this.help.usageText == null)  <==>  (this.pattern.patternWatch == false)
(this.help.usageText == null)  <==>  (this.targetOperands == null)
(this.help.usageText == null)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList[] == [])
(this.help.usageText == null)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == [])
(this.help.usageText == null)  ==>  (com.fidelis.argface.ArgUtil.base.patternMatch == null)
(this.help.usageText == null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] == [])
(this.help.usageText == null)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [])
(this.help.usageText == null)  ==>  (orig(this.argList.curr) has only one value)
(this.help.usageText == null)  ==>  (orig(this.argList.curr.east) has only one value)
(this.help.usageText == null)  ==>  (orig(this.argList.curr.entry) has only one value)
(this.help.usageText == null)  ==>  (orig(this.help.argList.curr) has only one value)
(this.help.usageText == null)  ==>  (orig(this.parser.argList.curr) has only one value)
(this.help.usageText == null)  ==>  (this.argList.curr has only one value)
(this.help.usageText == null)  ==>  (this.argList.curr.east == null)
(this.help.usageText == null)  ==>  (this.argList.curr.entry has only one value)
(this.help.usageText == null)  ==>  (this.argList.curr.repeat == false)
(this.help.usageText == null)  ==>  (this.argList.curr.south == null)
(this.help.usageText == null)  ==>  (this.help.argList.curr has only one value)
(this.help.usageText == null)  ==>  (this.help.problemText[] == [])
(this.help.usageText == null)  ==>  (this.help.problemText[].getClass().getName() == [])
(this.help.usageText == null)  ==>  (this.help.problemUsage[] == [])
(this.help.usageText == null)  ==>  (this.help.problemUsage[].getClass().getName() == [])
(this.help.usageText == null)  ==>  (this.nonOptionList[] == [])
(this.help.usageText == null)  ==>  (this.nonOptionList[].getClass().getName() == [])
(this.help.usageText == null)  ==>  (this.parser.argList.curr has only one value)
(this.help.usageText == null)  ==>  (this.parser.operand.count == 0)
(this.help.usageText == null)  ==>  (this.parser.operand.has == false)
(this.help.usageText == null)  ==>  (this.parser.operand.list[] == [])
(this.help.usageText == null)  ==>  (this.parser.operand.list[].getClass().getName() == [])
(this.help.usageText == null)  ==>  (this.parser.operand.value == null)
(this.help.usageText == null)  ==>  (this.pattern.failBase == null)
(this.help.usageText == null)  ==>  (this.pattern.patternMatch == null)
(this.help.usageText == null)  ==>  (this.pattern.patternMax == 0)
(this.help.usageText == null)  ==>  (this.pattern.patternMin == 0)
(this.help.usageText == null)  ==>  (this.pattern.prevIndex == 0)
(this.help.usageText == null)  ==>  (this.pattern.saveList[] == [])
(this.help.usageText == null)  ==>  (this.pattern.saveList[].getClass().getName() == [])
(this.help.usageText == null)  ==>  (this.pattern.targetOperands[] == [])
(this.help.usageText == null)  ==>  (this.pattern.targetOperands[].getClass().getName() == [])
(this.help.usageText == null)  ==>  (this.patternMatch == null)
(this.help.usageText == null)  ==>  (this.targetOptions[] == [])
(this.help.usageText == null)  ==>  (this.targetOptions[].getClass().getName() == [])
(this.help.usageText has only one value)  <==>  (com.fidelis.argface.ArgUtil.base.targetOperands has only one value)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.aboutText) has only one value)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.helpText) has only one value)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.nonOptionList) has only one value)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.optionList[]) contains no nulls and has only one value, of length 11)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.posixFormat) has only one value)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.preParseDone) == true)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.sortOptions) has only one value)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.suppressHelp) has only one value)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.targetOptions) has only one value)
(this.help.usageText has only one value)  <==>  (orig(com.fidelis.argface.ArgUtil.base.versionText) has only one value)
(this.help.usageText has only one value)  <==>  (orig(size(com.fidelis.argface.ArgUtil.base.optionList[])) == 11)
(this.help.usageText has only one value)  <==>  (orig(size(this.help.optionList[])) == 11)
(this.help.usageText has only one value)  <==>  (orig(size(this.optionList[])) == 11)
(this.help.usageText has only one value)  <==>  (orig(size(this.parser.optionList[])) == 11)
(this.help.usageText has only one value)  <==>  (orig(this.aboutText) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.help.aboutText) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.help.helpText) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.help.optionList[]) contains no nulls and has only one value, of length 11)
(this.help.usageText has only one value)  <==>  (orig(this.help.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(this.help.usageText has only one value)  <==>  (orig(this.help.versionText) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.helpText) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.nonOptionList) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.optionList[]) contains no nulls and has only one value, of length 11)
(this.help.usageText has only one value)  <==>  (orig(this.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(this.help.usageText has only one value)  <==>  (orig(this.parser.optionList[]) contains no nulls and has only one value, of length 11)
(this.help.usageText has only one value)  <==>  (orig(this.parser.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption])
(this.help.usageText has only one value)  <==>  (orig(this.posixFormat) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.preParseDone) == true)
(this.help.usageText has only one value)  <==>  (orig(this.sortOptions) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.suppressHelp) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.targetOptions) has only one value)
(this.help.usageText has only one value)  <==>  (orig(this.versionText) has only one value)
(this.help.usageText has only one value)  <==>  (this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.help.usageText has only one value)  <==>  (this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName()))
(this.help.usageText has only one value)  <==>  (this.pattern.argList has only one value)
(this.help.usageText has only one value)  <==>  (this.pattern.nonOptionList has only one value)
(this.help.usageText has only one value)  <==>  (this.pattern.patternWatch == true)
(this.help.usageText has only one value)  <==>  (this.targetOperands has only one value)
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[]))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() elements == java.lang.String.class)
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[]))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." })
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == java.util.ArrayList.class)
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class)
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName()))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[]))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class)
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText))
(this.help.usageText has only one value)  ==>  (com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString))
(this.help.usageText has only one value)  ==>  (orig(com.fidelis.argface.ArgUtil.base.aboutText.toString) == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n")
(this.help.usageText has only one value)  ==>  (orig(com.fidelis.argface.ArgUtil.base.helpText.toString) == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n")
(this.help.usageText has only one value)  ==>  (orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()) == java.util.ArrayList.class)
(this.help.usageText has only one value)  ==>  (orig(com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName()) elements == java.lang.String.class)
(this.help.usageText has only one value)  ==>  (orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName()) == java.util.ArrayList.class)
(this.help.usageText has only one value)  ==>  (orig(com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName()) elements == com.fidelis.argface.ArgOption.class)
(this.help.usageText has only one value)  ==>  (orig(com.fidelis.argface.ArgUtil.base.versionText.toString) == "ArgSample version 1.0.0")
(this.help.usageText has only one value)  ==>  (orig(size(com.fidelis.argface.ArgUtil.base.nonOptionList[])) one of { 0, 5, 11 })
(this.help.usageText has only one value)  ==>  (orig(size(com.fidelis.argface.ArgUtil.base.targetOptions[])) one of { 0, 1, 2 })
(this.help.usageText has only one value)  ==>  (orig(size(this.nonOptionList[])) one of { 0, 5, 11 })
(this.help.usageText has only one value)  ==>  (orig(size(this.targetOptions[])) one of { 0, 1, 2 })
(this.help.usageText has only one value)  ==>  (orig(this.aboutText.toString) == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n")
(this.help.usageText has only one value)  ==>  (orig(this.help.aboutText.toString) == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n")
(this.help.usageText has only one value)  ==>  (orig(this.help.helpText.toString) == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n")
(this.help.usageText has only one value)  ==>  (orig(this.help.versionText.toString) == "ArgSample version 1.0.0")
(this.help.usageText has only one value)  ==>  (orig(this.helpText.toString) == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n")
(this.help.usageText has only one value)  ==>  (orig(this.nonOptionList.getClass().getName()) == java.util.ArrayList.class)
(this.help.usageText has only one value)  ==>  (orig(this.nonOptionList[].getClass().getName()) elements == java.lang.String.class)
(this.help.usageText has only one value)  ==>  (orig(this.targetOptions.getClass().getName()) == java.util.ArrayList.class)
(this.help.usageText has only one value)  ==>  (orig(this.targetOptions[].getClass().getName()) elements == com.fidelis.argface.ArgOption.class)
(this.help.usageText has only one value)  ==>  (orig(this.versionText.toString) == "ArgSample version 1.0.0")
(this.help.usageText has only one value)  ==>  (size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 })
(this.help.usageText has only one value)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5, 16 })
(this.help.usageText has only one value)  ==>  (size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1, 2 })
(this.help.usageText has only one value)  ==>  (size(this.help.problemText[]) one of { 0, 2, 3 })
(this.help.usageText has only one value)  ==>  (size(this.help.problemUsage[]) one of { 0, 2, 3 })
(this.help.usageText has only one value)  ==>  (size(this.nonOptionList[]) one of { 0, 5, 11 })
(this.help.usageText has only one value)  ==>  (size(this.parser.operand.list[]) one of { 0, 3, 9 })
(this.help.usageText has only one value)  ==>  (size(this.pattern.nonOptionList[]) one of { 0, 5, 11 })
(this.help.usageText has only one value)  ==>  (size(this.pattern.saveList[]) one of { 0, 4 })
(this.help.usageText has only one value)  ==>  (size(this.pattern.targetOperands[]) one of { 0, 5, 16 })
(this.help.usageText has only one value)  ==>  (size(this.targetOperands[]) one of { 0, 5, 16 })
(this.help.usageText has only one value)  ==>  (size(this.targetOptions[]) one of { 0, 1, 2 })
(this.help.usageText has only one value)  ==>  (this.aboutText == orig(this.aboutText))
(this.help.usageText has only one value)  ==>  (this.aboutText.toString == orig(this.aboutText.toString))
(this.help.usageText has only one value)  ==>  (this.argList.curr == orig(this.argList.curr))
(this.help.usageText has only one value)  ==>  (this.argList.curr.east == orig(this.argList.curr.east))
(this.help.usageText has only one value)  ==>  (this.argList.curr.entry == orig(this.argList.curr.entry))
(this.help.usageText has only one value)  ==>  (this.help.aboutText == orig(this.help.aboutText))
(this.help.usageText has only one value)  ==>  (this.help.aboutText.toString == orig(this.help.aboutText.toString))
(this.help.usageText has only one value)  ==>  (this.help.argList.curr == orig(this.help.argList.curr))
(this.help.usageText has only one value)  ==>  (this.help.helpText == orig(this.help.helpText))
(this.help.usageText has only one value)  ==>  (this.help.helpText.toString == orig(this.help.helpText.toString))
(this.help.usageText has only one value)  ==>  (this.help.optionList[] == orig(this.help.optionList[]))
(this.help.usageText has only one value)  ==>  (this.help.problemText[].getClass().getName() elements == java.lang.String.class)
(this.help.usageText has only one value)  ==>  (this.help.problemUsage[].getClass().getName() elements == com.fidelis.argface.ArgNode.class)
(this.help.usageText has only one value)  ==>  (this.help.usageText.toString == "Usage:\n  ArgSample set [-x|--extend | -y|--yield | -z|--sleep] [-e] [[upper | lower |\n            any] <pattern>] <other> \n  ArgSample (match [upper | lower | any] <other>) | (ending <file>) | (<other>\n            match <pattern>) [set | clear] \n  ArgSample [-a|--after <lines>] [-b|--before <lines>] [-c] [-d] [-e] match |\n            starting | ending | <other> <pattern> <file>... \n  ArgSample -h|--help | -v|--version | --about \n")
(this.help.usageText has only one value)  ==>  (this.help.versionText == orig(this.help.versionText))
(this.help.usageText has only one value)  ==>  (this.help.versionText.toString == orig(this.help.versionText.toString))
(this.help.usageText has only one value)  ==>  (this.helpText == orig(this.helpText))
(this.help.usageText has only one value)  ==>  (this.helpText.toString == orig(this.helpText.toString))
(this.help.usageText has only one value)  ==>  (this.nonOptionList == orig(this.nonOptionList))
(this.help.usageText has only one value)  ==>  (this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName()))
(this.help.usageText has only one value)  ==>  (this.nonOptionList[] == orig(this.nonOptionList[]))
(this.help.usageText has only one value)  ==>  (this.nonOptionList[].getClass().getName() elements == java.lang.String.class)
(this.help.usageText has only one value)  ==>  (this.optionList[] == orig(this.optionList[]))
(this.help.usageText has only one value)  ==>  (this.parser.argList.curr == orig(this.parser.argList.curr))
(this.help.usageText has only one value)  ==>  (this.parser.operand.count one of { 0, 3, 9 })
(this.help.usageText has only one value)  ==>  (this.parser.operand.list[].getClass().getName() elements == java.lang.String.class)
(this.help.usageText has only one value)  ==>  (this.parser.operand.value.toString one of { "file3", "more6" })
(this.help.usageText has only one value)  ==>  (this.parser.optionList[] == orig(this.parser.optionList[]))
(this.help.usageText has only one value)  ==>  (this.pattern.argList.home has only one value)
(this.help.usageText has only one value)  ==>  (this.pattern.failBase.east has only one value)
(this.help.usageText has only one value)  ==>  (this.pattern.failBase.entry has only one value)
(this.help.usageText has only one value)  ==>  (this.pattern.failBase.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.help.usageText has only one value)  ==>  (this.pattern.failBase.south has only one value)
(this.help.usageText has only one value)  ==>  (this.pattern.nonOptionList.getClass().getName() == java.util.ArrayList.class)
(this.help.usageText has only one value)  ==>  (this.pattern.nonOptionList[].getClass().getName() elements == java.lang.String.class)
(this.help.usageText has only one value)  ==>  (this.pattern.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." })
(this.help.usageText has only one value)  ==>  (this.pattern.patternMax one of { 0, 999 })
(this.help.usageText has only one value)  ==>  (this.pattern.patternMin one of { 0, 3 })
(this.help.usageText has only one value)  ==>  (this.pattern.prevIndex one of { 0, 3, 4 })
(this.help.usageText has only one value)  ==>  (this.pattern.saveList[].getClass().getName() elements == com.fidelis.argface.ArgNode.class)
(this.help.usageText has only one value)  ==>  (this.pattern.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] })
(this.help.usageText has only one value)  ==>  (this.pattern.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class)
(this.help.usageText has only one value)  ==>  (this.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." })
(this.help.usageText has only one value)  ==>  (this.posixFormat == orig(this.posixFormat))
(this.help.usageText has only one value)  ==>  (this.preParseDone == orig(this.preParseDone))
(this.help.usageText has only one value)  ==>  (this.sortOptions == orig(this.sortOptions))
(this.help.usageText has only one value)  ==>  (this.suppressHelp == orig(this.suppressHelp))
(this.help.usageText has only one value)  ==>  (this.targetOperands.getClass().getName() == java.util.ArrayList.class)
(this.help.usageText has only one value)  ==>  (this.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class)
(this.help.usageText has only one value)  ==>  (this.targetOptions == orig(this.targetOptions))
(this.help.usageText has only one value)  ==>  (this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName()))
(this.help.usageText has only one value)  ==>  (this.targetOptions[] == orig(this.targetOptions[]))
(this.help.usageText has only one value)  ==>  (this.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class)
(this.help.usageText has only one value)  ==>  (this.versionText == orig(this.versionText))
(this.help.usageText has only one value)  ==>  (this.versionText.toString == orig(this.versionText.toString))
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.targetOptions has only one value
this.patternWatch == true
this.preParseDone == true
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.parser.optionList[]) >= orig(size(this.parser.optionList[]))
size(this.parser.optionList[])-1 != orig(size(this.parser.optionList[]))
size(this.parser.optionList[])-1 >= orig(size(this.parser.optionList[]))-1
size(this.help.optionList[]) >= orig(size(this.help.optionList[]))
size(this.help.optionList[])-1 != orig(size(this.help.optionList[]))
size(this.help.optionList[])-1 >= orig(size(this.help.optionList[]))-1
size(com.fidelis.argface.ArgUtil.base.optionList[]) >= orig(size(com.fidelis.argface.ArgUtil.base.optionList[]))
size(com.fidelis.argface.ArgUtil.base.optionList[])-1 != orig(size(com.fidelis.argface.ArgUtil.base.optionList[]))
size(com.fidelis.argface.ArgUtil.base.optionList[])-1 >= orig(size(com.fidelis.argface.ArgUtil.base.optionList[]))-1
size(this.optionList[]) >= orig(size(this.optionList[]))
size(this.optionList[])-1 != orig(size(this.optionList[]))
size(this.optionList[])-1 >= orig(size(this.optionList[]))-1
===========================================================================
com.fidelis.argface.ArgBase.preParse():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.printHelp():::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.printHelp():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[] == []
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[] == []
this.targetOptions[].getClass().getName() == []
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgBase.reset():::ENTER
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOptions has only one value
this.targetOptions != null
this.patternWatch == true
this.preParseDone == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
===========================================================================
com.fidelis.argface.ArgBase.reset():::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.parser.source has only one value
this.parser.source != null
this.parser.programName has only one value
this.parser.programName != null
this.parser.operand has only one value
this.parser.operand != null
this.parser.operand.fieldName has only one value
this.parser.operand.fieldName != null
this.parser.operand.setter has only one value
this.parser.operand.setter != null
this.parser.operand.list has only one value
this.parser.operand.list != null
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option != null
this.parser.option.fieldName has only one value
this.parser.option.fieldName != null
this.parser.option.setter has only one value
this.parser.option.setter != null
this.parser.argList has only one value
this.parser.argList != null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList != null
this.help.optionList has only one value
this.help.optionList != null
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.versionText has only one value
this.help.versionText != null
this.help.aboutText has only one value
this.help.aboutText != null
this.help.helpText has only one value
this.help.helpText != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.versionText != null
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.aboutText != null
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.helpText != null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix != null
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix != null
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp != null
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.posixFormat != null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.sortOptions != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList != null
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions != null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
this.programName has only one value
this.programName != null
this.usageText has only one value
this.usageText != null
this.versionText has only one value
this.versionText != null
this.aboutText has only one value
this.aboutText != null
this.helpText has only one value
this.helpText != null
this.optionSuffix has only one value
this.optionSuffix != null
this.operandSuffix has only one value
this.operandSuffix != null
this.suppressHelp has only one value
this.suppressHelp != null
this.posixFormat has only one value
this.posixFormat != null
this.sortOptions has only one value
this.sortOptions != null
this.varList has only one value
this.varList != null
this.litList has only one value
this.litList != null
this.optionList has only one value
this.optionList != null
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList != null
this.letters has only one value
this.letters != null
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList != null
this.targetOptions has only one value
this.targetOptions != null
this.patternWatch == true
this.preParseDone == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 0, 5, 11 }
this.parser.operand.count <= orig(this.parser.operand.count)
size(this.parser.operand.list[]) <= orig(size(this.parser.operand.list[]))
size(this.parser.operand.list[]) != orig(size(this.parser.operand.list[]))-1
size(this.parser.operand.list[])-1 <= orig(size(this.parser.operand.list[]))-1
===========================================================================
com.fidelis.argface.ArgBase.setArgString(com.fidelis.argface.ArgOption, java.lang.String):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 2
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[] contains no nulls and has only one value, of length 2
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
arg1.toString == "5"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) == 2
size(this.help.problemText[]) == 2
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.setArgString(com.fidelis.argface.ArgOption, java.lang.String):::EXIT1500
===========================================================================
com.fidelis.argface.ArgBase.setArgString(com.fidelis.argface.ArgOption, java.lang.String):::EXIT1500;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.setArgString(com.fidelis.argface.ArgOption, java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argFieldName.toString == orig(arg0.argFieldName.toString)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
arg1.toString == orig(arg1.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[] contains no nulls and has only one value, of length 2
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[] contains no nulls and has only one value, of length 2
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
this.targetOptions has only one value
this.targetOptions[].getClass().getName() one of { [com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue.toString == "5"
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == true
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
arg1.toString == "5"
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) == 2
size(this.help.problemText[]) == 2
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 1, 2 }
size(this.optionList[]) == 11
size(this.targetOptions[]) one of { 1, 2 }
===========================================================================
com.fidelis.argface.ArgBase.setArgString(com.fidelis.argface.ArgOption, java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgBase.setOptionTrue(com.fidelis.argface.ArgOption):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.setOptionTrue(com.fidelis.argface.ArgOption):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argFieldName.toString == orig(arg0.argFieldName.toString)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[] == []
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[] == []
this.pattern.nonOptionList[].getClass().getName() == []
this.pattern.patternWatch == true
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.targetOperands has only one value
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption] }
this.patternWatch == true
this.preParseDone == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) == 11
size(this.targetOperands[]) one of { 0, 5 }
size(this.targetOptions[]) one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgBase.setPatternWatch(boolean):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0 == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.setPatternWatch(boolean):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.operand.count == 0
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == false
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgBase.setProgramName(java.lang.String):::ENTER
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0 has only one value
arg0.toString == "ArgSample"
===========================================================================
com.fidelis.argface.ArgBase.setProgramName(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.option == orig(this.parser.option)
this.parser.argList == orig(this.parser.argList)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.litList == orig(this.litList)
this.optionList == orig(this.optionList)
this.argList == orig(this.argList)
this.letters == orig(this.letters)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.toString == orig(arg0.toString)
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0.toString == "ArgSample"
===========================================================================
com.fidelis.argface.ArgBase.setUsageText(java.lang.String):::ENTER
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.usageText == null
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText == null
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0 has only one value
arg0.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
===========================================================================
com.fidelis.argface.ArgBase.setUsageText(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.option == orig(this.parser.option)
this.parser.argList == orig(this.parser.argList)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.litList == orig(this.litList)
this.optionList == orig(this.optionList)
this.argList == orig(this.argList)
this.letters == orig(this.letters)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0.toString == orig(arg0.toString)
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
===========================================================================
com.fidelis.argface.ArgBase.setUsageText(java.lang.String[]):::ENTER
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.usageText == null
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText == null
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] contains no nulls and has only one value, of length 19
arg0[].toString == [ArgSample, set [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ], [-e] [[upper | lower | any] <pattern>] <other>, ArgSample, ((match [upper | lower | any] <other>) |,  (ending <file>) |,  (<other> match <pattern>)), [set | clear], ArgSample, [-a, --after  <lines>] 'number of lines after a match', [-b, --before <lines>] 'number of lines before a match', [-cde], match|starting|ending|<other> <pattern> <file>..., Options:, -c confirm actions, -d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?, -e, --exit exit on error, -y, --yield yeild to substitutions, -z, --sleep dormant state when completed]
size(arg0[]) == 19
===========================================================================
com.fidelis.argface.ArgBase.setUsageText(java.lang.String[]):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.option == orig(this.parser.option)
this.parser.argList == orig(this.parser.argList)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == orig(this.help.versionText)
this.help.aboutText == orig(this.help.aboutText)
this.help.helpText == orig(this.help.helpText)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.versionText == orig(this.versionText)
this.aboutText == orig(this.aboutText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.litList == orig(this.litList)
this.optionList == orig(this.optionList)
this.argList == orig(this.argList)
this.letters == orig(this.letters)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
arg0[] == orig(arg0[])
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.argList == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.versionText == null
this.help.aboutText == null
this.help.helpText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix == null
com.fidelis.argface.ArgUtil.base.operandSuffix == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.litList == null
com.fidelis.argface.ArgUtil.base.optionList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.letters == null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName == null
this.util.operandSuffix == null
this.util.optionSuffix == null
this.pattern.argList == null
this.pattern.nonOptionList == null
this.pattern.patternWatch == false
this.pattern.patternMatch == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.patternMax == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText has only one value
this.versionText == null
this.aboutText == null
this.helpText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.posixFormat == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0[] contains no nulls and has only one value, of length 19
arg0[].toString == [ArgSample, set [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ], [-e] [[upper | lower | any] <pattern>] <other>, ArgSample, ((match [upper | lower | any] <other>) |,  (ending <file>) |,  (<other> match <pattern>)), [set | clear], ArgSample, [-a, --after  <lines>] 'number of lines after a match', [-b, --before <lines>] 'number of lines before a match', [-cde], match|starting|ending|<other> <pattern> <file>..., Options:, -c confirm actions, -d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?, -e, --exit exit on error, -y, --yield yeild to substitutions, -z, --sleep dormant state when completed]
===========================================================================
com.fidelis.argface.ArgBase.value(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemText[]) one of { 0, 2 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.value(java.lang.String):::EXIT175
this.parser.operand.list[] contains no nulls and has only one value, of length 3
this.parser.operand.list[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.parser.operand.value has only one value
this.parser.operand.value.toString == "file3"
this.parser.operand.count == 3
this.help.problemUsage[] contains no nulls and has only one value, of length 2
this.help.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.help.problemText[] contains no nulls and has only one value, of length 2
this.help.problemText[].getClass().getName() == [java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.nonOptionList[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
com.fidelis.argface.ArgUtil.base.targetOperands[] contains no nulls and has only one value, of length 5
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.targetOptions[] contains no nulls and has only one value, of length 2
com.fidelis.argface.ArgUtil.base.patternMatch has only one value
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.nonOptionList[] contains no nulls and has only one value, of length 5
this.pattern.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.pattern.patternMatch has only one value
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.saveList[] contains no nulls and has only one value, of length 4
this.pattern.prevIndex == 4
this.pattern.failBase has only one value
this.pattern.targetOperands[] contains no nulls and has only one value, of length 5
this.pattern.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.nonOptionList[] contains no nulls and has only one value, of length 5
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.targetOperands[] contains no nulls and has only one value, of length 5
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.targetOptions[] contains no nulls and has only one value, of length 2
this.patternMatch has only one value
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.toString one of { "after", "before" }
return.toString == "5"
size(this.parser.operand.list[]) == 3
size(this.help.problemUsage[]) == 2
size(this.help.problemText[]) == 2
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) == 5
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) == 5
size(this.pattern.nonOptionList[]) == 5
size(this.pattern.targetOperands[]) == 5
size(this.nonOptionList[]) == 5
size(this.targetOperands[]) == 5
===========================================================================
com.fidelis.argface.ArgBase.value(java.lang.String):::EXIT181
===========================================================================
com.fidelis.argface.ArgBase.value(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemText[]) one of { 0, 2 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.valueArray(java.lang.String):::ENTER
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
arg0.toString one of { "<file>", "file" }
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemText[]) one of { 0, 2 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
===========================================================================
com.fidelis.argface.ArgBase.valueArray(java.lang.String):::EXIT202
===========================================================================
com.fidelis.argface.ArgBase.valueArray(java.lang.String):::EXIT
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.argList == orig(this.parser.argList)
this.parser.argList.home == orig(this.parser.argList.home)
this.parser.argList.curr == orig(this.parser.argList.curr)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == orig(this.help.versionText)
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == orig(this.help.aboutText)
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText == orig(this.help.helpText)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.util == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.litList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == orig(this.util.operandSuffix)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == orig(this.util.optionSuffix)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList.home == orig(this.pattern.argList.home)
this.pattern.argList.curr == orig(this.pattern.argList.curr)
this.pattern.nonOptionList == orig(this.pattern.nonOptionList)
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.nonOptionList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.patternMatch == orig(this.pattern.patternMatch)
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.patternList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.saveList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.pattern.targetOperands.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == orig(this.litList.getClass().getName())
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.targetOptions.getClass().getName() == orig(this.targetOptions.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0.toString == orig(arg0.toString)
this.parser.source has only one value
this.parser.programName has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.has == true
this.parser.operand.count one of { 3, 9 }
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.argList has only one value
this.parser.argList.curr has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList has only one value
this.help.argList.curr has only one value
this.help.optionList has only one value
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText has only one value
this.help.versionText has only one value
this.help.aboutText has only one value
this.help.helpText has only one value
this.help.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.help.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.posixFormat has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
this.pattern.argList has only one value
this.pattern.argList.curr has only one value
this.pattern.nonOptionList has only one value
this.pattern.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternWatch == true
this.pattern.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.pattern.prevIndex one of { 3, 4 }
this.pattern.patternMin == 3
this.pattern.patternMax == 999
this.pattern.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands has only one value
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.targetOptions has only one value
this.targetOptions[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.patternWatch == true
this.preParseDone == true
arg0.toString one of { "<file>", "file" }
return.getClass().getName() == java.lang.String[].class
return[].toString one of { [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6], [file.java, file2, file3] }
size(this.parser.operand.list[]) one of { 3, 9 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(this.help.problemUsage[]) one of { 0, 2 }
size(this.help.problemText[]) one of { 0, 2 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) == 2
size(this.pattern.nonOptionList[]) one of { 5, 11 }
size(this.pattern.saveList[]) == 4
size(this.pattern.targetOperands[]) one of { 5, 16 }
size(this.optionList[]) == 11
size(this.nonOptionList[]) one of { 5, 11 }
size(this.targetOperands[]) one of { 5, 16 }
size(this.targetOptions[]) == 2
size(return[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgCommon:::OBJECT
this.reflect == this.finder.reflect
this.reflect.object == this.finder.reflect.object
this.reflect.object.getClass().getName() == this.finder.reflect.object.getClass().getName()
this.reflect.objectClass == this.finder.reflect.objectClass
this.reflect.privateAccess == this.finder.reflect.privateAccess
this.finder.util == com.fidelis.argface.ArgUtil.instance
this has only one value
this.reflect.object.getClass().getName() == com.fidelis.argface.ArgSample.class
this.reflect.privateAccess == false
this.finder.reflect has only one value
this.finder.reflect != null
this.finder.reflect.privateAccess == false
this.finder.util has only one value
this.finder.util != null
com.fidelis.argface.ArgUtil.instance has only one value
com.fidelis.argface.ArgUtil.instance != null
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base != null
com.fidelis.argface.ArgUtil.base.getClass().getName() == com.fidelis.argface.ArgStandard.class
this.finder.util.programName.toString == "ArgSample"
this.finder.util.operandSuffix.toString == "Operand"
this.finder.util.optionSuffix.toString == "Option"
this.finder.operandSuffix.toString == "Operand"
this.finder.optionSuffix.toString == "Option"
this.reflect.object.getClass().getName() != com.fidelis.argface.ArgUtil.base.getClass().getName()
===========================================================================
com.fidelis.argface.ArgCommon.ArgCommon(com.fidelis.argface.ArgReflect):::ENTER
arg0 has only one value
arg0.object == null
arg0.objectClass == null
arg0.privateAccess == false
===========================================================================
com.fidelis.argface.ArgCommon.ArgCommon(com.fidelis.argface.ArgReflect):::EXIT
this.reflect == orig(arg0)
this.reflect.privateAccess == arg0.privateAccess
this.finder.reflect.privateAccess == arg0.privateAccess
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
arg0.object == orig(arg0.object)
arg0.objectClass == orig(arg0.objectClass)
arg0.privateAccess == orig(arg0.privateAccess)
this.reflect has only one value
this.reflect.object == null
this.reflect.objectClass == null
this.finder has only one value
this.finder.util.programName == null
this.finder.operandSuffix == null
this.finder.optionSuffix == null
arg0.object == null
arg0.objectClass == null
arg0.privateAccess == false
===========================================================================
com.fidelis.argface.ArgCommon.getAboutText():::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
===========================================================================
com.fidelis.argface.ArgCommon.getAboutText():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
return has only one value
return.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
===========================================================================
com.fidelis.argface.ArgCommon.getHelpText():::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
===========================================================================
com.fidelis.argface.ArgCommon.getHelpText():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
return has only one value
return.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
===========================================================================
com.fidelis.argface.ArgCommon.getOperandSuffix():::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix == null
this.finder.optionSuffix == null
===========================================================================
com.fidelis.argface.ArgCommon.getOperandSuffix():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix == null
this.finder.optionSuffix == null
return has only one value
return.toString == "Operand"
===========================================================================
com.fidelis.argface.ArgCommon.getOptionSuffix():::ENTER
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.util.operandSuffix has only one value
this.finder.operandSuffix == null
this.finder.optionSuffix == null
===========================================================================
com.fidelis.argface.ArgCommon.getOptionSuffix():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.util.operandSuffix has only one value
this.finder.operandSuffix == null
this.finder.optionSuffix == null
return has only one value
return.toString == "Option"
===========================================================================
com.fidelis.argface.ArgCommon.getPosixFormat():::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
===========================================================================
com.fidelis.argface.ArgCommon.getPosixFormat():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
return == false
===========================================================================
com.fidelis.argface.ArgCommon.getPosixFormat():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgCommon.getSortOptions():::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
===========================================================================
com.fidelis.argface.ArgCommon.getSortOptions():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
return == true
===========================================================================
com.fidelis.argface.ArgCommon.getSortOptions():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgCommon.getSuppressHelp():::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
===========================================================================
com.fidelis.argface.ArgCommon.getSuppressHelp():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
return == false
===========================================================================
com.fidelis.argface.ArgCommon.getSuppressHelp():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgCommon.getVersionText():::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
===========================================================================
com.fidelis.argface.ArgCommon.getVersionText():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
return has only one value
return.toString == "ArgSample version 1.0.0"
===========================================================================
com.fidelis.argface.ArgCommon.postProcess(com.fidelis.argface.ArgOperand):::ENTER
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.util.operandSuffix has only one value
this.finder.util.optionSuffix has only one value
arg0.type one of { 1, 2 }
arg0.fieldName == null
arg0.optional == false
arg0.setter == null
arg0.field == null
arg0.repeatList == false
arg0.list[] == []
arg0.list[].getClass().getName() == []
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == false
arg0.value == null
arg0.count == 0
===========================================================================
com.fidelis.argface.ArgCommon.postProcess(com.fidelis.argface.ArgOperand):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0.type == orig(arg0.type)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.optional == orig(arg0.optional)
arg0.field == orig(arg0.field)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.has == orig(arg0.has)
arg0.value == orig(arg0.value)
arg0.count == orig(arg0.count)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.type one of { 1, 2 }
arg0.optional == false
arg0.field == null
arg0.repeatList == false
arg0.list[] == []
arg0.list[].getClass().getName() == []
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == false
arg0.value == null
arg0.count == 0
return == true
===========================================================================
com.fidelis.argface.ArgCommon.postProcess(com.fidelis.argface.ArgOperand):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgCommon.postProcess(com.fidelis.argface.ArgOption):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.fieldName == null
arg0.field == null
arg0.setter == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgCommon.postProcess(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.field == orig(arg0.field)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argField == orig(arg0.argField)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
return == true
===========================================================================
com.fidelis.argface.ArgCommon.postProcess(com.fidelis.argface.ArgOption):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgCommon.setNonOptions(java.util.List):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0 has only one value
arg0[].getClass().getName() elements == java.lang.String.class
arg0.getClass().getName() == java.util.ArrayList.class
size(arg0[]) one of { 0, 5, 11 }
===========================================================================
com.fidelis.argface.ArgCommon.setNonOptions(java.util.List):::EXIT227
===========================================================================
com.fidelis.argface.ArgCommon.setNonOptions(java.util.List):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0[] == orig(arg0[])
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0[].getClass().getName() elements == java.lang.String.class
===========================================================================
com.fidelis.argface.ArgCommon.setOperandValue(com.fidelis.argface.ArgOperand, java.lang.Object):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
this.finder has only one value
this.finder != null
this.finder.util.programName has only one value
this.finder.util.programName != null
this.finder.operandSuffix has only one value
this.finder.operandSuffix != null
this.finder.optionSuffix has only one value
this.finder.optionSuffix != null
arg0 != null
arg0.type one of { 1, 2 }
arg0.name != null
arg0.fieldName != null
arg0.optional == false
arg0.setter != null
arg0.field == null
arg0.repeatList == false
arg0.list[] elements != null
arg0.list[].getClass().getName() elements == java.lang.String.class
arg0.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == true
arg0.value != null
arg0.count one of { 1, 3, 9 }
arg1 != null
size(arg0.list[]) one of { 3, 9 }
this.reflect.object.getClass().getName() != arg0.list.getClass().getName()
this.reflect.object.getClass().getName() != arg1.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != arg0.list.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != arg1.getClass().getName()
arg1.getClass().getName() in arg0.list[].getClass().getName()
arg0.list.getClass().getName() != arg1.getClass().getName()
===========================================================================
com.fidelis.argface.ArgCommon.setOperandValue(com.fidelis.argface.ArgOperand, java.lang.Object):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0.type == orig(arg0.type)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.optional == orig(arg0.optional)
arg0.setter == orig(arg0.setter)
arg0.field == orig(arg0.field)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.has == orig(arg0.has)
arg0.value == orig(arg0.value)
arg0.value.toString == orig(arg0.value.toString)
arg0.count == orig(arg0.count)
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
this.finder has only one value
this.finder != null
this.finder.util.programName has only one value
this.finder.util.programName != null
this.finder.operandSuffix has only one value
this.finder.operandSuffix != null
this.finder.optionSuffix has only one value
this.finder.optionSuffix != null
arg0.type one of { 1, 2 }
arg0.name != null
arg0.fieldName != null
arg0.optional == false
arg0.setter != null
arg0.field == null
arg0.repeatList == false
arg0.list[] elements != null
arg0.list[].getClass().getName() elements == java.lang.String.class
arg0.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == true
arg0.value != null
arg0.count one of { 1, 3, 9 }
size(arg0.list[]) one of { 3, 9 }
this.reflect.object.getClass().getName() != arg0.list.getClass().getName()
this.reflect.object.getClass().getName() != orig(arg1.getClass().getName())
com.fidelis.argface.ArgUtil.base.getClass().getName() != arg0.list.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != orig(arg1.getClass().getName())
orig(arg1.getClass().getName()) in arg0.list[].getClass().getName()
arg0.list.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
com.fidelis.argface.ArgCommon.setOperandVariables(com.fidelis.argface.ArgOperand):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
this.finder has only one value
this.finder != null
this.finder.util.programName has only one value
this.finder.util.programName != null
this.finder.operandSuffix has only one value
this.finder.operandSuffix != null
this.finder.optionSuffix has only one value
this.finder.optionSuffix != null
arg0 != null
arg0.type one of { 1, 2 }
arg0.name != null
arg0.fieldName != null
arg0.optional == false
arg0.setter != null
arg0.field == null
arg0.repeatList == false
arg0.list[] elements != null
arg0.list[].getClass().getName() elements == java.lang.String.class
arg0.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
arg0.list.getClass().getName() == java.util.ArrayList.class
size(arg0.list[]) one of { 3, 9 }
this.reflect.object.getClass().getName() != arg0.list.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != arg0.list.getClass().getName()
===========================================================================
com.fidelis.argface.ArgCommon.setOperandVariables(com.fidelis.argface.ArgOperand):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0.type == orig(arg0.type)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.optional == orig(arg0.optional)
arg0.setter == orig(arg0.setter)
arg0.field == orig(arg0.field)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.has == orig(arg0.has)
arg0.value == orig(arg0.value)
arg0.value.toString == orig(arg0.value.toString)
arg0.count == orig(arg0.count)
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
this.finder has only one value
this.finder != null
this.finder.util.programName has only one value
this.finder.util.programName != null
this.finder.operandSuffix has only one value
this.finder.operandSuffix != null
this.finder.optionSuffix has only one value
this.finder.optionSuffix != null
arg0.type one of { 1, 2 }
arg0.name != null
arg0.fieldName != null
arg0.optional == false
arg0.setter != null
arg0.field == null
arg0.repeatList == false
arg0.list[] elements != null
arg0.list[].getClass().getName() elements == java.lang.String.class
arg0.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
arg0.list.getClass().getName() == java.util.ArrayList.class
size(arg0.list[]) one of { 3, 9 }
this.reflect.object.getClass().getName() != arg0.list.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != arg0.list.getClass().getName()
===========================================================================
com.fidelis.argface.ArgCommon.setOptionArgVar(com.fidelis.argface.ArgOption):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue.toString == "5"
arg0.argOptional == false
arg0.argRepeat == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgCommon.setOptionArgVar(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argFieldName.toString == orig(arg0.argFieldName.toString)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argValue.toString == orig(arg0.argValue.toString)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue.toString == "5"
arg0.argOptional == false
arg0.argRepeat == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgCommon.setOptionCount(com.fidelis.argface.ArgOption):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue.toString == "5"
arg0.argOptional == false
arg0.argRepeat == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgCommon.setOptionCount(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argFieldName.toString == orig(arg0.argFieldName.toString)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argValue.toString == orig(arg0.argValue.toString)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue.toString == "5"
arg0.argOptional == false
arg0.argRepeat == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgCommon.setOptionVar(com.fidelis.argface.ArgOption):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue.toString == "5"
arg0.argOptional == false
arg0.argRepeat == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgCommon.setOptionVar(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argFieldName.toString == orig(arg0.argFieldName.toString)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argValue.toString == orig(arg0.argValue.toString)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue.toString == "5"
arg0.argOptional == false
arg0.argRepeat == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgCommon.setOptionVariables(com.fidelis.argface.ArgOption):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue.toString == "5"
arg0.argOptional == false
arg0.argRepeat == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgCommon.setOptionVariables(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argFieldName.toString == orig(arg0.argFieldName.toString)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argValue.toString == orig(arg0.argValue.toString)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == true
arg0.count == 1
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue.toString == "5"
arg0.argOptional == false
arg0.argRepeat == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgCommon.setProgramVariables(java.util.List, java.util.List):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
arg0.getClass().getName() == arg1.getClass().getName()
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0 has only one value
arg0[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
arg0.getClass().getName() == java.util.ArrayList.class
arg1 has only one value
arg1[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
size(arg0[]) one of { 0, 5, 16 }
size(arg1[]) one of { 0, 1, 2 }
===========================================================================
com.fidelis.argface.ArgCommon.setProgramVariables(java.util.List, java.util.List):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg0[] == orig(arg0[])
arg1[] == orig(arg1[])
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.finder has only one value
this.finder.util.programName has only one value
this.finder.operandSuffix has only one value
this.finder.optionSuffix has only one value
arg0[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
arg1[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
===========================================================================
com.fidelis.argface.ArgCommon.setReflect(com.fidelis.argface.ArgReflect):::ENTER
this.reflect == null
this.finder == null
arg0 has only one value
arg0.object == null
arg0.objectClass == null
arg0.privateAccess == false
===========================================================================
com.fidelis.argface.ArgCommon.setReflect(com.fidelis.argface.ArgReflect):::EXIT
this.reflect == orig(arg0)
this.reflect.privateAccess == arg0.privateAccess
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
arg0.object == orig(arg0.object)
arg0.objectClass == orig(arg0.objectClass)
arg0.privateAccess == orig(arg0.privateAccess)
this.reflect has only one value
this.reflect.object == null
this.reflect.objectClass == null
this.finder == null
arg0.object == null
arg0.objectClass == null
arg0.privateAccess == false
===========================================================================
com.fidelis.argface.ArgCommon.setRepeat(java.lang.reflect.Method, java.lang.reflect.Field, java.util.List, boolean):::ENTER
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.optionSuffix == this.finder.optionSuffix
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
this.finder has only one value
this.finder != null
this.finder.util.programName has only one value
this.finder.util.programName != null
this.finder.operandSuffix has only one value
this.finder.operandSuffix != null
this.finder.optionSuffix has only one value
this.finder.optionSuffix != null
arg0 has only one value
arg0 != null
arg1 == null
arg2 has only one value
arg2 != null
arg2[] elements != null
arg2[].getClass().getName() elements == java.lang.String.class
arg2[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
arg2.getClass().getName() == java.util.ArrayList.class
arg3 == false
size(arg2[]) one of { 3, 9 }
this.reflect.object.getClass().getName() != arg2.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != arg2.getClass().getName()
===========================================================================
com.fidelis.argface.ArgCommon.setRepeat(java.lang.reflect.Method, java.lang.reflect.Field, java.util.List, boolean):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.finder.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.finder.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.finder.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.finder.reflect.privateAccess)
this.finder == orig(this.finder)
com.fidelis.argface.ArgUtil.instance == orig(this.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
this.finder.util.programName == orig(this.finder.util.programName)
this.finder.util.programName.toString == orig(this.finder.util.programName.toString)
this.finder.util.operandSuffix == this.finder.operandSuffix
this.finder.util.operandSuffix.toString == orig(this.finder.util.operandSuffix.toString)
this.finder.util.optionSuffix == this.finder.optionSuffix
this.finder.util.optionSuffix.toString == orig(this.finder.util.optionSuffix.toString)
this.finder.operandSuffix == orig(this.finder.util.operandSuffix)
this.finder.operandSuffix == orig(this.finder.operandSuffix)
this.finder.operandSuffix.toString == orig(this.finder.operandSuffix.toString)
this.finder.optionSuffix == orig(this.finder.util.optionSuffix)
this.finder.optionSuffix == orig(this.finder.optionSuffix)
this.finder.optionSuffix.toString == orig(this.finder.optionSuffix.toString)
arg2[] == orig(arg2[])
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
this.finder has only one value
this.finder != null
this.finder.util.programName has only one value
this.finder.util.programName != null
this.finder.operandSuffix has only one value
this.finder.operandSuffix != null
this.finder.optionSuffix has only one value
this.finder.optionSuffix != null
arg2[] elements != null
arg2[].getClass().getName() elements == java.lang.String.class
arg2[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.reflect.object.getClass().getName() != orig(arg2.getClass().getName())
com.fidelis.argface.ArgUtil.base.getClass().getName() != orig(arg2.getClass().getName())
===========================================================================
com.fidelis.argface.ArgFind:::OBJECT
this.util == com.fidelis.argface.ArgUtil.instance
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
this has only one value
this.reflect.object.getClass().getName() == com.fidelis.argface.ArgSample.class
this.reflect.privateAccess == false
com.fidelis.argface.ArgUtil.instance has only one value
com.fidelis.argface.ArgUtil.instance != null
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base != null
com.fidelis.argface.ArgUtil.base.getClass().getName() == com.fidelis.argface.ArgStandard.class
com.fidelis.argface.ArgUtil.instance.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.parser has only one value
com.fidelis.argface.ArgUtil.base.parser != null
com.fidelis.argface.ArgUtil.base.help has only one value
com.fidelis.argface.ArgUtil.base.help != null
com.fidelis.argface.ArgUtil.base.util has only one value
com.fidelis.argface.ArgUtil.base.util != null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.pattern != null
com.fidelis.argface.ArgUtil.base.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.base.usageText.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
com.fidelis.argface.ArgUtil.base.versionText.toString == "ArgSample version 1.0.0"
com.fidelis.argface.ArgUtil.base.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.base.allowOverwrite == null
com.fidelis.argface.ArgUtil.base.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.varList[] elements != null
com.fidelis.argface.ArgUtil.base.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.litList[] elements != null
com.fidelis.argface.ArgUtil.base.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.optionList[] elements != null
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.helpOption == false
com.fidelis.argface.ArgUtil.base.versionOption == false
com.fidelis.argface.ArgUtil.base.aboutOption == false
com.fidelis.argface.ArgUtil.base.nonOptionList == null
this.util.programName.toString == "ArgSample"
this.util.operandSuffix.toString == "Operand"
this.util.optionSuffix.toString == "Option"
this.operandSuffix.toString == "Operand"
this.optionSuffix.toString == "Option"
size(com.fidelis.argface.ArgUtil.base.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 9, 10 }
this.reflect.object.getClass().getName() != com.fidelis.argface.ArgUtil.base.getClass().getName()
this.reflect.object.getClass().getName() != com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
===========================================================================
com.fidelis.argface.ArgFind.ArgFind(com.fidelis.argface.ArgReflect):::ENTER
arg0 has only one value
arg0.object == null
arg0.objectClass == null
arg0.privateAccess == false
===========================================================================
com.fidelis.argface.ArgFind.ArgFind(com.fidelis.argface.ArgReflect):::EXIT
this.reflect == orig(arg0)
this.reflect.privateAccess == arg0.privateAccess
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.usageText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
arg0.object == orig(arg0.object)
arg0.objectClass == orig(arg0.objectClass)
arg0.privateAccess == orig(arg0.privateAccess)
this.reflect has only one value
this.reflect.object == null
this.reflect.objectClass == null
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName == null
this.operandSuffix == null
this.optionSuffix == null
arg0.object == null
arg0.objectClass == null
arg0.privateAccess == false
===========================================================================
com.fidelis.argface.ArgFind.findArgSet(com.fidelis.argface.ArgOption, java.lang.String):::ENTER
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters.toString one of { "xyzea", "xyzeab" }
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.findArgSet(com.fidelis.argface.ArgOption, java.lang.String):::EXIT
this.reflect == orig(this.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == this.operandSuffix
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == this.optionSuffix
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
arg1.toString == orig(arg1.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters.toString one of { "xyzea", "xyzeab" }
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.findArgSetter(com.fidelis.argface.ArgOption):::ENTER
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters.toString one of { "xyzea", "xyzeab" }
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.findArgSetter(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == this.operandSuffix
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == this.optionSuffix
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argField == orig(arg0.argField)
arg0.argSetter == return
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters.toString one of { "xyzea", "xyzeab" }
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.findOperandSetter(com.fidelis.argface.ArgOperand):::ENTER
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == arg0.list.getClass().getName()
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.util.operandSuffix has only one value
this.util.optionSuffix has only one value
arg0.type one of { 1, 2 }
arg0.fieldName == null
arg0.optional == false
arg0.setter == null
arg0.field == null
arg0.repeatList == false
arg0.list[] == []
arg0.list[].getClass().getName() == []
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == false
arg0.value == null
arg0.count == 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.findOperandSetter(com.fidelis.argface.ArgOperand):::EXIT
this.reflect == orig(this.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == arg0.list.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == this.operandSuffix
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == this.optionSuffix
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
arg0.type == orig(arg0.type)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.optional == orig(arg0.optional)
arg0.setter == return
arg0.field == orig(arg0.field)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.has == orig(arg0.has)
arg0.value == orig(arg0.value)
arg0.count == orig(arg0.count)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.type one of { 1, 2 }
arg0.optional == false
arg0.field == null
arg0.repeatList == false
arg0.list[] == []
arg0.list[].getClass().getName() == []
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == false
arg0.value == null
arg0.count == 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.findOptionSetter(com.fidelis.argface.ArgOption):::ENTER
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.fieldName == null
arg0.field == null
arg0.setter == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgFind.findOptionSetter(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == this.operandSuffix
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == this.optionSuffix
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.field == orig(arg0.field)
arg0.setter == return
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
===========================================================================
com.fidelis.argface.ArgFind.getAltName(com.fidelis.argface.ArgOption):::ENTER
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
this.util.programName has only one value
this.util.programName != null
this.operandSuffix has only one value
this.operandSuffix != null
this.optionSuffix has only one value
this.optionSuffix != null
arg0 != null
arg0.spec one of { 1, 3 }
arg0.name != null
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help != null
===========================================================================
com.fidelis.argface.ArgFind.getAltName(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == this.operandSuffix
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == this.optionSuffix
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == return
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
return == orig(arg0.altName)
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
this.util.programName has only one value
this.util.programName != null
this.operandSuffix has only one value
this.operandSuffix != null
this.optionSuffix has only one value
this.optionSuffix != null
arg0.spec one of { 1, 3 }
arg0.name != null
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help != null
===========================================================================
com.fidelis.argface.ArgFind.getArgName(com.fidelis.argface.ArgOption):::ENTER
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters.toString one of { "xyzea", "xyzeab" }
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.getArgName(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == this.operandSuffix
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == this.optionSuffix
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == return
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
return == orig(arg0.argName)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters.toString one of { "xyzea", "xyzeab" }
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.spec == 3
arg0.name.toString one of { "a", "b" }
arg0.altName.toString one of { "after", "before" }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help.toString one of { "number of lines after a match", "number of lines before a match" }
return.toString == "lines"
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.getName(com.fidelis.argface.ArgOperand):::ENTER
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == arg0.list.getClass().getName()
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.type one of { 1, 2 }
arg0.fieldName == null
arg0.optional == false
arg0.setter == null
arg0.field == null
arg0.repeatList == false
arg0.list[] == []
arg0.list[].getClass().getName() == []
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == false
arg0.value == null
arg0.count == 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.getName(com.fidelis.argface.ArgOperand):::EXIT
this.reflect == orig(this.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == arg0.list.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == this.operandSuffix
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == this.optionSuffix
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
arg0.type == orig(arg0.type)
arg0.name == return
arg0.name.toString == orig(arg0.name.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.optional == orig(arg0.optional)
arg0.setter == orig(arg0.setter)
arg0.field == orig(arg0.field)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.has == orig(arg0.has)
arg0.value == orig(arg0.value)
arg0.count == orig(arg0.count)
return == orig(arg0.name)
this.reflect has only one value
this.reflect.object has only one value
this.reflect.objectClass has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.type one of { 1, 2 }
arg0.fieldName == null
arg0.optional == false
arg0.setter == null
arg0.field == null
arg0.repeatList == false
arg0.list[] == []
arg0.list[].getClass().getName() == []
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == false
arg0.value == null
arg0.count == 0
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgFind.getName(com.fidelis.argface.ArgOption):::ENTER
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
this.util.programName has only one value
this.util.programName != null
this.operandSuffix has only one value
this.operandSuffix != null
this.optionSuffix has only one value
this.optionSuffix != null
arg0 != null
arg0.spec one of { 1, 3 }
arg0.name != null
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help != null
===========================================================================
com.fidelis.argface.ArgFind.getName(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == this.operandSuffix
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == this.optionSuffix
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
arg0.spec == orig(arg0.spec)
arg0.name == return
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
return == orig(arg0.name)
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
this.util.programName has only one value
this.util.programName != null
this.operandSuffix has only one value
this.operandSuffix != null
this.optionSuffix has only one value
this.optionSuffix != null
arg0.spec one of { 1, 3 }
arg0.fieldName.toString one of { "afterOption", "beforeOption" }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help != null
return != null
===========================================================================
com.fidelis.argface.ArgFind.setReflect(com.fidelis.argface.ArgReflect):::ENTER
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.usageText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.reflect == null
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName == null
this.operandSuffix == null
this.optionSuffix == null
arg0 has only one value
arg0.object == null
arg0.objectClass == null
arg0.privateAccess == false
===========================================================================
com.fidelis.argface.ArgFind.setReflect(com.fidelis.argface.ArgReflect):::EXIT
this.reflect == orig(arg0)
this.reflect.privateAccess == arg0.privateAccess
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.usageText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
arg0.object == orig(arg0.object)
arg0.objectClass == orig(arg0.objectClass)
arg0.privateAccess == orig(arg0.privateAccess)
this.reflect has only one value
this.reflect.object == null
this.reflect.objectClass == null
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName == null
this.operandSuffix == null
this.optionSuffix == null
arg0.object == null
arg0.objectClass == null
arg0.privateAccess == false
===========================================================================
com.fidelis.argface.ArgFind.setup():::ENTER
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
this.util.programName has only one value
this.util.programName != null
this.util.operandSuffix has only one value
this.util.operandSuffix != null
this.util.optionSuffix has only one value
this.util.optionSuffix != null
===========================================================================
com.fidelis.argface.ArgFind.setup():::EXIT
this.reflect == orig(this.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix == this.operandSuffix
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix == this.optionSuffix
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.reflect has only one value
this.reflect != null
this.reflect.object has only one value
this.reflect.object != null
this.reflect.objectClass has only one value
this.reflect.objectClass != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
this.util.programName has only one value
this.util.programName != null
this.operandSuffix has only one value
this.operandSuffix != null
this.optionSuffix has only one value
this.optionSuffix != null
===========================================================================
com.fidelis.argface.ArgHelp:::OBJECT
this.optionList.getClass().getName() == this.problemUsage.getClass().getName()
this.problemUsage.getClass().getName() == this.problemText.getClass().getName()
this has only one value
this.argList.home has only one value
this.argList.home != null
this.argList.home.south has only one value
this.argList.home.south != null
this.argList.home.east has only one value
this.argList.home.east != null
this.argList.home.entry has only one value
this.argList.home.entry != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.repeat == false
this.argList.home.spec == 0
this.argList.curr != null
this.argList.curr.entry != null
this.argList.curr.optional == false
this.argList.curr.spec == 0
this.optionList[] elements != null
this.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.optionList.getClass().getName() == java.util.ArrayList.class
this.suppressHelp == false
this.usageText.toString == "Usage:\n  ArgSample set [-x|--extend | -y|--yield | -z|--sleep] [-e] [[upper | lower |\n            any] <pattern>] <other> \n  ArgSample (match [upper | lower | any] <other>) | (ending <file>) | (<other>\n            match <pattern>) [set | clear] \n  ArgSample [-a|--after <lines>] [-b|--before <lines>] [-c] [-d] [-e] match |\n            starting | ending | <other> <pattern> <file>... \n  ArgSample -h|--help | -v|--version | --about \n"
this.versionText.toString == "ArgSample version 1.0.0"
this.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
this.helpText.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
this.problemUsage has only one value
this.problemUsage != null
this.problemUsage[] elements != null
this.problemUsage[].getClass().getName() elements == com.fidelis.argface.ArgNode.class
this.problemUsage.getClass().getName() == java.util.ArrayList.class
this.problemText has only one value
this.problemText != null
this.problemText[] elements != null
this.problemText[].getClass().getName() elements == java.lang.String.class
size(this.optionList[]) one of { 8, 11 }
this.argList.home.entry.getClass().getName() != this.optionList.getClass().getName()
this.argList.home.entry.getClass().getName() != this.problemUsage.getClass().getName()
this.argList.curr.entry.getClass().getName() != this.optionList.getClass().getName()
this.argList.curr.entry.getClass().getName() != this.problemUsage.getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.ArgHelp():::EXIT
this.versionText == this.aboutText
this.versionText == this.helpText
this.argList == null
this.optionList == null
this.usageText == null
this.versionText == null
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
===========================================================================
com.fidelis.argface.ArgHelp.addProblem(com.fidelis.argface.ArgNode, java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr == arg0
this.argList.curr.south == arg0.south
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.repeat == false
arg0.east.spec == 0
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
size(this.optionList[]) == 11
size(this.problemUsage[]) one of { 0, 1, 2 }
size(this.problemText[]) one of { 0, 1, 2 }
this.optionList.getClass().getName() != arg0.east.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.addProblem(com.fidelis.argface.ArgNode, java.lang.String):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(arg0)
this.argList.curr.south == arg0.south
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemText == orig(this.problemText)
arg0.south == orig(this.argList.curr.south)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(this.argList.curr.east)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(this.argList.curr.entry)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
arg1.toString == orig(arg1.toString)
size(this.problemUsage[])-1 == orig(size(this.problemUsage[]))
size(this.problemText[])-1 == orig(size(this.problemText[]))
this.argList has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
size(this.optionList[]) == 11
size(this.problemUsage[]) one of { 1, 2, 3 }
size(this.problemText[]) one of { 1, 2, 3 }
this.optionList.getClass().getName() != arg0.east.entry.getClass().getName()
this.optionList.getClass().getName() != arg0.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.buildUsageText():::ENTER
this.argList.home == this.argList.curr
this.argList.home.south == this.argList.curr.south
this.argList.home.east == this.argList.curr.east
this.argList.home.entry == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgHelp.buildUsageText():::EXIT310
===========================================================================
com.fidelis.argface.ArgHelp.buildUsageText():::EXIT
this.argList == orig(this.argList)
this.argList.home == this.argList.curr
this.argList.home == orig(this.argList.home)
this.argList.home == orig(this.argList.curr)
this.argList.home.south == this.argList.curr.south
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.south == orig(this.argList.curr.south)
this.argList.home.east == this.argList.curr.east
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.east == orig(this.argList.curr.east)
this.argList.home.entry == this.argList.curr.entry
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry == orig(this.argList.curr.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
this.argList has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
return has only one value
return.toString == "Usage:\n  ArgSample set [-x|--extend | -y|--yield | -z|--sleep] [-e] [[upper | lower |\n            any] <pattern>] <other> \n  ArgSample (match [upper | lower | any] <other>) | (ending <file>) | (<other>\n            match <pattern>) [set | clear] \n  ArgSample [-a|--after <lines>] [-b|--before <lines>] [-c] [-d] [-e] match |\n            starting | ending | <other> <pattern> <file>... \n  ArgSample -h|--help | -v|--version | --about \n"
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgHelp.initProblems():::ENTER
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
size(this.optionList[]) == 11
size(this.problemUsage[]) one of { 0, 2, 3 }
size(this.problemText[]) one of { 0, 2, 3 }
===========================================================================
com.fidelis.argface.ArgHelp.initProblems():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemText == orig(this.problemText)
this.argList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
size(this.optionList[]) == 11
size(this.problemUsage[]) <= orig(size(this.problemUsage[]))
size(this.problemUsage[]) != orig(size(this.problemUsage[]))-1
size(this.problemUsage[])-1 <= orig(size(this.problemUsage[]))-1
size(this.problemText[]) <= orig(size(this.problemText[]))
size(this.problemText[]) != orig(size(this.problemText[]))-1
size(this.problemText[])-1 <= orig(size(this.problemText[]))-1
===========================================================================
com.fidelis.argface.ArgHelp.outputAbout():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.outputAbout():::EXIT274
===========================================================================
com.fidelis.argface.ArgHelp.outputAbout():::EXIT274;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.outputAbout():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
return == true
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.outputAbout():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.outputHelp():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String] }
size(this.optionList[]) == 11
size(this.problemUsage[]) one of { 0, 3 }
size(this.problemText[]) one of { 0, 3 }
===========================================================================
com.fidelis.argface.ArgHelp.outputHelp():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
this.argList has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String] }
return == true
size(this.optionList[]) == 11
size(this.problemUsage[]) one of { 0, 3 }
size(this.problemText[]) one of { 0, 3 }
===========================================================================
com.fidelis.argface.ArgHelp.outputHelp():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.outputUsage():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String] }
size(this.optionList[]) == 11
size(this.problemUsage[]) one of { 0, 3 }
size(this.problemText[]) one of { 0, 3 }
===========================================================================
com.fidelis.argface.ArgHelp.outputUsage():::EXIT109
===========================================================================
com.fidelis.argface.ArgHelp.outputUsage():::EXIT109;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.outputUsage():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
this.argList has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.problemText[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String] }
return == true
size(this.optionList[]) == 11
size(this.problemUsage[]) one of { 0, 3 }
size(this.problemText[]) one of { 0, 3 }
===========================================================================
com.fidelis.argface.ArgHelp.outputUsage():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.outputVersion():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.outputVersion():::EXIT249
===========================================================================
com.fidelis.argface.ArgHelp.outputVersion():::EXIT249;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.outputVersion():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
return == true
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.outputVersion():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.printAbout():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.printAbout():::EXIT261
===========================================================================
com.fidelis.argface.ArgHelp.printAbout():::EXIT261;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.printAbout():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
return == true
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.printAbout():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.printHelp():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.printHelp():::EXIT121
===========================================================================
com.fidelis.argface.ArgHelp.printHelp():::EXIT121;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.printHelp():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
return == true
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.printHelp():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.printVersion():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.printVersion():::EXIT236
===========================================================================
com.fidelis.argface.ArgHelp.printVersion():::EXIT236;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.printVersion():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] contains no nulls and has only one value, of length 3
this.problemUsage[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.problemText[] contains no nulls and has only one value, of length 3
this.problemText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
return == true
size(this.optionList[]) == 11
size(this.problemUsage[]) == 3
size(this.problemText[]) == 3
===========================================================================
com.fidelis.argface.ArgHelp.printVersion():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgHelp.setAboutText(java.lang.String):::ENTER
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.versionText == this.aboutText
this.versionText == this.helpText
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText == null
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0 has only one value
arg0.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.setAboutText(java.lang.String):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.versionText == this.helpText
this.versionText == orig(this.versionText)
this.versionText == orig(this.aboutText)
this.versionText == orig(this.helpText)
this.aboutText == orig(arg0)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
arg0.toString == orig(arg0.toString)
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText == null
this.aboutText has only one value
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.setArgList(com.fidelis.argface.ArgList):::ENTER
this.versionText == this.aboutText
this.versionText == this.helpText
arg0.home.entry.getClass().getName() == arg0.curr.entry.getClass().getName()
this.argList == null
this.optionList == null
this.usageText == null
this.versionText == null
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0 has only one value
arg0.home has only one value
arg0.home.south has only one value
arg0.home.east has only one value
arg0.home.entry has only one value
arg0.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.home.optional == false
arg0.home.repeat == false
arg0.home.spec == 0
arg0.curr has only one value
arg0.curr.south == null
arg0.curr.east has only one value
arg0.curr.entry has only one value
arg0.curr.optional == false
arg0.curr.repeat == false
arg0.curr.spec == 0
===========================================================================
com.fidelis.argface.ArgHelp.setArgList(com.fidelis.argface.ArgList):::EXIT
this.argList == orig(arg0)
this.argList.home == arg0.home
this.argList.home.south == arg0.home.south
this.argList.home.east == arg0.home.east
this.argList.home.entry == arg0.home.entry
this.argList.home.entry.getClass().getName() == arg0.home.entry.getClass().getName()
this.argList.curr == arg0.curr
this.argList.curr.east == arg0.curr.east
this.argList.curr.entry == arg0.curr.entry
this.argList.curr.entry.getClass().getName() == arg0.home.entry.getClass().getName()
this.optionList == orig(this.optionList)
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.versionText == this.aboutText
this.versionText == this.helpText
this.versionText == orig(this.versionText)
this.versionText == orig(this.aboutText)
this.versionText == orig(this.helpText)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemUsage.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.problemUsage.getClass().getName() == orig(this.problemText.getClass().getName())
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
arg0.home == orig(arg0.home)
arg0.home.south == orig(arg0.home.south)
arg0.home.east == orig(arg0.home.east)
arg0.home.entry == orig(arg0.home.entry)
arg0.home.entry.getClass().getName() == arg0.curr.entry.getClass().getName()
arg0.home.entry.getClass().getName() == orig(arg0.home.entry.getClass().getName())
arg0.home.entry.getClass().getName() == orig(arg0.curr.entry.getClass().getName())
arg0.home.optional == orig(arg0.home.optional)
arg0.home.repeat == orig(arg0.home.repeat)
arg0.home.spec == orig(arg0.home.spec)
arg0.curr == orig(arg0.curr)
arg0.curr.south == orig(arg0.curr.south)
arg0.curr.east == orig(arg0.curr.east)
arg0.curr.entry == orig(arg0.curr.entry)
arg0.curr.optional == orig(arg0.curr.optional)
arg0.curr.repeat == orig(arg0.curr.repeat)
arg0.curr.spec == orig(arg0.curr.spec)
this.argList has only one value
this.argList.curr.south == null
this.argList.curr.repeat == false
this.optionList == null
this.usageText == null
this.versionText == null
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0.home has only one value
arg0.home.south has only one value
arg0.home.east has only one value
arg0.home.entry has only one value
arg0.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.home.optional == false
arg0.home.repeat == false
arg0.home.spec == 0
arg0.curr has only one value
arg0.curr.south == null
arg0.curr.east has only one value
arg0.curr.entry has only one value
arg0.curr.optional == false
arg0.curr.repeat == false
arg0.curr.spec == 0
===========================================================================
com.fidelis.argface.ArgHelp.setHelpText(java.lang.String):::ENTER
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText has only one value
this.aboutText has only one value
this.helpText == null
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0 has only one value
arg0.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.setHelpText(java.lang.String):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(arg0)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
arg0.toString == orig(arg0.toString)
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.setOptionList(java.util.List):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.versionText == this.aboutText
this.versionText == this.helpText
this.problemUsage.getClass().getName() == arg0.getClass().getName()
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList == null
this.usageText == null
this.versionText == null
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0 has only one value
arg0[] contains no nulls and has only one value, of length 8
arg0[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
arg0[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
size(arg0[]) == 8
===========================================================================
com.fidelis.argface.ArgHelp.setOptionList(java.util.List):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(arg0)
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.optionList.getClass().getName() == orig(arg0.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.versionText == this.aboutText
this.versionText == this.helpText
this.versionText == orig(this.versionText)
this.versionText == orig(this.aboutText)
this.versionText == orig(this.helpText)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
arg0[] == orig(arg0[])
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText == null
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0[] contains no nulls and has only one value, of length 8
arg0[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
arg0[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgHelp.setSuppressHelp(boolean):::ENTER
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.suppressHelp == arg0
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.setSuppressHelp(boolean):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(arg0)
this.usageText == orig(this.usageText)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.setVersionText(java.lang.String):::ENTER
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.versionText == this.helpText
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText == null
this.aboutText has only one value
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0 has only one value
arg0.toString == "ArgSample version 1.0.0"
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgHelp.setVersionText(java.lang.String):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == this.problemText.getClass().getName()
this.optionList.getClass().getName() == orig(this.optionList.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemUsage.getClass().getName())
this.optionList.getClass().getName() == orig(this.problemText.getClass().getName())
this.suppressHelp == orig(this.suppressHelp)
this.usageText == orig(this.usageText)
this.versionText == orig(arg0)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.versionText)
this.helpText == orig(this.helpText)
this.problemUsage == orig(this.problemUsage)
this.problemUsage[] == orig(this.problemUsage[])
this.problemText == orig(this.problemText)
this.problemText[] == orig(this.problemText[])
arg0.toString == orig(arg0.toString)
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.usageText == null
this.versionText has only one value
this.aboutText has only one value
this.helpText == null
this.problemUsage[] == []
this.problemUsage[].getClass().getName() == []
this.problemText[] == []
this.problemText[].getClass().getName() == []
arg0.toString == "ArgSample version 1.0.0"
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgList:::OBJECT
this.home.south.repeat == this.curr.south.repeat
this.curr.south.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.curr.south.optional == this.curr.optional
this.home.south.entry != null
this.home.south.repeat == false
this.home.south.spec one of { 0, 2, 3 }
this.home.east.entry != null
this.home.east.repeat == false
this.home.east.spec one of { 0, 1 }
this.home.entry != null
this.home.repeat == false
this.home.spec one of { 0, 1 }
this.curr.south.entry != null
this.curr.south.repeat == false
this.curr.south.spec one of { 0, 2, 3 }
this.curr.east.entry != null
this.curr.east.spec one of { 0, 1 }
this.curr.entry != null
this.curr.spec one of { 0, 1, 2 }
this.home.south.spec <= this.curr.south.spec
this.home.east.spec <= this.curr.south.spec
this.home.east.spec <= this.curr.east.spec
this.home.spec <= this.curr.south.spec
this.curr.south.spec >= this.curr.east.spec
this.curr.south.spec >= this.curr.spec
===========================================================================
com.fidelis.argface.ArgList.ArgList():::EXIT
this.home == this.curr
this.home == null
===========================================================================
com.fidelis.argface.ArgList.addEast(java.lang.Object):::ENTER
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.optional == this.curr.south.optional
this.home.south.spec == this.home.east.spec
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.repeat == this.home.repeat
this.home.repeat == this.curr.repeat
this.curr.south.east == this.curr.east
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.curr.south.east == null
this.curr.south.spec one of { 0, 3 }
this.curr.east == null
this.curr.spec one of { 0, 1 }
arg0 != null
this.home.south.spec >= this.home.spec
this.home.south.spec >= this.curr.spec
this.home.east.spec >= this.home.spec
this.home.east.spec <= this.curr.spec
this.home.spec <= this.curr.spec
===========================================================================
com.fidelis.argface.ArgList.addEast(java.lang.Object):::EXIT
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.south.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.south.optional == this.home.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.optional == orig(this.home.east.optional)
this.home.south.optional == orig(this.home.optional)
this.home.south.optional == orig(this.curr.south.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.repeat == orig(this.curr.south.repeat)
this.home.south.spec == orig(this.home.south.spec)
this.home.south.spec == orig(this.home.east.spec)
this.home.east.south == orig(this.home.east.south)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.optional == orig(this.home.east.optional)
this.home.east.repeat == this.home.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.repeat == orig(this.home.repeat)
this.home.east.repeat == orig(this.curr.repeat)
this.home.east.spec == orig(this.home.east.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.optional == orig(this.home.optional)
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.east.repeat)
this.home.spec == orig(this.home.spec)
this.curr == return
this.curr.south == this.curr.east
this.curr.south == orig(this.curr.south.east)
this.curr.south == orig(this.curr.east)
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
return.entry == orig(arg0)
return.entry.getClass().getName() == orig(arg0.getClass().getName())
this.home != null
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.curr.south == null
this.curr.optional == false
this.curr.spec == 0
return != null
return.south == null
return.east == null
return.entry != null
return.optional == false
return.repeat == false
return.spec == 0
this.home.south.spec >= this.home.east.spec
this.home.south.spec >= this.home.spec
this.home.south.spec >= this.curr.spec
this.home.south.spec >= orig(this.home.spec)
this.home.south.spec >= orig(this.curr.spec)
this.home.east.spec >= this.curr.spec
this.home.east.spec <= orig(this.curr.spec)
this.home.spec >= this.curr.spec
this.home.spec <= orig(this.home.east.spec)
this.home.spec <= orig(this.curr.spec)
this.curr.spec <= orig(this.home.east.spec)
this.curr.spec <= orig(this.home.spec)
this.curr.spec <= orig(this.curr.spec)
===========================================================================
com.fidelis.argface.ArgList.addEast(java.lang.Object, boolean):::ENTER
this.home.south == this.home.east.south
this.home.south == this.curr.south
this.home.south == this.curr.east
this.home.east.entry == this.curr.entry
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == arg0.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.optional == arg1
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == arg0.getClass().getName()
this.home.optional == this.curr.optional
this.home.optional == arg1
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.spec
this.home.south == null
this.home.east.south == null
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.home.east.optional == true
this.home.east.spec == 0
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.home.optional == true
this.home.spec == 0
arg0.getClass().getName() == com.fidelis.argface.ArgOption.class
arg1 == true
===========================================================================
com.fidelis.argface.ArgList.addEast(java.lang.Object, boolean):::EXIT
this.home.south == this.home.east.south
this.home.south == this.curr.south
this.home.south == this.curr.east
this.home.south == orig(this.home.east.south)
this.home.east.south == orig(this.home.south)
this.home.east.south == orig(this.home.east.south)
this.home.east.south == orig(this.curr.south)
this.home.east.south == orig(this.curr.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == return.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.east.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.east.optional == return.optional
this.home.east.optional == orig(this.home.east.optional)
this.home.east.optional == orig(this.home.optional)
this.home.east.optional == orig(this.curr.optional)
this.home.east.repeat == this.home.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.repeat == orig(this.home.repeat)
this.home.east.repeat == orig(this.curr.repeat)
this.home.east.spec == this.home.spec
this.home.east.spec == orig(this.home.east.spec)
this.home.east.spec == orig(this.home.spec)
this.home.east.spec == orig(this.curr.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == return.entry.getClass().getName()
this.home.optional == return.optional
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.east.repeat)
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.east.spec)
this.curr == return
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.optional == return.optional
return.entry == orig(arg0)
return.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
return.entry.getClass().getName() == orig(arg0.getClass().getName())
return.optional == orig(this.home.east.optional)
return.optional == orig(arg1)
this.home.south == null
this.home.east.south == null
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.home.east.optional == true
this.home.east.spec == 0
this.home.spec == 0
return.south == null
return.east == null
return.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
return.optional == true
return.repeat == false
return.spec == 0
===========================================================================
com.fidelis.argface.ArgList.addSouth(java.lang.Object):::ENTER
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.south.spec == this.curr.east.spec
this.home.east.south == this.curr.south
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.repeat == this.curr.east.repeat
this.home.east.spec == this.home.spec
this.home.east.spec == this.curr.east.spec
this.home.optional == this.curr.optional
this.home.repeat == this.curr.east.repeat
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.east.spec
this.home.spec == this.curr.spec
this.curr.entry.getClass().getName() == arg0.getClass().getName()
this.home.south.spec == 0
this.home.east.south == null
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.spec == 0
this.curr.south == null
this.curr.east.repeat == false
this.curr.east.spec == 0
arg0 != null
===========================================================================
com.fidelis.argface.ArgList.addSouth(java.lang.Object):::EXIT
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.south.optional == this.home.east.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.south.spec == orig(this.home.south.spec)
this.home.south.spec == orig(this.home.spec)
this.home.south.spec == orig(this.curr.east.spec)
this.home.south.spec == orig(this.curr.spec)
this.home.east == orig(this.home.east)
this.home.east.south == this.curr.south
this.home.east.south == orig(this.home.east.south)
this.home.east.south == orig(this.curr.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.optional == this.home.optional
this.home.east.optional == this.curr.optional
this.home.east.optional == orig(this.home.south.optional)
this.home.east.optional == orig(this.home.east.optional)
this.home.east.optional == orig(this.home.optional)
this.home.east.repeat == this.home.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.repeat == orig(this.home.repeat)
this.home.east.repeat == orig(this.curr.east.repeat)
this.home.east.spec == this.home.spec
this.home.east.spec == orig(this.home.south.spec)
this.home.east.spec == orig(this.home.east.spec)
this.home.east.spec == orig(this.curr.east.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.optional)
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.east.repeat)
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.curr.east.spec)
this.curr == return
this.curr.south == this.curr.east
this.curr.south == orig(this.curr.south)
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
return.entry == orig(arg0)
return.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
return.entry.getClass().getName() == orig(arg0.getClass().getName())
this.home != null
this.home.south.spec == 0
this.home.east.south == null
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.spec == 0
this.curr.south == null
this.curr.optional == false
return != null
return.south == null
return.east == null
return.entry != null
return.optional == false
return.repeat == false
return.spec == 0
===========================================================================
com.fidelis.argface.ArgList.addSouth(java.lang.Object, boolean):::ENTER
this.home.south.south == this.home.east
this.home.south.entry == this.curr.entry
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.spec
this.home.east == this.curr.south
this.home.east == this.curr.east
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == arg0.getClass().getName()
this.home.optional == this.curr.optional
this.home.optional == arg1
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.spec
this has only one value
this.home has only one value
this.home.south.south == null
this.home.south.entry has only one value
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.home.south.optional == true
this.home.south.spec == 0
this.home.east == null
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.home.optional == true
this.home.spec == 0
===========================================================================
com.fidelis.argface.ArgList.addSouth(java.lang.Object, boolean):::EXIT
this.home == orig(this.home)
this.home.south.east == this.home.east
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == return.entry.getClass().getName()
this.home.south.optional == return.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == this.curr.south
this.home.east == this.curr.east
this.home.east == orig(this.home.south.south)
this.home.east == orig(this.home.east)
this.home.east == orig(this.curr.south)
this.home.east == orig(this.curr.east)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == return.entry.getClass().getName()
this.home.optional == return.optional
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.spec)
this.curr == return
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.optional == return.optional
return.entry == orig(arg0)
return.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
return.entry.getClass().getName() == orig(arg0.getClass().getName())
return.optional == orig(this.home.south.optional)
return.optional == orig(this.home.optional)
return.optional == orig(this.curr.optional)
return.optional == orig(arg1)
this.home has only one value
this.home.south has only one value
this.home.south.entry has only one value
this.home.east == null
this.home.entry has only one value
this.home.spec == 0
return.south == null
return.east == null
return.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
return.optional == true
return.repeat == false
return.spec == 0
===========================================================================
com.fidelis.argface.ArgList.appendSouth(java.lang.Object):::ENTER
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.optional == this.curr.south.optional
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.south.spec == this.curr.south.spec
this.home.east.south == this.curr.south.east
this.home.east.south == this.curr.east
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.optional == this.curr.south.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.east.spec == this.curr.south.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == arg0.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.curr.south.east == this.curr.east
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.optional == false
this.home.south.spec == 0
this.home.east.south == null
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr.south.east == null
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east == null
===========================================================================
com.fidelis.argface.ArgList.appendSouth(java.lang.Object):::EXIT
this.home == orig(this.home)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == return.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.repeat == orig(this.curr.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == orig(this.home.east)
this.home.east.south == this.curr.east
this.home.east.south == orig(this.home.east.south)
this.home.east.south == orig(this.curr.south.east)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == return.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.home.east.optional == this.home.optional
this.home.east.optional == orig(this.home.south.optional)
this.home.east.optional == orig(this.home.east.optional)
this.home.east.optional == orig(this.curr.south.optional)
this.home.east.repeat == this.home.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.spec == this.home.spec
this.home.east.spec == orig(this.home.south.spec)
this.home.east.spec == orig(this.home.east.spec)
this.home.east.spec == orig(this.curr.south.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == return.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.south.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.south.spec)
this.home.spec == orig(this.curr.spec)
this.curr == return
this.curr.south == return.south
this.curr.south.south == return.south.south
this.curr.south.east == this.curr.east
this.curr.south.entry == return.south.entry
this.curr.south.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.east == orig(this.curr.south.east)
this.curr.east == orig(this.curr.east)
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
return == orig(this.curr)
return.south.entry == orig(this.curr.south.entry)
return.south.entry.getClass().getName() == return.entry.getClass().getName()
return.entry == orig(this.curr.entry)
return.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
return.entry.getClass().getName() == orig(arg0.getClass().getName())
this.home.east.south == null
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.optional == false
this.home.spec == 0
this.curr.east == null
return.south.east == null
return.south.optional == false
return.south.repeat == false
return.south.spec == 0
return.east == null
return.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return.optional == false
return.repeat == false
return.spec == 0
===========================================================================
com.fidelis.argface.ArgList.appendSouth(java.lang.Object, boolean):::ENTER
this.home == this.curr
this.home.south == this.curr.south
this.home.south.south == this.home.east
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.spec
this.home.east == this.curr.east
this.home.entry == this.curr.entry
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == arg0.getClass().getName()
this.home.optional == this.curr.optional
this.home.optional == arg1
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.spec
this has only one value
this.home has only one value
this.home.south.south == null
this.home.south.entry has only one value
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.home.south.optional == true
this.home.south.spec == 0
this.home.east == null
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.home.optional == true
this.home.spec == 0
===========================================================================
com.fidelis.argface.ArgList.appendSouth(java.lang.Object, boolean):::EXIT
this.home == return
this.home.south == return.south
this.home.south.south == return.south.south
this.home.south.east == this.home.east
this.home.south.entry == return.south.entry
this.home.south.entry.getClass().getName() == return.entry.getClass().getName()
this.home.south.optional == return.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == this.curr.south.east
this.home.east == this.curr.east
this.home.east == orig(this.home.south.south)
this.home.east == orig(this.home.east)
this.home.east == orig(this.curr.east)
this.home.entry == return.entry
this.home.entry.getClass().getName() == return.entry.getClass().getName()
this.home.optional == return.optional
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.spec)
this.curr == return
this.curr.south == return.south
this.curr.south.south == return.south.south
this.curr.south.entry == return.south.entry
this.curr.south.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.south.optional == return.optional
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.optional == return.optional
return == orig(this.home)
return == orig(this.curr)
return.south.entry == orig(this.home.south.entry)
return.south.entry.getClass().getName() == return.entry.getClass().getName()
return.south.optional == return.optional
return.entry == orig(this.home.entry)
return.entry == orig(this.curr.entry)
return.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
return.entry.getClass().getName() == orig(arg0.getClass().getName())
return.optional == orig(this.home.south.optional)
return.optional == orig(this.home.optional)
return.optional == orig(this.curr.optional)
return.optional == orig(arg1)
this.home.east == null
this.home.spec == 0
return has only one value
return.south has only one value
return.south.east == null
return.south.entry has only one value
return.south.repeat == false
return.south.spec == 0
return.east == null
return.entry has only one value
return.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
return.optional == true
return.repeat == false
return.spec == 0
===========================================================================
com.fidelis.argface.ArgList.baseCount():::ENTER
this.home.south.south == this.curr.south.south
this.home.south.east == this.home.east.south
this.home.south.east == this.home.east.east
this.home.south.east == this.curr.south.east
this.home.south.east == this.curr.east
this.home.south.entry == this.curr.south.entry
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.optional == this.curr.south.optional
this.home.south.spec == this.curr.south.spec
this.home.east == this.curr.south.east
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.repeat == this.home.repeat
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.repeat == this.curr.repeat
this.curr.south.east == this.curr.east
this.home != null
this.home.south.east == null
this.curr != null
this.curr.south.east == null
this.curr.south.spec one of { 0, 2 }
this.curr.east == null
this.curr.spec == 0
this.home.spec >= this.curr.spec
===========================================================================
com.fidelis.argface.ArgList.baseCount():::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == this.curr.south.south
this.home.south.south == orig(this.home.south.south)
this.home.south.east == this.home.east.south
this.home.south.east == this.home.east.east
this.home.south.east == this.curr.south.east
this.home.south.east == this.curr.east
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == this.curr.south.entry
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.optional == this.home.optional
this.home.south.optional == this.curr.south.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.curr.south.spec
this.home.south.spec == orig(this.home.south.spec)
this.home.east == this.curr.south.east
this.home.east == orig(this.home.east)
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.optional == orig(this.home.east.optional)
this.home.east.repeat == this.home.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.spec == orig(this.home.east.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.optional == this.curr.south.optional
this.home.optional == orig(this.home.optional)
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == orig(this.home.spec)
this.curr == orig(this.curr)
this.curr.south == orig(this.curr.south)
this.curr.south.south == orig(this.curr.south.south)
this.curr.south.east == this.curr.east
this.curr.south.east == orig(this.curr.south.east)
this.curr.south.entry == orig(this.curr.south.entry)
this.curr.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.curr.south.optional == orig(this.curr.south.optional)
this.curr.south.repeat == orig(this.curr.south.repeat)
this.curr.south.spec == orig(this.curr.south.spec)
this.curr.east == orig(this.curr.east)
this.curr.entry == orig(this.curr.entry)
this.curr.optional == orig(this.curr.optional)
this.curr.spec == orig(this.curr.spec)
this.home != null
this.home.south.east == null
this.curr != null
this.curr.south.east == null
this.curr.south.spec one of { 0, 2 }
this.curr.east == null
this.curr.spec == 0
return >= 0
this.home.spec >= this.curr.spec
===========================================================================
com.fidelis.argface.ArgList.brief():::ENTER
this.home.south.east == this.curr.south
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.east == this.curr
this.home.east.south == this.curr.south
this.home.east.east == this.curr.south
this.home.east.entry == this.curr.entry
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.curr.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.curr.spec
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.repeat == this.curr.repeat
this.curr.south == this.curr.east
this has only one value
this.home has only one value
this.home.south has only one value
this.home.south.south has only one value
this.home.south.entry has only one value
this.home.south.spec == 3
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == true
this.home.spec == 1
this.curr has only one value
this.curr.south == null
this.curr.entry has only one value
this.curr.optional == false
this.curr.spec == 0
===========================================================================
com.fidelis.argface.ArgList.brief():::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == this.curr.south
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == orig(this.home.south.spec)
this.home.east == this.curr
this.home.east.south == this.curr.south
this.home.east.east == this.curr.south
this.home.east.entry == this.curr.entry
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.curr.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.curr.spec
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.optional)
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.east.repeat)
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == orig(this.home.spec)
this.curr == orig(this.home.east)
this.curr == orig(this.curr)
this.curr.south == this.curr.east
this.curr.south == orig(this.home.south.east)
this.curr.south == orig(this.home.east.south)
this.curr.south == orig(this.home.east.east)
this.curr.south == orig(this.curr.south)
this.curr.south == orig(this.curr.east)
this.curr.entry == orig(this.home.east.entry)
this.curr.entry == orig(this.curr.entry)
this.curr.optional == orig(this.home.east.optional)
this.curr.optional == orig(this.curr.optional)
this.curr.spec == orig(this.home.east.spec)
this.curr.spec == orig(this.curr.spec)
this.home has only one value
this.home.south has only one value
this.home.south.south has only one value
this.home.south.entry has only one value
this.home.south.spec == 3
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == true
this.home.spec == 1
this.curr has only one value
this.curr.south == null
this.curr.entry has only one value
this.curr.optional == false
this.curr.spec == 0
return has only one value
return.toString == "ArgList: upper pattern "
===========================================================================
com.fidelis.argface.ArgList.buildGroup(java.lang.StringBuilder, int, com.fidelis.argface.ArgList, int):::ENTER
this.home.south.south == this.curr.south.south
this.home.south.east == this.curr.south.east
this.home.south.entry == this.curr.south.entry
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.spec
this.home.east.south == this.curr.east.south
this.home.east.east == this.curr.east.east
this.home.east.entry == this.curr.east.entry
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == arg2.home.entry.getClass().getName()
this.home.entry.getClass().getName() == arg2.curr.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.repeat == this.curr.east.repeat
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.curr.south.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.curr.south.optional == this.curr.east.optional
this.curr.south.spec == this.curr.east.spec
this.curr.east.repeat == this.curr.repeat
arg2.home.repeat == arg2.curr.repeat
this has only one value
this.home has only one value
this.home != null
this.home.south has only one value
this.home.south != null
this.home.south.south has only one value
this.home.south.south != null
this.home.south.east has only one value
this.home.south.east != null
this.home.south.entry has only one value
this.home.east has only one value
this.home.east != null
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr != null
this.curr.south.south has only one value
this.curr.south.south != null
this.curr.south.east has only one value
this.curr.south.east != null
this.curr.south.entry has only one value
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east.south == null
this.curr.east.east has only one value
this.curr.east.east != null
this.curr.east.entry has only one value
this.curr.east.repeat == false
arg0 != null
arg1 one of { 0, 7, 123 }
arg2 != null
arg2.home != null
arg2.home.east != null
arg2.home.entry != null
arg2.home.repeat == false
arg2.home.spec one of { 0, 1 }
arg2.curr != null
arg2.curr.entry != null
arg2.curr.spec one of { 0, 1 }
arg3 one of { 10, 12 }
arg1 != arg3
arg2.home.spec >= arg2.curr.spec
===========================================================================
com.fidelis.argface.ArgList.buildGroup(java.lang.StringBuilder, int, com.fidelis.argface.ArgList, int):::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == this.curr.south.south
this.home.south.south == orig(this.home.south.south)
this.home.south.east == this.curr.south.east
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == this.curr.south.entry
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == orig(this.home.east)
this.home.east.south == this.curr.east.south
this.home.east.south == orig(this.home.east.south)
this.home.east.east == this.curr.east.east
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == this.curr.east.entry
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == arg2.home.entry.getClass().getName()
this.home.entry.getClass().getName() == arg2.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(arg2.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(arg2.curr.entry.getClass().getName())
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.east.optional)
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == this.curr.east.repeat
this.home.repeat == orig(this.home.east.repeat)
this.home.repeat == orig(this.home.repeat)
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.east.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.spec)
this.curr == orig(this.curr)
this.curr.south == orig(this.curr.south)
this.curr.south.south == orig(this.curr.south.south)
this.curr.south.east == orig(this.curr.south.east)
this.curr.south.entry == orig(this.curr.south.entry)
this.curr.south.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.curr.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.curr.south.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
this.curr.south.optional == this.curr.east.optional
this.curr.south.optional == orig(this.curr.south.optional)
this.curr.south.optional == orig(this.curr.east.optional)
this.curr.south.repeat == orig(this.curr.south.repeat)
this.curr.south.spec == this.curr.east.spec
this.curr.south.spec == orig(this.curr.south.spec)
this.curr.south.spec == orig(this.curr.east.spec)
this.curr.east == orig(this.curr.east)
this.curr.east.south == orig(this.curr.east.south)
this.curr.east.east == orig(this.curr.east.east)
this.curr.east.entry == orig(this.curr.east.entry)
this.curr.east.repeat == this.curr.repeat
this.curr.east.repeat == orig(this.curr.east.repeat)
this.curr.entry == orig(this.curr.entry)
this.curr.repeat == orig(this.curr.repeat)
arg2.home == orig(arg2.home)
arg2.home.south == orig(arg2.home.south)
arg2.home.east == orig(arg2.home.east)
arg2.home.entry == orig(arg2.home.entry)
arg2.home.optional == orig(arg2.home.optional)
arg2.home.repeat == arg2.curr.repeat
arg2.home.repeat == orig(arg2.home.repeat)
arg2.home.repeat == orig(arg2.curr.repeat)
arg2.home.spec == orig(arg2.home.spec)
arg2.curr == orig(arg2.curr)
arg2.curr.south == orig(arg2.curr.south)
arg2.curr.east == orig(arg2.curr.east)
arg2.curr.entry == orig(arg2.curr.entry)
arg2.curr.optional == orig(arg2.curr.optional)
arg2.curr.spec == orig(arg2.curr.spec)
this.home has only one value
this.home != null
this.home.south has only one value
this.home.south != null
this.home.south.south has only one value
this.home.south.south != null
this.home.south.east has only one value
this.home.south.east != null
this.home.south.entry has only one value
this.home.east has only one value
this.home.east != null
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr != null
this.curr.south.south has only one value
this.curr.south.south != null
this.curr.south.east has only one value
this.curr.south.east != null
this.curr.south.entry has only one value
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east.south == null
this.curr.east.east has only one value
this.curr.east.east != null
this.curr.east.entry has only one value
this.curr.east.repeat == false
arg2.home != null
arg2.home.east != null
arg2.home.entry != null
arg2.home.repeat == false
arg2.home.spec one of { 0, 1 }
arg2.curr != null
arg2.curr.entry != null
arg2.curr.spec one of { 0, 1 }
return >= 0
arg2.home.spec >= arg2.curr.spec
return >= orig(arg1)
return != orig(arg3)
===========================================================================
com.fidelis.argface.ArgList.buildList(java.lang.StringBuilder, int, com.fidelis.argface.ArgNode, int):::ENTER
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.spec
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.repeat == this.curr.east.repeat
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.curr.south.spec == this.curr.east.spec
this.curr.east.repeat == this.curr.repeat
arg2.south.entry.getClass().getName() == arg2.entry.getClass().getName()
this has only one value
this.home has only one value
this.home != null
this.home.south has only one value
this.home.south != null
this.home.south.south has only one value
this.home.south.south != null
this.home.south.east has only one value
this.home.south.east != null
this.home.south.entry has only one value
this.home.east has only one value
this.home.east != null
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr != null
this.curr.south.east != null
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east.east != null
this.curr.east.repeat == false
arg0 != null
arg1 >= 0
arg2 != null
arg2.south.east == null
arg2.south.entry != null
arg2.south.repeat == false
arg2.south.spec one of { 0, 2, 3 }
arg2.east.entry != null
arg2.east.repeat == false
arg2.east.spec one of { 0, 1 }
arg2.entry != null
arg2.repeat == false
arg2.spec >= 0
arg3 one of { 10, 12 }
arg1 != arg3
===========================================================================
com.fidelis.argface.ArgList.buildList(java.lang.StringBuilder, int, com.fidelis.argface.ArgNode, int):::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == orig(this.home.east)
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.east.optional)
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == this.curr.east.repeat
this.home.repeat == orig(this.home.east.repeat)
this.home.repeat == orig(this.home.repeat)
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.east.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.spec)
this.curr == orig(this.curr)
this.curr.south == orig(this.curr.south)
this.curr.south.south == orig(this.curr.south.south)
this.curr.south.east == orig(this.curr.south.east)
this.curr.south.entry == orig(this.curr.south.entry)
this.curr.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.curr.south.optional == orig(this.curr.south.optional)
this.curr.south.repeat == orig(this.curr.south.repeat)
this.curr.south.spec == this.curr.east.spec
this.curr.south.spec == orig(this.curr.south.spec)
this.curr.south.spec == orig(this.curr.east.spec)
this.curr.east == orig(this.curr.east)
this.curr.east.south == orig(this.curr.east.south)
this.curr.east.east == orig(this.curr.east.east)
this.curr.east.entry == orig(this.curr.east.entry)
this.curr.east.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
this.curr.east.optional == orig(this.curr.east.optional)
this.curr.east.repeat == this.curr.repeat
this.curr.east.repeat == orig(this.curr.east.repeat)
this.curr.entry == orig(this.curr.entry)
this.curr.repeat == orig(this.curr.repeat)
this.home has only one value
this.home != null
this.home.south has only one value
this.home.south != null
this.home.south.south has only one value
this.home.south.south != null
this.home.south.east has only one value
this.home.south.east != null
this.home.south.entry has only one value
this.home.east has only one value
this.home.east != null
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr != null
this.curr.south.east != null
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east.east != null
this.curr.east.repeat == false
return >= 0
return >= orig(arg1)
return != orig(arg3)
===========================================================================
com.fidelis.argface.ArgList.buildUsage():::ENTER
this.home.south.south == this.curr.south.south
this.home.south.east == this.curr.south.east
this.home.south.entry == this.curr.south.entry
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.spec
this.home.east.south == this.curr.east.south
this.home.east.east == this.curr.east.east
this.home.east.entry == this.curr.east.entry
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.repeat == this.curr.east.repeat
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.curr.south.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.curr.south.optional == this.curr.east.optional
this.curr.south.spec == this.curr.east.spec
this.curr.east.repeat == this.curr.repeat
this has only one value
this.home has only one value
this.home.south has only one value
this.home.south.south has only one value
this.home.south.east has only one value
this.home.south.entry has only one value
this.home.east has only one value
this.home.east.south == null
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr.south.south has only one value
this.curr.south.east has only one value
this.curr.south.entry has only one value
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east.south == null
this.curr.east.east has only one value
this.curr.east.entry has only one value
this.curr.east.repeat == false
===========================================================================
com.fidelis.argface.ArgList.buildUsage():::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == this.curr.south.south
this.home.south.south == orig(this.home.south.south)
this.home.south.east == this.curr.south.east
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == this.curr.south.entry
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == orig(this.home.east)
this.home.east.south == this.curr.east.south
this.home.east.south == orig(this.home.east.south)
this.home.east.east == this.curr.east.east
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == this.curr.east.entry
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.east.optional)
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == this.curr.east.repeat
this.home.repeat == orig(this.home.east.repeat)
this.home.repeat == orig(this.home.repeat)
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.east.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.spec)
this.curr == orig(this.curr)
this.curr.south == orig(this.curr.south)
this.curr.south.south == orig(this.curr.south.south)
this.curr.south.east == orig(this.curr.south.east)
this.curr.south.entry == orig(this.curr.south.entry)
this.curr.south.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.curr.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.curr.south.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
this.curr.south.optional == this.curr.east.optional
this.curr.south.optional == orig(this.curr.south.optional)
this.curr.south.optional == orig(this.curr.east.optional)
this.curr.south.repeat == orig(this.curr.south.repeat)
this.curr.south.spec == this.curr.east.spec
this.curr.south.spec == orig(this.curr.south.spec)
this.curr.south.spec == orig(this.curr.east.spec)
this.curr.east == orig(this.curr.east)
this.curr.east.south == orig(this.curr.east.south)
this.curr.east.east == orig(this.curr.east.east)
this.curr.east.entry == orig(this.curr.east.entry)
this.curr.east.repeat == this.curr.repeat
this.curr.east.repeat == orig(this.curr.east.repeat)
this.curr.entry == orig(this.curr.entry)
this.curr.repeat == orig(this.curr.repeat)
this.home has only one value
this.home.south has only one value
this.home.south.south has only one value
this.home.south.east has only one value
this.home.south.entry has only one value
this.home.east has only one value
this.home.east.south == null
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr.south.south has only one value
this.curr.south.east has only one value
this.curr.south.entry has only one value
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east.south == null
this.curr.east.east has only one value
this.curr.east.entry has only one value
this.curr.east.repeat == false
return.toString one of { "Usage:\n  ArgSample set [-x|--extend | -y|--yield | -z|--sleep] [-e] [[upper | lower |\n            any] <pattern>] <other> \n  ArgSample (match [upper | lower | any] <other>) | (ending <file>) | (<other>\n            match <pattern>) [set | clear] \n  ArgSample [-a|--after <lines>] [-b|--before <lines>] [-c] [-d] [-e] match |\n            starting | ending | <other> <pattern> <file>... \n", "Usage:\n  ArgSample set [-x|--extend | -y|--yield | -z|--sleep] [-e] [[upper | lower |\n            any] <pattern>] <other> \n  ArgSample (match [upper | lower | any] <other>) | (ending <file>) | (<other>\n            match <pattern>) [set | clear] \n  ArgSample [-a|--after <lines>] [-b|--before <lines>] [-c] [-d] [-e] match |\n            starting | ending | <other> <pattern> <file>... \n  ArgSample -h|--help | -v|--version | --about \n" }
===========================================================================
com.fidelis.argface.ArgList.buildUsageSpec(com.fidelis.argface.ArgNode):::ENTER
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.spec
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.repeat == this.curr.east.repeat
this.home.repeat == this.curr.repeat
this.home.repeat == arg0.east.repeat
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.east.spec
this.home.spec == this.curr.spec
this has only one value
this.home has only one value
this.home != null
this.home.south has only one value
this.home.south != null
this.home.south.south has only one value
this.home.south.south != null
this.home.south.east has only one value
this.home.south.east != null
this.home.south.entry has only one value
this.home.east has only one value
this.home.east != null
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr != null
this.curr.south != null
this.curr.south.east != null
this.curr.east != null
this.curr.east.east != null
arg0 != null
arg0.south.east != null
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east != null
arg0.east.entry != null
arg0.east.spec == 0
arg0.entry != null
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
===========================================================================
com.fidelis.argface.ArgList.buildUsageSpec(com.fidelis.argface.ArgNode):::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == arg0.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.repeat == orig(this.curr.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == orig(this.home.east)
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == arg0.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.east.optional)
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.south.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == this.curr.east.repeat
this.home.repeat == this.curr.repeat
this.home.repeat == arg0.east.repeat
this.home.repeat == orig(this.home.east.repeat)
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.east.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.repeat == orig(arg0.east.repeat)
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.east.spec
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.east.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.south.spec)
this.home.spec == orig(this.curr.east.spec)
this.home.spec == orig(this.curr.spec)
this.curr == orig(this.curr)
this.curr.south == orig(this.curr.south)
this.curr.south.south == orig(this.curr.south.south)
this.curr.south.east == orig(this.curr.south.east)
this.curr.south.entry == orig(this.curr.south.entry)
this.curr.south.entry.getClass().getName() == arg0.entry.getClass().getName()
this.curr.east == orig(this.curr.east)
this.curr.east.south == orig(this.curr.east.south)
this.curr.east.east == orig(this.curr.east.east)
this.curr.east.entry == orig(this.curr.east.entry)
this.curr.east.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
this.curr.east.optional == orig(this.curr.east.optional)
this.curr.entry == orig(this.curr.entry)
this.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
this.home has only one value
this.home != null
this.home.south has only one value
this.home.south != null
this.home.south.south has only one value
this.home.south.south != null
this.home.south.east has only one value
this.home.south.east != null
this.home.south.entry has only one value
this.home.east has only one value
this.home.east != null
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.entry has only one value
this.home.optional == false
this.home.spec == 0
this.curr != null
this.curr.south != null
this.curr.south.east != null
this.curr.east != null
this.curr.east.east != null
arg0.south.east != null
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east != null
arg0.east.entry != null
arg0.east.spec == 0
arg0.entry != null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
return != null
===========================================================================
com.fidelis.argface.ArgList.endEast():::ENTER
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.curr.east.spec
this.home.east.south == this.curr.east.south
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.repeat == this.home.repeat
this.home.east.repeat == this.curr.east.repeat
this.home.east.spec == this.curr.east.spec
this.home.repeat == this.curr.east.repeat
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.east.spec
this.curr.south == this.curr.east.south
this.curr.south.east == this.curr.east
this.curr.east.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.curr.east.optional == this.curr.optional
this.curr.east.spec == this.curr.spec
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.east == null
this.curr.south.spec one of { 2, 3 }
this.curr.east.south == null
this.curr.east.east has only one value
this.curr.east.entry has only one value
this.curr.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.curr.east.optional == true
this.curr.east.repeat == false
this.curr.east.spec == 0
this.curr.spec one of { 0, 1 }
this.home.east.spec >= this.home.spec
this.home.east.spec <= this.curr.spec
this.home.spec <= this.curr.spec
===========================================================================
com.fidelis.argface.ArgList.endEast():::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.east.spec
this.home.south.spec == orig(this.home.south.spec)
this.home.south.spec == orig(this.curr.east.spec)
this.home.east == orig(this.home.east)
this.home.east.south == orig(this.home.east.south)
this.home.east.south == orig(this.curr.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.optional == orig(this.home.east.optional)
this.home.east.repeat == return.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.repeat == orig(this.curr.east.repeat)
this.home.east.spec == orig(this.home.east.spec)
this.home.east.spec == orig(this.curr.east.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.optional == orig(this.home.optional)
this.home.repeat == return.repeat
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.east.spec)
this.curr == return
this.curr.south == return.south
this.curr.south.south == return.south.south
this.curr.south.east == this.curr.east
this.curr.south.east == orig(this.curr.south.east)
this.curr.south.east == orig(this.curr.east)
this.curr.south.entry == return.south.entry
this.curr.south.entry.getClass().getName() == return.south.entry.getClass().getName()
this.curr.south.optional == return.south.optional
this.curr.south.repeat == orig(this.curr.south.repeat)
this.curr.south.spec == return.south.spec
this.curr.east == orig(this.curr.east.south)
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.optional == return.optional
this.curr.repeat == return.repeat
this.curr.spec == return.spec
return == orig(this.curr.east.east)
return.south == orig(this.curr.south)
return.south == orig(this.curr.east.south)
return.south.south == orig(this.curr.south.south)
return.south.entry == orig(this.curr.south.entry)
return.south.entry.getClass().getName() == return.entry.getClass().getName()
return.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
return.south.optional == return.optional
return.south.optional == orig(this.curr.south.optional)
return.south.spec == orig(this.curr.south.spec)
return.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
return.optional == orig(this.curr.east.optional)
return.optional == orig(this.curr.optional)
return.repeat == orig(this.home.repeat)
return.repeat == orig(this.curr.east.repeat)
return.repeat == orig(this.curr.repeat)
return.spec == orig(this.curr.east.spec)
return.spec == orig(this.curr.spec)
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.east == null
this.curr.east == null
return.south.east == null
return.south.repeat == false
return.south.spec one of { 2, 3 }
return.east == null
return.repeat == false
return.spec one of { 0, 1 }
this.home.east.spec >= this.home.spec
this.home.east.spec <= return.spec
this.home.spec <= return.spec
===========================================================================
com.fidelis.argface.ArgList.endSouth():::ENTER
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.optional == this.curr.south.optional
this.home.south.optional == this.curr.east.optional
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.south.spec == this.curr.south.spec
this.home.south.spec == this.curr.east.spec
this.home.east.south == this.curr.east.south
this.home.east.east == this.curr.east.east
this.home.east.entry == this.curr.east.entry
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.east.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.optional == this.curr.south.optional
this.home.east.optional == this.curr.east.optional
this.home.east.repeat == this.home.repeat
this.home.east.repeat == this.curr.east.repeat
this.home.east.spec == this.home.spec
this.home.east.spec == this.curr.south.spec
this.home.east.spec == this.curr.east.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.east.optional
this.home.optional == this.curr.optional
this.home.repeat == this.curr.east.repeat
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.east.spec
this.home.spec == this.curr.spec
this.curr.south.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.curr.south.optional == this.curr.east.optional
this.curr.south.spec == this.curr.east.spec
this.home.south.spec == 0
this.home.east.south == null
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.spec == 0
this.curr.south.spec == 0
this.curr.east.south == null
this.curr.east.east has only one value
this.curr.east.entry has only one value
this.curr.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.east.optional == false
this.curr.east.repeat == false
this.curr.east.spec == 0
===========================================================================
com.fidelis.argface.ArgList.endSouth():::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == return.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.home.south.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
this.home.south.optional == this.home.east.optional
this.home.south.optional == return.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.optional == orig(this.curr.south.optional)
this.home.south.optional == orig(this.curr.east.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.repeat == orig(this.curr.south.repeat)
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.south.spec == return.east.spec
this.home.south.spec == orig(this.home.south.spec)
this.home.south.spec == orig(this.curr.south.spec)
this.home.east == orig(this.home.east)
this.home.east.south == this.curr.south
this.home.east.south == orig(this.home.east.south)
this.home.east.south == orig(this.curr.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.east == orig(this.curr.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry == orig(this.curr.east.entry)
this.home.east.entry.getClass().getName() == return.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.home.east.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
this.home.east.optional == return.optional
this.home.east.optional == orig(this.home.east.optional)
this.home.east.optional == orig(this.curr.south.optional)
this.home.east.optional == orig(this.curr.east.optional)
this.home.east.repeat == this.home.repeat
this.home.east.repeat == return.east.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.spec == this.home.spec
this.home.east.spec == return.east.spec
this.home.east.spec == orig(this.home.east.spec)
this.home.east.spec == orig(this.curr.south.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == return.entry.getClass().getName()
this.home.optional == return.optional
this.home.repeat == this.curr.repeat
this.home.repeat == return.east.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == this.curr.spec
this.home.spec == return.east.spec
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.south.spec)
this.home.spec == orig(this.curr.spec)
this.curr == return
this.curr.south == orig(this.curr.east.south)
this.curr.east == return.east
this.curr.east.south == return.east.south
this.curr.east.east == return.east.east
this.curr.east.entry == return.east.entry
this.curr.east.entry.getClass().getName() == return.east.entry.getClass().getName()
this.curr.east.optional == return.east.optional
this.curr.east.repeat == return.east.repeat
this.curr.east.spec == return.east.spec
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.optional == return.optional
return.east.repeat == orig(this.curr.east.repeat)
return.east.spec == orig(this.curr.south.spec)
return.east.spec == orig(this.curr.east.spec)
return.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
return.optional == orig(this.home.optional)
return.optional == orig(this.curr.south.optional)
return.optional == orig(this.curr.east.optional)
return.optional == orig(this.curr.optional)
this.home.south.spec == 0
this.home.east.south == null
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.spec == 0
this.curr.south == null
return.south == null
return.east.repeat == false
return.east.spec == 0
return.entry != null
return.repeat == false
return.spec == 0
===========================================================================
com.fidelis.argface.ArgList.getCurrent():::ENTER
this.home == this.curr
this.home.south == this.curr.south
this.home.south.south == this.curr.south.south
this.home.south.east == this.home.east
this.home.south.entry == this.curr.south.entry
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.spec
this.home.east == this.curr.south.east
this.home.east == this.curr.east
this.home.entry == this.curr.entry
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.home.east == null
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
===========================================================================
com.fidelis.argface.ArgList.getCurrent():::EXIT
this.home == return
this.home.south == return.south
this.home.south.south == return.south.south
this.home.south.east == this.home.east
this.home.south.entry == return.south.entry
this.home.south.entry.getClass().getName() == return.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.repeat == orig(this.curr.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == this.curr.south.east
this.home.east == this.curr.east
this.home.east == orig(this.home.south.east)
this.home.east == orig(this.home.east)
this.home.east == orig(this.curr.south.east)
this.home.east == orig(this.curr.east)
this.home.entry == return.entry
this.home.entry.getClass().getName() == return.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.south.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.south.spec)
this.home.spec == orig(this.curr.spec)
this.curr == return
this.curr.south == return.south
this.curr.south.south == return.south.south
this.curr.south.entry == return.south.entry
this.curr.south.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
return == orig(this.home)
return == orig(this.curr)
return.south == orig(this.home.south)
return.south == orig(this.curr.south)
return.south.south == orig(this.home.south.south)
return.south.south == orig(this.curr.south.south)
return.south.entry == orig(this.home.south.entry)
return.south.entry == orig(this.curr.south.entry)
return.south.entry.getClass().getName() == return.entry.getClass().getName()
return.entry == orig(this.home.entry)
return.entry == orig(this.curr.entry)
return.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.east == null
this.home.optional == false
this.home.spec == 0
return.south.east == null
return.south.optional == false
return.south.repeat == false
return.south.spec == 0
return.east == null
return.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return.optional == false
return.repeat == false
return.spec == 0
===========================================================================
com.fidelis.argface.ArgList.goEast():::ENTER
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.repeat == this.home.repeat
this.curr.south.east == this.curr.east.south
this.curr.south.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.home != null
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr != null
this.curr.south.east == null
this.curr.spec one of { 0, 1 }
this.home.south.spec >= this.home.east.spec
this.home.south.spec >= this.home.spec
this.home.east.spec <= this.curr.spec
===========================================================================
com.fidelis.argface.ArgList.goEast():::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.optional == this.home.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.repeat == return.south.repeat
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.repeat == orig(this.curr.south.repeat)
this.home.south.spec == return.east.spec
this.home.south.spec == orig(this.home.south.spec)
this.home.east == orig(this.home.east)
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.optional == orig(this.home.east.optional)
this.home.east.repeat == this.home.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.spec == return.east.spec
this.home.east.spec == orig(this.home.east.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.optional == orig(this.home.optional)
this.home.repeat == orig(this.home.repeat)
this.home.spec == return.east.spec
this.home.spec == orig(this.home.spec)
this.curr.south == return.south
this.curr.south.south == return.south.south
this.curr.south.south == orig(this.curr.south.south)
this.curr.south.east == return.east.south
this.curr.south.east == orig(this.curr.south.east)
this.curr.south.entry == return.south.entry
this.curr.south.entry == orig(this.curr.south.entry)
this.curr.south.entry.getClass().getName() == return.south.entry.getClass().getName()
this.curr.south.entry.getClass().getName() == return.east.entry.getClass().getName()
this.curr.south.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.curr.south.optional == return.south.optional
this.curr.south.optional == return.east.optional
this.curr.south.optional == return.optional
this.curr.south.optional == orig(this.curr.south.optional)
this.curr.south.repeat == return.south.repeat
this.curr.south.repeat == orig(this.curr.south.repeat)
this.curr.south.spec == return.south.spec
this.curr.south.spec == orig(this.curr.south.spec)
this.curr.east == return.east
this.curr.east.south == return.east.south
this.curr.east.east == return.east.east
this.curr.east.entry == return.east.entry
this.curr.east.entry.getClass().getName() == return.east.entry.getClass().getName()
this.curr.east.optional == return.east.optional
this.curr.east.repeat == return.east.repeat
this.curr.east.spec == return.east.spec
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.south.entry.getClass().getName()
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.curr.optional == return.south.optional
this.curr.optional == return.optional
this.curr.repeat == return.repeat
this.curr.spec == return.spec
return == orig(this.curr.east)
return.south == orig(this.curr.south.east)
return.south == orig(this.curr.east.south)
return.south.entry.getClass().getName() == return.east.entry.getClass().getName()
return.south.entry.getClass().getName() == return.entry.getClass().getName()
return.south.optional == return.east.optional
return.south.optional == return.optional
return.east == orig(this.curr.east.east)
return.east.south == orig(this.curr.south.east)
return.east.optional == orig(this.curr.south.optional)
return.entry == orig(this.curr.east.entry)
return.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
return.optional == orig(this.curr.east.optional)
return.repeat == orig(this.curr.east.repeat)
return.spec == orig(this.curr.east.spec)
this.home != null
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr != null
this.curr.south.east == null
this.curr.spec one of { 0, 1 }
return.south.east == null
return.south.repeat == false
return.south.spec one of { 0, 3 }
return.east.entry != null
return.east.spec == 0
return.entry != null
return.spec one of { 0, 1 }
this.home.south.spec >= this.home.east.spec
this.home.south.spec >= this.home.spec
this.home.south.spec <= return.south.spec
this.home.south.spec <= orig(this.curr.south.spec)
this.home.east.spec <= this.curr.spec
this.home.east.spec <= return.south.spec
this.home.east.spec <= return.spec
this.home.east.spec <= orig(this.curr.south.spec)
this.home.east.spec <= orig(this.curr.spec)
this.home.spec <= return.south.spec
this.home.spec <= orig(this.curr.south.spec)
this.curr.south.spec >= return.east.spec
this.curr.south.spec >= return.spec
orig(this.curr.south.spec) % this.curr.south.spec == 0
this.curr.south.spec % orig(this.curr.south.spec) == 0
this.curr.south.spec >= orig(this.curr.spec)
this.curr.spec <= return.south.spec
this.curr.spec >= return.east.spec
this.curr.spec <= orig(this.curr.south.spec)
return.south.entry.getClass().getName() != orig(this.curr.entry.getClass().getName())
return.south.spec >= return.east.spec
return.south.spec >= return.spec
return.south.spec >= orig(this.curr.spec)
return.east.spec <= return.spec
return.east.spec <= orig(this.curr.south.spec)
return.east.spec <= orig(this.curr.spec)
return.spec <= orig(this.curr.south.spec)
===========================================================================
com.fidelis.argface.ArgList.goHome():::ENTER
this.home.south.south == this.curr.south.south
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.curr.east.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.repeat == this.curr.east.repeat
this.curr.south.entry.getClass().getName() == this.curr.east.entry.getClass().getName()
this.curr.east.repeat == this.curr.repeat
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east != null
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.east.repeat == false
this.curr.spec one of { 0, 1 }
this.home.south.spec >= this.home.east.spec
this.home.south.spec >= this.home.spec
this.home.south.spec >= this.curr.east.spec
===========================================================================
com.fidelis.argface.ArgList.goHome():::EXIT
this.home == return
this.home.south == return.south
this.home.south.south == return.south.south
this.home.south.east == return.south.east
this.home.south.entry == return.south.entry
this.home.south.entry.getClass().getName() == return.south.entry.getClass().getName()
this.home.south.optional == return.south.optional
this.home.south.repeat == return.south.repeat
this.home.south.spec == return.south.spec
this.home.east == return.east
this.home.east.south == return.east.south
this.home.east.east == return.east.east
this.home.east.entry == return.east.entry
this.home.east.entry.getClass().getName() == return.entry.getClass().getName()
this.home.east.optional == return.east.optional
this.home.east.repeat == return.repeat
this.home.east.spec == return.east.spec
this.home.entry == return.entry
this.home.entry.getClass().getName() == return.entry.getClass().getName()
this.home.optional == return.optional
this.home.repeat == return.repeat
this.home.spec == return.spec
this.curr == return
this.curr.south == return.south
this.curr.south.south == return.south.south
this.curr.south.east == return.south.east
this.curr.south.entry == return.south.entry
this.curr.south.entry.getClass().getName() == return.south.entry.getClass().getName()
this.curr.south.optional == return.south.optional
this.curr.south.repeat == return.south.repeat
this.curr.south.spec == return.south.spec
this.curr.east == return.east
this.curr.east.south == return.east.south
this.curr.east.east == return.east.east
this.curr.east.entry == return.east.entry
this.curr.east.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.east.optional == return.east.optional
this.curr.east.repeat == return.repeat
this.curr.east.spec == return.east.spec
this.curr.entry == return.entry
this.curr.entry.getClass().getName() == return.entry.getClass().getName()
this.curr.optional == return.optional
this.curr.repeat == return.repeat
this.curr.spec == return.spec
return == orig(this.home)
return.south == orig(this.home.south)
return.south.south == orig(this.home.south.south)
return.south.south == orig(this.curr.south.south)
return.south.east == orig(this.home.south.east)
return.south.entry == orig(this.home.south.entry)
return.south.entry.getClass().getName() == return.entry.getClass().getName()
return.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
return.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
return.south.optional == return.optional
return.south.optional == orig(this.home.south.optional)
return.south.repeat == orig(this.home.south.repeat)
return.south.repeat == orig(this.curr.south.repeat)
return.south.spec == orig(this.home.south.spec)
return.east == orig(this.home.east)
return.east.south == orig(this.home.east.south)
return.east.east == orig(this.home.east.east)
return.east.entry == orig(this.home.east.entry)
return.east.entry.getClass().getName() == return.entry.getClass().getName()
return.east.optional == orig(this.home.east.optional)
return.east.repeat == return.repeat
return.east.spec == orig(this.home.east.spec)
return.east.spec == orig(this.curr.east.spec)
return.entry == orig(this.home.entry)
return.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
return.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
return.optional == orig(this.home.optional)
return.repeat == orig(this.home.east.repeat)
return.repeat == orig(this.home.repeat)
return.repeat == orig(this.curr.east.repeat)
return.spec == orig(this.home.spec)
return.south.entry != null
return.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return.south.repeat == false
return.south.spec one of { 0, 3 }
return.east != null
return.east.entry != null
return.east.spec one of { 0, 1 }
return.entry != null
return.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return.repeat == false
return.spec one of { 0, 1 }
return.south.spec >= return.east.spec
return.south.spec >= return.spec
return.south.spec <= orig(this.curr.south.spec)
return.south.spec >= orig(this.curr.east.spec)
return.east.spec <= orig(this.curr.south.spec)
return.spec <= orig(this.curr.south.spec)
===========================================================================
com.fidelis.argface.ArgList.goSouth():::ENTER
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.optional == this.curr.south.optional
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.south.spec == this.curr.south.spec
this.home.south.spec == this.curr.east.spec
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.optional == this.curr.south.optional
this.home.east.repeat == this.home.repeat
this.home.east.repeat == this.curr.east.repeat
this.home.east.spec == this.home.spec
this.home.east.spec == this.curr.south.spec
this.home.east.spec == this.curr.east.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.repeat == this.curr.east.repeat
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.east.spec
this.home.spec == this.curr.spec
this.curr.south.optional == this.curr.east.optional
this.curr.south.spec == this.curr.east.spec
this.home != null
this.home.south.spec == 0
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.spec == 0
this.curr != null
this.curr.south.spec == 0
this.curr.east.repeat == false
this.curr.east.spec == 0
===========================================================================
com.fidelis.argface.ArgList.goSouth():::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == return.south.entry.getClass().getName()
this.home.south.entry.getClass().getName() == return.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.optional == this.curr.south.optional
this.home.south.optional == return.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.repeat == orig(this.curr.south.repeat)
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.south.spec == this.curr.south.spec
this.home.south.spec == this.curr.east.spec
this.home.south.spec == return.east.spec
this.home.south.spec == orig(this.home.south.spec)
this.home.south.spec == orig(this.curr.south.spec)
this.home.east == orig(this.home.east)
this.home.east.south == this.curr.south.south
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == return.south.entry.getClass().getName()
this.home.east.entry.getClass().getName() == return.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.optional == this.home.optional
this.home.east.optional == this.curr.south.optional
this.home.east.optional == return.optional
this.home.east.optional == orig(this.home.east.optional)
this.home.east.repeat == this.home.repeat
this.home.east.repeat == this.curr.east.repeat
this.home.east.repeat == return.east.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.spec == this.home.spec
this.home.east.spec == this.curr.south.spec
this.home.east.spec == this.curr.east.spec
this.home.east.spec == return.east.spec
this.home.east.spec == orig(this.home.east.spec)
this.home.east.spec == orig(this.curr.south.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == return.south.entry.getClass().getName()
this.home.entry.getClass().getName() == return.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.optional == return.optional
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == this.curr.east.repeat
this.home.repeat == this.curr.repeat
this.home.repeat == return.east.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.east.spec
this.home.spec == this.curr.spec
this.home.spec == return.east.spec
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.south.spec)
this.home.spec == orig(this.curr.spec)
this.curr.south == return.south
this.curr.south.south == orig(this.curr.east.south)
this.curr.south.east == return.south.east
this.curr.south.entry == return.south.entry
this.curr.south.entry.getClass().getName() == return.south.entry.getClass().getName()
this.curr.south.optional == this.curr.east.optional
this.curr.south.optional == return.east.optional
this.curr.south.optional == return.optional
this.curr.south.optional == orig(this.curr.east.optional)
this.curr.south.repeat == orig(this.curr.south.repeat)
this.curr.south.spec == this.curr.east.spec
this.curr.south.spec == return.east.spec
this.curr.south.spec == orig(this.curr.south.spec)
this.curr.east == return.east
this.curr.east.south == return.east.south
this.curr.east.east == return.east.east
this.curr.east.entry == return.east.entry
this.curr.east.entry.getClass().getName() == return.east.entry.getClass().getName()
this.curr.east.optional == return.east.optional
this.curr.east.repeat == return.east.repeat
this.curr.east.repeat == orig(this.curr.east.repeat)
this.curr.east.spec == return.east.spec
this.curr.east.spec == orig(this.curr.south.spec)
this.curr.east.spec == orig(this.curr.east.spec)
this.curr.entry == return.entry
return == orig(this.curr.south)
return.south == orig(this.curr.south.south)
return.south.entry.getClass().getName() == return.entry.getClass().getName()
return.south.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
return.east == orig(this.curr.south.east)
return.east.spec == orig(this.curr.south.spec)
return.entry == orig(this.curr.south.entry)
return.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
return.optional == orig(this.curr.south.optional)
return.optional == orig(this.curr.east.optional)
this.home != null
this.home.south.spec == 0
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.spec == 0
this.curr != null
this.curr.south.south == null
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east.repeat == false
this.curr.east.spec == 0
return.south.south == null
return.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return.south.optional == false
return.south.repeat == false
return.south.spec == 0
return.east.repeat == false
return.east.spec == 0
return.entry != null
return.repeat == false
return.spec == 0
this.home.south.entry.getClass().getName() != this.curr.east.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgList.listString(java.lang.StringBuilder, com.fidelis.argface.ArgNode, int):::ENTER
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.repeat == this.home.repeat
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.curr.south == this.curr.east
arg1.south.entry.getClass().getName() == arg1.entry.getClass().getName()
this.home != null
this.home.south.south != null
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east != null
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr != null
this.curr.south == null
this.curr.optional == false
this.curr.spec == 0
arg0 != null
arg1 != null
arg1.south.repeat == false
arg1.south.spec one of { 0, 2, 3 }
arg1.east.repeat == false
arg1.east.spec one of { 0, 1 }
arg1.entry != null
arg1.repeat == false
arg1.spec >= 0
arg2 >= 0
this.home.south.spec >= this.home.east.spec
this.home.south.spec >= this.home.spec
this.home.south.spec >= this.curr.spec
this.home.east.spec >= this.curr.spec
this.home.spec >= this.curr.spec
===========================================================================
com.fidelis.argface.ArgList.listString(java.lang.StringBuilder, com.fidelis.argface.ArgNode, int):::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.optional == this.home.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == orig(this.home.south.spec)
this.home.east == orig(this.home.east)
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == orig(this.home.east.optional)
this.home.east.repeat == this.home.repeat
this.home.east.spec == orig(this.home.east.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.optional == orig(this.home.optional)
this.home.repeat == orig(this.home.east.repeat)
this.home.repeat == orig(this.home.repeat)
this.home.spec == orig(this.home.spec)
this.curr == orig(this.curr)
this.curr.south == this.curr.east
this.curr.south == orig(this.curr.south)
this.curr.south == orig(this.curr.east)
this.curr.entry == orig(this.curr.entry)
this.curr.optional == orig(this.curr.optional)
this.curr.repeat == orig(this.curr.repeat)
this.curr.spec == orig(this.curr.spec)
arg1.south == orig(arg1.south)
arg1.south.south == orig(arg1.south.south)
arg1.south.east == orig(arg1.south.east)
arg1.south.entry == orig(arg1.south.entry)
arg1.south.entry.getClass().getName() == arg1.entry.getClass().getName()
arg1.south.entry.getClass().getName() == orig(arg1.south.entry.getClass().getName())
arg1.south.optional == orig(arg1.south.optional)
arg1.south.repeat == orig(arg1.south.repeat)
arg1.south.spec == orig(arg1.south.spec)
arg1.east == orig(arg1.east)
arg1.east.south == orig(arg1.east.south)
arg1.east.east == orig(arg1.east.east)
arg1.east.entry == orig(arg1.east.entry)
arg1.east.entry.getClass().getName() == orig(arg1.east.entry.getClass().getName())
arg1.east.optional == orig(arg1.east.optional)
arg1.east.repeat == orig(arg1.east.repeat)
arg1.east.spec == orig(arg1.east.spec)
arg1.entry == orig(arg1.entry)
arg1.entry.getClass().getName() == orig(arg1.entry.getClass().getName())
arg1.optional == orig(arg1.optional)
arg1.repeat == orig(arg1.repeat)
arg1.spec == orig(arg1.spec)
this.home != null
this.home.south.south != null
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east != null
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr != null
this.curr.south == null
this.curr.optional == false
this.curr.spec == 0
arg1.south.repeat == false
arg1.south.spec one of { 0, 2, 3 }
arg1.east.repeat == false
arg1.east.spec one of { 0, 1 }
arg1.entry != null
arg1.repeat == false
arg1.spec >= 0
this.home.south.spec >= this.home.east.spec
this.home.south.spec >= this.home.spec
this.home.south.spec >= this.curr.spec
this.home.east.spec >= this.curr.spec
this.home.spec >= this.curr.spec
===========================================================================
com.fidelis.argface.ArgList.remLast(java.lang.StringBuilder):::ENTER
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.spec
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.repeat == this.curr.east.repeat
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.curr.south.optional == this.curr.east.optional
this.curr.south.spec == this.curr.east.spec
this.curr.east.repeat == this.curr.repeat
this has only one value
this.home has only one value
this.home != null
this.home.south has only one value
this.home.south != null
this.home.south.south has only one value
this.home.south.south != null
this.home.south.east has only one value
this.home.south.east != null
this.home.south.entry has only one value
this.home.east has only one value
this.home.east != null
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr != null
this.curr.south.south != null
this.curr.south.east != null
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east.east != null
this.curr.east.repeat == false
arg0 != null
===========================================================================
com.fidelis.argface.ArgList.remLast(java.lang.StringBuilder):::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == orig(this.home.east)
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.east.optional)
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == this.curr.east.repeat
this.home.repeat == orig(this.home.east.repeat)
this.home.repeat == orig(this.home.repeat)
this.home.spec == this.curr.south.spec
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.east.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.spec)
this.curr == orig(this.curr)
this.curr.south == orig(this.curr.south)
this.curr.south.south == orig(this.curr.south.south)
this.curr.south.east == orig(this.curr.south.east)
this.curr.south.entry == orig(this.curr.south.entry)
this.curr.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.curr.south.optional == this.curr.east.optional
this.curr.south.optional == orig(this.curr.south.optional)
this.curr.south.optional == orig(this.curr.east.optional)
this.curr.south.repeat == orig(this.curr.south.repeat)
this.curr.south.spec == this.curr.east.spec
this.curr.south.spec == orig(this.curr.south.spec)
this.curr.south.spec == orig(this.curr.east.spec)
this.curr.east == orig(this.curr.east)
this.curr.east.south == orig(this.curr.east.south)
this.curr.east.east == orig(this.curr.east.east)
this.curr.east.entry == orig(this.curr.east.entry)
this.curr.east.entry.getClass().getName() == orig(this.curr.east.entry.getClass().getName())
this.curr.east.repeat == this.curr.repeat
this.curr.east.repeat == orig(this.curr.east.repeat)
this.curr.entry == orig(this.curr.entry)
this.curr.repeat == orig(this.curr.repeat)
this.home has only one value
this.home != null
this.home.south has only one value
this.home.south != null
this.home.south.south has only one value
this.home.south.south != null
this.home.south.east has only one value
this.home.south.east != null
this.home.south.entry has only one value
this.home.east has only one value
this.home.east != null
this.home.east.south == null
this.home.east.east has only one value
this.home.east.east != null
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr != null
this.curr.south.south != null
this.curr.south.east != null
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.optional == false
this.curr.south.spec == 0
this.curr.east.east != null
this.curr.east.repeat == false
return one of { 32, 62, 124 }
===========================================================================
com.fidelis.argface.ArgList.setCurrent(com.fidelis.argface.ArgNode):::ENTER
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == arg0.south.repeat
this.home.south.spec == this.curr.south.spec
this.home.south.spec == arg0.south.spec
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.home.east.repeat == this.home.repeat
this.home.east.repeat == this.curr.east.repeat
this.home.east.repeat == arg0.east.repeat
this.home.east.spec == this.curr.east.spec
this.home.entry.getClass().getName() == this.curr.south.entry.getClass().getName()
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.home.optional == this.curr.south.optional
this.home.optional == this.curr.optional
this.home.optional == arg0.south.optional
this.home.repeat == this.curr.east.repeat
this.home.repeat == arg0.repeat
this.home.spec == arg0.spec
this.curr.south.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.curr.south.optional == arg0.south.optional
this.curr.south.repeat == arg0.south.repeat
this.curr.south.spec == arg0.south.spec
this.curr.east.repeat == this.curr.repeat
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.optional == arg0.optional
this.home != null
this.home.south != null
this.home.east.south == null
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr != null
this.curr.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.spec one of { 0, 3 }
this.curr.east.repeat == false
this.curr.east.spec == 0
arg0 != null
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 2, 3 }
arg0.east.entry != null
arg0.east.spec one of { 0, 1 }
arg0.entry != null
this.home.south.spec >= this.home.east.spec
this.home.south.spec >= this.home.spec
this.home.south.spec >= this.curr.east.spec
this.home.east.spec <= this.home.spec
this.home.east.spec <= this.curr.spec
this.home.east.spec <= arg0.south.spec
this.home.east.spec <= arg0.east.spec
this.home.spec >= this.curr.east.spec
this.home.spec <= this.curr.spec
this.home.spec <= arg0.south.spec
this.curr.east.spec <= this.curr.spec
this.curr.east.spec <= arg0.south.spec
this.curr.east.spec <= arg0.east.spec
arg0.south.spec >= arg0.east.spec
===========================================================================
com.fidelis.argface.ArgList.setCurrent(com.fidelis.argface.ArgNode):::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == arg0.south.repeat
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.repeat == orig(this.curr.south.repeat)
this.home.south.spec == arg0.south.spec
this.home.south.spec == orig(this.home.south.spec)
this.home.south.spec == orig(this.curr.south.spec)
this.home.east == orig(this.home.east)
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.home.east.optional == orig(this.home.east.optional)
this.home.east.repeat == arg0.east.repeat
this.home.east.spec == orig(this.home.east.spec)
this.home.east.spec == orig(this.curr.east.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.optional == arg0.south.optional
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.south.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == arg0.repeat
this.home.spec == arg0.spec
this.curr == return
this.curr.south == arg0.south
this.curr.south.south == arg0.south.south
this.curr.south.east == arg0.south.east
this.curr.south.entry == arg0.south.entry
this.curr.south.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.curr.south.optional == arg0.south.optional
this.curr.south.repeat == arg0.south.repeat
this.curr.south.spec == arg0.south.spec
this.curr.east == arg0.east
this.curr.east.south == arg0.east.south
this.curr.east.east == arg0.east.east
this.curr.east.entry == arg0.east.entry
this.curr.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.curr.east.optional == arg0.east.optional
this.curr.east.repeat == arg0.east.repeat
this.curr.east.spec == arg0.east.spec
this.curr.entry == arg0.entry
this.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.curr.optional == arg0.optional
this.curr.repeat == arg0.repeat
this.curr.spec == arg0.spec
arg0.south == return.south
arg0.south == orig(arg0.south)
arg0.south.south == return.south.south
arg0.south.south == orig(arg0.south.south)
arg0.south.east == return.south.east
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == return.south.entry
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.entry.getClass().getName() == return.south.entry.getClass().getName()
arg0.south.entry.getClass().getName() == orig(this.curr.south.entry.getClass().getName())
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == arg0.optional
arg0.south.optional == return.south.optional
arg0.south.optional == orig(this.curr.south.optional)
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == return.south.repeat
arg0.south.repeat == orig(this.curr.south.repeat)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == return.south.spec
arg0.south.spec == orig(this.curr.south.spec)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == return.east
arg0.east == orig(arg0.east)
arg0.east.south == return.east.south
arg0.east.south == orig(arg0.east.south)
arg0.east.east == return.east.east
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == return.east.entry
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == return.east.entry.getClass().getName()
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == return.east.optional
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == arg0.repeat
arg0.east.repeat == return.east.repeat
arg0.east.repeat == orig(this.home.east.repeat)
arg0.east.repeat == orig(this.curr.east.repeat)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == return.east.spec
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == return.entry
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == return.entry.getClass().getName()
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == return.optional
arg0.optional == orig(arg0.optional)
arg0.repeat == return.repeat
arg0.repeat == orig(this.home.repeat)
arg0.repeat == orig(this.curr.east.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.spec == return.spec
arg0.spec == orig(this.home.spec)
arg0.spec == orig(arg0.spec)
return == orig(arg0)
this.home != null
this.home.south != null
this.home.east.south == null
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.east.optional == false
this.home.east.spec == 0
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.entry != null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 2, 3 }
arg0.east.entry != null
arg0.east.repeat == false
arg0.east.spec one of { 0, 1 }
arg0.entry != null
arg0.repeat == false
arg0.spec one of { 0, 1 }
return != null
this.home.south.spec >= this.home.east.spec
this.home.south.spec >= arg0.spec
this.home.south.spec >= orig(this.curr.east.spec)
this.home.east.spec <= arg0.south.spec
this.home.east.spec <= arg0.east.spec
this.home.east.spec <= arg0.spec
this.home.east.spec <= orig(this.curr.south.spec)
this.home.east.spec <= orig(this.curr.spec)
arg0.south.spec >= arg0.east.spec
arg0.south.spec >= arg0.spec
arg0.south.spec >= orig(this.curr.east.spec)
arg0.east.spec >= orig(this.curr.east.spec)
arg0.spec <= orig(this.curr.south.spec)
arg0.spec >= orig(this.curr.east.spec)
arg0.spec <= orig(this.curr.spec)
===========================================================================
com.fidelis.argface.ArgList.setOptional(boolean):::ENTER
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.east.south == this.curr.south
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.optional == this.curr.optional
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.spec
this.curr.south == this.curr.east
this.home.south.east has only one value
this.home.south.entry has only one value
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.optional == false
this.home.south.spec == 0
this.home.east.south == null
this.home.east.optional == false
this.home.east.spec == 0
this.home.optional == false
this.home.spec == 0
this.curr.south == null
this.curr.entry.getClass().getName() == com.fidelis.argface.ArgList.class
arg0 == true
===========================================================================
com.fidelis.argface.ArgList.setOptional(boolean):::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.optional == orig(this.home.east.optional)
this.home.south.optional == orig(this.home.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.south.spec == orig(this.home.south.spec)
this.home.east == orig(this.home.east)
this.home.east.south == this.curr.south
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.repeat == this.home.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.spec == this.home.spec
this.home.east.spec == orig(this.home.east.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.optional == orig(this.home.east.optional)
this.home.repeat == this.curr.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.spec)
this.curr == orig(this.curr)
this.curr.south == this.curr.east
this.curr.south == orig(this.curr.south)
this.curr.south == orig(this.curr.east)
this.curr.entry == orig(this.curr.entry)
this.curr.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.curr.optional == orig(arg0)
this.home.south.east has only one value
this.home.south.entry has only one value
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.optional == false
this.home.south.spec == 0
this.home.east.south == null
this.home.east.spec == 0
this.home.spec == 0
this.curr.south == null
this.curr.entry.getClass().getName() == com.fidelis.argface.ArgList.class
===========================================================================
com.fidelis.argface.ArgList.setRepeat(boolean):::ENTER
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.spec
this.home.east.south == this.curr.south
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.optional == this.curr.optional
this.home.repeat == this.curr.repeat
this.home.spec == this.curr.spec
this.curr.south == this.curr.east
this has only one value
this.home has only one value
this.home.south has only one value
this.home.south.south has only one value
this.home.south.east has only one value
this.home.south.entry has only one value
this.home.east has only one value
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr has only one value
this.curr.south == null
this.curr.entry has only one value
arg0 == true
===========================================================================
com.fidelis.argface.ArgList.setRepeat(boolean):::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.optional
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.spec
this.home.east == orig(this.home.east)
this.home.east.south == this.curr.south
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.optional == this.home.optional
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == this.curr.entry.getClass().getName()
this.home.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.home.optional == this.curr.optional
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.east.optional)
this.home.optional == orig(this.home.optional)
this.home.optional == orig(this.curr.optional)
this.home.repeat == orig(this.home.east.repeat)
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.spec == this.curr.spec
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.east.spec)
this.home.spec == orig(this.home.spec)
this.home.spec == orig(this.curr.spec)
this.curr == orig(this.curr)
this.curr.south == this.curr.east
this.curr.south == orig(this.home.east.south)
this.curr.south == orig(this.curr.south)
this.curr.south == orig(this.curr.east)
this.curr.entry == orig(this.curr.entry)
this.curr.repeat == orig(arg0)
this.home has only one value
this.home.south has only one value
this.home.south.south has only one value
this.home.south.east has only one value
this.home.south.entry has only one value
this.home.east has only one value
this.home.east.east has only one value
this.home.east.entry has only one value
this.home.entry has only one value
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.optional == false
this.home.spec == 0
this.curr has only one value
this.curr.south == null
this.curr.entry has only one value
===========================================================================
com.fidelis.argface.ArgList.toString():::ENTER
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south == null
this.curr.east == null
this.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.optional == false
this.curr.spec == 0
===========================================================================
com.fidelis.argface.ArgList.toString():::EXIT
this.home == orig(this.home)
this.home.south == orig(this.home.south)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.optional == orig(this.home.south.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == orig(this.home.south.spec)
this.home.east == orig(this.home.east)
this.home.east.south == orig(this.home.east.south)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry == orig(this.home.east.entry)
this.home.east.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.east.optional == orig(this.home.east.optional)
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.spec == orig(this.home.east.spec)
this.home.entry == orig(this.home.entry)
this.home.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.optional == orig(this.home.optional)
this.home.repeat == orig(this.home.repeat)
this.home.spec == orig(this.home.spec)
this.curr == orig(this.curr)
this.curr.south == orig(this.curr.south)
this.curr.east == orig(this.curr.east)
this.curr.entry == orig(this.curr.entry)
this.curr.entry.getClass().getName() == orig(this.curr.entry.getClass().getName())
this.curr.optional == orig(this.curr.optional)
this.curr.repeat == orig(this.curr.repeat)
this.curr.spec == orig(this.curr.spec)
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south == null
this.curr.east == null
this.curr.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.optional == false
this.curr.spec == 0
===========================================================================
com.fidelis.argface.ArgList.transfer(com.fidelis.argface.ArgList):::ENTER
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.spec == this.home.east.spec
this.home.south.spec == this.home.spec
this.home.east.south == this.curr.south
this.home.east.repeat == this.home.repeat
this.home.east.spec == this.home.spec
this.home.repeat == this.curr.repeat
this.home.repeat == arg0.home.repeat
this.home.repeat == arg0.curr.repeat
this.home.spec == this.curr.spec
this.curr.south == this.curr.east
arg0.home.entry.getClass().getName() == arg0.curr.entry.getClass().getName()
arg0.home.optional == arg0.curr.optional
this.home.south.east has only one value
this.home.south.entry has only one value
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.optional == false
this.home.south.spec == 0
this.home.east.south == null
this.home.east.spec == 0
this.home.spec == 0
this.curr.south == null
this.curr.entry.getClass().getName() == com.fidelis.argface.ArgList.class
arg0.home.spec == 0
arg0.curr.east == null
arg0.curr.spec == 0
===========================================================================
com.fidelis.argface.ArgList.transfer(com.fidelis.argface.ArgList):::EXIT
this.home == orig(this.home)
this.home.south.south == orig(this.home.south.south)
this.home.south.east == orig(this.home.south.east)
this.home.south.entry == orig(this.home.south.entry)
this.home.south.entry.getClass().getName() == this.home.east.entry.getClass().getName()
this.home.south.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.south.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.south.entry.getClass().getName() == orig(this.home.east.entry.getClass().getName())
this.home.south.optional == this.home.east.optional
this.home.south.optional == this.home.optional
this.home.south.optional == orig(this.home.south.optional)
this.home.south.repeat == orig(this.home.south.repeat)
this.home.south.spec == this.home.east.spec
this.home.south.spec == orig(this.home.south.spec)
this.home.south.spec == orig(this.home.east.spec)
this.home.east == orig(this.home.east)
this.home.east.east == orig(this.home.east.east)
this.home.east.entry.getClass().getName() == this.home.entry.getClass().getName()
this.home.east.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.east.entry.getClass().getName() == orig(this.home.entry.getClass().getName())
this.home.east.optional == orig(this.home.south.optional)
this.home.east.optional == orig(this.home.east.optional)
this.home.east.repeat == this.home.repeat
this.home.east.repeat == orig(this.home.east.repeat)
this.home.east.spec == orig(this.home.south.spec)
this.home.entry.getClass().getName() == orig(this.home.south.entry.getClass().getName())
this.home.optional == orig(this.home.south.optional)
this.home.optional == orig(this.home.optional)
this.home.repeat == this.curr.repeat
this.home.repeat == arg0.home.repeat
this.home.repeat == arg0.curr.repeat
this.home.repeat == orig(this.home.repeat)
this.home.repeat == orig(this.curr.repeat)
this.home.repeat == orig(arg0.home.repeat)
this.home.repeat == orig(arg0.curr.repeat)
this.home.spec == orig(this.home.south.spec)
this.home.spec == orig(this.home.east.spec)
this.curr.south == arg0.home.south
this.curr.south == orig(arg0.home.south)
this.curr.south.east == this.curr.east
this.curr.south.east == orig(this.home.south.south)
this.curr.south.east == orig(this.home.east.south)
this.curr.south.repeat == orig(this.home.south.repeat)
this.curr.east == orig(this.home.east.south)
this.curr.east == orig(this.curr.south)
this.curr.east == orig(this.curr.east)
this.curr.entry.getClass().getName() == arg0.home.entry.getClass().getName()
this.curr.entry.getClass().getName() == arg0.curr.entry.getClass().getName()
this.curr.entry.getClass().getName() == orig(arg0.home.entry.getClass().getName())
this.curr.entry.getClass().getName() == orig(arg0.curr.entry.getClass().getName())
this.curr.optional == orig(this.curr.optional)
arg0.home == orig(arg0.home)
arg0.home.east == orig(arg0.home.east)
arg0.home.entry == orig(arg0.home.entry)
arg0.home.optional == arg0.curr.optional
arg0.home.optional == orig(arg0.home.optional)
arg0.home.optional == orig(arg0.curr.optional)
arg0.home.spec == orig(arg0.home.spec)
arg0.curr == orig(arg0.curr)
arg0.curr.south == orig(arg0.curr.south)
arg0.curr.east == orig(arg0.curr.east)
arg0.curr.entry == orig(arg0.curr.entry)
this.home.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.south.spec one of { 0, 3 }
this.home.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.curr.south.east == null
this.curr.south.spec one of { 2, 3 }
this.curr.east == null
this.curr.spec one of { 0, 1 }
arg0.home.spec == 0
arg0.curr.east == null
arg0.curr.spec one of { 0, 2 }
this.home.east.entry.getClass().getName() != orig(this.curr.entry.getClass().getName())
this.home.east.spec >= this.home.spec
this.home.east.spec <= this.curr.spec
this.home.east.spec >= orig(this.home.east.spec)
this.home.east.spec >= orig(this.home.spec)
this.home.entry.getClass().getName() != orig(this.curr.entry.getClass().getName())
this.home.spec <= this.curr.spec
this.home.spec >= orig(this.home.spec)
this.curr.spec >= orig(this.home.east.spec)
this.curr.spec >= orig(this.home.spec)
arg0.curr.spec >= orig(arg0.curr.spec)
===========================================================================
com.fidelis.argface.ArgNode:::OBJECT
this.south.south.entry != null
this.south.south.repeat == false
this.south.south.spec one of { 0, 2 }
this.south.east.entry != null
this.south.east.repeat == false
this.south.east.spec == 0
this.south.entry != null
this.south.repeat == false
this.south.spec one of { 0, 2, 3 }
this.east.south.east == null
this.east.south.entry != null
this.east.south.repeat == false
this.east.south.spec one of { 0, 2, 3 }
this.east.east.entry != null
this.east.east.spec one of { 0, 1 }
this.east.entry != null
this.east.spec one of { 0, 1 }
this.entry != null
this.spec >= 0
===========================================================================
com.fidelis.argface.ArgNode.ArgNode(java.lang.Object):::ENTER
arg0 != null
===========================================================================
com.fidelis.argface.ArgNode.ArgNode(java.lang.Object):::EXIT
this.entry == orig(arg0)
this.entry.getClass().getName() == orig(arg0.getClass().getName())
this.south == null
this.east == null
this.optional == false
this.repeat == false
this.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.brief():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.east == null
this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.south.south.optional == false
this.south.south.spec == 0
this.south.east == null
this.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.south.optional == false
this.south.spec == 0
this.east.south.south has only one value
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.south.optional == true
this.east.south.spec == 3
this.east.east.south == null
this.east.east.spec == 0
this.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.brief():::EXIT229
this.south == null
this.east has only one value
this.east.south == null
this.east.east == null
this.east.entry has only one value
this.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.optional == false
this.east.repeat == false
this.east.spec == 0
this.entry has only one value
this.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.optional == true
this.repeat == false
return has only one value
return.toString == "ArgList: upper pattern "
orig(this) has only one value
===========================================================================
com.fidelis.argface.ArgNode.brief():::EXIT231
this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.optional == false
===========================================================================
com.fidelis.argface.ArgNode.brief():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.optional == true)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (orig(this) has only one value)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return has only one value)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.toString == "ArgList: upper pattern ")
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east has only one value)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.east == null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.entry has only one value)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.optional == false)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.repeat == false)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.south == null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.spec == 0)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.entry has only one value)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.repeat == false)
(this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.south == null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  <==>  (this.optional == false)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.east.entry != null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.east.south == null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.south.east == null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.south.entry has only one value)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.south.optional == this.east.optional)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.south.south has only one value)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.spec one of { 0, 1 })
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.east == null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.entry != null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.entry.getClass().getName() == this.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.optional == this.optional)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.east == null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.entry != null)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.entry.getClass().getName() == this.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName())
(this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.optional == this.optional)
this.south.south.east == null
this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.south.south.optional == false
this.south.south.spec == 0
this.south.east == null
this.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.south.optional == false
this.south.spec == 0
this.east.south.south has only one value
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.south.optional == true
this.east.south.spec == 3
this.east.east.south == null
this.east.east.spec == 0
this.spec == 0
return != null
===========================================================================
com.fidelis.argface.ArgNode.getEast():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.entry.getClass().getName() != this.south.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getEast():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.east.south == orig(this.south.east.south)
this.south.east.east == orig(this.south.east.east)
this.south.east.entry == orig(this.south.east.entry)
this.south.east.entry.getClass().getName() == orig(this.south.east.entry.getClass().getName())
this.south.east.optional == orig(this.south.east.optional)
this.south.east.repeat == orig(this.south.east.repeat)
this.south.east.spec == orig(this.south.east.spec)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == return
this.east.south == return.south
this.east.south.south == return.south.south
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == return.south.entry
this.east.south.entry.getClass().getName() == return.south.entry.getClass().getName()
this.east.south.optional == return.south.optional
this.east.south.repeat == return.south.repeat
this.east.south.spec == return.south.spec
this.east.east == return.east
this.east.east.south == return.east.south
this.east.east.east == return.east.east
this.east.east.entry == return.east.entry
this.east.east.entry.getClass().getName() == return.east.entry.getClass().getName()
this.east.east.optional == return.east.optional
this.east.east.repeat == return.east.repeat
this.east.east.spec == return.east.spec
this.east.entry == return.entry
this.east.entry.getClass().getName() == return.entry.getClass().getName()
this.east.optional == return.optional
this.east.repeat == return.repeat
this.east.spec == return.spec
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
return == orig(this.east)
return.south == orig(this.east.south)
return.south.south == orig(this.east.south.south)
return.south.entry == orig(this.east.south.entry)
return.south.entry.getClass().getName() == return.entry.getClass().getName()
return.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
return.south.optional == return.optional
return.south.optional == orig(this.east.south.optional)
return.south.repeat == orig(this.east.south.repeat)
return.south.spec == orig(this.east.south.spec)
return.east == orig(this.east.east)
return.east.south == orig(this.east.east.south)
return.east.east == orig(this.east.east.east)
return.east.entry == orig(this.east.east.entry)
return.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
return.east.optional == orig(this.east.east.optional)
return.east.repeat == orig(this.east.east.repeat)
return.east.spec == orig(this.east.east.spec)
return.entry == orig(this.east.entry)
return.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
return.optional == orig(this.east.optional)
return.repeat == orig(this.east.repeat)
return.spec == orig(this.east.spec)
return.south.east == null
return.south.entry != null
return.south.repeat == false
return.south.spec one of { 0, 2, 3 }
return.east.entry != null
return.east.spec one of { 0, 1 }
return.entry != null
return.spec one of { 0, 1 }
this.south.south.entry.getClass().getName() != this.south.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() != return.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.entry.getClass().getName()
this.south.east.entry.getClass().getName() != return.south.entry.getClass().getName()
this.south.entry.getClass().getName() != return.south.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getEntry():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east.south == null
this.east.east has only one value
this.east.east.south == null
this.east.east.east == null
this.east.east.entry has only one value
this.east.east.optional == true
this.east.east.repeat == false
this.east.east.spec == 0
this.east.entry has only one value
this.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.optional == true
this.east.repeat == false
this.east.spec == 0
this.repeat == false
this.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.getEntry():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == return.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == return.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry.getClass().getName() == return.getClass().getName()
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == return
this.entry.getClass().getName() == return.getClass().getName()
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
return == orig(this.entry)
return.getClass().getName() == orig(this.entry.getClass().getName())
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east.south == null
this.east.east has only one value
this.east.east.south == null
this.east.east.east == null
this.east.east.entry has only one value
this.east.east.optional == true
this.east.east.repeat == false
this.east.east.spec == 0
this.east.entry has only one value
this.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.optional == true
this.east.repeat == false
this.east.spec == 0
this.repeat == false
this.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.getGroup():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.east == null
this.south.east == null
this.east.south.optional == true
this.east.south.spec one of { 2, 3 }
this.east.east.south == null
this.east.east.spec == 0
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getGroup():::EXIT118
this.entry == return
this.south.south.south == null
this.south.south.entry has only one value
this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.south.south.optional == false
this.south.south.spec == 2
this.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.south.optional == false
this.south.spec one of { 2, 3 }
this.east.south.south == null
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.spec == 2
this.east.east == null
this.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.repeat == false
this.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.repeat == false
this.spec one of { 0, 2, 3 }
return != null
this.south.south.entry.getClass().getName() != this.east.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.entry.getClass().getName()
this.east.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getGroup():::EXIT120
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.south has only one value
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.south.spec == 3
this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return == null
===========================================================================
com.fidelis.argface.ArgNode.getGroup():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == return.home.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == return.home.entry.getClass().getName()
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
return.home.entry.getClass().getName() == return.curr.entry.getClass().getName()
return.home.repeat == return.curr.repeat
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (return != null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.east.south.south == null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.east.south.spec == 2)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.south.entry.getClass().getName() != this.east.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.south.south.entry.getClass().getName() != this.east.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  <==>  (this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.curr != null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.curr.entry != null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.curr.spec one of { 0, 1 })
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.home != null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.home.east != null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.home.entry != null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.home.spec >= return.curr.spec)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (return.home.spec one of { 0, 1 })
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.east == null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.entry.getClass().getName() != this.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.entry.getClass().getName() == return.home.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.repeat == false)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.east.south.entry.getClass().getName() == return.home.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.entry == return)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.entry.getClass().getName() != return.home.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.repeat == false)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.south.entry.getClass().getName() != return.home.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.south.optional == false)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.south.south.entry has only one value)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.south.south.entry.getClass().getName() != return.home.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.south.south.optional == false)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.south.south.south == null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.south.south.spec == 2)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.south.spec one of { 2, 3 })
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)  ==>  (this.spec one of { 0, 2, 3 })
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  <==>  (return == null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  <==>  (this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  <==>  (this.east.south.south has only one value)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  <==>  (this.east.south.spec == 3)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  <==>  (this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  <==>  (this.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  <==>  (this.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  <==>  (this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.east.south == null)
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.south.spec one of { 0, 2 })
(this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)  ==>  (this.south.spec one of { 0, 2, 3 })
this.south.south.east == null
this.south.east == null
this.east.south.optional == true
this.east.south.spec one of { 2, 3 }
this.east.east.south == null
this.east.east.spec == 0
return.home != null
return.home.east != null
return.home.entry != null
return.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return.home.repeat == false
return.home.spec one of { 0, 1 }
return.curr != null
return.curr.entry != null
return.curr.spec one of { 0, 1 }
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() != return.home.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.entry.getClass().getName() != return.home.entry.getClass().getName()
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
this.entry.getClass().getName() != return.home.entry.getClass().getName()
return.home.spec >= return.curr.spec
===========================================================================
com.fidelis.argface.ArgNode.getOperand():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.entry.getClass().getName() != this.south.east.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getOperand():::EXIT88
this.entry == return
this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.south != null
this.east.south.spec one of { 0, 3 }
this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return != null
===========================================================================
com.fidelis.argface.ArgNode.getOperand():::EXIT90
this.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.optional == orig(this.south.south.optional)
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.south.south == null
this.south.south.east == null
this.south.south.spec == 2
this.south.east == null
this.south.spec == 3
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.spec one of { 0, 2 }
this.east.east.repeat == false
this.east.east.spec == 0
this.east.repeat == false
this.repeat == false
this.spec one of { 0, 1 }
return == null
===========================================================================
com.fidelis.argface.ArgNode.getOperand():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.east.south == orig(this.south.east.south)
this.south.east.east == orig(this.south.east.east)
this.south.east.entry == orig(this.south.east.entry)
this.south.east.entry.getClass().getName() == orig(this.south.east.entry.getClass().getName())
this.south.east.optional == orig(this.south.east.optional)
this.south.east.repeat == orig(this.south.east.repeat)
this.south.east.spec == orig(this.south.east.spec)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
(return != null)  ==>  (return.field == null)
(return != null)  ==>  (return.list.getClass().getName() == java.util.ArrayList.class)
(return != null)  ==>  (return.list[] == [])
(return != null)  ==>  (return.list[].getClass().getName() == [])
(return != null)  ==>  (return.name != null)
(return != null)  ==>  (return.type one of { 1, 2 })
(return != null)  ==>  (return.value == null)
(return != null)  ==>  (this.east.east.entry.getClass().getName() in return.list[].getClass().getName())
(return != null)  ==>  (this.east.east.spec one of { 0, 1 })
(return != null)  ==>  (this.east.entry.getClass().getName() in return.list[].getClass().getName())
(return != null)  ==>  (this.east.south.entry.getClass().getName() in return.list[].getClass().getName())
(return != null)  ==>  (this.east.south.south != null)
(return != null)  ==>  (this.east.south.spec one of { 0, 3 })
(return != null)  ==>  (this.entry == return)
(return != null)  ==>  (this.entry.getClass().getName() != return.list.getClass().getName())
(return != null)  ==>  (this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(return != null)  ==>  (this.south.east.entry != null)
(return != null)  ==>  (this.south.east.entry.getClass().getName() != this.entry.getClass().getName())
(return != null)  ==>  (this.south.east.entry.getClass().getName() != this.south.entry.getClass().getName())
(return != null)  ==>  (this.south.east.entry.getClass().getName() in return.list[].getClass().getName())
(return != null)  ==>  (this.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(return != null)  ==>  (this.south.entry.getClass().getName() in return.list[].getClass().getName())
(return != null)  ==>  (this.south.south.entry.getClass().getName() != this.south.east.entry.getClass().getName())
(return != null)  ==>  (this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(return != null)  ==>  (this.south.south.entry.getClass().getName() in return.list[].getClass().getName())
(return != null)  ==>  (this.south.south.spec one of { 0, 2 })
(return != null)  ==>  (this.south.spec one of { 0, 2, 3 })
(return == null)  ==>  (this.east.east.repeat == false)
(return == null)  ==>  (this.east.east.spec == 0)
(return == null)  ==>  (this.east.repeat == false)
(return == null)  ==>  (this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(return == null)  ==>  (this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(return == null)  ==>  (this.east.south.spec one of { 0, 2 })
(return == null)  ==>  (this.repeat == false)
(return == null)  ==>  (this.south.east == null)
(return == null)  ==>  (this.south.south.east == null)
(return == null)  ==>  (this.south.south.south == null)
(return == null)  ==>  (this.south.south.spec == 2)
(return == null)  ==>  (this.south.spec == 3)
(return == null)  ==>  (this.spec one of { 0, 1 })
return.type one of { 1, 2 }
return.name != null
return.optional == false
return.field == null
return.repeatList == false
return.list[] == []
return.list[].getClass().getName() == []
return.list.getClass().getName() == java.util.ArrayList.class
return.has == false
return.value == null
return.count == 0
this.south.south.entry.getClass().getName() != this.south.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() in return.list[].getClass().getName()
this.south.east.entry.getClass().getName() != this.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.entry.getClass().getName()
this.south.east.entry.getClass().getName() in return.list[].getClass().getName()
this.south.entry.getClass().getName() in return.list[].getClass().getName()
this.east.south.entry.getClass().getName() in return.list[].getClass().getName()
this.east.east.entry.getClass().getName() in return.list[].getClass().getName()
this.east.entry.getClass().getName() in return.list[].getClass().getName()
this.entry.getClass().getName() != return.list.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getOption():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.east == null
this.south.east == null
this.east.east.spec == 0
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getOption():::EXIT103
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.entry == return
this.south.south.south == null
this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.south.south has only one value
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.optional == false
this.east.south.spec == 0
this.east.east != null
this.east.east.repeat == false
this.east.repeat == false
this.east.spec == 0
this.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.repeat == false
return != null
this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getOption():::EXIT105
this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == true
this.east.south.spec one of { 2, 3 }
this.east.east.south == null
return == null
===========================================================================
com.fidelis.argface.ArgNode.getOption():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
(this.east.south.south has only one value)  <==>  (return != null)
(this.east.south.south has only one value)  <==>  (this.east.south.optional == false)
(this.east.south.south has only one value)  <==>  (this.east.south.spec == 0)
(this.east.south.south has only one value)  <==>  (this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName())
(this.east.south.south has only one value)  <==>  (this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName())
(this.east.south.south has only one value)  ==>  (return.argField == null)
(this.east.south.south has only one value)  ==>  (return.argFieldName.toString one of { "afterLines", "beforeLines" })
(this.east.south.south has only one value)  ==>  (return.argName.toString == "lines")
(this.east.south.south has only one value)  ==>  (return.argValue.toString == "5")
(this.east.south.south has only one value)  ==>  (return.count one of { 0, 1 })
(this.east.south.south has only one value)  ==>  (return.field == null)
(this.east.south.south has only one value)  ==>  (return.help != null)
(this.east.south.south has only one value)  ==>  (return.list == null)
(this.east.south.south has only one value)  ==>  (return.name != null)
(this.east.south.south has only one value)  ==>  (return.spec one of { 1, 3 })
(this.east.south.south has only one value)  ==>  (this.east.east != null)
(this.east.south.south has only one value)  ==>  (this.east.east.repeat == false)
(this.east.south.south has only one value)  ==>  (this.east.repeat == false)
(this.east.south.south has only one value)  ==>  (this.east.south.entry has only one value)
(this.east.south.south has only one value)  ==>  (this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.east.south.south has only one value)  ==>  (this.east.spec == 0)
(this.east.south.south has only one value)  ==>  (this.entry == return)
(this.east.south.south has only one value)  ==>  (this.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.east.south.south has only one value)  ==>  (this.repeat == false)
(this.east.south.south has only one value)  ==>  (this.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.east.south.south has only one value)  ==>  (this.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.east.south.south has only one value)  ==>  (this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.east.south.south has only one value)  ==>  (this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.east.south.south has only one value)  ==>  (this.south.south.south == null)
this.south.south.east == null
this.south.east == null
this.east.east.spec == 0
return.spec one of { 1, 3 }
return.name != null
return.field == null
return.count one of { 0, 1 }
return.argName.toString == "lines"
return.argFieldName.toString one of { "afterLines", "beforeLines" }
return.argField == null
return.argValue.toString == "5"
return.argOptional == false
return.argRepeat == false
return.repeat == false
return.repeatList == false
return.list == null
return.help != null
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getSouth():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.entry.getClass().getName() != this.south.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getSouth():::EXIT
this.south == return
this.south.south == return.south
this.south.south.south == return.south.south
this.south.south.east == return.south.east
this.south.south.entry == return.south.entry
this.south.south.entry.getClass().getName() == return.south.entry.getClass().getName()
this.south.south.optional == return.south.optional
this.south.south.repeat == return.south.repeat
this.south.south.spec == return.south.spec
this.south.east == return.east
this.south.east.south == return.east.south
this.south.east.east == return.east.east
this.south.east.entry == return.east.entry
this.south.east.entry.getClass().getName() == return.east.entry.getClass().getName()
this.south.east.optional == return.east.optional
this.south.east.repeat == return.east.repeat
this.south.east.spec == return.east.spec
this.south.entry == return.entry
this.south.entry.getClass().getName() == return.entry.getClass().getName()
this.south.optional == return.optional
this.south.repeat == return.repeat
this.south.spec == return.spec
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == return.south.entry.getClass().getName()
this.entry.getClass().getName() == return.entry.getClass().getName()
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
return == orig(this.south)
return.south == orig(this.south.south)
return.south.south == orig(this.south.south.south)
return.south.east == orig(this.south.south.east)
return.south.entry == orig(this.south.south.entry)
return.south.entry.getClass().getName() == return.entry.getClass().getName()
return.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
return.south.optional == return.optional
return.south.optional == orig(this.south.south.optional)
return.south.repeat == orig(this.south.south.repeat)
return.south.spec == orig(this.south.south.spec)
return.east == orig(this.south.east)
return.east.south == orig(this.south.east.south)
return.east.east == orig(this.south.east.east)
return.east.entry == orig(this.south.east.entry)
return.east.entry.getClass().getName() == orig(this.south.east.entry.getClass().getName())
return.east.optional == orig(this.south.east.optional)
return.east.repeat == orig(this.south.east.repeat)
return.east.spec == orig(this.south.east.spec)
return.entry == orig(this.south.entry)
return.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
return.optional == orig(this.south.optional)
return.repeat == orig(this.south.repeat)
return.spec == orig(this.south.spec)
return.south.entry != null
return.south.repeat == false
return.south.spec one of { 0, 2 }
return.east.entry != null
return.east.repeat == false
return.east.spec == 0
return.entry != null
return.repeat == false
return.spec one of { 0, 2, 3 }
this.east.south.entry.getClass().getName() != return.south.entry.getClass().getName()
this.east.south.entry.getClass().getName() != return.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() != return.entry.getClass().getName()
this.entry.getClass().getName() != return.east.entry.getClass().getName()
return.south.entry.getClass().getName() != return.east.entry.getClass().getName()
return.east.entry.getClass().getName() != return.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getSpec():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.south == null
this.south.south.east == null
this.south.south.optional == true
this.south.south.spec == 2
this.south.east == null
this.east.south.south has only one value
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.optional == false
this.east.south.spec == 0
this.east.east.repeat == false
this.east.east.spec == 0
this.east.repeat == false
this.east.spec == 0
this.repeat == false
this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.getSpec():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == return
return == orig(this.spec)
this.south.south.south == null
this.south.south.east == null
this.south.south.optional == true
this.south.south.spec == 2
this.south.east == null
this.east.south.south has only one value
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.optional == false
this.east.south.spec == 0
this.east.east.repeat == false
this.east.east.spec == 0
this.east.repeat == false
this.east.spec == 0
this.repeat == false
return >= 0
this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isGroup():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.east == null
this.south.east == null
this.east.east.spec == 0
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isGroup():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
(this.east.south.south != null)  <==>  (return == false)
(this.east.south.south != null)  <==>  (this.east.south.spec one of { 0, 3 })
(this.east.south.south != null)  <==>  (this.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.east.south.south != null)  <==>  (this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.east.south.south != null)  ==>  (this.east.east.entry != null)
(this.east.south.south != null)  ==>  (this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.east.south.south != null)  ==>  (this.south.south.spec one of { 0, 2 })
(this.east.south.south != null)  ==>  (this.south.spec one of { 0, 2, 3 })
(this.east.south.south == null)  <==>  (return == true)
(this.east.south.south == null)  <==>  (this.east.south.spec == 2)
(this.east.south.south == null)  <==>  (this.south.entry.getClass().getName() != this.east.entry.getClass().getName())
(this.east.south.south == null)  <==>  (this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName())
(this.east.south.south == null)  <==>  (this.south.south.entry.getClass().getName() != this.east.entry.getClass().getName())
(this.east.south.south == null)  <==>  (this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName())
(this.east.south.south == null)  ==>  (this.east.east == null)
(this.east.south.south == null)  ==>  (this.east.entry.getClass().getName() != this.entry.getClass().getName())
(this.east.south.south == null)  ==>  (this.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.east.south.south == null)  ==>  (this.east.repeat == false)
(this.east.south.south == null)  ==>  (this.east.south.entry has only one value)
(this.east.south.south == null)  ==>  (this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.east.south.south == null)  ==>  (this.east.south.optional == true)
(this.east.south.south == null)  ==>  (this.entry.getClass().getName() == com.fidelis.argface.ArgList.class)
(this.east.south.south == null)  ==>  (this.repeat == false)
(this.east.south.south == null)  ==>  (this.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)
(this.east.south.south == null)  ==>  (this.south.optional == false)
(this.east.south.south == null)  ==>  (this.south.south.entry has only one value)
(this.east.south.south == null)  ==>  (this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class)
(this.east.south.south == null)  ==>  (this.south.south.optional == false)
(this.east.south.south == null)  ==>  (this.south.south.south == null)
(this.east.south.south == null)  ==>  (this.south.south.spec == 2)
(this.east.south.south == null)  ==>  (this.south.spec one of { 2, 3 })
(this.east.south.south == null)  ==>  (this.spec one of { 0, 2, 3 })
this.south.south.east == null
this.south.east == null
this.east.east.spec == 0
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isGroup():::EXIT;condition="return == true"
this.south.south.south == null
this.south.south.entry has only one value
this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.south.south.optional == false
this.south.south.spec == 2
this.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.south.optional == false
this.south.spec one of { 2, 3 }
this.east.south.south == null
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.optional == true
this.east.south.spec == 2
this.east.east == null
this.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.repeat == false
this.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.repeat == false
this.spec one of { 0, 2, 3 }
return == true
this.south.south.entry.getClass().getName() != this.east.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.entry.getClass().getName()
this.east.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isGroup():::EXIT;condition="not(return == true)"
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.south != null
this.east.south.spec one of { 0, 3 }
return == false
===========================================================================
com.fidelis.argface.ArgNode.isOperand():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.entry.getClass().getName() != this.south.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isOperand():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.east.south == orig(this.south.east.south)
this.south.east.east == orig(this.south.east.east)
this.south.east.entry == orig(this.south.east.entry)
this.south.east.entry.getClass().getName() == orig(this.south.east.entry.getClass().getName())
this.south.east.optional == orig(this.south.east.optional)
this.south.east.repeat == orig(this.south.east.repeat)
this.south.east.spec == orig(this.south.east.spec)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
(return == false)  ==>  (this.east.east.repeat == false)
(return == false)  ==>  (this.east.east.spec == 0)
(return == false)  ==>  (this.east.repeat == false)
(return == false)  ==>  (this.east.south.entry.getClass().getName() != this.entry.getClass().getName())
(return == false)  ==>  (this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(return == false)  ==>  (this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(return == false)  ==>  (this.east.south.spec one of { 0, 2 })
(return == false)  ==>  (this.repeat == false)
(return == false)  ==>  (this.south.east == null)
(return == false)  ==>  (this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName())
(return == false)  ==>  (this.south.south.east == null)
(return == false)  ==>  (this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName())
(return == false)  ==>  (this.south.south.south == null)
(return == true)  ==>  (this.east.east.spec one of { 0, 1 })
(return == true)  ==>  (this.east.south.south != null)
(return == true)  ==>  (this.east.south.spec one of { 0, 3 })
(return == true)  ==>  (this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(return == true)  ==>  (this.south.east.entry != null)
(return == true)  ==>  (this.south.east.entry.getClass().getName() != this.entry.getClass().getName())
(return == true)  ==>  (this.south.east.entry.getClass().getName() != this.south.entry.getClass().getName())
(return == true)  ==>  (this.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(return == true)  ==>  (this.south.south.entry.getClass().getName() != this.south.east.entry.getClass().getName())
(return == true)  ==>  (this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
this.south.south.entry.getClass().getName() != this.south.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.south.entry.getClass().getName()
this.south.east.entry.getClass().getName() != this.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isOperand():::EXIT;condition="return == true"
this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.south != null
this.east.south.spec one of { 0, 3 }
this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return == true
===========================================================================
com.fidelis.argface.ArgNode.isOperand():::EXIT;condition="not(return == true)"
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.spec one of { 0, 2 }
this.east.east.repeat == false
this.east.east.spec == 0
this.east.repeat == false
this.repeat == false
return == false
this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isOption():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.east == null
this.south.east == null
this.east.east.spec == 0
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isOption():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
(this.east.south.optional == false)  <==>  (return == true)
(this.east.south.optional == false)  <==>  (this.east.south.spec == 0)
(this.east.south.optional == false)  <==>  (this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName())
(this.east.south.optional == false)  <==>  (this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName())
(this.east.south.optional == false)  ==>  (this.east.east.repeat == false)
(this.east.south.optional == false)  ==>  (this.east.repeat == false)
(this.east.south.optional == false)  ==>  (this.east.south.entry has only one value)
(this.east.south.optional == false)  ==>  (this.east.south.entry.getClass().getName() != this.entry.getClass().getName())
(this.east.south.optional == false)  ==>  (this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.east.south.optional == false)  ==>  (this.east.south.south != null)
(this.east.south.optional == false)  ==>  (this.east.south.south has only one value)
(this.east.south.optional == false)  ==>  (this.east.spec == 0)
(this.east.south.optional == false)  ==>  (this.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.east.south.optional == false)  ==>  (this.repeat == false)
(this.east.south.optional == false)  ==>  (this.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.east.south.optional == false)  ==>  (this.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.east.south.optional == false)  ==>  (this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.east.south.optional == false)  ==>  (this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.east.south.optional == false)  ==>  (this.south.south.south == null)
(this.east.south.optional == true)  <==>  (return == false)
(this.east.south.optional == true)  <==>  (this.east.south.spec one of { 2, 3 })
(this.east.south.optional == true)  <==>  (this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName())
(this.east.south.optional == true)  <==>  (this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.east.south.optional == true)  <==>  (this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName())
(this.east.south.optional == true)  <==>  (this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.east.south.optional == true)  ==>  (this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.east.south.optional == true)  ==>  (this.east.east.south == null)
(this.east.south.optional == true)  ==>  (this.east.spec one of { 0, 1 })
this.south.south.east == null
this.south.east == null
this.east.east.spec == 0
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isOption():::EXIT;condition="return == true"
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.south == null
this.south.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.south.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.south.south has only one value
this.east.south.south != null
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.optional == false
this.east.south.spec == 0
this.east.east.repeat == false
this.east.repeat == false
this.east.spec == 0
this.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.repeat == false
return == true
this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isOption():::EXIT;condition="not(return == true)"
this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == true
this.east.south.spec one of { 2, 3 }
this.east.east.south == null
return == false
===========================================================================
com.fidelis.argface.ArgNode.isOptional():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.east == null
this.south.east == null
this.east.east.spec == 0
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isOptional():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == return
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == return
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == return
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
return == orig(this.optional)
(this.south.south.optional == false)  <==>  (return == false)
(this.south.south.optional == false)  <==>  (this.east.south.optional == true)
(this.south.south.optional == false)  <==>  (this.east.south.spec one of { 2, 3 })
(this.south.south.optional == false)  <==>  (this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName())
(this.south.south.optional == false)  <==>  (this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.south.south.optional == false)  <==>  (this.south.optional == false)
(this.south.south.optional == false)  <==>  (this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName())
(this.south.south.optional == false)  <==>  (this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(this.south.south.optional == false)  ==>  (this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.south.south.optional == false)  ==>  (this.east.east.south == null)
(this.south.south.optional == false)  ==>  (this.east.spec one of { 0, 1 })
(this.south.south.optional == false)  ==>  (this.south.south.spec one of { 0, 2 })
(this.south.south.optional == false)  ==>  (this.south.spec one of { 0, 2, 3 })
(this.south.south.optional == false)  ==>  (this.spec one of { 0, 2, 3 })
(this.south.south.optional == true)  <==>  (return == true)
(this.south.south.optional == true)  <==>  (this.east.south.optional == false)
(this.south.south.optional == true)  <==>  (this.east.south.spec == 0)
(this.south.south.optional == true)  <==>  (this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName())
(this.south.south.optional == true)  <==>  (this.south.optional == true)
(this.south.south.optional == true)  <==>  (this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName())
(this.south.south.optional == true)  ==>  (this.east.east.repeat == false)
(this.south.south.optional == true)  ==>  (this.east.repeat == false)
(this.south.south.optional == true)  ==>  (this.east.south.entry has only one value)
(this.south.south.optional == true)  ==>  (this.east.south.entry.getClass().getName() != this.entry.getClass().getName())
(this.south.south.optional == true)  ==>  (this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.south.south.optional == true)  ==>  (this.east.south.south has only one value)
(this.south.south.optional == true)  ==>  (this.east.spec == 0)
(this.south.south.optional == true)  ==>  (this.repeat == false)
(this.south.south.optional == true)  ==>  (this.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.south.south.optional == true)  ==>  (this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(this.south.south.optional == true)  ==>  (this.south.south.south == null)
(this.south.south.optional == true)  ==>  (this.south.south.spec == 2)
(this.south.south.optional == true)  ==>  (this.south.spec one of { 2, 3 })
this.south.south.east == null
this.south.east == null
this.east.east.spec == 0
this.south.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.south.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isOptional():::EXIT;condition="return == true"
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.south == null
this.south.south.optional == true
this.south.south.spec == 2
this.south.optional == true
this.south.spec one of { 2, 3 }
this.east.south.south has only one value
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.east.south.optional == false
this.east.south.spec == 0
this.east.east.repeat == false
this.east.repeat == false
this.east.spec == 0
this.repeat == false
return == true
this.south.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() != this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() != this.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgNode.isOptional():::EXIT;condition="not(return == true)"
this.south.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.east.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.optional == false
this.south.optional == false
this.east.south.optional == true
this.east.south.spec one of { 2, 3 }
this.east.east.south == null
this.spec one of { 0, 2, 3 }
return == false
===========================================================================
com.fidelis.argface.ArgNode.isRepeat():::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.south.south.east == null
this.south.east == null
this.east.south.south != null
this.east.south.spec one of { 0, 3 }
this.east.east.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.isRepeat():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == this.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == return
this.spec == orig(this.spec)
return == orig(this.repeat)
(return == false)  ==>  (this.east.east.entry != null)
(return == false)  ==>  (this.east.entry != null)
(return == false)  ==>  (this.east.south.east == null)
(return == false)  ==>  (this.east.south.entry != null)
(return == false)  ==>  (this.east.south.entry.getClass().getName() == this.east.east.entry.getClass().getName())
(return == false)  ==>  (this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(return == false)  ==>  (this.east.south.optional == this.east.optional)
(return == false)  ==>  (this.east.south.south != null)
(return == false)  ==>  (this.east.south.spec one of { 0, 3 })
(return == false)  ==>  (this.east.spec one of { 0, 1 })
(return == false)  ==>  (this.south.east == null)
(return == false)  ==>  (this.south.entry != null)
(return == false)  ==>  (this.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(return == false)  ==>  (this.south.entry.getClass().getName() == this.entry.getClass().getName())
(return == false)  ==>  (this.south.optional == this.optional)
(return == false)  ==>  (this.south.south.east == null)
(return == false)  ==>  (this.south.south.entry != null)
(return == false)  ==>  (this.south.south.entry.getClass().getName() == this.east.entry.getClass().getName())
(return == false)  ==>  (this.south.south.entry.getClass().getName() == this.entry.getClass().getName())
(return == false)  ==>  (this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName())
(return == false)  ==>  (this.south.south.optional == this.optional)
(return == false)  ==>  (this.south.south.optional == this.south.optional)
(return == false)  ==>  (this.south.south.spec one of { 0, 2 })
(return == false)  ==>  (this.south.spec one of { 0, 2, 3 })
(return == true)  ==>  (orig(this) has only one value)
(return == true)  ==>  (this.east == null)
(return == true)  ==>  (this.entry has only one value)
(return == true)  ==>  (this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(return == true)  ==>  (this.optional == false)
(return == true)  ==>  (this.south == null)
(return == true)  ==>  (this.spec == 0)
this.south.south.east == null
this.south.east == null
this.east.south.south != null
this.east.south.spec one of { 0, 3 }
this.east.east.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.isRepeat():::EXIT;condition="return == true"
this.south == null
this.east == null
this.entry has only one value
this.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.optional == false
this.spec == 0
return == true
orig(this) has only one value
===========================================================================
com.fidelis.argface.ArgNode.isRepeat():::EXIT;condition="not(return == true)"
return == false
===========================================================================
com.fidelis.argface.ArgNode.setEast(com.fidelis.argface.ArgNode):::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
arg0.east.entry.getClass().getName() == arg0.entry.getClass().getName()
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 3 }
this.east == null
this.repeat == false
this.spec one of { 0, 1 }
arg0.south == null
arg0.east.south == null
arg0.east.east == null
arg0.east.entry has only one value
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == true
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry != null
arg0.repeat == false
arg0.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.setEast(com.fidelis.argface.ArgNode):::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == this.optional
this.south.optional == orig(this.south.south.optional)
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(arg0)
this.east.east == arg0.east
this.east.east.east == orig(this.east)
this.east.east.optional == arg0.east.optional
this.east.entry == arg0.entry
this.east.entry.getClass().getName() == arg0.entry.getClass().getName()
this.east.optional == arg0.optional
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
arg0.south == orig(arg0.south)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 3 }
this.east.south == null
this.east.east.south == null
this.east.east.east == null
this.east.east.repeat == false
this.east.east.spec == 0
this.east.repeat == false
this.east.spec == 0
this.repeat == false
this.spec one of { 0, 1 }
arg0.south == null
arg0.east.south == null
arg0.east.east == null
arg0.east.entry has only one value
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == true
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry != null
arg0.repeat == false
arg0.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.setEntry(java.lang.Object):::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == arg0.getClass().getName()
this.south.south.optional == this.south.optional
this.south.entry.getClass().getName() == arg0.getClass().getName()
this.east.entry.getClass().getName() == arg0.getClass().getName()
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east.south == null
this.east.east has only one value
this.east.east.south == null
this.east.east.east == null
this.east.east.entry has only one value
this.east.east.optional == true
this.east.east.repeat == false
this.east.east.spec == 0
this.east.entry has only one value
this.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.optional == true
this.east.repeat == false
this.east.spec == 0
this.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.repeat == false
this.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.setEntry(java.lang.Object):::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry.getClass().getName() == this.entry.getClass().getName()
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(arg0)
this.entry.getClass().getName() == orig(arg0.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east.south == null
this.east.east has only one value
this.east.east.south == null
this.east.east.east == null
this.east.east.entry has only one value
this.east.east.optional == true
this.east.east.repeat == false
this.east.east.spec == 0
this.east.entry has only one value
this.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.optional == true
this.east.repeat == false
this.east.spec == 0
this.repeat == false
this.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.setOptional(boolean):::ENTER
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.optional == this.optional
this.south.south == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east == null
this.repeat == false
this.spec one of { 0, 2 }
===========================================================================
com.fidelis.argface.ArgNode.setOptional(boolean):::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == orig(this.south.optional)
this.south.optional == orig(this.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(arg0)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
this.south.south == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east == null
this.repeat == false
this.spec one of { 0, 2 }
===========================================================================
com.fidelis.argface.ArgNode.setRepeat(boolean):::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.east.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east.south == null
this.east.east has only one value
this.east.east.south == null
this.east.east.east == null
this.east.east.entry has only one value
this.east.east.optional == true
this.east.east.repeat == false
this.east.east.spec == 0
this.east.entry has only one value
this.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.optional == true
this.east.repeat == false
this.east.spec == 0
this.repeat == false
this.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.setRepeat(boolean):::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry.getClass().getName() == this.entry.getClass().getName()
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(arg0)
this.spec == orig(this.spec)
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east.south == null
this.east.east has only one value
this.east.east.south == null
this.east.east.east == null
this.east.east.entry has only one value
this.east.east.optional == true
this.east.east.repeat == false
this.east.east.spec == 0
this.east.entry has only one value
this.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.east.optional == true
this.east.repeat == false
this.east.spec == 0
this.spec == 0
===========================================================================
com.fidelis.argface.ArgNode.setSouth(com.fidelis.argface.ArgNode):::ENTER
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.optional == arg0.optional
this.south == null
this.east.south.south has only one value
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.east.south.optional == false
this.east.south.spec == 3
this.east.east.optional == true
this.east.east.repeat == false
this.east.repeat == false
this.east.spec == 0
this.repeat == false
this.spec == 0
arg0.south.south == null
arg0.south.east == null
arg0.south.repeat == false
arg0.south.spec one of { 0, 2 }
arg0.east == null
arg0.entry != null
arg0.repeat == false
arg0.spec one of { 0, 2 }
===========================================================================
com.fidelis.argface.ArgNode.setSouth(com.fidelis.argface.ArgNode):::EXIT
this.south == orig(arg0)
this.south.south == arg0.south
this.south.south.entry == arg0.south.entry
this.south.south.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.south.south.optional == arg0.south.optional
this.south.south.spec == arg0.south.spec
this.south.entry == arg0.entry
this.south.entry.getClass().getName() == arg0.entry.getClass().getName()
this.south.optional == arg0.optional
this.south.spec == arg0.spec
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == this.east.entry.getClass().getName()
this.east.south.optional == this.east.optional
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == arg0.optional
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.east.south.south has only one value
this.east.south.entry has only one value
this.east.south.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.east.south.optional == false
this.east.south.spec == 3
this.east.east.optional == true
this.east.east.repeat == false
this.east.repeat == false
this.east.spec == 0
this.repeat == false
this.spec == 0
arg0.south.south == null
arg0.south.east == null
arg0.south.repeat == false
arg0.south.spec one of { 0, 2 }
arg0.east == null
arg0.entry != null
arg0.repeat == false
arg0.spec one of { 0, 2 }
===========================================================================
com.fidelis.argface.ArgNode.setSpec(int):::ENTER
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.optional == this.south.optional
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east == null
this.repeat == false
this.spec one of { 0, 2, 3 }
arg0 one of { 1, 2, 3 }
===========================================================================
com.fidelis.argface.ArgNode.setSpec(int):::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == this.south.entry.getClass().getName()
this.south.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == this.south.optional
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == this.entry.getClass().getName()
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(arg0)
this.south.south.south == null
this.south.south.east == null
this.south.east == null
this.south.spec one of { 0, 2 }
this.east == null
this.repeat == false
this.spec one of { 1, 2, 3 }
===========================================================================
com.fidelis.argface.ArgNode.toString():::ENTER
===========================================================================
com.fidelis.argface.ArgNode.toString():::EXIT
this.south == orig(this.south)
this.south.south == orig(this.south.south)
this.south.south.south == orig(this.south.south.south)
this.south.south.east == orig(this.south.south.east)
this.south.south.entry == orig(this.south.south.entry)
this.south.south.entry.getClass().getName() == orig(this.south.south.entry.getClass().getName())
this.south.south.optional == orig(this.south.south.optional)
this.south.south.repeat == orig(this.south.south.repeat)
this.south.south.spec == orig(this.south.south.spec)
this.south.east == orig(this.south.east)
this.south.east.south == orig(this.south.east.south)
this.south.east.east == orig(this.south.east.east)
this.south.east.entry == orig(this.south.east.entry)
this.south.east.entry.getClass().getName() == orig(this.south.east.entry.getClass().getName())
this.south.east.optional == orig(this.south.east.optional)
this.south.east.repeat == orig(this.south.east.repeat)
this.south.east.spec == orig(this.south.east.spec)
this.south.entry == orig(this.south.entry)
this.south.entry.getClass().getName() == orig(this.south.entry.getClass().getName())
this.south.optional == orig(this.south.optional)
this.south.repeat == orig(this.south.repeat)
this.south.spec == orig(this.south.spec)
this.east == orig(this.east)
this.east.south == orig(this.east.south)
this.east.south.south == orig(this.east.south.south)
this.east.south.east == orig(this.east.south.east)
this.east.south.entry == orig(this.east.south.entry)
this.east.south.entry.getClass().getName() == orig(this.east.south.entry.getClass().getName())
this.east.south.optional == orig(this.east.south.optional)
this.east.south.repeat == orig(this.east.south.repeat)
this.east.south.spec == orig(this.east.south.spec)
this.east.east == orig(this.east.east)
this.east.east.south == orig(this.east.east.south)
this.east.east.east == orig(this.east.east.east)
this.east.east.entry == orig(this.east.east.entry)
this.east.east.entry.getClass().getName() == orig(this.east.east.entry.getClass().getName())
this.east.east.optional == orig(this.east.east.optional)
this.east.east.repeat == orig(this.east.east.repeat)
this.east.east.spec == orig(this.east.east.spec)
this.east.entry == orig(this.east.entry)
this.east.entry.getClass().getName() == orig(this.east.entry.getClass().getName())
this.east.optional == orig(this.east.optional)
this.east.repeat == orig(this.east.repeat)
this.east.spec == orig(this.east.spec)
this.entry == orig(this.entry)
this.entry.getClass().getName() == orig(this.entry.getClass().getName())
this.optional == orig(this.optional)
this.repeat == orig(this.repeat)
this.spec == orig(this.spec)
return != null
===========================================================================
com.fidelis.argface.ArgOperand:::CLASS
===========================================================================
com.fidelis.argface.ArgOperand:::OBJECT
this.type one of { 0, 1, 2 }
this.optional == false
this.field == null
this.repeatList == false
this.list[] elements != null
this.list[].getClass().getName() elements == java.lang.String.class
this.list.getClass().getName() == java.util.ArrayList.class
this.count >= 0
===========================================================================
com.fidelis.argface.ArgOperand.ArgOperand():::EXIT
this.type == 0
this.name == null
this.fieldName == null
this.setter == null
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.addList(java.lang.String):::ENTER
this has only one value
this.type == 1
this.name has only one value
this.name != null
this.name.toString == "file"
this.fieldName has only one value
this.fieldName != null
this.fieldName.toString == "fileOperand"
this.setter has only one value
this.setter != null
this.repeat == true
this.list has only one value
this.list != null
this.has == true
this.value != null
arg0 != null
===========================================================================
com.fidelis.argface.ArgOperand.addList(java.lang.String):::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
arg0.toString == orig(arg0.toString)
size(this.list[])-1 == orig(size(this.list[]))
this.type == 1
this.name has only one value
this.name != null
this.name.toString == "file"
this.fieldName has only one value
this.fieldName != null
this.fieldName.toString == "fileOperand"
this.setter has only one value
this.setter != null
this.repeat == true
this.list has only one value
this.list != null
this.has == true
this.value != null
===========================================================================
com.fidelis.argface.ArgOperand.getCount():::ENTER
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.has == true
this.value != null
===========================================================================
com.fidelis.argface.ArgOperand.getCount():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.has == true
this.value != null
return >= 0
===========================================================================
com.fidelis.argface.ArgOperand.getField():::ENTER
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.count one of { 1, 3, 9 }
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.getField():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.count one of { 1, 3, 9 }
return == null
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.getList():::ENTER
this has only one value
this.type == 1
this.name has only one value
this.name != null
this.name.toString == "file"
this.fieldName has only one value
this.fieldName != null
this.fieldName.toString == "fileOperand"
this.setter has only one value
this.setter != null
this.repeat == true
this.list has only one value
this.list != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.value.toString one of { "file3", "more6" }
this.count one of { 3, 9 }
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.getList():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
this.type == 1
this.name has only one value
this.name != null
this.name.toString == "file"
this.fieldName has only one value
this.fieldName != null
this.fieldName.toString == "fileOperand"
this.setter has only one value
this.setter != null
this.repeat == true
this.list has only one value
this.list != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.value.toString one of { "file3", "more6" }
this.count one of { 3, 9 }
return has only one value
return != null
return[] elements != null
return[].getClass().getName() elements == java.lang.String.class
return[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
return.getClass().getName() == java.util.ArrayList.class
size(this.list[]) one of { 3, 9 }
size(return[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.getName():::ENTER
this.type one of { 1, 2 }
this.name != null
size(this.list[]) one of { 0, 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.getName():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
this.type one of { 1, 2 }
this.name != null
return != null
size(this.list[]) one of { 0, 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.getSetter():::ENTER
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.count one of { 1, 3, 9 }
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.getSetter():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.count one of { 1, 3, 9 }
return != null
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.getSpecText():::ENTER
this.type one of { 1, 2 }
this.name != null
this.list[] == []
this.list[].getClass().getName() == []
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.getSpecText():::EXIT286
this.type == 2
this.repeat == false
this.list == null
===========================================================================
com.fidelis.argface.ArgOperand.getSpecText():::EXIT289
this.type == 1
this.name.toString one of { "file", "other", "pattern" }
this.fieldName.toString one of { "fileOperand", "otherOperand", "patternOperand" }
return.toString one of { "<file>", "<other>", "<pattern>" }
===========================================================================
com.fidelis.argface.ArgOperand.getSpecText():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.count == orig(this.count)
this.type one of { 1, 2 }
this.name != null
this.list[] == []
this.list[].getClass().getName() == []
this.has == false
this.value == null
this.count == 0
return != null
===========================================================================
com.fidelis.argface.ArgOperand.getValue():::ENTER
this.type == 1
this.name != null
this.name.toString one of { "file", "other", "pattern" }
this.fieldName != null
this.fieldName.toString one of { "fileOperand", "otherOperand", "patternOperand" }
this.setter != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.count one of { 1, 3, 9 }
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.getValue():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
this.type == 1
this.name != null
this.name.toString one of { "file", "other", "pattern" }
this.fieldName != null
this.fieldName.toString one of { "fileOperand", "otherOperand", "patternOperand" }
this.setter != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.count one of { 1, 3, 9 }
return != null
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.has():::ENTER
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.has():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
(this.has == false)  <==>  (return == false)
(this.has == false)  <==>  (this.count == 0)
(this.has == false)  <==>  (this.value == null)
(this.has == false)  ==>  (orig(this) has only one value)
(this.has == false)  ==>  (this.fieldName has only one value)
(this.has == false)  ==>  (this.fieldName.toString == "endingOperand")
(this.has == false)  ==>  (this.list == null)
(this.has == false)  ==>  (this.name has only one value)
(this.has == false)  ==>  (this.name.toString == "ending")
(this.has == false)  ==>  (this.repeat == false)
(this.has == false)  ==>  (this.setter has only one value)
(this.has == false)  ==>  (this.type == 2)
(this.has == true)  <==>  (return == true)
(this.has == true)  <==>  (this.count one of { 1, 3, 9 })
(this.has == true)  <==>  (this.value != null)
(this.has == true)  ==>  (size(this.list[]) one of { 3, 9 })
(this.has == true)  ==>  (this.list.getClass().getName() == java.util.ArrayList.class)
(this.has == true)  ==>  (this.list[] elements != null)
(this.has == true)  ==>  (this.list[].getClass().getName() elements == java.lang.String.class)
(this.has == true)  ==>  (this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] })
(this.has == true)  ==>  (this.type one of { 1, 2 })
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.has():::EXIT;condition="return == true"
this.has == true
this.value != null
this.count one of { 1, 3, 9 }
return == true
===========================================================================
com.fidelis.argface.ArgOperand.has():::EXIT;condition="not(return == true)"
this.type == 2
this.name has only one value
this.name.toString == "ending"
this.fieldName has only one value
this.fieldName.toString == "endingOperand"
this.setter has only one value
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
return == false
orig(this) has only one value
===========================================================================
com.fidelis.argface.ArgOperand.isLiteral():::ENTER
this.type one of { 1, 2 }
this.name != null
size(this.list[]) one of { 0, 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.isLiteral():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
(this.type == 1)  <==>  (return == false)
(this.type == 1)  ==>  (size(this.list[]) one of { 0, 3, 9 })
(this.type == 1)  ==>  (this.fieldName.toString one of { "fileOperand", "otherOperand", "patternOperand" })
(this.type == 1)  ==>  (this.list.getClass().getName() == java.util.ArrayList.class)
(this.type == 1)  ==>  (this.list[] elements != null)
(this.type == 1)  ==>  (this.list[].getClass().getName() elements == java.lang.String.class)
(this.type == 1)  ==>  (this.name.toString one of { "file", "other", "pattern" })
(this.type == 2)  <==>  (return == true)
(this.type == 2)  ==>  (this.count one of { 0, 1 })
(this.type == 2)  ==>  (this.list == null)
(this.type == 2)  ==>  (this.repeat == false)
(this.type == 2)  ==>  (this.value.toString == "ending")
this.type one of { 1, 2 }
this.name != null
size(this.list[]) one of { 0, 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.isLiteral():::EXIT;condition="return == true"
this.type == 2
this.repeat == false
this.list == null
this.value.toString == "ending"
this.count one of { 0, 1 }
return == true
===========================================================================
com.fidelis.argface.ArgOperand.isLiteral():::EXIT;condition="not(return == true)"
this.type == 1
this.name.toString one of { "file", "other", "pattern" }
this.fieldName.toString one of { "fileOperand", "otherOperand", "patternOperand" }
return == false
===========================================================================
com.fidelis.argface.ArgOperand.isRepeat():::ENTER
this.type one of { 1, 2 }
this.name != null
===========================================================================
com.fidelis.argface.ArgOperand.isRepeat():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
(this.repeat == false)  <==>  (return == false)
(this.repeat == false)  ==>  (this.count one of { 0, 1 })
(this.repeat == false)  ==>  (this.list == null)
(this.repeat == false)  ==>  (this.type one of { 1, 2 })
(this.repeat == true)  <==>  (return == true)
(this.repeat == true)  ==>  (orig(this) has only one value)
(this.repeat == true)  ==>  (this.fieldName.toString == "fileOperand")
(this.repeat == true)  ==>  (this.list.getClass().getName() == java.util.ArrayList.class)
(this.repeat == true)  ==>  (this.list[] elements != null)
(this.repeat == true)  ==>  (this.list[].getClass().getName() elements == java.lang.String.class)
(this.repeat == true)  ==>  (this.name has only one value)
(this.repeat == true)  ==>  (this.name.toString == "file")
(this.repeat == true)  ==>  (this.type == 1)
this.type one of { 1, 2 }
this.name != null
===========================================================================
com.fidelis.argface.ArgOperand.isRepeat():::EXIT;condition="return == true"
this.type == 1
this.name has only one value
this.name.toString == "file"
this.fieldName.toString == "fileOperand"
this.repeat == true
return == true
orig(this) has only one value
===========================================================================
com.fidelis.argface.ArgOperand.isRepeat():::EXIT;condition="not(return == true)"
this.repeat == false
this.list == null
this.count one of { 0, 1 }
return == false
===========================================================================
com.fidelis.argface.ArgOperand.isRepeatList():::ENTER
this has only one value
this.type == 1
this.name has only one value
this.name != null
this.name.toString == "file"
this.fieldName has only one value
this.fieldName != null
this.fieldName.toString == "fileOperand"
this.setter has only one value
this.setter != null
this.repeat == true
this.list has only one value
this.list != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.value.toString one of { "file3", "more6" }
this.count one of { 3, 9 }
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.isRepeatList():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
this.type == 1
this.name has only one value
this.name != null
this.name.toString == "file"
this.fieldName has only one value
this.fieldName != null
this.fieldName.toString == "fileOperand"
this.setter has only one value
this.setter != null
this.repeat == true
this.list has only one value
this.list != null
this.list[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.has == true
this.value != null
this.value.toString one of { "file3", "more6" }
this.count one of { 3, 9 }
return == false
size(this.list[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.isRepeatList():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgOperand.isVariable():::ENTER
this.type one of { 1, 2 }
this.name != null
===========================================================================
com.fidelis.argface.ArgOperand.isVariable():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
(this.type == 1)  <==>  (return == true)
(this.type == 1)  <==>  (this.fieldName.toString one of { "fileOperand", "otherOperand", "patternOperand" })
(this.type == 1)  <==>  (this.name.toString one of { "file", "other", "pattern" })
(this.type == 1)  ==>  (this.list.getClass().getName() == java.util.ArrayList.class)
(this.type == 1)  ==>  (this.list[] elements != null)
(this.type == 1)  ==>  (this.list[].getClass().getName() elements == java.lang.String.class)
(this.type == 2)  <==>  (return == false)
(this.type == 2)  <==>  (this.fieldName.toString == "endingOperand")
(this.type == 2)  <==>  (this.name.toString == "ending")
(this.type == 2)  ==>  (orig(this) has only one value)
(this.type == 2)  ==>  (this.count == 0)
(this.type == 2)  ==>  (this.fieldName has only one value)
(this.type == 2)  ==>  (this.has == false)
(this.type == 2)  ==>  (this.list == null)
(this.type == 2)  ==>  (this.name has only one value)
(this.type == 2)  ==>  (this.repeat == false)
(this.type == 2)  ==>  (this.setter has only one value)
(this.type == 2)  ==>  (this.value == null)
this.type one of { 1, 2 }
this.name != null
===========================================================================
com.fidelis.argface.ArgOperand.isVariable():::EXIT;condition="return == true"
this.type == 1
this.name.toString one of { "file", "other", "pattern" }
this.fieldName.toString one of { "fileOperand", "otherOperand", "patternOperand" }
return == true
===========================================================================
com.fidelis.argface.ArgOperand.isVariable():::EXIT;condition="not(return == true)"
this.type == 2
this.name has only one value
this.name.toString == "ending"
this.fieldName has only one value
this.fieldName.toString == "endingOperand"
this.setter has only one value
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
return == false
orig(this) has only one value
===========================================================================
com.fidelis.argface.ArgOperand.literal():::ENTER
this.type == 0
this.name == null
this.fieldName == null
this.setter == null
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.literal():::EXIT
this.name == orig(this.name)
this.fieldName == orig(this.fieldName)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.has == orig(this.has)
this.value == orig(this.value)
this.count == orig(this.count)
this.type == 2
this.name == null
this.fieldName == null
this.setter == null
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
return != null
return.type == 2
return.name == null
return.fieldName == null
return.optional == false
return.setter == null
return.field == null
return.repeat == false
return.repeatList == false
return.list == null
return.has == false
return.value == null
return.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.reset():::ENTER
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
size(this.list[]) one of { 0, 3, 9 }
===========================================================================
com.fidelis.argface.ArgOperand.reset():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.list[] == []
this.list[].getClass().getName() == []
this.has == false
this.value == null
this.count == 0
this.count <= orig(this.count)
size(this.list[]) <= orig(size(this.list[]))
size(this.list[]) != orig(size(this.list[]))-1
size(this.list[])-1 <= orig(size(this.list[]))-1
===========================================================================
com.fidelis.argface.ArgOperand.setCount(int):::ENTER
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.has == true
this.value != null
arg0 >= 1
===========================================================================
com.fidelis.argface.ArgOperand.setCount(int):::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.has == true
this.value != null
this.count >= 1
this.count - orig(this.count) - 1 == 0
===========================================================================
com.fidelis.argface.ArgOperand.setFieldName(java.lang.String):::ENTER
this.type one of { 1, 2 }
this.fieldName == null
this.setter == null
this.list[] == []
this.list[].getClass().getName() == []
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.setFieldName(java.lang.String):::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.count == orig(this.count)
arg0.toString == orig(arg0.toString)
this.type one of { 1, 2 }
this.setter == null
this.list[] == []
this.list[].getClass().getName() == []
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.setHas(boolean):::ENTER
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
arg0 == true
===========================================================================
com.fidelis.argface.ArgOperand.setHas(boolean):::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.has == true
===========================================================================
com.fidelis.argface.ArgOperand.setList(java.util.List):::ENTER
this has only one value
this.type == 1
this.name has only one value
this.name.toString == "file"
this.fieldName == null
this.setter == null
this.repeat == true
this.list == null
this.has == false
this.value == null
this.count == 0
arg0 has only one value
arg0[] == []
arg0[].getClass().getName() == []
arg0.getClass().getName() == java.util.ArrayList.class
===========================================================================
com.fidelis.argface.ArgOperand.setList(java.util.List):::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.has == orig(this.has)
this.value == orig(this.value)
this.count == orig(this.count)
arg0[] == orig(arg0[])
this.type == 1
this.name has only one value
this.name.toString == "file"
this.fieldName == null
this.setter == null
this.repeat == true
this.list has only one value
this.list[] == []
this.list[].getClass().getName() == []
this.has == false
this.value == null
this.count == 0
arg0[] == []
arg0[].getClass().getName() == []
===========================================================================
com.fidelis.argface.ArgOperand.setName(java.lang.String):::ENTER
this.type one of { 1, 2 }
this.name == null
this.fieldName == null
this.setter == null
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
arg0 != null
===========================================================================
com.fidelis.argface.ArgOperand.setName(java.lang.String):::EXIT
this.type == orig(this.type)
this.fieldName == orig(this.fieldName)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.has == orig(this.has)
this.value == orig(this.value)
this.count == orig(this.count)
arg0.toString == orig(arg0.toString)
this.type one of { 1, 2 }
this.name != null
this.fieldName == null
this.setter == null
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.setRepeat(boolean):::ENTER
this has only one value
this.type == 1
this.name has only one value
this.name.toString == "file"
this.fieldName == null
this.setter == null
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
arg0 == true
===========================================================================
com.fidelis.argface.ArgOperand.setRepeat(boolean):::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.has == orig(this.has)
this.value == orig(this.value)
this.count == orig(this.count)
this.type == 1
this.name has only one value
this.name.toString == "file"
this.fieldName == null
this.setter == null
this.repeat == true
this.list == null
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.setSetter(java.lang.reflect.Method):::ENTER
this.type one of { 1, 2 }
this.setter == null
this.list[] == []
this.list[].getClass().getName() == []
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.setSetter(java.lang.reflect.Method):::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.count == orig(this.count)
this.type one of { 1, 2 }
this.list[] == []
this.list[].getClass().getName() == []
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.setValue(java.lang.String):::ENTER
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.has == true
arg0 != null
===========================================================================
com.fidelis.argface.ArgOperand.setValue(java.lang.String):::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.count == orig(this.count)
arg0.toString == orig(arg0.toString)
this.type one of { 1, 2 }
this.name != null
this.fieldName != null
this.setter != null
this.has == true
this.value != null
this.value.toString != orig(this.value.toString)
===========================================================================
com.fidelis.argface.ArgOperand.toString():::ENTER
this.type one of { 1, 2 }
this.name != null
===========================================================================
com.fidelis.argface.ArgOperand.toString():::EXIT
this.type == orig(this.type)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.list[] == orig(this.list[])
this.list.getClass().getName() == orig(this.list.getClass().getName())
this.has == orig(this.has)
this.value == orig(this.value)
this.value.toString == orig(this.value.toString)
this.count == orig(this.count)
this.type one of { 1, 2 }
this.name != null
return != null
===========================================================================
com.fidelis.argface.ArgOperand.variable():::ENTER
this.type == 0
this.name == null
this.fieldName == null
this.setter == null
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
===========================================================================
com.fidelis.argface.ArgOperand.variable():::EXIT
this.name == orig(this.name)
this.fieldName == orig(this.fieldName)
this.optional == orig(this.optional)
this.setter == orig(this.setter)
this.field == orig(this.field)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.has == orig(this.has)
this.value == orig(this.value)
this.count == orig(this.count)
this.type == 1
this.name == null
this.fieldName == null
this.setter == null
this.repeat == false
this.list == null
this.has == false
this.value == null
this.count == 0
return.type == 1
return.name == null
return.fieldName == null
return.optional == false
return.setter == null
return.field == null
return.repeat == false
return.repeatList == false
return.list == null
return.has == false
return.value == null
return.count == 0
===========================================================================
com.fidelis.argface.ArgOption:::OBJECT
this.spec one of { 0, 1, 3 }
this.name != null
this.field == null
this.count one of { 0, 1 }
this.argName.toString == "lines"
this.argFieldName.toString one of { "afterLines", "beforeLines" }
this.argField == null
this.argValue.toString == "5"
this.argOptional == false
this.argRepeat == false
this.repeat == false
this.repeatList == false
this.list == null
===========================================================================
com.fidelis.argface.ArgOption.ArgOption(java.lang.String):::ENTER
===========================================================================
com.fidelis.argface.ArgOption.ArgOption(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
this.spec == 0
this.altName == null
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
===========================================================================
com.fidelis.argface.ArgOption.compareTo(com.fidelis.argface.ArgOption):::ENTER
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.has == false
this.count == 0
this.creation == false
this.argValue == null
this.argSet == false
this.help != null
arg0 != null
arg0.spec one of { 1, 3 }
arg0.name != null
arg0.fieldName != null
arg0.field == null
arg0.setter != null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help != null
===========================================================================
com.fidelis.argface.ArgOption.compareTo(com.fidelis.argface.ArgOption):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.field == orig(arg0.field)
arg0.setter == orig(arg0.setter)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argFieldName == orig(arg0.argFieldName)
arg0.argFieldName.toString == orig(arg0.argFieldName.toString)
arg0.argField == orig(arg0.argField)
arg0.argSetter == orig(arg0.argSetter)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.has == false
this.count == 0
this.creation == false
this.argValue == null
this.argSet == false
this.help != null
arg0.spec one of { 1, 3 }
arg0.name != null
arg0.fieldName != null
arg0.field == null
arg0.setter != null
arg0.has == false
arg0.count == 0
arg0.creation == false
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
arg0.help != null
===========================================================================
com.fidelis.argface.ArgOption.getAltName():::ENTER
this.spec one of { 1, 3 }
===========================================================================
com.fidelis.argface.ArgOption.getAltName():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
===========================================================================
com.fidelis.argface.ArgOption.getArgField():::ENTER
this.spec one of { 1, 3 }
this.has == true
this.count == 1
===========================================================================
com.fidelis.argface.ArgOption.getArgField():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.has == true
this.count == 1
return == null
===========================================================================
com.fidelis.argface.ArgOption.getArgName():::ENTER
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.argValue == null
this.argSet == false
this.help != null
===========================================================================
com.fidelis.argface.ArgOption.getArgName():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.argValue == null
this.argSet == false
this.help != null
return.toString == "lines"
===========================================================================
com.fidelis.argface.ArgOption.getArgSetter():::ENTER
this.spec one of { 1, 3 }
this.has == true
this.count == 1
===========================================================================
com.fidelis.argface.ArgOption.getArgSetter():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.has == true
this.count == 1
===========================================================================
com.fidelis.argface.ArgOption.getArgValue():::ENTER
this.spec one of { 1, 3 }
this.has == true
this.count == 1
===========================================================================
com.fidelis.argface.ArgOption.getArgValue():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.has == true
this.count == 1
return.toString == "5"
===========================================================================
com.fidelis.argface.ArgOption.getCount():::ENTER
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.has == true
this.help != null
===========================================================================
com.fidelis.argface.ArgOption.getCount():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.has == true
this.help != null
return one of { 0, 1 }
===========================================================================
com.fidelis.argface.ArgOption.getHelp():::ENTER
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.argValue == null
this.argSet == false
this.help != null
===========================================================================
com.fidelis.argface.ArgOption.getHelp():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.argValue == null
this.argSet == false
this.help != null
return != null
===========================================================================
com.fidelis.argface.ArgOption.getName():::ENTER
this.spec one of { 1, 3 }
this.help != null
===========================================================================
com.fidelis.argface.ArgOption.getName():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.help != null
return != null
===========================================================================
com.fidelis.argface.ArgOption.getSetter():::ENTER
this.spec one of { 1, 3 }
this.has == true
this.count == 1
===========================================================================
com.fidelis.argface.ArgOption.getSetter():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.has == true
this.count == 1
===========================================================================
com.fidelis.argface.ArgOption.getSpec():::ENTER
this.spec == 1
this.name.toString one of { "c", "d", "e" }
this.altName == null
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
===========================================================================
com.fidelis.argface.ArgOption.getSpec():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.fieldName == orig(this.fieldName)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.spec == 1
this.name.toString one of { "c", "d", "e" }
this.altName == null
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
return == 1
===========================================================================
com.fidelis.argface.ArgOption.getSpecText():::ENTER
this.spec one of { 1, 3 }
this.has == false
this.count == 0
this.argValue == null
this.argSet == false
this.help != null
===========================================================================
com.fidelis.argface.ArgOption.getSpecText():::EXIT134
===========================================================================
com.fidelis.argface.ArgOption.getSpecText():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.has == false
this.count == 0
this.argValue == null
this.argSet == false
this.help != null
return != null
===========================================================================
com.fidelis.argface.ArgOption.has():::ENTER
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.has == true
this.count == 1
this.help != null
===========================================================================
com.fidelis.argface.ArgOption.has():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.has == true
this.count == 1
this.help != null
return == true
===========================================================================
com.fidelis.argface.ArgOption.has():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgOption.isArgOptional():::ENTER
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.creation == false
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
===========================================================================
com.fidelis.argface.ArgOption.isArgOptional():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.creation == false
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
return == false
===========================================================================
com.fidelis.argface.ArgOption.isArgOptional():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgOption.isArgSet():::ENTER
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == true
this.count == 1
this.creation == false
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
===========================================================================
com.fidelis.argface.ArgOption.isArgSet():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == true
this.count == 1
this.creation == false
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
return == false
===========================================================================
com.fidelis.argface.ArgOption.isArgSet():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgOption.isRepeat():::ENTER
this.spec one of { 1, 3 }
this.help != null
===========================================================================
com.fidelis.argface.ArgOption.isRepeat():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.help != null
return == false
===========================================================================
com.fidelis.argface.ArgOption.isRepeat():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::ENTER
this.spec one of { 1, 3 }
arg0 != null
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::EXIT145
this.argValue == null
this.argSet == false
return == true
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::EXIT145;condition="return == true"
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::EXIT148
this.spec == 3
this.altName != null
return == true
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::EXIT148;condition="return == true"
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::EXIT150
return == false
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::EXIT150;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argValue.toString == orig(this.argValue.toString)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
arg0.toString == orig(arg0.toString)
this.spec one of { 1, 3 }
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::EXIT;condition="return == true"
return == true
===========================================================================
com.fidelis.argface.ArgOption.nameMatch(java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
com.fidelis.argface.ArgOption.reset():::ENTER
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.help != null
===========================================================================
com.fidelis.argface.ArgOption.reset():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.fieldName != null
this.setter != null
this.has == false
this.count == 0
this.argValue == null
this.argSet == false
this.help != null
this.count <= orig(this.count)
===========================================================================
com.fidelis.argface.ArgOption.setAltName(java.lang.String):::ENTER
this.altName == null
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
===========================================================================
com.fidelis.argface.ArgOption.setAltName(java.lang.String):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.fieldName == orig(this.fieldName)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
arg0.toString == orig(arg0.toString)
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
===========================================================================
com.fidelis.argface.ArgOption.setArgFieldName(java.lang.String):::ENTER
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == false
this.count == 0
this.creation == false
this.argFieldName == null
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
arg0.toString one of { "afterLines", "beforeLines" }
===========================================================================
com.fidelis.argface.ArgOption.setArgFieldName(java.lang.String):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
arg0.toString == orig(arg0.toString)
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == false
this.count == 0
this.creation == false
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
arg0.toString one of { "afterLines", "beforeLines" }
===========================================================================
com.fidelis.argface.ArgOption.setArgName(java.lang.String):::ENTER
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
arg0.toString == "lines"
===========================================================================
com.fidelis.argface.ArgOption.setArgName(java.lang.String):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
arg0.toString == orig(arg0.toString)
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
arg0.toString == "lines"
===========================================================================
com.fidelis.argface.ArgOption.setArgOptional(boolean):::ENTER
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
arg0 == false
===========================================================================
com.fidelis.argface.ArgOption.setArgOptional(boolean):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
===========================================================================
com.fidelis.argface.ArgOption.setArgSet(boolean):::ENTER
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == true
this.count == 1
this.creation == false
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
arg0 == true
===========================================================================
com.fidelis.argface.ArgOption.setArgSet(boolean):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == true
this.count == 1
this.creation == false
this.argValue == null
this.argSet == true
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
===========================================================================
com.fidelis.argface.ArgOption.setArgSetter(java.lang.reflect.Method):::ENTER
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == false
this.count == 0
this.creation == false
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
===========================================================================
com.fidelis.argface.ArgOption.setArgSetter(java.lang.reflect.Method):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == false
this.count == 0
this.creation == false
this.argFieldName == null
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
===========================================================================
com.fidelis.argface.ArgOption.setArgValue(java.lang.String):::ENTER
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == true
this.count == 1
this.creation == false
this.argValue == null
this.argSet == true
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
arg0.toString == "5"
===========================================================================
com.fidelis.argface.ArgOption.setArgValue(java.lang.String):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
arg0.toString == orig(arg0.toString)
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == true
this.count == 1
this.creation == false
this.argSet == true
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
arg0.toString == "5"
===========================================================================
com.fidelis.argface.ArgOption.setCount(int):::ENTER
this.spec one of { 1, 3 }
this.has == true
this.count == 0
this.argValue == null
this.argSet == false
arg0 == 1
===========================================================================
com.fidelis.argface.ArgOption.setCount(int):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.has == true
this.count == 1
this.argValue == null
this.argSet == false
===========================================================================
com.fidelis.argface.ArgOption.setCreation(boolean):::ENTER
this.spec == 3
this.name.toString one of { "about", "h", "v" }
this.altName.toString one of { "help", "version" }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help.toString one of { "show information about this program", "show this help text", "show version information" }
arg0 == true
===========================================================================
com.fidelis.argface.ArgOption.setCreation(boolean):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.argName == orig(this.argName)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec == 3
this.name.toString one of { "about", "h", "v" }
this.altName.toString one of { "help", "version" }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == true
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help.toString one of { "show information about this program", "show this help text", "show version information" }
===========================================================================
com.fidelis.argface.ArgOption.setFieldName(java.lang.String):::ENTER
this.spec one of { 1, 3 }
this.fieldName == null
this.has == false
this.count == 0
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
===========================================================================
com.fidelis.argface.ArgOption.setFieldName(java.lang.String):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
arg0.toString == orig(arg0.toString)
this.spec one of { 1, 3 }
this.has == false
this.count == 0
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
===========================================================================
com.fidelis.argface.ArgOption.setHas(boolean):::ENTER
this.spec one of { 1, 3 }
this.has == false
this.count == 0
this.argValue == null
this.argSet == false
arg0 == true
===========================================================================
com.fidelis.argface.ArgOption.setHas(boolean):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.has == true
this.count == 0
this.argValue == null
this.argSet == false
===========================================================================
com.fidelis.argface.ArgOption.setHelp(java.lang.String):::ENTER
this.spec one of { 1, 3 }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
===========================================================================
com.fidelis.argface.ArgOption.setHelp(java.lang.String):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
arg0.toString == orig(arg0.toString)
this.spec one of { 1, 3 }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
===========================================================================
com.fidelis.argface.ArgOption.setRepeatList(boolean):::ENTER
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == false
this.count == 0
this.creation == false
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
arg0 == false
===========================================================================
com.fidelis.argface.ArgOption.setRepeatList(boolean):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec == 3
this.name.toString one of { "a", "b" }
this.altName.toString one of { "after", "before" }
this.fieldName.toString one of { "afterOption", "beforeOption" }
this.has == false
this.count == 0
this.creation == false
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help.toString one of { "number of lines after a match", "number of lines before a match" }
===========================================================================
com.fidelis.argface.ArgOption.setSetter(java.lang.reflect.Method):::ENTER
this.spec one of { 1, 3 }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
===========================================================================
com.fidelis.argface.ArgOption.setSetter(java.lang.reflect.Method):::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.field == orig(this.field)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.fieldName == null
this.has == false
this.count == 0
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
===========================================================================
com.fidelis.argface.ArgOption.setSpec(int):::ENTER
this.spec one of { 0, 1 }
this.altName.toString one of { "help", "version" }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
arg0 one of { 1, 3 }
===========================================================================
com.fidelis.argface.ArgOption.setSpec(int):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argFieldName == orig(this.argFieldName)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.spec one of { 1, 3 }
this.altName.toString one of { "help", "version" }
this.fieldName == null
this.setter == null
this.has == false
this.count == 0
this.creation == false
this.argName == null
this.argFieldName == null
this.argSetter == null
this.argValue == null
this.argSet == false
this.help == null
this.spec > orig(this.spec)
===========================================================================
com.fidelis.argface.ArgOption.toString():::ENTER
this.spec one of { 1, 3 }
this.has == false
this.count == 0
this.argValue == null
this.argSet == false
this.help != null
===========================================================================
com.fidelis.argface.ArgOption.toString():::EXIT
this.spec == orig(this.spec)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.altName == orig(this.altName)
this.altName.toString == orig(this.altName.toString)
this.fieldName == orig(this.fieldName)
this.fieldName.toString == orig(this.fieldName.toString)
this.field == orig(this.field)
this.setter == orig(this.setter)
this.has == orig(this.has)
this.count == orig(this.count)
this.creation == orig(this.creation)
this.argName == orig(this.argName)
this.argName.toString == orig(this.argName.toString)
this.argFieldName == orig(this.argFieldName)
this.argFieldName.toString == orig(this.argFieldName.toString)
this.argField == orig(this.argField)
this.argSetter == orig(this.argSetter)
this.argValue == orig(this.argValue)
this.argOptional == orig(this.argOptional)
this.argRepeat == orig(this.argRepeat)
this.argSet == orig(this.argSet)
this.repeat == orig(this.repeat)
this.repeatList == orig(this.repeatList)
this.list == orig(this.list)
this.help == orig(this.help)
this.help.toString == orig(this.help.toString)
this.spec one of { 1, 3 }
this.has == false
this.count == 0
this.argValue == null
this.argSet == false
this.help != null
return != null
===========================================================================
com.fidelis.argface.ArgParseUsage:::OBJECT
this.varList.getClass().getName() == this.litList.getClass().getName()
this.varList.getClass().getName() == this.optionList.getClass().getName()
this has only one value
this.source.getClass().getName() == com.fidelis.argface.TokenString.class
this.delimiters has only one value
this.delimiters != null
this.delimiters.toString == " \t\n'-+|[]<>()=:,/"
this.programName.toString == "ArgSample"
this.optionalDepth one of { 0, 1, 2 }
this.optionDefForm == false
this.newOption == false
this.specOptions == false
this.operand.type one of { 1, 2 }
this.operand.name != null
this.operand.fieldName == null
this.operand.optional == false
this.operand.setter == null
this.operand.field == null
this.operand.repeatList == false
this.operand.list == null
this.operand.has == false
this.operand.value == null
this.operand.count == 0
this.option.spec one of { 1, 3 }
this.option.name != null
this.option.fieldName == null
this.option.field == null
this.option.setter == null
this.option.has == false
this.option.count == 0
this.option.creation == false
this.option.argName.toString == "lines"
this.option.argFieldName == null
this.option.argField == null
this.option.argSetter == null
this.option.argValue == null
this.option.argOptional == false
this.option.argRepeat == false
this.option.argSet == false
this.option.repeat == false
this.option.repeatList == false
this.option.list == null
this.argList.home.entry != null
this.argList.home.repeat == false
this.argList.home.spec one of { 0, 1 }
this.argList.curr.east == null
this.argList.curr.entry != null
this.argList.curr.spec one of { 0, 1 }
this.listStack has only one value
this.listStack != null
this.listStack.getClass().getName() == java.util.ArrayDeque.class
this.varList has only one value
this.varList != null
this.varList[] elements != null
this.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.varList.getClass().getName() == java.util.ArrayList.class
this.litList has only one value
this.litList != null
this.litList[] elements != null
this.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.optionList has only one value
this.optionList != null
this.optionList[] elements != null
this.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.source.getClass().getName() != this.argList.home.entry.getClass().getName()
this.source.getClass().getName() != this.argList.curr.entry.getClass().getName()
this.source.getClass().getName() != this.listStack.getClass().getName()
this.source.getClass().getName() != this.varList.getClass().getName()
this.argList.home.entry.getClass().getName() != this.listStack.getClass().getName()
this.argList.home.entry.getClass().getName() != this.varList.getClass().getName()
this.argList.curr.entry.getClass().getName() != this.listStack.getClass().getName()
this.argList.curr.entry.getClass().getName() != this.varList.getClass().getName()
this.listStack.getClass().getName() != this.varList.getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.ArgParseUsage():::EXIT
this.source == null
this.programName == null
this.optionalDepth == 0
this.exor == false
this.operand == null
this.option == null
this.argList == null
this.varList[] == []
this.varList[].getClass().getName() == []
this.litList[] == []
this.litList[].getClass().getName() == []
this.optionList[] == []
this.optionList[].getClass().getName() == []
===========================================================================
com.fidelis.argface.ArgParseUsage.addOption(java.lang.String):::ENTER
this.argList.home.south == this.argList.curr.south
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 1
this.operand == null
this.option.help.toString one of { "help description for x", "number of lines after a match", "number of lines before a match" }
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.home.optional == true
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.litList[].getClass().getName() one of { [com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7 }
this.argList.home.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.addOption(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.argList == orig(this.argList)
this.argList.home.south == this.argList.curr.south
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.east == orig(this.argList.curr.east)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
arg0.toString == orig(arg0.toString)
this.source has only one value
this.programName has only one value
this.optionalDepth == 1
this.exor == false
this.operand == null
this.option.spec == 1
this.option.altName == null
this.option.argName == null
this.option.help == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.home.optional == true
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.litList[].getClass().getName() one of { [com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7 }
this.option.spec <= orig(this.option.spec)
this.option.name.toString != orig(this.option.name.toString)
this.argList.home.entry.getClass().getName() in this.optionList[].getClass().getName()
orig(this.argList.home.entry.getClass().getName()) in this.optionList[].getClass().getName()
size(this.optionList[]) >= orig(size(this.optionList[]))
size(this.optionList[])-1 <= orig(size(this.optionList[]))
size(this.optionList[])-1 >= orig(size(this.optionList[]))-1
===========================================================================
com.fidelis.argface.ArgParseUsage.afterOption():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.exor == false
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option != null
this.option.argName == null
this.option.help == null
this.argList != null
this.argList.home != null
this.argList.home.spec == 0
this.argList.curr != null
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
size(this.varList[]) one of { 0, 3 }
size(this.varList[])-1 != 0
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.afterOption():::EXIT420
this.option == this.argList.home.entry
this.option.spec == orig(this.option.spec)
this.option.altName == orig(this.option.altName)
this.argList.home == this.argList.curr
this.argList.home == orig(this.argList.curr)
this.argList.home.south == this.argList.home.east
this.argList.home.south == this.argList.curr.south
this.argList.home.south == orig(this.argList.home.east)
this.argList.home.south == orig(this.argList.curr.south)
this.argList.home.entry == this.argList.curr.entry
this.argList.home.entry == orig(this.argList.curr.entry)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.optionalDepth == 1
this.operand == null
this.option.spec == 3
this.option.name.toString one of { "a", "b" }
this.option.altName.toString one of { "after", "before" }
this.argList.home.south == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.home.optional == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 7
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
size(this.varList[]) == 3
size(this.litList[]) == 7
size(this.optionList[]) one of { 5, 6 }
this.argList.home.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.afterOption():::EXIT420;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.afterOption():::EXIT426
this.argList.home == this.argList.curr
this.argList.home == orig(this.argList.curr)
this.argList.home.south == this.argList.curr.south
this.argList.home.south == orig(this.argList.curr.south)
this.argList.home.entry == this.argList.curr.entry
this.argList.home.entry == orig(this.argList.curr.entry)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.optionalDepth == 1
this.operand == null
this.option.spec == 3
this.argList.home.east == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.home.optional == true
this.litList[].getClass().getName() one of { [com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
orig(this.option.spec) == 1
orig(this.option.altName) == null
size(this.litList[]) one of { 1, 7 }
this.argList.home.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.afterOption():::EXIT426;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.afterOption():::EXIT433
this.option.spec == orig(this.option.spec)
this.option.altName == orig(this.option.altName)
this.option.argName == orig(this.option.argName)
this.option.argName == null
===========================================================================
com.fidelis.argface.ArgParseUsage.afterOption():::EXIT433;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.afterOption():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.exor == false
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option != null
this.option.help == null
this.argList != null
this.argList.home != null
this.argList.home.spec == 0
this.argList.curr != null
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
return == true
size(this.varList[]) one of { 0, 3 }
size(this.varList[])-1 != 0
size(this.litList[]) one of { 1, 7, 8 }
this.option.spec >= orig(this.option.spec)
===========================================================================
com.fidelis.argface.ArgParseUsage.afterOption():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.endGroup():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.repeat == this.argList.curr.repeat
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.exor == false
this.operand.repeat == false
this.option.altName.toString one of { "after", "before", "sleep" }
this.option.help == null
this.argList != null
this.argList.home != null
this.argList.curr != null
this.argList.curr.spec == 0
this.argList.home.spec >= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.endGroup():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argName.toString == orig(this.option.argName.toString)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.curr.east == orig(this.argList.curr.east)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.exor == false
this.operand.repeat == false
this.option.altName.toString one of { "after", "before", "sleep" }
this.option.help == null
this.argList != null
this.argList.home != null
this.argList.curr != null
this.source.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.argList.home.spec <= this.argList.curr.spec
this.argList.home.spec >= orig(this.argList.curr.spec)
this.argList.curr.spec >= orig(this.argList.curr.spec)
this.listStack.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.varList.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
===========================================================================
com.fidelis.argface.ArgParseUsage.findLit(java.lang.String):::ENTER
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.operand.repeat == false
this.option == null
this.argList != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
arg0 != null
size(this.varList[]) one of { 0, 2, 3 }
size(this.optionList[]) one of { 0, 4, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.findLit(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
arg0.toString == orig(arg0.toString)
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.operand.repeat == false
this.option == null
this.argList != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
return.type == 2
return.fieldName == null
return.optional == false
return.setter == null
return.field == null
return.repeat == false
return.repeatList == false
return.list == null
return.has == false
return.value == null
return.count == 0
size(this.varList[]) one of { 0, 2, 3 }
size(this.optionList[]) one of { 0, 4, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.findOperand(java.util.List, java.lang.String):::ENTER
this.argList.home.repeat == this.argList.curr.repeat
this.varList.getClass().getName() == arg0.getClass().getName()
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.operand.repeat == false
this.option == null
this.argList != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0 != null
arg0[] elements != null
arg0[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
arg1 != null
size(this.optionList[]) one of { 0, 4, 8 }
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.findOperand(java.util.List, java.lang.String):::EXIT708
this.optionalDepth one of { 0, 1 }
this.argList.home.optional == false
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
return != null
size(this.varList[]) one of { 2, 3 }
size(this.optionList[]) one of { 4, 8 }
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
this.argList.home.entry.getClass().getName() in arg0[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.findOperand(java.util.List, java.lang.String):::EXIT711
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.curr.spec)
return == null
===========================================================================
com.fidelis.argface.ArgParseUsage.findOperand(java.util.List, java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.varList.getClass().getName() == orig(arg0.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
arg0[] == orig(arg0[])
arg1.toString == orig(arg1.toString)
(return != null)  ==>  (return.field == null)
(return != null)  ==>  (return.fieldName == null)
(return != null)  ==>  (return.list == null)
(return != null)  ==>  (return.setter == null)
(return != null)  ==>  (return.type one of { 1, 2 })
(return != null)  ==>  (return.value == null)
(return != null)  ==>  (size(this.optionList[]) one of { 4, 8 })
(return != null)  ==>  (size(this.varList[]) one of { 2, 3 })
(return != null)  ==>  (this.argList.home.entry.getClass().getName() in arg0[].getClass().getName())
(return != null)  ==>  (this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName())
(return != null)  ==>  (this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName())
(return != null)  ==>  (this.argList.home.optional == false)
(return != null)  ==>  (this.argList.home.spec == 0)
(return != null)  ==>  (this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] })
(return != null)  ==>  (this.optionalDepth one of { 0, 1 })
(return != null)  ==>  (this.varList[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
(return == null)  ==>  (size(this.optionList[]) one of { 0, 4, 8 })
(return == null)  ==>  (this.argList.home.spec == this.argList.curr.spec)
(return == null)  ==>  (this.argList.home.spec one of { 0, 1 })
(return == null)  ==>  (this.optionalDepth one of { 0, 1, 2 })
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.operand.repeat == false
this.option == null
this.argList != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0[] elements != null
arg0[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
return.type one of { 1, 2 }
return.name != null
return.fieldName == null
return.optional == false
return.setter == null
return.field == null
return.repeat == false
return.repeatList == false
return.list == null
return.has == false
return.value == null
return.count == 0
size(this.optionList[]) one of { 0, 4, 8 }
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.findOption(java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.argList != null
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0 != null
size(this.varList[]) one of { 0, 3 }
size(this.varList[])-1 != 0
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.findOption(java.lang.String):::EXIT717
this.exor == false
this.option.altName.toString one of { "exit", "sleep", "yield" }
this.option.argName == null
this.argList.curr.south == null
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) one of { 7, 8 }
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgParseUsage.findOption(java.lang.String):::EXIT720
this.option.help.toString one of { "help description for x", "number of lines after a match", "number of lines before a match" }
return == null
===========================================================================
com.fidelis.argface.ArgParseUsage.findOption(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argName.toString == orig(this.option.argName.toString)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.option.help.toString == orig(this.option.help.toString)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
arg0.toString == orig(arg0.toString)
(return == null)  ==>  (size(this.litList[]) one of { 1, 7, 8 })
(return == null)  ==>  (size(this.varList[]) one of { 0, 3 })
(return == null)  ==>  (this.option.argName.toString == "lines")
(return == null)  ==>  (this.option.help.toString one of { "help description for x", "number of lines after a match", "number of lines before a match" })
(return == null)  ==>  (this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.argList != null
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
return.spec one of { 1, 3 }
return.altName.toString one of { "sleep", "yield" }
return.fieldName == null
return.field == null
return.setter == null
return.has == false
return.count == 0
return.creation == false
return.argName == null
return.argFieldName == null
return.argField == null
return.argSetter == null
return.argValue == null
return.argOptional == false
return.argRepeat == false
return.argSet == false
return.repeat == false
return.repeatList == false
return.list == null
return.help == null
size(this.varList[]) one of { 0, 3 }
size(this.varList[])-1 != 0
size(this.litList[]) one of { 1, 7, 8 }
this.option.spec <= return.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.findVar(java.lang.String):::ENTER
this.argList.home.repeat == this.argList.curr.repeat
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.operand.repeat == false
this.option == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
arg0.toString one of { "file", "other", "pattern" }
size(this.optionList[]) one of { 4, 8 }
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.findVar(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
arg0.toString == orig(arg0.toString)
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.operand.repeat == false
this.option == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
arg0.toString one of { "file", "other", "pattern" }
return.type == 1
return.name.toString one of { "file", "other", "pattern" }
return.fieldName == null
return.optional == false
return.setter == null
return.field == null
return.repeat == false
return.repeatList == false
return.list == null
return.has == false
return.value == null
return.count == 0
size(this.optionList[]) one of { 4, 8 }
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.fullName():::ENTER
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.option.argName == null
this.option.help == null
this.argList != null
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.fullName():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.option.argName == null
this.option.help == null
this.argList != null
return != null
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.getArgList():::ENTER
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.getArgList():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == return.curr.entry
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.option.help.toString == orig(this.option.help.toString)
this.argList == return
this.argList.home == return.home
this.argList.home.south == return.home.south
this.argList.home.east == return.home.east
this.argList.home.entry == return.home.entry
this.argList.home.entry.getClass().getName() == return.home.entry.getClass().getName()
this.argList.home.optional == return.curr.optional
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == return.curr
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == return.curr.entry
this.argList.curr.entry.getClass().getName() == return.home.entry.getClass().getName()
this.argList.curr.optional == return.curr.optional
this.argList.curr.repeat == return.curr.repeat
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
return == orig(this.argList)
return.home == orig(this.argList.home)
return.home.south == orig(this.argList.home.south)
return.home.east == orig(this.argList.home.east)
return.home.entry == orig(this.argList.home.entry)
return.home.entry.getClass().getName() == return.curr.entry.getClass().getName()
return.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
return.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
return.curr == orig(this.argList.curr)
return.curr.entry == orig(this.argList.curr.entry)
return.curr.optional == orig(this.argList.home.optional)
return.curr.optional == orig(this.argList.curr.optional)
return.curr.repeat == orig(this.argList.curr.repeat)
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList.home.spec == 0
this.argList.curr.south == null
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return has only one value
return.home has only one value
return.home.south has only one value
return.home.east has only one value
return.home.entry has only one value
return.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
return.home.optional == false
return.home.repeat == false
return.home.spec == 0
return.curr has only one value
return.curr.south == null
return.curr.east == null
return.curr.entry has only one value
return.curr.optional == false
return.curr.repeat == true
return.curr.spec == 0
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
return.home.entry.getClass().getName() in this.varList[].getClass().getName()
return.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.getLitList():::ENTER
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.getLitList():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == this.argList.curr.entry
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.option.help.toString == orig(this.option.help.toString)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == return.getClass().getName()
this.litList == return
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == return.getClass().getName()
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == return.getClass().getName()
return == orig(this.litList)
return.getClass().getName() == orig(this.varList.getClass().getName())
return.getClass().getName() == orig(this.litList.getClass().getName())
return.getClass().getName() == orig(this.optionList.getClass().getName())
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return has only one value
return[] contains no nulls and has only one value, of length 8
return[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
return[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
return.getClass().getName() == java.util.ArrayList.class
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
size(return[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
this.argList.home.entry.getClass().getName() in return[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.getOptionList():::ENTER
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.getOptionList():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == this.argList.curr.entry
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.option.help.toString == orig(this.option.help.toString)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == return.getClass().getName()
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == return.getClass().getName()
this.optionList == return
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == return.getClass().getName()
return == orig(this.optionList)
return.getClass().getName() == orig(this.varList.getClass().getName())
return.getClass().getName() == orig(this.litList.getClass().getName())
return.getClass().getName() == orig(this.optionList.getClass().getName())
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return has only one value
return[] contains no nulls and has only one value, of length 8
return[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
return.getClass().getName() == java.util.ArrayList.class
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
size(return[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.getProgramName():::ENTER
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.getProgramName():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == return
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == this.argList.curr.entry
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.option.help.toString == orig(this.option.help.toString)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
return == orig(this.programName)
this.source has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return has only one value
return.toString == "ArgSample"
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.getVarList():::ENTER
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.getVarList():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == this.argList.curr.entry
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.option.help.toString == orig(this.option.help.toString)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == return
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == return.getClass().getName()
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.litList.getClass().getName() == return.getClass().getName()
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.optionList.getClass().getName() == return.getClass().getName()
return == orig(this.varList)
return.getClass().getName() == orig(this.varList.getClass().getName())
return.getClass().getName() == orig(this.litList.getClass().getName())
return.getClass().getName() == orig(this.optionList.getClass().getName())
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return has only one value
return[] contains no nulls and has only one value, of length 3
return[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
return[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
return.getClass().getName() == java.util.ArrayList.class
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
size(return[]) == 3
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
this.argList.home.entry.getClass().getName() in return[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.letterGroup(java.lang.String):::ENTER
this.argList.home == this.argList.curr
this.source has only one value
this.programName has only one value
this.optionalDepth == 1
this.exor == false
this.operand == null
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "b"
this.option.altName has only one value
this.option.altName.toString == "before"
this.option.argName has only one value
this.option.help has only one value
this.option.help.toString == "number of lines before a match"
this.argList has only one value
this.argList.home == null
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 7
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 6
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
arg0 has only one value
arg0.toString == "cde"
size(this.varList[]) == 3
size(this.litList[]) == 7
size(this.optionList[]) == 6
===========================================================================
com.fidelis.argface.ArgParseUsage.letterGroup(java.lang.String):::EXIT402
===========================================================================
com.fidelis.argface.ArgParseUsage.letterGroup(java.lang.String):::EXIT402;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.letterGroup(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.option == this.argList.curr.entry
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.argList == orig(this.argList)
this.argList.home.south == this.argList.curr.south
this.argList.home.south == orig(this.argList.home)
this.argList.home.south == orig(this.argList.curr)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
arg0.toString == orig(arg0.toString)
this.source has only one value
this.programName has only one value
this.optionalDepth == 1
this.exor == false
this.operand == null
this.option has only one value
this.option.spec == 1
this.option.name has only one value
this.option.name.toString == "e"
this.option.altName == null
this.option.argName == null
this.option.help == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.south == null
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.home.optional == true
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 7
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
arg0.toString == "cde"
return == true
size(this.varList[]) == 3
size(this.litList[]) == 7
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.optionList[].getClass().getName()
this.argList.home.entry.getClass().getName() in orig(this.optionList[].getClass().getName())
===========================================================================
com.fidelis.argface.ArgParseUsage.letterGroup(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.literal(java.lang.String):::ENTER
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.operand.repeat == false
this.option.spec == 1
this.option.name has only one value
this.option.name.toString == "e"
this.option.altName == null
this.option.argName == null
this.option.help == null
this.argList != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
arg0 != null
size(this.varList[]) one of { 0, 2, 3 }
size(this.optionList[]) one of { 0, 4, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.literal(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.argList == orig(this.argList)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.east == orig(this.argList.curr.east)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
arg0.toString == orig(arg0.toString)
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.exor == false
this.operand != null
this.operand.type == 2
this.operand.repeat == false
this.option == null
this.argList != null
this.argList.home != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr != null
size(this.varList[]) one of { 0, 2, 3 }
size(this.optionList[]) one of { 0, 4, 8 }
this.source.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.source.getClass().getName() != orig(this.argList.curr.entry.getClass().getName())
this.operand.type >= orig(this.operand.type)
this.operand.name.toString != orig(this.operand.name.toString)
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
this.listStack.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.listStack.getClass().getName() != orig(this.argList.curr.entry.getClass().getName())
this.varList.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.varList.getClass().getName() != orig(this.argList.curr.entry.getClass().getName())
orig(this.argList.home.entry.getClass().getName()) in this.litList[].getClass().getName()
size(this.litList[]) >= orig(size(this.litList[]))
size(this.litList[])-1 <= orig(size(this.litList[]))
size(this.litList[])-1 >= orig(size(this.litList[]))-1
===========================================================================
com.fidelis.argface.ArgParseUsage.optionArg(boolean):::ENTER
this.option == this.argList.home.entry
this.option.argOptional == arg0
this.argList.home == this.argList.curr
this.argList.home.south == this.argList.home.east
this.argList.home.south == this.argList.curr.south
this.argList.home.entry == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 1
this.exor == false
this.operand == null
this.option.spec == 3
this.option.name.toString one of { "a", "b" }
this.option.altName.toString one of { "after", "before" }
this.option.argName == null
this.option.help == null
this.argList.home.south == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.home.optional == true
this.argList.home.spec == 0
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 7
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
size(this.varList[]) == 3
size(this.litList[]) == 7
size(this.optionList[]) one of { 5, 6 }
this.argList.home.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.optionArg(boolean):::EXIT456
===========================================================================
com.fidelis.argface.ArgParseUsage.optionArg(boolean):::EXIT456;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.optionArg(boolean):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.option == this.argList.home.entry
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(arg0)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.argList == orig(this.argList)
this.argList.home == this.argList.curr
this.argList.home == orig(this.argList.home)
this.argList.home == orig(this.argList.curr)
this.argList.home.south == this.argList.home.east
this.argList.home.south == this.argList.curr.south
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.south == orig(this.argList.home.east)
this.argList.home.south == orig(this.argList.curr.south)
this.argList.home.entry == this.argList.curr.entry
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry == orig(this.argList.curr.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr.east == orig(this.argList.curr.east)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.programName has only one value
this.optionalDepth == 1
this.exor == false
this.operand == null
this.option.spec == 3
this.option.name.toString one of { "a", "b" }
this.option.altName.toString one of { "after", "before" }
this.option.help == null
this.argList.home.south == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.home.optional == true
this.argList.home.spec == 0
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 7
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
return == true
orig(arg0) == false
size(this.varList[]) == 3
size(this.litList[]) == 7
size(this.optionList[]) one of { 5, 6 }
this.argList.home.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.optionArg(boolean):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.parse(java.lang.String):::ENTER
this.source == null
this.programName == null
this.optionalDepth == 0
this.exor == false
this.operand == null
this.option == null
this.argList == null
this.varList[] == []
this.varList[].getClass().getName() == []
this.litList[] == []
this.litList[].getClass().getName() == []
this.optionList[] == []
this.optionList[].getClass().getName() == []
arg0 has only one value
arg0.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
===========================================================================
com.fidelis.argface.ArgParseUsage.parse(java.lang.String):::EXIT88
===========================================================================
com.fidelis.argface.ArgParseUsage.parse(java.lang.String):::EXIT88;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.parse(java.lang.String):::EXIT
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.optionList == orig(this.optionList)
arg0.toString == orig(arg0.toString)
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
arg0.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
return == true
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.parse(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOption():::ENTER
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.altName.toString one of { "exit", "yield" }
this.option.argName == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOption():::EXIT547
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOption():::EXIT547;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOption():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == this.argList.curr.entry
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.altName.toString one of { "exit", "sleep", "yield" }
this.option.argName == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return == true
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOption():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOptionsSection():::ENTER
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOptionsSection():::EXIT266
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOptionsSection():::EXIT266;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOptionsSection():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == this.argList.curr.entry
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option has only one value
this.option.spec == 3
this.option.name has only one value
this.option.name.toString == "z"
this.option.altName has only one value
this.option.altName.toString == "sleep"
this.option.argName == null
this.option.help has only one value
this.option.help.toString == "dormant state when completed"
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return == true
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.parseOptionsSection():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.parseUseSpec():::ENTER
this.programName == this.operand.name
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand.type == 2
this.operand.name.toString == "ArgSample"
this.operand.repeat == false
this.option == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr.south == null
this.optionList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
size(this.varList[]) one of { 0, 2, 3 }
size(this.litList[]) one of { 0, 4, 7 }
size(this.optionList[]) one of { 0, 4 }
===========================================================================
com.fidelis.argface.ArgParseUsage.parseUseSpec():::EXIT243
===========================================================================
com.fidelis.argface.ArgParseUsage.parseUseSpec():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName == orig(this.operand.name)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr.east == orig(this.argList.curr.east)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.optionList == orig(this.optionList)
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand.name.toString one of { "clear", "file", "other" }
this.option == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
return.toString one of { "ArgSample", "Options" }
size(this.varList[]) one of { 2, 3 }
size(this.litList[]) one of { 4, 7, 8 }
size(this.optionList[]) one of { 4, 8 }
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.processDescription(java.lang.String):::ENTER
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.altName.toString one of { "exit", "sleep", "yield" }
this.option.argName == null
this.option.help == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.processDescription(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == this.argList.curr.entry
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.altName.toString one of { "exit", "sleep", "yield" }
this.option.argName == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return == true
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.processDescription(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOption():::ENTER
this.operand == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.altName.toString one of { "sleep", "yield" }
this.option.argName == null
this.option.help == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOption():::EXIT568
this.option.altName == orig(this.option.altName)
this.option.spec == 1
this.option.name.toString one of { "c", "d" }
this.option.altName == null
this.option.help.toString one of { "confirm actions", "delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?" }
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOption():::EXIT568;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOption():::EXIT578
this.option.name.toString one of { "e", "y", "z" }
this.option.help.toString one of { "dormant state when completed", "exit on error", "yeild to substitutions" }
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOption():::EXIT578;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOption():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == this.argList.curr.entry
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.programName has only one value
this.optionalDepth == 0
this.exor == false
this.operand has only one value
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.altName.toString one of { "exit", "sleep", "yield" }
this.option.argName == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.south == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 8
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return == true
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.optionList[]) == 8
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOption():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOptionName():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.exor == false
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.altName.toString one of { "sleep", "yield" }
this.option.argName == null
this.option.help == null
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOptionName():::EXIT640
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOptionName():::EXIT640;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOptionName():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.exor == false
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.help == null
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
return == true
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.secondOptionName():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.setAltName(java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.exor == false
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.altName == null
this.option.argName == null
this.option.help == null
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.setAltName(java.lang.String):::EXIT652
===========================================================================
com.fidelis.argface.ArgParseUsage.setAltName(java.lang.String):::EXIT652;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.setAltName(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(arg0)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
arg0.toString == orig(arg0.toString)
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.exor == false
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.option.argName == null
this.option.help == null
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
return == true
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.setAltName(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.singleDash():::ENTER
this.argList.home == this.argList.curr
this.argList.home.south == this.argList.curr.south
this.argList.home.entry == this.argList.curr.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth == 1
this.operand.type == 2
this.operand.name.toString one of { "ArgSample", "set" }
this.operand.repeat == false
this.option.spec == 3
this.option.help.toString one of { "help description for x", "number of lines after a match", "number of lines before a match" }
this.argList.home.east == null
this.argList.home.entry has only one value
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.home.optional == true
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.litList[].getClass().getName() one of { [com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7 }
this.argList.home.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgParseUsage.singleDash():::EXIT334
this.exor == orig(this.exor)
this.operand == orig(this.operand)
this.option == this.argList.curr.entry
this.argList.home.south == orig(this.argList.home)
this.argList.home.south == orig(this.argList.curr)
this.option has only one value
this.option.spec == 1
this.option.name has only one value
this.option.name.toString == "e"
this.option.altName == null
this.option.argName == null
this.argList has only one value
this.argList.home has only one value
this.argList.home.south == null
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.varList[] contains no nulls and has only one value, of length 3
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[] contains no nulls and has only one value, of length 7
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
orig(this.option) has only one value
orig(this.option.name) has only one value
orig(this.option.name.toString) == "b"
orig(this.option.altName) has only one value
orig(this.option.altName.toString) == "before"
orig(this.option.argName) has only one value
orig(this.option.help) has only one value
orig(this.option.help.toString) == "number of lines before a match"
orig(this.optionList[]) contains no nulls and has only one value, of length 6
orig(this.optionList[].getClass().getName()) == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
size(this.varList[]) == 3
size(this.litList[]) == 7
size(this.optionList[]) == 8
orig(size(this.optionList[])) == 6
this.argList.home.entry.getClass().getName() in orig(this.optionList[].getClass().getName())
===========================================================================
com.fidelis.argface.ArgParseUsage.singleDash():::EXIT334;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.singleDash():::EXIT342
this.argList.home == this.argList.curr
this.argList.home.entry == this.argList.curr.entry
size(this.optionList[])-1 == orig(size(this.optionList[]))
this.argList.home.east == null
orig(this.option.help.toString) one of { "help description for x", "number of lines after a match" }
===========================================================================
com.fidelis.argface.ArgParseUsage.singleDash():::EXIT342;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.singleDash():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName.toString == orig(this.option.argName.toString)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.argList == orig(this.argList)
this.argList.home.south == this.argList.curr.south
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.home.entry)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.source has only one value
this.programName has only one value
this.optionalDepth == 1
this.exor == false
this.operand == null
this.option.help == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.home.optional == true
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.litList[].getClass().getName() one of { [com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
return == true
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7 }
this.argList.home.entry.getClass().getName() in this.optionList[].getClass().getName()
orig(this.argList.home.entry.getClass().getName()) in this.optionList[].getClass().getName()
size(this.optionList[])-1 >= orig(size(this.optionList[]))
===========================================================================
com.fidelis.argface.ArgParseUsage.singleDash():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.startGroup():::ENTER
this.argList.home.repeat == this.argList.curr.repeat
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.operand.repeat == false
this.option.altName.toString one of { "after", "before", "sleep" }
this.option.help.toString one of { "number of lines after a match", "number of lines before a match" }
this.argList != null
this.argList.home.optional == false
this.argList.home.spec == 0
size(this.varList[]) one of { 0, 2, 3 }
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.startGroup():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argName.toString == orig(this.option.argName.toString)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.option.help.toString == orig(this.option.help.toString)
this.argList.home == this.argList.curr
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.exor == false
this.operand.repeat == false
this.option.altName.toString one of { "after", "before", "sleep" }
this.option.help.toString one of { "number of lines after a match", "number of lines before a match" }
this.argList != null
this.argList.home == null
size(this.varList[]) one of { 0, 2, 3 }
this.source.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.source.getClass().getName() != orig(this.argList.curr.entry.getClass().getName())
this.listStack.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.listStack.getClass().getName() != orig(this.argList.curr.entry.getClass().getName())
this.varList.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.varList.getClass().getName() != orig(this.argList.curr.entry.getClass().getName())
===========================================================================
com.fidelis.argface.ArgParseUsage.validLetterOption(java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.validLetterOption(java.lang.String):::EXIT732
===========================================================================
com.fidelis.argface.ArgParseUsage.validLetterOption(java.lang.String):::EXIT732;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.validLetterOption(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argName.toString == orig(this.option.argName.toString)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.option.help.toString == orig(this.option.help.toString)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
arg0.toString == orig(arg0.toString)
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
return == true
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.validLetterOption(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.validLettersDigits(java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.argList != null
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0 != null
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.validLettersDigits(java.lang.String):::EXIT751
===========================================================================
com.fidelis.argface.ArgParseUsage.validLettersDigits(java.lang.String):::EXIT751;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.validLettersDigits(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argName.toString == orig(this.option.argName.toString)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.option.help.toString == orig(this.option.help.toString)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
arg0.toString == orig(arg0.toString)
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.operand.type == 1
this.operand.name has only one value
this.operand.name.toString == "file"
this.operand.repeat == true
this.argList != null
this.argList.home.spec == 0
this.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
return == true
size(this.varList[]) one of { 0, 3 }
size(this.litList[]) one of { 1, 7, 8 }
===========================================================================
com.fidelis.argface.ArgParseUsage.validLettersDigits(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.validName(java.lang.String):::ENTER
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.option.argName == null
this.option.help == null
this.argList != null
arg0 != null
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.validName(java.lang.String):::EXIT742
===========================================================================
com.fidelis.argface.ArgParseUsage.validName(java.lang.String):::EXIT742;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.validName(java.lang.String):::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.exor == orig(this.exor)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand == orig(this.operand)
this.operand.type == orig(this.operand.type)
this.operand.name == orig(this.operand.name)
this.operand.name.toString == orig(this.operand.name.toString)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.option.spec == orig(this.option.spec)
this.option.name == orig(this.option.name)
this.option.name.toString == orig(this.option.name.toString)
this.option.altName == orig(this.option.altName)
this.option.altName.toString == orig(this.option.altName.toString)
this.option.fieldName == orig(this.option.fieldName)
this.option.field == orig(this.option.field)
this.option.setter == orig(this.option.setter)
this.option.has == orig(this.option.has)
this.option.count == orig(this.option.count)
this.option.creation == orig(this.option.creation)
this.option.argName == orig(this.option.argName)
this.option.argFieldName == orig(this.option.argFieldName)
this.option.argField == orig(this.option.argField)
this.option.argSetter == orig(this.option.argSetter)
this.option.argValue == orig(this.option.argValue)
this.option.argOptional == orig(this.option.argOptional)
this.option.argRepeat == orig(this.option.argRepeat)
this.option.argSet == orig(this.option.argSet)
this.option.repeat == orig(this.option.repeat)
this.option.repeatList == orig(this.option.repeatList)
this.option.list == orig(this.option.list)
this.option.help == orig(this.option.help)
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
arg0.toString == orig(arg0.toString)
this.source has only one value
this.source != null
this.programName has only one value
this.programName != null
this.optionalDepth one of { 0, 1 }
this.option.argName == null
this.option.help == null
this.argList != null
return == true
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.validName(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.varOperand():::ENTER
this.argList.home.repeat == this.argList.curr.repeat
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.operand.repeat == false
this.option == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
size(this.optionList[]) one of { 4, 8 }
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
this.argList.home.spec <= this.argList.curr.spec
===========================================================================
com.fidelis.argface.ArgParseUsage.varOperand():::EXIT299
===========================================================================
com.fidelis.argface.ArgParseUsage.varOperand():::EXIT299;condition="return == true"
===========================================================================
com.fidelis.argface.ArgParseUsage.varOperand():::EXIT
this.source == orig(this.source)
this.source.getClass().getName() == orig(this.source.getClass().getName())
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.optionalDepth == orig(this.optionalDepth)
this.optionDefForm == orig(this.optionDefForm)
this.newOption == orig(this.newOption)
this.specOptions == orig(this.specOptions)
this.operand.fieldName == orig(this.operand.fieldName)
this.operand.optional == orig(this.operand.optional)
this.operand.setter == orig(this.operand.setter)
this.operand.field == orig(this.operand.field)
this.operand.repeat == orig(this.operand.repeat)
this.operand.repeatList == orig(this.operand.repeatList)
this.operand.list == orig(this.operand.list)
this.operand.has == orig(this.operand.has)
this.operand.value == orig(this.operand.value)
this.operand.count == orig(this.operand.count)
this.option == orig(this.option)
this.argList == orig(this.argList)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.east == orig(this.argList.curr.east)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.varList == orig(this.varList)
this.varList.getClass().getName() == orig(this.varList.getClass().getName())
this.varList.getClass().getName() == orig(this.litList.getClass().getName())
this.varList.getClass().getName() == orig(this.optionList.getClass().getName())
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.source has only one value
this.programName has only one value
this.optionalDepth one of { 0, 1 }
this.exor == false
this.operand.type == 1
this.operand.name.toString one of { "file", "other", "pattern" }
this.operand.repeat == false
this.option == null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.curr.optional == false
this.argList.curr.spec == 0
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
return == true
size(this.varList[]) one of { 1, 2, 3 }
size(this.optionList[]) one of { 4, 8 }
this.source.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.source.getClass().getName() != orig(this.argList.curr.entry.getClass().getName())
this.operand.type <= orig(this.operand.type)
this.operand.name.toString != orig(this.operand.name.toString)
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
this.argList.home.spec >= this.argList.curr.spec
this.argList.home.spec <= orig(this.argList.curr.spec)
this.argList.curr.spec <= orig(this.argList.home.spec)
this.argList.curr.spec <= orig(this.argList.curr.spec)
this.listStack.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.listStack.getClass().getName() != orig(this.argList.curr.entry.getClass().getName())
orig(this.argList.home.entry.getClass().getName()) in this.varList[].getClass().getName()
this.varList.getClass().getName() != orig(this.argList.home.entry.getClass().getName())
this.varList.getClass().getName() != orig(this.argList.curr.entry.getClass().getName())
orig(this.argList.home.entry.getClass().getName()) in this.litList[].getClass().getName()
size(this.varList[]) >= orig(size(this.varList[]))
size(this.varList[])-1 <= orig(size(this.varList[]))
size(this.varList[])-1 >= orig(size(this.varList[]))-1
===========================================================================
com.fidelis.argface.ArgParseUsage.varOperand():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgPattern:::OBJECT
this.argList.home.entry.getClass().getName() == this.failBase.south.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.south.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.argList.home.optional == this.failBase.south.optional
this.argList.home.optional == this.failBase.optional
this.argList.home.optional == this.failNode.south.optional
this.argList.home.optional == this.failNode.optional
this.argList.home.repeat == this.failBase.south.repeat
this.argList.home.repeat == this.failBase.repeat
this.argList.home.repeat == this.failNode.south.repeat
this.argList.home.repeat == this.failNode.east.repeat
this.argList.home.repeat == this.failNode.repeat
this.argList.curr.entry.getClass().getName() == this.failBase.south.entry.getClass().getName()
this.argList.curr.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.argList.curr.entry.getClass().getName() == this.failNode.south.entry.getClass().getName()
this.argList.curr.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.argList.curr.optional == this.failBase.south.optional
this.argList.curr.optional == this.failBase.optional
this.argList.curr.optional == this.failNode.south.optional
this.argList.curr.optional == this.failNode.optional
this.nonOptionList.getClass().getName() == this.patternList.getClass().getName()
this.patternList.getClass().getName() == this.saveList.getClass().getName()
this.patternList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.south.entry.getClass().getName() == this.failBase.east.entry.getClass().getName()
this.failBase.south.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.south.entry.getClass().getName() == this.failNode.south.entry.getClass().getName()
this.failBase.south.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.south.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failBase.south.optional == this.failBase.east.optional
this.failBase.south.optional == this.failBase.optional
this.failBase.south.optional == this.failNode.south.optional
this.failBase.south.optional == this.failNode.east.optional
this.failBase.south.optional == this.failNode.optional
this.failBase.south.repeat == this.failBase.repeat
this.failBase.south.repeat == this.failNode.south.repeat
this.failBase.south.repeat == this.failNode.east.repeat
this.failBase.south.repeat == this.failNode.repeat
this.failBase.east.south == this.failNode.east.south
this.failBase.east.east == this.failNode.east.east
this.failBase.east.entry == this.failNode.east.entry
this.failBase.east.entry.getClass().getName() == this.failNode.south.entry.getClass().getName()
this.failBase.east.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.east.optional == this.failNode.south.optional
this.failBase.east.optional == this.failNode.east.optional
this.failBase.east.repeat == this.failBase.repeat
this.failBase.east.spec == this.failNode.east.spec
this.failBase.entry.getClass().getName() == this.failNode.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failBase.optional == this.failNode.south.optional
this.failBase.optional == this.failNode.optional
this.failBase.repeat == this.failNode.south.repeat
this.failBase.repeat == this.failNode.east.repeat
this.failBase.repeat == this.failNode.repeat
this.failNode.south.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failNode.south.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.south.optional == this.failNode.east.optional
this.failNode.south.optional == this.failNode.optional
this.failNode.south.repeat == this.failNode.east.repeat
this.failNode.south.repeat == this.failNode.repeat
this.failNode.east.repeat == this.failNode.repeat
this has only one value
this.argList.home != null
this.argList.home.south != null
this.argList.home.east != null
this.argList.home.entry != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.repeat == false
this.argList.home.spec one of { 0, 1 }
this.argList.curr != null
this.argList.curr.entry != null
this.argList.curr.spec one of { 0, 1 }
this.nonOptionList[] elements != null
this.nonOptionList[].getClass().getName() elements == java.lang.String.class
this.nonOptionList.getClass().getName() == java.util.ArrayList.class
this.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
this.help == null
this.listStack has only one value
this.listStack != null
this.listStack.getClass().getName() == java.util.ArrayDeque.class
this.patternList has only one value
this.patternList != null
this.patternList[] elements != null
this.patternList[].getClass().getName() elements == com.fidelis.argface.ArgNode.class
this.patternList.getClass().getName() == java.util.ArrayList.class
this.saveList has only one value
this.saveList != null
this.saveList[] elements != null
this.saveList[].getClass().getName() elements == com.fidelis.argface.ArgNode.class
this.prevIndex >= 0
this.failBase.south.south has only one value
this.failBase.south.south != null
this.failBase.south.east == null
this.failBase.south.entry has only one value
this.failBase.south.entry != null
this.failBase.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failBase.south.optional == false
this.failBase.south.repeat == false
this.failBase.south.spec == 0
this.failBase.east != null
this.failBase.east.east != null
this.failBase.east.entry != null
this.failBase.east.spec one of { 0, 1 }
this.failBase.entry != null
this.failBase.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failBase.optional == false
this.failBase.repeat == false
this.failBase.spec == 0
this.failNode.south.east == null
this.failNode.south.entry != null
this.failNode.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.south.optional == false
this.failNode.south.repeat == false
this.failNode.south.spec == 0
this.failNode.east.east != null
this.failNode.east.entry != null
this.failNode.east.repeat == false
this.failNode.east.spec one of { 0, 1 }
this.failNode.entry != null
this.failNode.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.optional == false
this.failNode.repeat == false
this.failNode.spec == 0
this.lastBase == null
this.lastFail == null
this.patternMin >= 0
this.patternMax one of { 0, 4, 999 }
this.targetOperands has only one value
this.targetOperands != null
this.targetOperands[] elements != null
this.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
size(this.nonOptionList[])-1 != 0
size(this.saveList[]) one of { 0, 4, 7 }
size(this.saveList[])-1 != 0
this.argList.home.entry.getClass().getName() != this.nonOptionList.getClass().getName()
this.argList.home.entry.getClass().getName() != this.listStack.getClass().getName()
this.argList.home.entry.getClass().getName() != this.patternList.getClass().getName()
this.argList.home.spec >= this.argList.curr.spec
this.argList.curr.entry.getClass().getName() != this.nonOptionList.getClass().getName()
this.argList.curr.entry.getClass().getName() != this.listStack.getClass().getName()
this.argList.curr.entry.getClass().getName() != this.patternList.getClass().getName()
this.nonOptionList.getClass().getName() != this.listStack.getClass().getName()
this.nonOptionList.getClass().getName() != this.failBase.south.entry.getClass().getName()
this.nonOptionList.getClass().getName() != this.failBase.east.entry.getClass().getName()
this.nonOptionList.getClass().getName() != this.failBase.entry.getClass().getName()
this.nonOptionList.getClass().getName() != this.failNode.south.entry.getClass().getName()
this.nonOptionList.getClass().getName() != this.failNode.east.entry.getClass().getName()
this.nonOptionList.getClass().getName() != this.failNode.entry.getClass().getName()
this.listStack.getClass().getName() != this.patternList.getClass().getName()
this.listStack.getClass().getName() != this.failBase.south.entry.getClass().getName()
this.listStack.getClass().getName() != this.failBase.east.entry.getClass().getName()
this.listStack.getClass().getName() != this.failBase.entry.getClass().getName()
this.listStack.getClass().getName() != this.failNode.south.entry.getClass().getName()
this.listStack.getClass().getName() != this.failNode.east.entry.getClass().getName()
this.listStack.getClass().getName() != this.failNode.entry.getClass().getName()
this.patternList.getClass().getName() != this.failBase.south.entry.getClass().getName()
this.patternList.getClass().getName() != this.failBase.east.entry.getClass().getName()
this.patternList.getClass().getName() != this.failBase.entry.getClass().getName()
this.patternList.getClass().getName() != this.failNode.south.entry.getClass().getName()
this.patternList.getClass().getName() != this.failNode.east.entry.getClass().getName()
this.patternList.getClass().getName() != this.failNode.entry.getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.ArgPattern():::EXIT
this.patternMin == this.patternMax
this.argList == null
this.nonOptionList == null
this.patternWatch == false
this.patternMatch == null
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[] == []
this.saveList[].getClass().getName() == []
this.prevIndex == 0
this.failBase == null
this.patternMin == 0
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
===========================================================================
com.fidelis.argface.ArgPattern.addTargetOperands(java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == this.failBase.east.east
this.argList.curr.south == this.failNode
this.argList.curr.east == this.failNode
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList has only one value
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternWatch == true
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin == 3
this.patternMax == 999
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.toString one of { "VVV", "bLVV" }
size(this.nonOptionList[]) one of { 5, 11 }
size(this.patternList[]) one of { 3, 4 }
size(this.saveList[]) == 4
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgPattern.addTargetOperands(java.lang.String):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == this.failBase.east.east
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == this.failNode
this.argList.curr.east == this.failNode
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.argList.curr.south)
this.failNode == orig(this.argList.curr.east)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
arg0.toString == orig(arg0.toString)
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList has only one value
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternWatch == true
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin == 3
this.patternMax == 999
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.toString one of { "VVV", "bLVV" }
size(this.nonOptionList[]) one of { 5, 11 }
size(this.saveList[]) == 4
size(this.targetOperands[]) one of { 5, 16 }
this.argList.home.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.adjustCount(com.fidelis.argface.ArgNode):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == this.failNode.east.optional
this.argList.home.optional == arg0.south.optional
this.argList.home.repeat == arg0.south.repeat
this.argList.curr.optional == this.failNode.east.optional
this.argList.curr.optional == arg0.south.optional
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.south.repeat
this.argList.curr.repeat == arg0.repeat
this.argList.curr.spec == arg0.spec
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == arg0.south.optional
this.failBase.optional == arg0.east.optional
this.failBase.repeat == arg0.south.repeat
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.east.optional == this.failNode.optional
this.failNode.east.optional == arg0.south.optional
this.failNode.east.optional == arg0.east.optional
this.failNode.east.repeat == arg0.south.repeat
this.failNode.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.optional == arg0.south.optional
this.failNode.optional == arg0.east.optional
this.failNode.repeat == arg0.south.repeat
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
arg0.south.repeat == arg0.east.repeat
this.argList != null
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.south != null
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.south != null
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMax == 0
arg0 != null
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east.spec one of { 0, 1 }
arg0.entry != null
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.nonOptionList.getClass().getName() != arg0.south.entry.getClass().getName()
this.nonOptionList.getClass().getName() != arg0.east.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.south.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.east.entry.getClass().getName()
this.patternMin >= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.adjustCount(com.fidelis.argface.ArgNode):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == this.failNode.east.optional
this.argList.home.optional == arg0.south.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == arg0.south.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.repeat
this.argList.curr.spec == arg0.spec
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == arg0.south.optional
this.failBase.optional == arg0.east.optional
this.failBase.optional == arg0.optional
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == arg0.south.repeat
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == this.failNode.optional
this.failNode.east.optional == arg0.south.optional
this.failNode.east.optional == arg0.east.optional
this.failNode.east.optional == arg0.optional
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == arg0.south.repeat
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failNode.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failNode.optional == arg0.south.optional
this.failNode.optional == arg0.east.optional
this.failNode.optional == arg0.optional
this.failNode.optional == orig(this.failNode.south.optional)
this.failNode.optional == orig(this.failNode.optional)
this.failNode.repeat == arg0.south.repeat
this.failNode.repeat == orig(this.failNode.south.repeat)
this.failNode.repeat == orig(this.failNode.repeat)
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == arg0.optional
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == arg0.east.repeat
arg0.south.repeat == arg0.repeat
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(this.argList.curr.optional)
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(this.argList.curr.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(this.argList.curr.spec)
arg0.spec == orig(arg0.spec)
this.argList != null
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.south != null
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.south != null
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin >= 1
this.patternMax one of { 0, 999 }
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east.spec one of { 0, 1 }
arg0.entry != null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.spec one of { 0, 1 }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.argList.home.spec >= arg0.spec
this.nonOptionList.getClass().getName() != arg0.south.entry.getClass().getName()
this.nonOptionList.getClass().getName() != arg0.east.entry.getClass().getName()
this.nonOptionList.getClass().getName() != arg0.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.south.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.east.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.entry.getClass().getName()
this.patternMax % this.patternMin == 0
this.patternMin != this.patternMax
this.patternMin - orig(this.patternMin) - 1 == 0
this.patternMin > orig(this.patternMax)
this.patternMax >= orig(this.patternMax)
===========================================================================
com.fidelis.argface.ArgPattern.buildBase(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == this.failNode.east.optional
this.argList.home.optional == arg0.south.optional
this.argList.home.optional == arg0.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == arg0.south.repeat
this.argList.home.repeat == arg0.east.repeat
this.argList.home.repeat == arg0.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == arg0.spec
this.argList.curr == arg0
this.argList.curr.south == this.failBase.south
this.argList.curr.south == arg0.south
this.argList.curr.east == this.failBase.east
this.argList.curr.east == arg0.east
this.argList.curr.entry == this.failBase.entry
this.argList.curr.entry == arg0.entry
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.south.south == arg0.south.south
this.failBase.south.entry == arg0.south.entry
this.failBase.east.east == arg0.east.east
this.failBase.east.entry == arg0.east.entry
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == arg0.south.optional
this.failBase.optional == arg0.east.optional
this.failBase.repeat == arg0.south.repeat
this.failNode.east.east == arg0.east.east
this.failNode.east.entry == arg0.east.entry
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.east.optional == this.failNode.optional
this.failNode.east.optional == arg0.south.optional
this.failNode.east.optional == arg0.east.optional
this.failNode.east.repeat == arg0.south.repeat
this.failNode.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.optional == arg0.south.optional
this.failNode.optional == arg0.east.optional
this.failNode.repeat == arg0.south.repeat
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin one of { 0, 1 }
this.patternMax == 0
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east.spec one of { 0, 1 }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 0, 3 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.nonOptionList.getClass().getName() != arg0.south.entry.getClass().getName()
this.nonOptionList.getClass().getName() != arg0.east.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.south.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.east.entry.getClass().getName()
this.patternMin >= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.buildBase(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == arg0.optional
this.argList.home.repeat == arg0.repeat
this.argList.home.spec == arg0.spec
this.argList.curr == orig(arg0)
this.argList.curr.south == arg0.south
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.repeat
this.argList.curr.spec == arg0.spec
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.failBase == orig(this.failBase)
this.failBase.south == arg0.south
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == arg0.south.south
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == arg0.south.entry
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == arg0.east
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == arg0.east.east
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == arg0.east.entry
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == arg0.entry
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == arg0.south.optional
this.failBase.optional == arg0.east.optional
this.failBase.optional == arg0.optional
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == arg0.south.repeat
this.failBase.repeat == arg0.repeat
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == arg0.east.east
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == arg0.east.entry
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == this.failNode.optional
this.failNode.east.optional == arg0.south.optional
this.failNode.east.optional == arg0.east.optional
this.failNode.east.optional == arg0.optional
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == arg0.south.repeat
this.failNode.east.repeat == arg0.repeat
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failNode.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failNode.optional == arg0.south.optional
this.failNode.optional == arg0.east.optional
this.failNode.optional == arg0.optional
this.failNode.optional == orig(this.failNode.south.optional)
this.failNode.optional == orig(this.failNode.optional)
this.failNode.repeat == arg0.south.repeat
this.failNode.repeat == arg0.repeat
this.failNode.repeat == orig(this.failNode.south.repeat)
this.failNode.repeat == orig(this.failNode.repeat)
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(this.argList.curr.south)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == arg0.optional
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == arg0.repeat
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(this.argList.curr.east)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == arg0.repeat
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(this.argList.curr.entry)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(this.argList.home.optional)
arg0.optional == orig(this.argList.curr.optional)
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(this.argList.home.repeat)
arg0.repeat == orig(this.argList.curr.repeat)
arg0.repeat == orig(arg0.east.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(this.argList.home.spec)
arg0.spec == orig(this.argList.curr.spec)
arg0.spec == orig(arg0.spec)
size(this.patternList[])-1 == orig(size(this.patternList[]))
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin one of { 0, 1 }
this.patternMax == 0
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east.spec one of { 0, 1 }
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.repeat == false
arg0.spec one of { 0, 1 }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 1, 4 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.nonOptionList.getClass().getName() != arg0.south.entry.getClass().getName()
this.nonOptionList.getClass().getName() != arg0.east.entry.getClass().getName()
this.nonOptionList.getClass().getName() != arg0.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.south.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.east.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.entry.getClass().getName()
this.prevIndex - orig(this.prevIndex) - 1 == 0
this.patternMin >= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.buildGroup(com.fidelis.argface.ArgNode, java.lang.StringBuilder, boolean):::ENTER
this.argList.home.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == arg0
this.argList.curr.south == this.failBase
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase == this.failNode
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgList.class
this.argList.curr.optional == true
this.nonOptionList has only one value
this.nonOptionList[] contains no nulls and has only one value, of length 3
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.patternWatch == true
this.patternMatch == null
this.patternList[] contains no nulls and has only one value, of length 2
this.patternList[] elements has only one value
this.patternList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.saveList[] contains no nulls and has only one value, of length 4
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex == 5
this.failBase == null
this.patternMin == 1
this.patternMax == 0
this.targetOperands[] contains no nulls and has only one value, of length 16
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
arg0.south == null
arg0.east.south == null
arg0.east.east == null
arg0.east.entry has only one value
arg0.east.optional == false
arg0.east.repeat == false
arg0.east.spec == 0
arg0.repeat == false
arg0.spec == 0
arg1 has only one value
arg2 == false
size(this.nonOptionList[]) == 3
size(this.patternList[]) == 2
size(this.saveList[]) == 4
size(this.targetOperands[]) == 16
this.argList.home.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.buildGroup(com.fidelis.argface.ArgNode, java.lang.StringBuilder, boolean):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(arg0)
this.argList.curr.south == this.failBase
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.failBase == this.failNode
this.failBase == orig(this.argList.curr.south)
this.failBase == orig(this.failBase)
this.failBase == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(arg0.south)
arg0.east == orig(this.argList.curr.east)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(this.argList.curr.entry)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(this.argList.curr.optional)
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.nonOptionList[] contains no nulls and has only one value, of length 3
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.patternWatch == true
this.patternMatch == null
this.patternList[] contains no nulls and has only one value, of length 6
this.patternList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.saveList[] contains no nulls and has only one value, of length 4
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex == 9
this.failBase == null
this.patternMin == 3
this.patternMax == 0
this.targetOperands[] contains no nulls and has only one value, of length 16
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
arg0.south == null
arg0.east has only one value
arg0.east.south == null
arg0.east.east == null
arg0.east.entry has only one value
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.east.optional == false
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry has only one value
arg0.entry.getClass().getName() == com.fidelis.argface.ArgList.class
arg0.optional == true
arg0.repeat == false
arg0.spec == 0
return has only one value
return.toString == "bLgbLV"
orig(arg0) has only one value
size(this.nonOptionList[]) == 3
size(this.patternList[]) == 6
size(this.saveList[]) == 4
size(this.targetOperands[]) == 16
arg0.east.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.buildLiteral(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == this.failNode.east.optional
this.argList.home.optional == arg0.south.optional
this.argList.home.optional == arg0.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == arg0.south.repeat
this.argList.home.repeat == arg0.east.repeat
this.argList.home.repeat == arg0.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == arg0.spec
this.argList.curr.south == this.failBase.south
this.argList.curr.east == this.failBase.east
this.argList.curr.entry == this.failBase.entry
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.east == arg0.east.east
this.failBase.east.entry == arg0.east.entry
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == arg0.south.optional
this.failBase.optional == arg0.east.optional
this.failBase.repeat == arg0.south.repeat
this.failBase.repeat == arg0.east.repeat
this.failNode.south == arg0
this.failNode.south.south == arg0.south
this.failNode.south.entry == arg0.entry
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.east.optional == this.failNode.optional
this.failNode.east.optional == arg0.south.optional
this.failNode.east.repeat == arg0.south.repeat
this.failNode.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.optional == arg0.south.optional
this.failNode.repeat == arg0.south.repeat
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
arg0.south.repeat == arg0.east.repeat
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin one of { 0, 1 }
this.patternMax == 0
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east.repeat == false
arg0.east.spec one of { 0, 1 }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 1, 4 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.nonOptionList.getClass().getName() != arg0.south.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.south.entry.getClass().getName()
this.patternMin >= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.buildLiteral(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == arg0.optional
this.argList.home.repeat == arg0.repeat
this.argList.home.spec == arg0.spec
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == this.failBase.south
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == this.failBase.east
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == this.failBase.entry
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.repeat
this.argList.curr.spec == arg0.spec
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == arg0.east.east
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == arg0.east.entry
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == arg0.south.optional
this.failBase.optional == arg0.east.optional
this.failBase.optional == arg0.optional
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == arg0.south.repeat
this.failBase.repeat == arg0.east.repeat
this.failBase.repeat == arg0.repeat
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south == orig(arg0)
this.failNode.south.south == arg0.south
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == arg0.entry
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == this.failNode.optional
this.failNode.east.optional == arg0.south.optional
this.failNode.east.optional == arg0.optional
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == arg0.south.repeat
this.failNode.east.repeat == arg0.repeat
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failNode.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failNode.optional == arg0.south.optional
this.failNode.optional == arg0.optional
this.failNode.optional == orig(this.failNode.south.optional)
this.failNode.optional == orig(this.failNode.optional)
this.failNode.repeat == arg0.south.repeat
this.failNode.repeat == arg0.repeat
this.failNode.repeat == orig(this.failNode.south.repeat)
this.failNode.repeat == orig(this.failNode.repeat)
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == arg0.optional
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == arg0.east.repeat
arg0.south.repeat == arg0.repeat
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == arg0.repeat
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(this.argList.home.optional)
arg0.optional == orig(this.argList.curr.optional)
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(this.argList.home.repeat)
arg0.repeat == orig(this.argList.curr.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(this.argList.home.spec)
arg0.spec == orig(this.argList.curr.spec)
arg0.spec == orig(arg0.spec)
size(this.patternList[])-1 == orig(size(this.patternList[]))
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin one of { 1, 2 }
this.patternMax == 0
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east.repeat == false
arg0.east.spec one of { 0, 1 }
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.repeat == false
arg0.spec one of { 0, 1 }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 2, 5 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.nonOptionList.getClass().getName() != arg0.south.entry.getClass().getName()
this.nonOptionList.getClass().getName() != arg0.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.south.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.entry.getClass().getName()
this.prevIndex - orig(this.prevIndex) - 1 == 0
this.patternMin > this.patternMax
this.patternMin > orig(this.patternMin)
this.patternMax <= orig(this.patternMin)
===========================================================================
com.fidelis.argface.ArgPattern.buildOperand(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == arg0.south.optional
this.argList.home.repeat == arg0.south.repeat
this.argList.curr == arg0
this.argList.curr.south == arg0.south
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.argList.curr.optional == arg0.south.optional
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.south.repeat
this.argList.curr.repeat == arg0.repeat
this.argList.curr.spec == arg0.spec
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.south.south == arg0.south.south
this.failBase.south.entry == arg0.south.entry
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.optional == arg0.south.optional
this.failBase.optional == arg0.east.optional
this.failBase.repeat == arg0.south.repeat
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
arg0.south.repeat == arg0.east.repeat
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMax == 0
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east.spec one of { 0, 1 }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.patternMin >= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.buildOperand(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::EXIT433
===========================================================================
com.fidelis.argface.ArgPattern.buildOperand(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == arg0.south.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == arg0.south.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(arg0)
this.argList.curr.south == arg0.south
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.repeat
this.argList.curr.spec == arg0.spec
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == arg0.south.south
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == arg0.south.entry
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == arg0.south.optional
this.failBase.optional == arg0.east.optional
this.failBase.optional == arg0.optional
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == arg0.south.repeat
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(this.argList.curr.south)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == arg0.optional
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == arg0.east.repeat
arg0.south.repeat == arg0.repeat
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(this.argList.curr.east)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(this.argList.curr.entry)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(this.argList.curr.optional)
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(this.argList.curr.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(this.argList.curr.spec)
arg0.spec == orig(arg0.spec)
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin >= 1
this.patternMax one of { 0, 999 }
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.repeat == false
arg0.south.spec one of { 0, 3 }
arg0.east.spec one of { 0, 1 }
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.spec one of { 0, 1 }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) >= 2
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.argList.home.spec >= arg0.spec
this.nonOptionList.getClass().getName() != arg0.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.entry.getClass().getName()
this.prevIndex > orig(this.prevIndex)
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.patternMax % this.patternMin == 0
this.patternMin != this.patternMax
this.patternMin - orig(this.patternMin) - 1 == 0
this.patternMin > orig(this.patternMax)
this.patternMax >= orig(this.patternMax)
size(this.patternList[])-1 >= orig(size(this.patternList[]))
===========================================================================
com.fidelis.argface.ArgPattern.buildOperand(com.fidelis.argface.ArgNode, java.lang.StringBuilder, com.fidelis.argface.ArgNode):::ENTER
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == this.failBase
this.argList.curr.south == this.failBase.south
this.argList.curr.east == this.failBase.east
this.argList.curr.entry == this.failBase.entry
this.argList.curr.repeat == this.failBase.repeat
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase == arg2
this.failBase.south == arg2.south
this.failBase.south.south == arg2.south.south
this.failBase.south.entry == arg2.south.entry
this.failBase.east == arg2.east
this.failBase.east.east == arg2.east.east
this.failBase.east.entry == arg2.east.entry
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry == arg2.entry
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg2.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg2.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg2.entry.getClass().getName()
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == arg0.optional
this.failBase.optional == arg2.south.optional
this.failBase.optional == arg2.east.optional
this.failBase.optional == arg2.optional
this.failBase.repeat == arg0.repeat
this.failBase.repeat == arg2.south.repeat
this.failBase.repeat == arg2.east.repeat
this.failBase.repeat == arg2.repeat
this.failNode.south == arg0
this.failNode.south.south == arg0.south
this.failNode.south.entry == arg0.entry
this.failNode.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.patternMin == this.patternMax
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.spec == 0
this.nonOptionList has only one value
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternWatch == true
this.patternMatch == null
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex == 0
this.failBase has only one value
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin == 0
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east == null
arg0.spec == 0
arg2.south.east == null
arg2.south.spec == 0
arg2.east.south == null
arg2.east.spec == 0
arg2.spec == 0
size(this.nonOptionList[]) one of { 5, 11 }
size(this.saveList[]) == 4
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgPattern.buildOperand(com.fidelis.argface.ArgNode, java.lang.StringBuilder, com.fidelis.argface.ArgNode):::EXIT453
===========================================================================
com.fidelis.argface.ArgPattern.buildOperand(com.fidelis.argface.ArgNode, java.lang.StringBuilder, com.fidelis.argface.ArgNode):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == arg0.optional
this.argList.home.repeat == arg0.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == this.failBase
this.argList.curr.south == arg2.south
this.argList.curr.east == arg2.east
this.argList.curr.entry == arg2.entry
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.repeat
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.failBase == orig(this.argList.curr)
this.failBase == orig(this.failBase)
this.failBase == orig(arg2)
this.failBase.south == arg2.south
this.failBase.south.south == arg2.south.south
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == arg2.south.entry
this.failBase.south.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.south.optional == arg0.optional
this.failBase.south.repeat == arg0.repeat
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == arg2.east
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == arg2.east.east
this.failBase.east.entry == arg2.east.entry
this.failBase.east.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.east.optional == arg0.optional
this.failBase.east.repeat == arg0.repeat
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == arg2.entry
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.optional == arg0.optional
this.failBase.repeat == arg0.repeat
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(arg0)
this.failNode.south.south == arg0.south
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == arg0.entry
this.failNode.south.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.south.optional == arg0.optional
this.failNode.south.repeat == arg0.repeat
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == arg2.east.east
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == arg2.east.entry
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == arg0.optional
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == arg0.repeat
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.optional == arg0.optional
this.failNode.repeat == arg0.repeat
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMax == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(this.failNode.south.south)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.entry == orig(this.failNode.south.entry)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == arg2.south.entry.getClass().getName()
arg0.entry.getClass().getName() == arg2.east.entry.getClass().getName()
arg0.entry.getClass().getName() == arg2.entry.getClass().getName()
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg2.south.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg2.east.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg2.entry.getClass().getName())
arg0.optional == arg2.south.optional
arg0.optional == arg2.east.optional
arg0.optional == arg2.optional
arg0.optional == orig(this.argList.home.optional)
arg0.optional == orig(this.argList.curr.optional)
arg0.optional == orig(this.failBase.south.optional)
arg0.optional == orig(this.failBase.east.optional)
arg0.optional == orig(this.failBase.optional)
arg0.optional == orig(this.failNode.south.optional)
arg0.optional == orig(this.failNode.optional)
arg0.optional == orig(arg0.optional)
arg0.optional == orig(arg2.south.optional)
arg0.optional == orig(arg2.east.optional)
arg0.optional == orig(arg2.optional)
arg0.repeat == arg2.south.repeat
arg0.repeat == arg2.east.repeat
arg0.repeat == arg2.repeat
arg0.repeat == orig(this.argList.home.repeat)
arg0.repeat == orig(this.argList.curr.repeat)
arg0.repeat == orig(this.failBase.south.repeat)
arg0.repeat == orig(this.failBase.east.repeat)
arg0.repeat == orig(this.failBase.repeat)
arg0.repeat == orig(this.failNode.south.repeat)
arg0.repeat == orig(this.failNode.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.repeat == orig(arg2.south.repeat)
arg0.repeat == orig(arg2.east.repeat)
arg0.repeat == orig(arg2.repeat)
arg0.spec == orig(arg0.spec)
arg2.south == orig(this.argList.curr.south)
arg2.south == orig(this.failBase.south)
arg2.south == orig(arg2.south)
arg2.south.south == orig(this.failBase.south.south)
arg2.south.south == orig(arg2.south.south)
arg2.south.east == orig(arg2.south.east)
arg2.south.entry == orig(this.failBase.south.entry)
arg2.south.entry == orig(arg2.south.entry)
arg2.south.spec == orig(arg2.south.spec)
arg2.east == orig(this.argList.curr.east)
arg2.east == orig(this.failBase.east)
arg2.east == orig(arg2.east)
arg2.east.south == orig(arg2.east.south)
arg2.east.east == orig(this.failBase.east.east)
arg2.east.east == orig(arg2.east.east)
arg2.east.entry == orig(this.failBase.east.entry)
arg2.east.entry == orig(arg2.east.entry)
arg2.east.spec == orig(arg2.east.spec)
arg2.entry == orig(this.argList.curr.entry)
arg2.entry == orig(this.failBase.entry)
arg2.entry == orig(arg2.entry)
arg2.spec == orig(arg2.spec)
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.spec == 0
this.nonOptionList has only one value
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternWatch == true
this.patternMatch == null
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 1, 2 }
this.failBase has only one value
this.failBase.east.south == null
this.failBase.east.spec == 0
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin == 1
this.patternMax == 0
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.south.east == null
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east == null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
arg2.south has only one value
arg2.south.south has only one value
arg2.south.east == null
arg2.south.entry has only one value
arg2.south.spec == 0
arg2.east has only one value
arg2.east.south == null
arg2.east.east has only one value
arg2.east.entry has only one value
arg2.east.spec == 0
arg2.entry has only one value
arg2.spec == 0
size(this.nonOptionList[]) one of { 5, 11 }
size(this.patternList[]) one of { 1, 2 }
size(this.saveList[]) == 4
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgPattern.buildPattern(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == arg0.south.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == arg0.east.repeat
this.argList.home.repeat == arg0.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == arg0.spec
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.optional == this.failBase.optional
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.optional == arg0.optional
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 1 }
this.patternMax == 0
arg0.south.south has only one value
arg0.south.east == null
arg0.south.entry has only one value
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == true
arg0.south.repeat == false
arg0.south.spec == 3
arg0.east.spec one of { 0, 1 }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 0, 3 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
arg0.south.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.buildPattern(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == arg0.south.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == arg0.repeat
this.argList.home.spec == arg0.spec
this.argList.curr == this.failBase.east.east
this.argList.curr.south == this.failNode
this.argList.curr.east == this.failNode
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == arg0.repeat
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.optional == arg0.optional
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == arg0.repeat
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(this.argList.home.repeat)
arg0.repeat == orig(this.argList.curr.repeat)
arg0.repeat == orig(arg0.east.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(this.argList.home.spec)
arg0.spec == orig(this.argList.curr.spec)
arg0.spec == orig(arg0.spec)
this.argList.curr.optional == false
this.argList.curr.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 3, 4 }
this.patternMax one of { 0, 999 }
arg0.south.south has only one value
arg0.south.east == null
arg0.south.entry has only one value
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == true
arg0.south.repeat == false
arg0.south.spec == 3
arg0.east.spec one of { 0, 1 }
arg0.repeat == false
arg0.spec one of { 0, 1 }
return.toString one of { "bLVV", "bLgbLV", "bLgbLVV" }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 4, 6, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
arg0.south.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.buildVariable(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == this.failNode.east.optional
this.argList.curr.optional == this.failNode.east.optional
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.repeat
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.optional == this.failNode.east.optional
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.east.optional == this.failNode.optional
this.failNode.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.argList != null
this.argList.curr.optional == false
this.argList.curr.spec == 0
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.south != null
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMax == 0
arg0 != null
arg0.south == null
arg0.east.south == null
arg0.east.east == null
arg0.east.entry has only one value
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.east.optional == false
arg0.east.repeat == true
arg0.east.spec == 0
arg0.entry != null
arg0.spec == 0
arg1 != null
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.nonOptionList.getClass().getName() != arg0.east.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.east.entry.getClass().getName()
this.patternMin >= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.buildVariable(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == this.failNode.east.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.repeat
this.argList.curr.spec == orig(this.argList.curr.spec)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == arg0.optional
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == this.failNode.optional
this.failNode.east.optional == arg0.optional
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failNode.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failNode.optional == arg0.optional
this.failNode.optional == orig(this.failNode.south.optional)
this.failNode.optional == orig(this.failNode.optional)
this.failNode.repeat == orig(this.failNode.south.repeat)
this.failNode.repeat == orig(this.failNode.repeat)
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(arg0.south)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(this.argList.curr.optional)
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(this.argList.curr.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
size(this.patternList[])-1 == orig(size(this.patternList[]))
this.argList != null
this.argList.curr.spec == 0
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.south != null
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMax one of { 0, 999 }
arg0.south == null
arg0.east.south == null
arg0.east.east == null
arg0.east.entry has only one value
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.east.optional == false
arg0.east.repeat == true
arg0.east.spec == 0
arg0.entry != null
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.spec == 0
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.nonOptionList.getClass().getName() != arg0.east.entry.getClass().getName()
this.nonOptionList.getClass().getName() != arg0.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.east.entry.getClass().getName()
this.listStack.getClass().getName() != arg0.entry.getClass().getName()
this.prevIndex - orig(this.prevIndex) - 1 == 0
this.patternMax % this.patternMin == 0
this.patternMin != this.patternMax
this.patternMin - orig(this.patternMin) - 1 == 0
this.patternMin > orig(this.patternMax)
this.patternMax >= orig(this.patternMax)
===========================================================================
com.fidelis.argface.ArgPattern.first(com.fidelis.argface.ArgNode):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.curr.east == arg0
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
arg0.south == null
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == true
arg0.east.repeat == false
arg0.east.spec one of { 0, 1 }
arg0.repeat == false
arg0.spec == 0
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.first(com.fidelis.argface.ArgNode):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == this.failBase.east.east
this.argList.curr.south == this.failNode
this.argList.curr.east == this.failNode
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(arg0.south)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 4, 8, 10 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 3, 4 }
this.patternMax one of { 4, 999 }
arg0.south == null
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == true
arg0.east.repeat == false
arg0.east.spec one of { 0, 1 }
arg0.repeat == false
arg0.spec == 0
return.toString one of { "bLVV", "bLgbLVV" }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 4, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.getPatternMatch():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == this.failBase.east.east
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.getPatternMatch():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == this.failBase.east.east
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == return
this.patternMatch.toString == orig(this.patternMatch.toString)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
return == orig(this.patternMatch)
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
return.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.getTargetOperands():::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == this.failBase.east.east
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.getTargetOperands():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == this.failBase.east.east
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == return.getClass().getName()
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.patternList.getClass().getName() == return.getClass().getName()
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.saveList.getClass().getName() == return.getClass().getName()
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == return
this.targetOperands[] == orig(this.targetOperands[])
this.targetOperands.getClass().getName() == return.getClass().getName()
return == orig(this.targetOperands)
return.getClass().getName() == orig(this.nonOptionList.getClass().getName())
return.getClass().getName() == orig(this.patternList.getClass().getName())
return.getClass().getName() == orig(this.saveList.getClass().getName())
return.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
return has only one value
return[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
return.getClass().getName() == java.util.ArrayList.class
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
size(return[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.failBase.entry.getClass().getName() in return[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.match(java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == this.failNode.east.optional
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == this.failBase.east.east
this.argList.curr == this.failNode.east.east
this.argList.curr.south == this.argList.curr.east
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.optional == this.failNode.east.optional
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.optional == this.failNode.optional
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin one of { 3, 4 }
this.patternMax one of { 4, 999 }
arg0.toString one of { "VVV", "bLVV", "bLgbLVV" }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 3, 4, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.match(java.lang.String):::EXIT237
this.argList.curr.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.argList.curr.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.failBase.optional == orig(this.argList.home.optional)
this.failBase.optional == orig(this.argList.curr.optional)
this.failBase.repeat == orig(this.argList.home.repeat)
this.failNode == orig(this.failNode.south)
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 4, 8, 10 }
arg0.toString one of { "bLVV", "bLgbLVV" }
return == false
size(this.patternList[]) one of { 4, 7 }
===========================================================================
com.fidelis.argface.ArgPattern.match(java.lang.String):::EXIT237;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgPattern.match(java.lang.String):::EXIT279
this.argList.home.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.argList.home.optional == orig(this.failBase.south.optional)
this.argList.home.optional == orig(this.failBase.east.optional)
this.argList.home.optional == orig(this.failNode.south.optional)
this.argList.home.repeat == orig(this.failBase.south.repeat)
this.argList.home.repeat == orig(this.failBase.east.repeat)
this.argList.home.repeat == orig(this.failNode.south.repeat)
this.argList.curr == this.failBase.east.east
this.argList.curr.south == this.failNode
this.argList.curr.east == this.failNode
this.failBase.south == orig(this.failNode)
this.failBase.south.south == orig(this.failNode.south)
this.failBase.south.entry == orig(this.failNode.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failNode == orig(this.argList.curr.south)
this.failNode == orig(this.argList.curr.east)
this.failNode == orig(this.failNode.east)
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin == 3
this.patternMax == 999
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.toString one of { "VVV", "bLVV" }
return == true
orig(this.failBase) has only one value
size(this.nonOptionList[]) one of { 5, 11 }
size(this.patternList[]) one of { 3, 4 }
size(this.saveList[]) == 4
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgPattern.match(java.lang.String):::EXIT279;condition="return == true"
===========================================================================
com.fidelis.argface.ArgPattern.match(java.lang.String):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.optional == orig(this.failBase.optional)
this.argList.home.optional == orig(this.failNode.east.optional)
this.argList.home.optional == orig(this.failNode.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.failBase.repeat)
this.argList.home.repeat == orig(this.failNode.east.repeat)
this.argList.home.repeat == orig(this.failNode.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr == orig(this.failBase.east.east)
this.argList.curr == orig(this.failNode.east.east)
this.argList.curr.south == this.argList.curr.east
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.south == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.south.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failBase.south.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failBase.south.optional == orig(this.failBase.optional)
this.failBase.south.optional == orig(this.failNode.east.optional)
this.failBase.south.optional == orig(this.failNode.optional)
this.failBase.south.repeat == orig(this.failBase.repeat)
this.failBase.south.repeat == orig(this.failNode.east.repeat)
this.failBase.south.repeat == orig(this.failNode.repeat)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.south == orig(this.failNode.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.east == orig(this.failNode.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry == orig(this.failNode.east.entry)
this.failBase.east.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failBase.east.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failBase.east.optional == orig(this.failBase.optional)
this.failBase.east.optional == orig(this.failNode.east.optional)
this.failBase.east.optional == orig(this.failNode.optional)
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.east.spec == orig(this.failNode.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failBase.optional == orig(this.failBase.optional)
this.failBase.optional == orig(this.failNode.east.optional)
this.failBase.optional == orig(this.failNode.optional)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.repeat == orig(this.failNode.east.repeat)
this.failBase.repeat == orig(this.failNode.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failNode.south.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.south.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failNode.south.optional == orig(this.failBase.optional)
this.failNode.south.optional == orig(this.failNode.east.optional)
this.failNode.south.optional == orig(this.failNode.optional)
this.failNode.south.repeat == orig(this.failBase.repeat)
this.failNode.south.repeat == orig(this.failNode.east.repeat)
this.failNode.south.repeat == orig(this.failNode.repeat)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east.south == orig(this.failBase.east.south)
this.failNode.east.east == orig(this.failBase.east.east)
this.failNode.east.entry == orig(this.failBase.east.entry)
this.failNode.east.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failNode.east.optional == orig(this.failBase.optional)
this.failNode.east.repeat == orig(this.failBase.repeat)
this.failNode.east.spec == orig(this.failBase.east.spec)
this.failNode.entry == orig(this.failNode.south.entry)
this.failNode.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failNode.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failNode.optional == orig(this.failBase.optional)
this.failNode.optional == orig(this.failNode.east.optional)
this.failNode.optional == orig(this.failNode.optional)
this.failNode.repeat == orig(this.failBase.repeat)
this.failNode.repeat == orig(this.failNode.east.repeat)
this.failNode.repeat == orig(this.failNode.repeat)
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.toString == orig(arg0.toString)
(this.failNode == null)  <==>  (return == true)
(this.failNode == null)  ==>  (arg0.toString one of { "VVV", "bLVV" })
(this.failNode == null)  ==>  (orig(this.failBase) has only one value)
(this.failNode == null)  ==>  (orig(this.failNode.east) == null)
(this.failNode == null)  ==>  (size(this.nonOptionList[]) one of { 5, 11 })
(this.failNode == null)  ==>  (size(this.patternList[]) one of { 3, 4 })
(this.failNode == null)  ==>  (size(this.saveList[]) == 4)
(this.failNode == null)  ==>  (size(this.targetOperands[]) one of { 0, 5 })
(this.failNode == null)  ==>  (this.argList.curr == this.failBase.east.east)
(this.failNode == null)  ==>  (this.argList.curr has only one value)
(this.failNode == null)  ==>  (this.argList.curr.entry has only one value)
(this.failNode == null)  ==>  (this.argList.curr.repeat == true)
(this.failNode == null)  ==>  (this.argList.curr.south == this.failNode)
(this.failNode == null)  ==>  (this.argList.home.entry.getClass().getName() == this.failBase.east.entry.getClass().getName())
(this.failNode == null)  ==>  (this.argList.home.optional == this.failBase.east.optional)
(this.failNode == null)  ==>  (this.failBase.east has only one value)
(this.failNode == null)  ==>  (this.failBase.east.east has only one value)
(this.failNode == null)  ==>  (this.failBase.east.entry has only one value)
(this.failNode == null)  ==>  (this.failBase.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.failNode == null)  ==>  (this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName())
(this.failNode == null)  ==>  (this.failBase.east.optional == false)
(this.failNode == null)  ==>  (this.failBase.east.optional == this.failBase.optional)
(this.failNode == null)  ==>  (this.failBase.east.south == null)
(this.failNode == null)  ==>  (this.failBase.east.spec == 0)
(this.failNode == null)  ==>  (this.failBase.entry has only one value)
(this.failNode == null)  ==>  (this.failBase.south == orig(this.failNode))
(this.failNode == null)  ==>  (this.failBase.south has only one value)
(this.failNode == null)  ==>  (this.failBase.south.entry == orig(this.failNode.entry))
(this.failNode == null)  ==>  (this.failBase.south.south == orig(this.failNode.south))
(this.failNode == null)  ==>  (this.failNode == orig(this.failNode.east))
(this.failNode == null)  ==>  (this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] })
(this.failNode == null)  ==>  (this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] })
(this.failNode == null)  ==>  (this.patternMax == 999)
(this.failNode == null)  ==>  (this.patternMin == 3)
(this.failNode == null)  ==>  (this.prevIndex one of { 3, 4 })
(this.failNode == null)  ==>  (this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(this.failNode == null)  ==>  (this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.patternMin one of { 3, 4 }
this.patternMax one of { 4, 999 }
arg0.toString one of { "VVV", "bLVV", "bLgbLVV" }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 3, 4, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.match(java.lang.String):::EXIT;condition="return == true"
this.argList.home.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.argList.home.optional == orig(this.failBase.south.optional)
this.argList.home.optional == orig(this.failBase.east.optional)
this.argList.home.optional == orig(this.failNode.south.optional)
this.argList.home.repeat == orig(this.failBase.south.repeat)
this.argList.home.repeat == orig(this.failBase.east.repeat)
this.argList.home.repeat == orig(this.failNode.south.repeat)
this.argList.curr == this.failBase.east.east
this.argList.curr.south == this.failNode
this.argList.curr.east == this.failNode
this.failBase.south == orig(this.failNode)
this.failBase.south.south == orig(this.failNode.south)
this.failBase.south.entry == orig(this.failNode.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failNode == orig(this.argList.curr.south)
this.failNode == orig(this.argList.curr.east)
this.failNode == orig(this.failNode.east)
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin == 3
this.patternMax == 999
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.toString one of { "VVV", "bLVV" }
return == true
orig(this.failBase) has only one value
size(this.nonOptionList[]) one of { 5, 11 }
size(this.patternList[]) one of { 3, 4 }
size(this.saveList[]) == 4
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgPattern.match(java.lang.String):::EXIT;condition="not(return == true)"
this.argList.curr.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.argList.curr.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.failBase.optional == orig(this.argList.home.optional)
this.failBase.optional == orig(this.argList.curr.optional)
this.failBase.repeat == orig(this.argList.home.repeat)
this.failNode == orig(this.failNode.south)
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 4, 8, 10 }
arg0.toString one of { "bLVV", "bLgbLVV" }
return == false
size(this.patternList[]) one of { 4, 7 }
===========================================================================
com.fidelis.argface.ArgPattern.matchUsage(com.fidelis.argface.ArgNode):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == arg0
this.argList.curr.south == arg0.south
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch.toString == "ending <pattern> <file>..."
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.repeat == false
arg0.east.spec == 0
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.matchUsage(com.fidelis.argface.ArgNode):::EXIT109
this.argList.home.repeat == this.argList.curr.repeat
this.argList.curr == orig(arg0)
this.argList.curr.south == arg0.south
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.patternMatch == orig(this.patternMatch)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == this.failNode
this.failBase == orig(this.failBase)
this.failBase == orig(this.failNode)
this.patternMin == this.patternMax
this.patternMin == orig(this.patternMin)
this.patternMin == orig(this.patternMax)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.nonOptionList[] == []
this.nonOptionList[].getClass().getName() == []
this.patternMatch == null
this.saveList[] == []
this.saveList[].getClass().getName() == []
this.prevIndex == 0
this.failBase == null
this.patternMin == 0
this.targetOperands[] == []
this.targetOperands[].getClass().getName() == []
arg0.south.south has only one value
arg0.south.east has only one value
arg0.south.entry has only one value
arg0.east.optional == false
===========================================================================
com.fidelis.argface.ArgPattern.matchUsage(com.fidelis.argface.ArgNode):::EXIT109;condition="return == true"
===========================================================================
com.fidelis.argface.ArgPattern.matchUsage(com.fidelis.argface.ArgNode):::EXIT134
this.argList.curr.south == this.failNode
this.argList.curr.east == this.failNode
arg0.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 3, 4 }
this.patternMin == 3
this.patternMax == 999
this.targetOperands[].getClass().getName() one of { [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.south has only one value
arg0.south.south == null
arg0.south.east has only one value
arg0.south.entry has only one value
arg0.east has only one value
arg0.east.south == null
arg0.east.east has only one value
arg0.east.entry has only one value
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == true
arg0.entry has only one value
orig(arg0) has only one value
size(this.nonOptionList[]) one of { 5, 11 }
size(this.saveList[]) == 4
size(this.targetOperands[]) one of { 5, 16 }
arg0.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.matchUsage(com.fidelis.argface.ArgNode):::EXIT134;condition="return == true"
===========================================================================
com.fidelis.argface.ArgPattern.matchUsage(com.fidelis.argface.ArgNode):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.optional == orig(this.failBase.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.repeat == orig(this.failBase.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == this.failBase.east.east
this.argList.curr == orig(this.failBase.east.east)
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == arg0.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.targetOperands == orig(this.targetOperands)
arg0.south == orig(this.argList.curr.south)
arg0.south == orig(arg0.south)
arg0.south.south == orig(arg0.south.south)
arg0.south.east == orig(arg0.south.east)
arg0.south.entry == orig(arg0.south.entry)
arg0.south.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.south.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
arg0.south.entry.getClass().getName() == orig(arg0.south.entry.getClass().getName())
arg0.south.optional == orig(arg0.south.optional)
arg0.south.repeat == orig(arg0.south.repeat)
arg0.south.spec == orig(arg0.south.spec)
arg0.east == orig(this.argList.curr.east)
arg0.east == orig(arg0.east)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == orig(arg0.east.repeat)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(this.argList.curr.entry)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
arg0.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.south.optional == false
arg0.south.repeat == false
arg0.south.spec == 0
arg0.east.repeat == false
arg0.east.spec == 0
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
arg0.repeat == false
arg0.spec == 0
return == true
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
orig(this.failBase.entry.getClass().getName()) in this.targetOperands[].getClass().getName()
size(this.targetOperands[]) % orig(size(this.targetOperands[]))-1 == 0
===========================================================================
com.fidelis.argface.ArgPattern.matchUsage(com.fidelis.argface.ArgNode):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgPattern.next(com.fidelis.argface.ArgNode):::ENTER
this.argList.home.spec == this.argList.curr.spec
this.argList.curr.south == this.argList.curr.east
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.south == arg0.east.south
this.failBase.east.spec == arg0.east.spec
this.failBase.repeat == arg0.east.repeat
this.failBase.repeat == arg0.repeat
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 4, 8, 10 }
this.patternMin one of { 3, 4 }
this.patternMax one of { 4, 999 }
arg0.south == null
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == true
arg0.spec == 0
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 4, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
===========================================================================
com.fidelis.argface.ArgPattern.next(com.fidelis.argface.ArgNode):::EXIT163
this.argList.home.east == this.failBase
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == arg0.optional
this.argList.curr == this.failBase
this.argList.curr.south == this.failBase.south
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.repeat
this.failBase == this.failNode
this.failBase == orig(this.argList.home.east)
this.failBase == orig(this.failNode)
this.failBase == orig(arg0)
this.failBase.south == this.failNode.south
this.failBase.south == orig(this.argList.curr.south)
this.failBase.south == orig(this.argList.curr.east)
this.failBase.south == orig(this.failNode.south)
this.failBase.east == arg0.east
this.failBase.east.east == arg0.east.east
this.failBase.east.entry == arg0.east.entry
this.failBase.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.east.optional == arg0.east.optional
this.failBase.entry == arg0.entry
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.optional == arg0.optional
this.failNode.east == arg0.east
this.failNode.east.east == arg0.east.east
this.failNode.east.entry == arg0.east.entry
this.failNode.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.east.optional == arg0.east.optional
this.failNode.entry == arg0.entry
this.failNode.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.optional == arg0.optional
this.patternMin == this.patternMax
arg0.east == orig(this.failBase.east)
arg0.east == orig(this.failNode.east)
arg0.east.south == orig(this.failNode.east.south)
arg0.east.east == orig(this.failBase.east.east)
arg0.east.east == orig(this.failNode.east.east)
arg0.east.entry == orig(this.failBase.east.entry)
arg0.east.entry == orig(this.failNode.east.entry)
arg0.east.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
arg0.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
arg0.east.optional == orig(this.failBase.east.optional)
arg0.east.optional == orig(this.failNode.east.optional)
arg0.east.spec == orig(this.failNode.east.spec)
arg0.entry == orig(this.failBase.entry)
arg0.entry == orig(this.failNode.entry)
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
arg0.optional == orig(this.argList.home.optional)
arg0.optional == orig(this.argList.curr.optional)
arg0.optional == orig(this.failBase.optional)
arg0.optional == orig(this.failNode.optional)
arg0.repeat == orig(this.argList.curr.repeat)
arg0.repeat == orig(this.failNode.east.repeat)
orig(this.patternMin) == orig(this.patternMax)
this.nonOptionList[] contains no nulls and has only one value, of length 3
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[] contains no nulls and has only one value, of length 7
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex == 0
this.failBase has only one value
this.failBase.south == null
this.patternMin == 0
this.targetOperands[] contains no nulls and has only one value, of length 16
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
arg0.east has only one value
arg0.east.south has only one value
arg0.east.east has only one value
arg0.east.entry has only one value
arg0.east.spec == 1
arg0.entry has only one value
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
return == null
orig(this.argList.curr) has only one value
orig(this.argList.curr.entry) has only one value
orig(this.patternList[]) contains no nulls and has only one value, of length 7
orig(this.patternList[].getClass().getName()) == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
orig(this.saveList[]) contains no nulls and has only one value, of length 4
orig(this.saveList[].getClass().getName()) == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
orig(this.prevIndex) == 10
orig(this.patternMin) == 4
size(this.nonOptionList[]) == 3
size(this.saveList[]) == 7
size(this.targetOperands[]) == 16
orig(size(this.patternList[])) == 7
orig(size(this.saveList[])) == 4
arg0.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.next(com.fidelis.argface.ArgNode):::EXIT177
this.argList.curr == this.failBase.east.east
this.argList.curr == this.failNode.east.east
this.argList.curr == orig(this.argList.curr)
this.argList.curr == orig(this.failBase.east.east)
this.argList.curr.south == this.argList.curr.east
this.argList.curr.entry == orig(this.argList.curr.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == this.failNode.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failBase.optional == this.failNode.south.optional
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failNode.south.optional)
this.failNode.south.repeat == arg0.repeat
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
arg0.east.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.east.optional == arg0.optional
arg0.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.optional == orig(arg0.east.optional)
arg0.repeat == orig(this.failBase.south.repeat)
arg0.repeat == orig(this.failNode.south.repeat)
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 3, 4 }
this.failBase has only one value
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.entry has only one value
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin == 3
this.patternMax == 999
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.east has only one value
arg0.east.south == null
arg0.east.east has only one value
arg0.east.entry has only one value
arg0.east.spec == 0
arg0.entry has only one value
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.optional == true
orig(this.patternList[].getClass().getName()) == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
orig(this.prevIndex) one of { 4, 8 }
orig(arg0) has only one value
size(this.nonOptionList[]) one of { 5, 11 }
size(this.patternList[]) one of { 3, 4 }
size(this.saveList[]) == 4
size(this.targetOperands[]) one of { 0, 5 }
orig(size(this.patternList[])) == 4
===========================================================================
com.fidelis.argface.ArgPattern.next(com.fidelis.argface.ArgNode):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.repeat == arg0.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.south == orig(this.argList.curr.east)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.south.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failBase.south.optional == orig(this.failBase.south.optional)
this.failBase.south.optional == orig(this.failNode.south.optional)
this.failBase.south.repeat == arg0.repeat
this.failBase.south.repeat == orig(this.failBase.south.repeat)
this.failBase.south.repeat == orig(this.failNode.south.repeat)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == arg0.east.south
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.east.optional == orig(this.failBase.east.optional)
this.failBase.east.repeat == arg0.repeat
this.failBase.east.spec == arg0.east.spec
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failBase.optional == orig(this.argList.home.optional)
this.failBase.optional == orig(this.argList.curr.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.optional == orig(this.failNode.optional)
this.failBase.repeat == arg0.repeat
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == arg0.east.south
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == arg0.repeat
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == arg0.east.spec
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.repeat == arg0.repeat
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(arg0.south)
arg0.east == orig(arg0.east)
arg0.east.south == orig(this.failBase.east.south)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == arg0.repeat
arg0.east.spec == orig(this.failBase.east.spec)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(this.argList.home.repeat)
arg0.repeat == orig(this.failBase.east.repeat)
arg0.repeat == orig(this.failBase.repeat)
arg0.repeat == orig(this.failNode.repeat)
arg0.repeat == orig(arg0.east.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
(this.argList.curr.east == null)  <==>  (arg0.east.entry.getClass().getName() == arg0.entry.getClass().getName())
(this.argList.curr.east == null)  <==>  (arg0.east.south == null)
(this.argList.curr.east == null)  <==>  (arg0.east.spec == 0)
(this.argList.curr.east == null)  <==>  (arg0.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.argList.curr.east == null)  <==>  (arg0.optional == true)
(this.argList.curr.east == null)  <==>  (orig(size(this.patternList[])) == 4)
(this.argList.curr.east == null)  <==>  (orig(this.patternList[].getClass().getName()) == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(this.argList.curr.east == null)  <==>  (orig(this.patternMax) == 999)
(this.argList.curr.east == null)  <==>  (orig(this.patternMin) == 3)
(this.argList.curr.east == null)  <==>  (orig(this.prevIndex) one of { 4, 8 })
(this.argList.curr.east == null)  <==>  (size(this.nonOptionList[]) one of { 5, 11 })
(this.argList.curr.east == null)  <==>  (size(this.patternList[]) one of { 3, 4 })
(this.argList.curr.east == null)  <==>  (size(this.saveList[]) == 4)
(this.argList.curr.east == null)  <==>  (size(this.targetOperands[]) one of { 0, 5 })
(this.argList.curr.east == null)  <==>  (this.argList.curr.repeat == true)
(this.argList.curr.east == null)  <==>  (this.failBase.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.argList.curr.east == null)  <==>  (this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName())
(this.argList.curr.east == null)  <==>  (this.failBase.east.optional == false)
(this.argList.curr.east == null)  <==>  (this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName())
(this.argList.curr.east == null)  <==>  (this.failBase.south has only one value)
(this.argList.curr.east == null)  <==>  (this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.argList.curr.east == null)  <==>  (this.failNode.east.optional == false)
(this.argList.curr.east == null)  <==>  (this.failNode.east.south == null)
(this.argList.curr.east == null)  <==>  (this.failNode.east.spec == 0)
(this.argList.curr.east == null)  <==>  (this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] })
(this.argList.curr.east == null)  <==>  (this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] })
(this.argList.curr.east == null)  <==>  (this.patternMax == 999)
(this.argList.curr.east == null)  <==>  (this.patternMax == orig(this.patternMax))
(this.argList.curr.east == null)  <==>  (this.patternMin == 3)
(this.argList.curr.east == null)  <==>  (this.patternMin == orig(this.patternMin))
(this.argList.curr.east == null)  <==>  (this.prevIndex one of { 3, 4 })
(this.argList.curr.east == null)  <==>  (this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(this.argList.curr.east == null)  <==>  (this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] })
(this.argList.curr.east == null)  ==>  (arg0.east.optional == arg0.optional)
(this.argList.curr.east == null)  ==>  (orig(size(this.saveList[])) one of { 0, 4 })
(this.argList.curr.east == null)  ==>  (orig(this.saveList[].getClass().getName()) one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] })
(this.argList.curr.east == null)  ==>  (return.toString one of { "VVV", "bLVV" })
(this.argList.curr.east == null)  ==>  (this.argList.curr == orig(this.argList.curr))
(this.argList.curr.east == null)  ==>  (this.argList.curr == this.failBase.east.east)
(this.argList.curr.east == null)  ==>  (this.argList.curr == this.failNode.east.east)
(this.argList.curr.east == null)  ==>  (this.argList.curr.entry == orig(this.argList.curr.entry))
(this.argList.curr.east == null)  ==>  (this.argList.curr.south == this.argList.curr.east)
(this.argList.curr.east == null)  ==>  (this.failBase.east.optional == this.failBase.optional)
(this.argList.curr.east == null)  ==>  (this.failBase.optional == this.failNode.east.optional)
(this.argList.curr.east == null)  ==>  (this.failBase.south.east == null)
(this.argList.curr.east == null)  ==>  (this.failBase.south.entry has only one value)
(this.argList.curr.east == null)  ==>  (this.failBase.south.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.argList.curr.east == null)  ==>  (this.failBase.south.entry.getClass().getName() == this.failBase.entry.getClass().getName())
(this.argList.curr.east == null)  ==>  (this.failBase.south.entry.getClass().getName() == this.failNode.east.entry.getClass().getName())
(this.argList.curr.east == null)  ==>  (this.failBase.south.optional == this.failNode.east.optional)
(this.argList.curr.east == null)  ==>  (this.failBase.south.south has only one value)
(this.argList.curr.east == null)  ==>  (this.failNode.east.east == orig(this.argList.curr))
(this.argList.curr.east == null)  ==>  (this.failNode.south.east == null)
(this.argList.curr.east == null)  ==>  (this.patternList[].getClass().getName() elements == com.fidelis.argface.ArgNode.class)
(this.argList.curr.east has only one value)  <==>  (arg0.east.south has only one value)
(this.argList.curr.east has only one value)  <==>  (arg0.east.spec == 1)
(this.argList.curr.east has only one value)  <==>  (arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class)
(this.argList.curr.east has only one value)  <==>  (arg0.optional == false)
(this.argList.curr.east has only one value)  <==>  (orig(size(this.patternList[])) == 7)
(this.argList.curr.east has only one value)  <==>  (orig(this.patternList[].getClass().getName()) == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(this.argList.curr.east has only one value)  <==>  (orig(this.patternMax) == 4)
(this.argList.curr.east has only one value)  <==>  (orig(this.patternMin) == 4)
(this.argList.curr.east has only one value)  <==>  (orig(this.patternMin) == orig(this.patternMax))
(this.argList.curr.east has only one value)  <==>  (orig(this.prevIndex) == 10)
(this.argList.curr.east has only one value)  <==>  (return == null)
(this.argList.curr.east has only one value)  <==>  (size(this.nonOptionList[]) == 3)
(this.argList.curr.east has only one value)  <==>  (size(this.saveList[]) == 7)
(this.argList.curr.east has only one value)  <==>  (size(this.targetOperands[]) == 16)
(this.argList.curr.east has only one value)  <==>  (this.argList.curr.repeat == false)
(this.argList.curr.east has only one value)  <==>  (this.failBase.east.entry.getClass().getName() == arg0.east.entry.getClass().getName())
(this.argList.curr.east has only one value)  <==>  (this.failBase.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.argList.curr.east has only one value)  <==>  (this.failBase.east.optional == true)
(this.argList.curr.east has only one value)  <==>  (this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName())
(this.argList.curr.east has only one value)  <==>  (this.failBase.south == null)
(this.argList.curr.east has only one value)  <==>  (this.failNode.east has only one value)
(this.argList.curr.east has only one value)  <==>  (this.failNode.east.entry.getClass().getName() == arg0.east.entry.getClass().getName())
(this.argList.curr.east has only one value)  <==>  (this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class)
(this.argList.curr.east has only one value)  <==>  (this.failNode.east.optional == true)
(this.argList.curr.east has only one value)  <==>  (this.failNode.east.south has only one value)
(this.argList.curr.east has only one value)  <==>  (this.failNode.east.spec == 1)
(this.argList.curr.east has only one value)  <==>  (this.failNode.south == null)
(this.argList.curr.east has only one value)  <==>  (this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String])
(this.argList.curr.east has only one value)  <==>  (this.patternList[].getClass().getName() == [])
(this.argList.curr.east has only one value)  <==>  (this.patternMax == 0)
(this.argList.curr.east has only one value)  <==>  (this.patternMin == 0)
(this.argList.curr.east has only one value)  <==>  (this.patternMin == this.patternMax)
(this.argList.curr.east has only one value)  <==>  (this.prevIndex == 0)
(this.argList.curr.east has only one value)  <==>  (this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(this.argList.curr.east has only one value)  <==>  (this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand])
(this.argList.curr.east has only one value)  ==>  (arg0.entry.getClass().getName() in this.targetOperands[].getClass().getName())
(this.argList.curr.east has only one value)  ==>  (orig(size(this.saveList[])) == 4)
(this.argList.curr.east has only one value)  ==>  (orig(this.patternList[]) contains no nulls and has only one value, of length 7)
(this.argList.curr.east has only one value)  ==>  (orig(this.saveList[]) contains no nulls and has only one value, of length 4)
(this.argList.curr.east has only one value)  ==>  (orig(this.saveList[].getClass().getName()) == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode])
(this.argList.curr.east has only one value)  ==>  (this.argList.curr == this.failBase)
(this.argList.curr.east has only one value)  ==>  (this.argList.curr.east == arg0.east)
(this.argList.curr.east has only one value)  ==>  (this.argList.curr.entry == arg0.entry)
(this.argList.curr.east has only one value)  ==>  (this.argList.curr.repeat == arg0.repeat)
(this.argList.curr.east has only one value)  ==>  (this.argList.curr.south == this.failBase.south)
(this.argList.curr.east has only one value)  ==>  (this.argList.home.east == this.failBase)
(this.argList.curr.east has only one value)  ==>  (this.failBase == orig(arg0))
(this.argList.curr.east has only one value)  ==>  (this.failBase == this.failNode)
(this.argList.curr.east has only one value)  ==>  (this.failBase.east == arg0.east)
(this.argList.curr.east has only one value)  ==>  (this.failBase.east.east == arg0.east.east)
(this.argList.curr.east has only one value)  ==>  (this.failBase.east.entry == arg0.east.entry)
(this.argList.curr.east has only one value)  ==>  (this.failBase.east.optional == arg0.east.optional)
(this.argList.curr.east has only one value)  ==>  (this.failBase.entry == arg0.entry)
(this.argList.curr.east has only one value)  ==>  (this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName())
(this.argList.curr.east has only one value)  ==>  (this.failBase.optional == arg0.optional)
(this.argList.curr.east has only one value)  ==>  (this.failBase.south == this.failNode.south)
(this.argList.curr.east has only one value)  ==>  (this.failNode has only one value)
(this.argList.curr.east has only one value)  ==>  (this.failNode.east == arg0.east)
(this.argList.curr.east has only one value)  ==>  (this.failNode.east.east == arg0.east.east)
(this.argList.curr.east has only one value)  ==>  (this.failNode.east.entry == arg0.east.entry)
(this.argList.curr.east has only one value)  ==>  (this.failNode.east.optional == arg0.east.optional)
(this.argList.curr.east has only one value)  ==>  (this.failNode.entry == arg0.entry)
(this.argList.curr.east has only one value)  ==>  (this.failNode.entry has only one value)
(this.argList.curr.east has only one value)  ==>  (this.nonOptionList[] contains no nulls and has only one value, of length 3)
(this.argList.curr.east has only one value)  ==>  (this.patternList[] == [])
(this.argList.curr.east has only one value)  ==>  (this.saveList[] contains no nulls and has only one value, of length 7)
(this.argList.curr.east has only one value)  ==>  (this.targetOperands[] contains no nulls and has only one value, of length 16)
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
arg0.south == null
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == true
arg0.east.spec one of { 0, 1 }
arg0.repeat == false
arg0.spec == 0
return.toString one of { "VVV", "bLVV" }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 0, 3, 4 }
size(this.saveList[]) one of { 4, 7 }
size(this.targetOperands[]) one of { 0, 5, 16 }
===========================================================================
com.fidelis.argface.ArgPattern.nextInit():::ENTER
this.argList.home.spec == this.argList.curr.spec
this.argList.curr.south == this.argList.curr.east
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 4, 8, 10 }
this.patternMin one of { 3, 4 }
this.patternMax one of { 4, 999 }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 4, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
===========================================================================
com.fidelis.argface.ArgPattern.nextInit():::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == this.argList.curr.east
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.south == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.south.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failBase.south.optional == orig(this.failBase.south.optional)
this.failBase.south.optional == orig(this.failNode.south.optional)
this.failBase.south.repeat == orig(this.failBase.south.repeat)
this.failBase.south.repeat == orig(this.failNode.south.repeat)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.east.optional == orig(this.failBase.east.optional)
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failBase.optional == orig(this.argList.home.optional)
this.failBase.optional == orig(this.argList.curr.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.optional == orig(this.failNode.optional)
this.failBase.repeat == orig(this.argList.home.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.repeat == orig(this.failNode.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == this.patternMax
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex == 0
this.patternMin == 0
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.saveList[]) one of { 4, 7 }
size(this.targetOperands[]) one of { 0, 5, 16 }
===========================================================================
com.fidelis.argface.ArgPattern.patternSpec(java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == this.failNode.east.optional
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == this.failBase.east.east
this.argList.curr == this.failNode.east.east
this.argList.curr.south == this.argList.curr.east
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.optional == this.failNode.east.optional
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.optional == this.failNode.optional
this.argList has only one value
this.argList != null
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.south != null
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin one of { 3, 4 }
this.patternMax one of { 4, 999 }
arg0 != null
arg0.toString one of { "VVV", "bLVV", "bLgbLVV" }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 3, 4, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.patternSpec(java.lang.String):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == this.failNode.east.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == this.failBase.east.east
this.argList.curr == this.failNode.east.east
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == this.argList.curr.east
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.south == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == this.failNode.optional
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failNode.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failNode.optional == orig(this.failNode.south.optional)
this.failNode.optional == orig(this.failNode.optional)
this.failNode.repeat == orig(this.failNode.south.repeat)
this.failNode.repeat == orig(this.failNode.repeat)
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.toString == orig(arg0.toString)
this.argList has only one value
this.argList != null
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.south != null
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin one of { 3, 4 }
this.patternMax one of { 4, 999 }
arg0.toString one of { "VVV", "bLVV", "bLgbLVV" }
return != null
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 3, 4, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.rebuildPattern(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::ENTER
this.argList.home.spec == this.argList.curr.spec
this.argList.curr.south == this.argList.curr.east
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.south == arg0.east.south
this.failBase.east.spec == arg0.east.spec
this.failBase.repeat == arg0.east.repeat
this.failBase.repeat == arg0.repeat
this.patternMin == this.patternMax
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex == 0
this.patternMin == 0
arg0.south == null
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == true
arg0.spec == 0
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.saveList[]) one of { 4, 7 }
size(this.targetOperands[]) one of { 0, 5, 16 }
===========================================================================
com.fidelis.argface.ArgPattern.rebuildPattern(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::EXIT343
this.argList.home.east == this.failBase
this.argList.home.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.home.optional == arg0.optional
this.argList.curr == this.failBase
this.argList.curr.south == this.failBase.south
this.argList.curr.east == arg0.east
this.argList.curr.entry == arg0.entry
this.argList.curr.entry.getClass().getName() == arg0.entry.getClass().getName()
this.argList.curr.optional == arg0.optional
this.argList.curr.repeat == arg0.repeat
this.patternList[] == orig(this.patternList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == this.failNode
this.failBase == orig(this.argList.home.east)
this.failBase == orig(this.failNode)
this.failBase == orig(arg0)
this.failBase.south == this.failNode.south
this.failBase.south == orig(this.argList.curr.south)
this.failBase.south == orig(this.argList.curr.east)
this.failBase.south == orig(this.failNode.south)
this.failBase.east == arg0.east
this.failBase.east.east == arg0.east.east
this.failBase.east.entry == arg0.east.entry
this.failBase.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failBase.east.optional == arg0.east.optional
this.failBase.entry == arg0.entry
this.failBase.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failBase.optional == arg0.optional
this.failNode.east == arg0.east
this.failNode.east.east == arg0.east.east
this.failNode.east.entry == arg0.east.entry
this.failNode.east.entry.getClass().getName() == arg0.east.entry.getClass().getName()
this.failNode.east.optional == arg0.east.optional
this.failNode.entry == arg0.entry
this.failNode.entry.getClass().getName() == arg0.entry.getClass().getName()
this.failNode.optional == arg0.optional
this.patternMin == this.patternMax
this.patternMin == orig(this.patternMin)
this.patternMin == orig(this.patternMax)
arg0.east == orig(this.failBase.east)
arg0.east == orig(this.failNode.east)
arg0.east.south == orig(this.failNode.east.south)
arg0.east.east == orig(this.failBase.east.east)
arg0.east.east == orig(this.failNode.east.east)
arg0.east.entry == orig(this.failBase.east.entry)
arg0.east.entry == orig(this.failNode.east.entry)
arg0.east.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
arg0.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
arg0.east.optional == orig(this.failBase.east.optional)
arg0.east.optional == orig(this.failNode.east.optional)
arg0.east.spec == orig(this.failNode.east.spec)
arg0.entry == orig(this.failBase.entry)
arg0.entry == orig(this.failNode.entry)
arg0.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
arg0.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
arg0.optional == orig(this.argList.home.optional)
arg0.optional == orig(this.argList.curr.optional)
arg0.optional == orig(this.failBase.optional)
arg0.optional == orig(this.failNode.optional)
arg0.repeat == orig(this.argList.curr.repeat)
arg0.repeat == orig(this.failNode.east.repeat)
this.nonOptionList[] contains no nulls and has only one value, of length 3
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[] contains no nulls and has only one value, of length 7
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex == 0
this.failBase has only one value
this.failBase.south == null
this.patternMin == 0
this.targetOperands[] contains no nulls and has only one value, of length 16
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
arg0.east has only one value
arg0.east.south has only one value
arg0.east.east has only one value
arg0.east.entry has only one value
arg0.east.spec == 1
arg0.entry has only one value
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.optional == false
return == null
orig(this.argList.curr) has only one value
orig(this.argList.curr.entry) has only one value
orig(arg1) has only one value
size(this.nonOptionList[]) == 3
size(this.saveList[]) == 7
size(this.targetOperands[]) == 16
arg0.entry.getClass().getName() in this.targetOperands[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.rebuildPattern(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::EXIT412
this.argList.curr == this.failBase.east.east
this.argList.curr == this.failNode.east.east
this.argList.curr == orig(this.argList.curr)
this.argList.curr == orig(this.failBase.east.east)
this.argList.curr.south == this.argList.curr.east
this.argList.curr.entry == orig(this.argList.curr.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == this.failNode.south.entry.getClass().getName()
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failBase.optional == this.failNode.south.optional
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failNode.south.optional)
this.failNode.south.repeat == arg0.repeat
arg0.east.entry.getClass().getName() == arg0.entry.getClass().getName()
arg0.east.optional == arg0.optional
arg0.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.optional == orig(arg0.east.optional)
arg0.repeat == orig(this.failBase.south.repeat)
arg0.repeat == orig(this.failNode.south.repeat)
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 3, 4 }
this.failBase has only one value
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.entry has only one value
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin == 3
this.patternMax == 999
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
arg0.east has only one value
arg0.east.south == null
arg0.east.east has only one value
arg0.east.entry has only one value
arg0.east.spec == 0
arg0.entry has only one value
arg0.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.optional == true
orig(arg0) has only one value
size(this.nonOptionList[]) one of { 5, 11 }
size(this.patternList[]) one of { 3, 4 }
size(this.saveList[]) == 4
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgPattern.rebuildPattern(com.fidelis.argface.ArgNode, java.lang.StringBuilder):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.repeat == arg0.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.south == orig(this.argList.curr.east)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.south.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failBase.south.optional == orig(this.failBase.south.optional)
this.failBase.south.optional == orig(this.failNode.south.optional)
this.failBase.south.repeat == arg0.repeat
this.failBase.south.repeat == orig(this.failBase.south.repeat)
this.failBase.south.repeat == orig(this.failNode.south.repeat)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == arg0.east.south
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.east.optional == orig(this.failBase.east.optional)
this.failBase.east.repeat == arg0.repeat
this.failBase.east.spec == arg0.east.spec
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failBase.optional == orig(this.argList.home.optional)
this.failBase.optional == orig(this.argList.curr.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.optional == orig(this.failNode.optional)
this.failBase.repeat == arg0.repeat
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == arg0.east.south
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == arg0.repeat
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == arg0.east.spec
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.repeat == arg0.repeat
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.south == orig(arg0.south)
arg0.east == orig(arg0.east)
arg0.east.south == orig(this.failBase.east.south)
arg0.east.south == orig(arg0.east.south)
arg0.east.east == orig(arg0.east.east)
arg0.east.entry == orig(arg0.east.entry)
arg0.east.entry.getClass().getName() == orig(arg0.east.entry.getClass().getName())
arg0.east.optional == orig(arg0.east.optional)
arg0.east.repeat == arg0.repeat
arg0.east.spec == orig(this.failBase.east.spec)
arg0.east.spec == orig(arg0.east.spec)
arg0.entry == orig(arg0.entry)
arg0.entry.getClass().getName() == orig(arg0.entry.getClass().getName())
arg0.optional == orig(arg0.optional)
arg0.repeat == orig(this.argList.home.repeat)
arg0.repeat == orig(this.failBase.east.repeat)
arg0.repeat == orig(this.failBase.repeat)
arg0.repeat == orig(this.failNode.repeat)
arg0.repeat == orig(arg0.east.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.spec == orig(arg0.spec)
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
arg0.south == null
arg0.east.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
arg0.east.optional == true
arg0.east.spec one of { 0, 1 }
arg0.repeat == false
arg0.spec == 0
return.toString one of { "VVV", "bLVV" }
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 0, 3, 4 }
size(this.saveList[]) one of { 4, 7 }
size(this.targetOperands[]) one of { 0, 5, 16 }
===========================================================================
com.fidelis.argface.ArgPattern.remLast(java.lang.StringBuilder):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == this.failNode.east.optional
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == this.failBase.east.east
this.argList.curr == this.failNode.east.east
this.argList.curr.south == this.argList.curr.east
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.optional == this.failNode.east.optional
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.optional == this.failNode.optional
this.argList has only one value
this.argList != null
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.south != null
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin one of { 3, 4 }
this.patternMax one of { 4, 999 }
arg0 != null
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 3, 4, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.remLast(java.lang.StringBuilder):::EXIT525
===========================================================================
com.fidelis.argface.ArgPattern.remLast(java.lang.StringBuilder):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == this.failNode.east.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == this.failBase.east.east
this.argList.curr == this.failNode.east.east
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == this.argList.curr.east
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.south == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == this.failNode.east.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == this.failNode.east.optional
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == this.failNode.entry.getClass().getName()
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == this.failNode.optional
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failNode.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failNode.optional == orig(this.failNode.south.optional)
this.failNode.optional == orig(this.failNode.optional)
this.failNode.repeat == orig(this.failNode.south.repeat)
this.failNode.repeat == orig(this.failNode.repeat)
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.argList has only one value
this.argList != null
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr.south == null
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.failBase.south has only one value
this.failBase.south != null
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode.east.south == null
this.failNode.east.east has only one value
this.failNode.east.entry has only one value
this.failNode.east.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.failNode.east.optional == false
this.failNode.east.spec == 0
this.patternMin one of { 3, 4 }
this.patternMax one of { 4, 999 }
return == 32
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.patternList[]) one of { 3, 4, 7 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.setArgList(com.fidelis.argface.ArgList):::ENTER
this.argList.home == arg0.home
this.argList.home.south == arg0.home.south
this.argList.home.east == arg0.home.east
this.argList.home.entry == arg0.home.entry
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == arg0.home.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == arg0.curr
this.argList.curr.south == arg0.curr.south
this.argList.curr.east == arg0.curr.east
this.argList.curr.entry == arg0.curr.entry
this.failBase.east.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == arg0.home.entry.getClass().getName()
arg0.home.entry.getClass().getName() == arg0.curr.entry.getClass().getName()
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
arg0 has only one value
arg0.home has only one value
arg0.home.south has only one value
arg0.home.east has only one value
arg0.home.entry has only one value
arg0.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.home.optional == false
arg0.home.repeat == false
arg0.home.spec == 0
arg0.curr.optional == false
arg0.curr.repeat == false
arg0.curr.spec == 0
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.listStack.getClass().getName() != arg0.home.entry.getClass().getName()
this.patternList.getClass().getName() != arg0.home.entry.getClass().getName()
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.setArgList(com.fidelis.argface.ArgList):::EXIT
this.argList == orig(arg0)
this.argList.home == arg0.home
this.argList.home.south == arg0.home.south
this.argList.home.east == arg0.home.east
this.argList.home.entry == arg0.home.entry
this.argList.home.entry.getClass().getName() == arg0.home.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == arg0.curr
this.argList.curr.south == arg0.curr.south
this.argList.curr.east == arg0.curr.east
this.argList.curr.entry == arg0.curr.entry
this.argList.curr.entry.getClass().getName() == arg0.home.entry.getClass().getName()
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.patternList.getClass().getName() == orig(this.patternList.getClass().getName())
this.patternList.getClass().getName() == orig(this.saveList.getClass().getName())
this.patternList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == arg0.home.entry.getClass().getName()
this.failBase.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.failBase.optional == orig(this.argList.home.optional)
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.argList.home.repeat)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.home == orig(this.argList.home)
arg0.home == orig(arg0.home)
arg0.home.south == orig(this.argList.home.south)
arg0.home.south == orig(arg0.home.south)
arg0.home.east == orig(this.argList.home.east)
arg0.home.east == orig(arg0.home.east)
arg0.home.entry == orig(this.argList.home.entry)
arg0.home.entry == orig(arg0.home.entry)
arg0.home.entry.getClass().getName() == arg0.curr.entry.getClass().getName()
arg0.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
arg0.home.entry.getClass().getName() == orig(arg0.home.entry.getClass().getName())
arg0.home.entry.getClass().getName() == orig(arg0.curr.entry.getClass().getName())
arg0.home.optional == orig(arg0.home.optional)
arg0.home.repeat == orig(arg0.home.repeat)
arg0.home.spec == orig(arg0.home.spec)
arg0.curr == orig(this.argList.curr)
arg0.curr == orig(arg0.curr)
arg0.curr.south == orig(this.argList.curr.south)
arg0.curr.south == orig(arg0.curr.south)
arg0.curr.east == orig(this.argList.curr.east)
arg0.curr.east == orig(arg0.curr.east)
arg0.curr.entry == orig(this.argList.curr.entry)
arg0.curr.entry == orig(arg0.curr.entry)
arg0.curr.optional == orig(arg0.curr.optional)
arg0.curr.repeat == orig(arg0.curr.repeat)
arg0.curr.spec == orig(arg0.curr.spec)
this.argList has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
arg0.home has only one value
arg0.home.south has only one value
arg0.home.east has only one value
arg0.home.entry has only one value
arg0.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
arg0.home.optional == false
arg0.home.repeat == false
arg0.home.spec == 0
arg0.curr.optional == false
arg0.curr.repeat == false
arg0.curr.spec == 0
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.listStack.getClass().getName() != arg0.home.entry.getClass().getName()
this.patternList.getClass().getName() != arg0.home.entry.getClass().getName()
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.setNonOptionList(java.util.List):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.patternList.getClass().getName() == arg0.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
arg0 has only one value
arg0[].getClass().getName() elements == java.lang.String.class
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.setNonOptionList(java.util.List):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.nonOptionList == orig(arg0)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList[].getClass().getName() == orig(this.nonOptionList[].getClass().getName())
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.nonOptionList.getClass().getName() == orig(arg0.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0[] == orig(arg0[])
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
arg0[].getClass().getName() elements == java.lang.String.class
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.setPatternWatch(boolean):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.spec == this.argList.curr.spec
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
arg0 == true
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.setPatternWatch(boolean):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == this.argList.curr.repeat
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.repeat == orig(this.argList.curr.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(arg0)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.argList has only one value
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.patternWatch == true
this.patternList[] == []
this.patternList[].getClass().getName() == []
this.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.prevIndex one of { 0, 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin one of { 0, 3 }
this.patternMax one of { 0, 999 }
size(this.saveList[]) one of { 0, 4 }
size(this.targetOperands[]) one of { 0, 5, 16 }
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.patternMin <= this.patternMax
===========================================================================
com.fidelis.argface.ArgPattern.takeOperand(com.fidelis.argface.ArgOperand, java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.argList.curr == this.failBase.east.east
this.argList.curr.south == this.failNode
this.argList.curr.east == this.failNode
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == arg0.list.getClass().getName()
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.argList has only one value
this.argList != null
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternWatch == true
this.patternMatch != null
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin == 3
this.patternMax == 999
arg0 != null
arg0.type one of { 1, 2 }
arg0.name != null
arg0.fieldName != null
arg0.optional == false
arg0.setter != null
arg0.field == null
arg0.repeatList == false
arg0.list[] elements != null
arg0.list[].getClass().getName() elements == java.lang.String.class
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.count >= 0
arg1 != null
size(this.nonOptionList[]) one of { 5, 11 }
size(this.patternList[]) one of { 0, 1, 2 }
size(this.saveList[]) == 4
this.argList.home.entry.getClass().getName() != arg0.list.getClass().getName()
this.listStack.getClass().getName() != arg0.list.getClass().getName()
===========================================================================
com.fidelis.argface.ArgPattern.takeOperand(com.fidelis.argface.ArgOperand, java.lang.String):::EXIT616
arg0.type == 1
arg0.name.toString one of { "file", "other", "pattern" }
arg0.fieldName.toString one of { "fileOperand", "otherOperand", "patternOperand" }
this.argList.home.entry.getClass().getName() in orig(this.targetOperands[].getClass().getName())
this.failBase.entry.getClass().getName() in orig(this.targetOperands[].getClass().getName())
===========================================================================
com.fidelis.argface.ArgPattern.takeOperand(com.fidelis.argface.ArgOperand, java.lang.String):::EXIT616;condition="return == true"
===========================================================================
com.fidelis.argface.ArgPattern.takeOperand(com.fidelis.argface.ArgOperand, java.lang.String):::EXIT623
this.argList.curr == orig(this.failBase.east.east)
this.argList.curr.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.argList.curr.optional == this.failBase.optional
this.failBase.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.failBase.optional == orig(this.argList.home.optional)
this.failBase.optional == orig(this.argList.curr.optional)
this.failBase.repeat == orig(this.argList.home.repeat)
this.nonOptionList[] contains no nulls and has only one value, of length 5
this.nonOptionList[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.patternMatch has only one value
this.patternMatch.toString == "ending <pattern> <file>..."
this.patternList[] contains no nulls and has only one value, of length 2
this.patternList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.saveList[] contains no nulls and has only one value, of length 4
this.prevIndex == 4
this.failBase has only one value
this.targetOperands[] contains no nulls and has only one value, of length 1
this.targetOperands[] elements has only one value
this.targetOperands[].getClass().getName() == [com.fidelis.argface.ArgOperand]
arg0.type == 2
arg0.name has only one value
arg0.name.toString == "ending"
arg0.fieldName has only one value
arg0.fieldName.toString == "endingOperand"
arg0.setter has only one value
arg0.repeat == false
arg0.list == null
arg0.value has only one value
arg0.value.toString == "ending"
arg0.count == 1
arg1.toString == "ending"
orig(this.targetOperands[]) == []
orig(this.targetOperands[].getClass().getName()) == []
orig(arg0) has only one value
orig(arg0.has) == false
orig(arg0.value) == null
orig(arg0.count) == 0
size(this.nonOptionList[]) == 5
size(this.patternList[]) == 2
size(this.targetOperands[]) == 1
===========================================================================
com.fidelis.argface.ArgPattern.takeOperand(com.fidelis.argface.ArgOperand, java.lang.String):::EXIT623;condition="return == true"
===========================================================================
com.fidelis.argface.ArgPattern.takeOperand(com.fidelis.argface.ArgOperand, java.lang.String):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == this.failBase.east.east
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == this.failNode
this.argList.curr.east == this.failNode
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == arg0.list.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == this.failBase.entry.getClass().getName()
this.failBase.east.optional == this.failBase.optional
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == orig(this.failBase.south.optional)
this.failBase.optional == orig(this.failBase.east.optional)
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.south.repeat)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.argList.curr.south)
this.failNode == orig(this.argList.curr.east)
this.failNode == orig(this.failNode)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
arg0.type == orig(arg0.type)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.fieldName == orig(arg0.fieldName)
arg0.fieldName.toString == orig(arg0.fieldName.toString)
arg0.optional == orig(arg0.optional)
arg0.setter == orig(arg0.setter)
arg0.field == orig(arg0.field)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.value == orig(arg1)
arg1.toString == orig(arg1.toString)
size(this.targetOperands[])-1 == orig(size(this.targetOperands[]))
size(arg0.list[])-1 == orig(size(arg0.list[]))
this.argList has only one value
this.argList != null
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.argList.curr has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.nonOptionList has only one value
this.nonOptionList != null
this.nonOptionList[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.patternWatch == true
this.patternMatch != null
this.saveList[].getClass().getName() == [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode]
this.prevIndex one of { 3, 4 }
this.failBase.south has only one value
this.failBase.east has only one value
this.failBase.east.south == null
this.failBase.east.east has only one value
this.failBase.east.entry has only one value
this.failBase.east.spec == 0
this.failBase.entry has only one value
this.failNode == null
this.patternMin == 3
this.patternMax == 999
arg0.type one of { 1, 2 }
arg0.name != null
arg0.fieldName != null
arg0.optional == false
arg0.setter != null
arg0.field == null
arg0.repeatList == false
arg0.list[] elements != null
arg0.list[].getClass().getName() elements == java.lang.String.class
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == true
arg0.value != null
arg0.count >= 1
return == true
size(this.nonOptionList[]) one of { 5, 11 }
size(this.patternList[]) one of { 0, 1, 2 }
size(this.saveList[]) == 4
this.argList.home.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.argList.home.entry.getClass().getName() != arg0.list.getClass().getName()
this.listStack.getClass().getName() != arg0.list.getClass().getName()
this.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
arg0.value.toString != orig(arg0.value.toString)
arg0.count - orig(arg0.count) - 1 == 0
===========================================================================
com.fidelis.argface.ArgPattern.takeOperand(com.fidelis.argface.ArgOperand, java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgPattern.trace(java.lang.String, java.lang.String):::ENTER
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.optional == this.argList.curr.optional
this.argList.home.spec == this.argList.curr.spec
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.argList has only one value
this.argList != null
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
arg0 != null
arg1 != null
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.targetOperands[]) one of { 0, 5, 16 }
size(this.targetOperands[])-1 != 0
===========================================================================
com.fidelis.argface.ArgPattern.trace(java.lang.String, java.lang.String):::EXIT
this.argList == orig(this.argList)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == this.argList.curr.optional
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.optional == orig(this.argList.curr.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == this.argList.curr.spec
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.home.spec == orig(this.argList.curr.spec)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.nonOptionList.getClass().getName() == this.saveList.getClass().getName()
this.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
this.nonOptionList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.patternList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.saveList.getClass().getName())
this.nonOptionList.getClass().getName() == orig(this.targetOperands.getClass().getName())
this.patternWatch == orig(this.patternWatch)
this.patternMatch == orig(this.patternMatch)
this.help == orig(this.help)
this.listStack == orig(this.listStack)
this.listStack.getClass().getName() == orig(this.listStack.getClass().getName())
this.patternList == orig(this.patternList)
this.patternList[] == orig(this.patternList[])
this.saveList == orig(this.saveList)
this.saveList[] == orig(this.saveList[])
this.prevIndex == orig(this.prevIndex)
this.failBase == orig(this.failBase)
this.failBase.south == orig(this.failBase.south)
this.failBase.south.south == orig(this.failBase.south.south)
this.failBase.south.east == orig(this.failBase.south.east)
this.failBase.south.entry == orig(this.failBase.south.entry)
this.failBase.south.entry.getClass().getName() == orig(this.failBase.south.entry.getClass().getName())
this.failBase.south.optional == orig(this.failBase.south.optional)
this.failBase.south.repeat == orig(this.failBase.south.repeat)
this.failBase.south.spec == orig(this.failBase.south.spec)
this.failBase.east == orig(this.failBase.east)
this.failBase.east.south == orig(this.failBase.east.south)
this.failBase.east.east == orig(this.failBase.east.east)
this.failBase.east.entry == orig(this.failBase.east.entry)
this.failBase.east.entry.getClass().getName() == orig(this.failBase.east.entry.getClass().getName())
this.failBase.east.optional == orig(this.failBase.east.optional)
this.failBase.east.spec == orig(this.failBase.east.spec)
this.failBase.entry == orig(this.failBase.entry)
this.failBase.entry.getClass().getName() == orig(this.failBase.entry.getClass().getName())
this.failBase.optional == orig(this.failBase.optional)
this.failBase.repeat == orig(this.failBase.east.repeat)
this.failBase.repeat == orig(this.failBase.repeat)
this.failBase.spec == orig(this.failBase.spec)
this.failNode == orig(this.failNode)
this.failNode.south == orig(this.failNode.south)
this.failNode.south.south == orig(this.failNode.south.south)
this.failNode.south.east == orig(this.failNode.south.east)
this.failNode.south.entry == orig(this.failNode.south.entry)
this.failNode.south.entry.getClass().getName() == orig(this.failNode.south.entry.getClass().getName())
this.failNode.south.optional == orig(this.failNode.south.optional)
this.failNode.south.repeat == orig(this.failNode.south.repeat)
this.failNode.south.spec == orig(this.failNode.south.spec)
this.failNode.east == orig(this.failNode.east)
this.failNode.east.south == orig(this.failNode.east.south)
this.failNode.east.east == orig(this.failNode.east.east)
this.failNode.east.entry == orig(this.failNode.east.entry)
this.failNode.east.entry.getClass().getName() == orig(this.failNode.east.entry.getClass().getName())
this.failNode.east.optional == orig(this.failNode.east.optional)
this.failNode.east.repeat == orig(this.failNode.east.repeat)
this.failNode.east.spec == orig(this.failNode.east.spec)
this.failNode.entry == orig(this.failNode.entry)
this.failNode.entry.getClass().getName() == orig(this.failNode.entry.getClass().getName())
this.failNode.optional == orig(this.failNode.optional)
this.failNode.repeat == orig(this.failNode.repeat)
this.failNode.spec == orig(this.failNode.spec)
this.lastBase == orig(this.lastBase)
this.lastFail == orig(this.lastFail)
this.patternMin == orig(this.patternMin)
this.patternMax == orig(this.patternMax)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
this.argList has only one value
this.argList != null
this.argList.home has only one value
this.argList.home.south has only one value
this.argList.home.east has only one value
this.argList.home.entry has only one value
this.argList.home.optional == false
this.argList.home.spec == 0
this.nonOptionList has only one value
this.nonOptionList != null
this.patternWatch == true
this.patternMatch == null
size(this.nonOptionList[]) one of { 3, 5, 11 }
size(this.targetOperands[]) one of { 0, 5, 16 }
size(this.targetOperands[])-1 != 0
===========================================================================
com.fidelis.argface.ArgReflect:::OBJECT
this has only one value
this.object.getClass().getName() == com.fidelis.argface.ArgSample.class
this.privateAccess == false
===========================================================================
com.fidelis.argface.ArgReflect.ArgReflect():::EXIT
this.object == null
this.objectClass == null
===========================================================================
com.fidelis.argface.ArgReflect.findField(java.lang.String, java.lang.Class):::ENTER
this.object has only one value
this.object != null
this.objectClass has only one value
this.objectClass != null
arg0 != null
arg1 has only one value
arg1 != null
===========================================================================
com.fidelis.argface.ArgReflect.findField(java.lang.String, java.lang.Class):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.object != null
this.objectClass has only one value
this.objectClass != null
return == null
===========================================================================
com.fidelis.argface.ArgReflect.findGetString(java.lang.String):::ENTER
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.findGetString(java.lang.String):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.findGetter(java.lang.String, java.lang.Class):::ENTER
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.findGetter(java.lang.String, java.lang.Class):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.findIsBoolean(java.lang.String):::ENTER
this.object has only one value
this.objectClass has only one value
arg0.toString one of { "posixFormat", "sortOptions", "suppressHelp" }
===========================================================================
com.fidelis.argface.ArgReflect.findIsBoolean(java.lang.String):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.objectClass has only one value
arg0.toString one of { "posixFormat", "sortOptions", "suppressHelp" }
===========================================================================
com.fidelis.argface.ArgReflect.findMethod(java.lang.String, java.lang.Class):::ENTER
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.findMethod(java.lang.String, java.lang.Class):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.findOneParam(java.lang.String, java.lang.Class):::ENTER
this.object has only one value
this.object != null
this.objectClass has only one value
this.objectClass != null
arg0 != null
arg1 != null
===========================================================================
com.fidelis.argface.ArgReflect.findOneParam(java.lang.String, java.lang.Class):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.object != null
this.objectClass has only one value
this.objectClass != null
===========================================================================
com.fidelis.argface.ArgReflect.findSetter(java.lang.String, java.lang.Class):::ENTER
this.object has only one value
this.object != null
this.objectClass has only one value
this.objectClass != null
arg0 != null
arg1 != null
===========================================================================
com.fidelis.argface.ArgReflect.findSetter(java.lang.String, java.lang.Class):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.object != null
this.objectClass has only one value
this.objectClass != null
===========================================================================
com.fidelis.argface.ArgReflect.getBoolean(java.lang.String):::ENTER
this.object has only one value
this.objectClass has only one value
arg0.toString one of { "posixFormat", "sortOptions", "suppressHelp" }
===========================================================================
com.fidelis.argface.ArgReflect.getBoolean(java.lang.String):::EXIT212
===========================================================================
com.fidelis.argface.ArgReflect.getBoolean(java.lang.String):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.objectClass has only one value
arg0.toString one of { "posixFormat", "sortOptions", "suppressHelp" }
===========================================================================
com.fidelis.argface.ArgReflect.getBoolean(java.lang.reflect.Method):::ENTER
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.getBoolean(java.lang.reflect.Method):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.getString(java.lang.String):::ENTER
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.getString(java.lang.String):::EXIT86
arg0.toString one of { "aboutText", "helpText" }
return.toString one of { "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n", "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n" }
===========================================================================
com.fidelis.argface.ArgReflect.getString(java.lang.String):::EXIT89
arg0.toString one of { "operandSuffix", "optionSuffix", "versionText" }
return.toString == "ArgSample version 1.0.0"
===========================================================================
com.fidelis.argface.ArgReflect.getString(java.lang.String):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.objectClass has only one value
return.toString one of { "ArgSample version 1.0.0", "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n", "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n" }
===========================================================================
com.fidelis.argface.ArgReflect.getString(java.lang.reflect.Method):::ENTER
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.getString(java.lang.reflect.Method):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
this.object has only one value
this.objectClass has only one value
return.toString == "ArgSample version 1.0.0"
===========================================================================
com.fidelis.argface.ArgReflect.getStringArray(java.lang.reflect.Method, boolean):::ENTER
this.object has only one value
this.objectClass has only one value
arg1 == true
===========================================================================
com.fidelis.argface.ArgReflect.getStringArray(java.lang.reflect.Method, boolean):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
this.object has only one value
this.objectClass has only one value
return.toString one of { "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n", "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n" }
===========================================================================
com.fidelis.argface.ArgReflect.newlines(java.lang.String):::ENTER
this.object has only one value
this.objectClass has only one value
arg0.toString one of { "aboutText", "helpText" }
===========================================================================
com.fidelis.argface.ArgReflect.newlines(java.lang.String):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0.toString == orig(arg0.toString)
this.object has only one value
this.objectClass has only one value
arg0.toString one of { "aboutText", "helpText" }
return == true
===========================================================================
com.fidelis.argface.ArgReflect.newlines(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgReflect.setObject(java.lang.Object):::ENTER
this.object == null
this.objectClass == null
arg0 has only one value
arg0.getClass().getName() == com.fidelis.argface.ArgSample.class
===========================================================================
com.fidelis.argface.ArgReflect.setObject(java.lang.Object):::EXIT
this.object == orig(arg0)
this.object.getClass().getName() == orig(arg0.getClass().getName())
this.privateAccess == orig(this.privateAccess)
this.object has only one value
this.objectClass has only one value
===========================================================================
com.fidelis.argface.ArgReflect.setPrivateAccess(boolean):::ENTER
this.privateAccess == arg0
this.object == null
this.objectClass == null
===========================================================================
com.fidelis.argface.ArgReflect.setPrivateAccess(boolean):::EXIT
this.object == orig(this.object)
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
this.privateAccess == orig(arg0)
this.object == null
this.objectClass == null
===========================================================================
com.fidelis.argface.ArgReflect.setValue(java.lang.reflect.Method, java.lang.Object):::ENTER
this.object has only one value
this.object != null
this.objectClass has only one value
this.objectClass != null
arg0 != null
arg1 != null
this.object.getClass().getName() != arg1.getClass().getName()
===========================================================================
com.fidelis.argface.ArgReflect.setValue(java.lang.reflect.Method, java.lang.Object):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
this.object has only one value
this.object != null
this.objectClass has only one value
this.objectClass != null
return == true
this.object.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
com.fidelis.argface.ArgReflect.setValue(java.lang.reflect.Method, java.lang.Object):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgReflect.stringFromArray(java.lang.String[], boolean):::ENTER
this.object has only one value
this.objectClass has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[].toString one of { [ArgSample version 1.0.0,   Developed to demonstrate the "ArgFace" Command Line Interface.,   2014-04-23,   Leo Hinterlang -- leohinterlang@gmail.com,   Fidelis Software Technologies, Butler, PA], [Demonstrates the "ArgFace" command line interface., All output is based on the command line arguments., No files were harmed during the running of this program.] }
arg1 == true
size(arg0[]) one of { 3, 5 }
===========================================================================
com.fidelis.argface.ArgReflect.stringFromArray(java.lang.String[], boolean):::EXIT
this.object == orig(this.object)
this.object.getClass().getName() == orig(this.object.getClass().getName())
this.objectClass == orig(this.objectClass)
this.privateAccess == orig(this.privateAccess)
arg0[] == orig(arg0[])
this.object has only one value
this.objectClass has only one value
arg0[].toString one of { [ArgSample version 1.0.0,   Developed to demonstrate the "ArgFace" Command Line Interface.,   2014-04-23,   Leo Hinterlang -- leohinterlang@gmail.com,   Fidelis Software Technologies, Butler, PA], [Demonstrates the "ArgFace" command line interface., All output is based on the command line arguments., No files were harmed during the running of this program.] }
return.toString one of { "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n", "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n" }
===========================================================================
com.fidelis.argface.ArgSample:::OBJECT
this.usageText.getClass().getName() == this.helpText.getClass().getName()
this.usageText.getClass().getName() == this.aboutText.getClass().getName()
this.usageText.getClass().getName() == this.fileOperand.getClass().getName()
this.usageText.getClass().getName() == this.operands.getClass().getName()
this.eOption == this.xOption
this.eOption == this.yOption
this.eOption == this.zOption
this.eOption == this.matchOperand
this.eOption == this.startingOperand
this.eOption == this.upperOperand
this.eOption == this.lowerOperand
this.eOption == this.anyOperand
this.eOption == this.setOperand
this.eOption == this.clearOperand
this.fileOperand.getClass().getName() == this.operands.getClass().getName()
this has only one value
this.usageText has only one value
this.usageText != null
this.usageText.getClass().getName() == java.lang.String[].class
this.usageText[] contains no nulls and has only one value, of length 19
this.usageText[] elements != null
this.usageText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.usageText[].getClass().getName() elements == java.lang.String.class
this.usageText[].toString == [ArgSample, set [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ], [-e] [[upper | lower | any] <pattern>] <other>, ArgSample, ((match [upper | lower | any] <other>) |,  (ending <file>) |,  (<other> match <pattern>)), [set | clear], ArgSample, [-a, --after  <lines>] 'number of lines after a match', [-b, --before <lines>] 'number of lines before a match', [-cde], match|starting|ending|<other> <pattern> <file>..., Options:, -c confirm actions, -d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?, -e, --exit exit on error, -y, --yield yeild to substitutions, -z, --sleep dormant state when completed]
this.helpText has only one value
this.helpText != null
this.helpText[] contains no nulls and has only one value, of length 3
this.helpText[] elements != null
this.helpText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.helpText[].getClass().getName() elements == java.lang.String.class
this.helpText[].toString == [Demonstrates the "ArgFace" command line interface., All output is based on the command line arguments., No files were harmed during the running of this program.]
this.helpText[].toString elements one of { "All output is based on the command line arguments.", "Demonstrates the \"ArgFace\" command line interface.", "No files were harmed during the running of this program." }
this.versionText has only one value
this.versionText != null
this.versionText.toString == "ArgSample version 1.0.0"
this.aboutText has only one value
this.aboutText != null
this.aboutText[] contains no nulls and has only one value, of length 5
this.aboutText[] elements != null
this.aboutText[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.aboutText[].getClass().getName() elements == java.lang.String.class
this.aboutText[].toString == [ArgSample version 1.0.0,   Developed to demonstrate the "ArgFace" Command Line Interface.,   2014-04-23,   Leo Hinterlang -- leohinterlang@gmail.com,   Fidelis Software Technologies, Butler, PA]
this.allowOverwrite == false
this.suppressHelp == false
this.posixFormat == false
this.sortOptions == true
this.optionSuffix == null
this.operandSuffix == null
this.afterLines.toString == "5"
this.beforeLines.toString == "5"
this.eOption == false
this.otherOperand.toString == "total"
this.patternOperand.toString one of { "patternValue", "public" }
this.fileOperand.getClass().getName() == java.lang.String[].class
this.fileOperand[] elements != null
this.fileOperand[].getClass().getName() elements == java.lang.String.class
this.fileOperand[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.fileOperand[].toString one of { [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6], [file.java, file2, file3] }
this.operands.getClass().getName() == java.lang.String[].class
this.operands[] elements != null
this.operands[].getClass().getName() elements == java.lang.String.class
this.argFace.getClass().getName() == com.fidelis.argface.ArgStandard.class
size(this.usageText[]) == 19
size(this.helpText[]) == 3
size(this.aboutText[]) == 5
size(this.fileOperand[]) one of { 3, 9 }
size(this.operands[]) one of { 0, 5, 11 }
size(this.operands[])-1 != 0
this.usageText.getClass().getName() != this.argFace.getClass().getName()
this.versionText in this.aboutText[]
this.fileOperand.getClass().getName() != this.argFace.getClass().getName()
this.operands.getClass().getName() != this.argFace.getClass().getName()
===========================================================================
com.fidelis.argface.ArgSample.ArgSample():::EXIT
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == false
this.show == false
this.argFace == null
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
arg0 != null
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT371
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.aboutOption == return
arg0.toString == orig(arg0.toString)
return == orig(this.aboutOption)
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands has only one value
this.operands[] == []
this.operands[].getClass().getName() == []
this.operands[].toString == []
arg0.toString == "about"
orig(arg0) has only one value
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT371;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT372
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.versionOption == return
arg0.toString == orig(arg0.toString)
return == orig(this.versionOption)
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands has only one value
this.operands[] == []
this.operands[].getClass().getName() == []
this.operands[].toString == []
arg0.toString == "version"
orig(arg0) has only one value
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT372;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT373
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.helpOption == return
arg0.toString == orig(arg0.toString)
return == orig(this.helpOption)
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands has only one value
this.operands[] == []
this.operands[].getClass().getName() == []
this.operands[].toString == []
arg0.toString == "help"
orig(arg0) has only one value
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT373;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT375
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.afterOption == return
this.beforeOption == return
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.cOption == orig(this.eOption)
this.cOption == orig(this.xOption)
this.cOption == orig(this.yOption)
this.cOption == orig(this.zOption)
this.cOption == orig(this.matchOperand)
this.cOption == orig(this.startingOperand)
this.cOption == orig(this.upperOperand)
this.cOption == orig(this.lowerOperand)
this.cOption == orig(this.anyOperand)
this.cOption == orig(this.setOperand)
this.cOption == orig(this.clearOperand)
this.cOption == orig(this.helpOption)
this.cOption == orig(this.versionOption)
this.cOption == orig(this.aboutOption)
this.endingOperand == return
arg0.toString == orig(arg0.toString)
return == orig(this.afterOption)
return == orig(this.beforeOption)
return == orig(this.endingOperand)
this.afterLines has only one value
this.beforeLines has only one value
this.cOption == false
this.otherOperand == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 5
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [ending, public, file.java, file2, file3]
arg0.toString == "after"
orig(arg0) has only one value
size(this.fileOperand[]) == 3
size(this.operands[]) == 5
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT375;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT376
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.afterOption == return
this.beforeOption == return
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.cOption == orig(this.eOption)
this.cOption == orig(this.xOption)
this.cOption == orig(this.yOption)
this.cOption == orig(this.zOption)
this.cOption == orig(this.matchOperand)
this.cOption == orig(this.startingOperand)
this.cOption == orig(this.upperOperand)
this.cOption == orig(this.lowerOperand)
this.cOption == orig(this.anyOperand)
this.cOption == orig(this.setOperand)
this.cOption == orig(this.clearOperand)
this.cOption == orig(this.helpOption)
this.cOption == orig(this.versionOption)
this.cOption == orig(this.aboutOption)
this.endingOperand == return
arg0.toString == orig(arg0.toString)
return == orig(this.afterOption)
return == orig(this.beforeOption)
return == orig(this.endingOperand)
this.afterLines has only one value
this.beforeLines has only one value
this.cOption == false
this.otherOperand == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 5
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [ending, public, file.java, file2, file3]
arg0.toString == "before"
orig(arg0) has only one value
size(this.fileOperand[]) == 3
size(this.operands[]) == 5
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT376;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT379
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == orig(this.beforeLines)
this.cOption == return
this.dOption == return
return == orig(this.cOption)
return == orig(this.dOption)
this.afterOption == false
this.afterLines == null
this.otherOperand has only one value
this.patternOperand has only one value
this.patternOperand.toString == "patternValue"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 11
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [total, patternValue, file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
orig(arg0) has only one value
orig(arg0.toString) == "-c"
size(this.fileOperand[]) == 9
size(this.operands[]) == 11
this.otherOperand in this.operands[]
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT379;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT380
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == orig(this.beforeLines)
this.cOption == return
this.dOption == return
return == orig(this.cOption)
return == orig(this.dOption)
this.afterOption == false
this.afterLines == null
this.otherOperand has only one value
this.patternOperand has only one value
this.patternOperand.toString == "patternValue"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 11
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [total, patternValue, file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
orig(arg0) has only one value
orig(arg0.toString) == "-d"
size(this.fileOperand[]) == 9
size(this.operands[]) == 11
this.otherOperand in this.operands[]
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT380;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT386
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.afterOption == return
this.beforeOption == return
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.cOption == orig(this.eOption)
this.cOption == orig(this.xOption)
this.cOption == orig(this.yOption)
this.cOption == orig(this.zOption)
this.cOption == orig(this.matchOperand)
this.cOption == orig(this.startingOperand)
this.cOption == orig(this.upperOperand)
this.cOption == orig(this.lowerOperand)
this.cOption == orig(this.anyOperand)
this.cOption == orig(this.setOperand)
this.cOption == orig(this.clearOperand)
this.cOption == orig(this.helpOption)
this.cOption == orig(this.versionOption)
this.cOption == orig(this.aboutOption)
this.endingOperand == return
arg0.toString == orig(arg0.toString)
return == orig(this.afterOption)
return == orig(this.beforeOption)
return == orig(this.endingOperand)
this.afterLines has only one value
this.beforeLines has only one value
this.cOption == false
this.otherOperand == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 5
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [ending, public, file.java, file2, file3]
arg0.toString == "ending"
orig(arg0) has only one value
size(this.fileOperand[]) == 3
size(this.operands[]) == 5
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT386;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT393
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == orig(this.beforeLines)
this.cOption == return
this.dOption == return
return == orig(this.cOption)
return == orig(this.dOption)
this.afterOption == false
this.afterLines == null
this.otherOperand has only one value
this.patternOperand has only one value
this.patternOperand.toString == "patternValue"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 11
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [total, patternValue, file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
orig(arg0) has only one value
orig(arg0.toString) == "<other>"
size(this.fileOperand[]) == 9
size(this.operands[]) == 11
this.otherOperand in this.operands[]
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT393;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT394
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.eOption == this.helpOption
this.eOption == this.versionOption
this.eOption == this.aboutOption
this.eOption == orig(this.helpOption)
this.eOption == orig(this.versionOption)
this.eOption == orig(this.aboutOption)
this.operands[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.operands[].toString one of { [ending, public, file.java, file2, file3], [total, patternValue, file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6] }
orig(arg0.toString) one of { "<pattern>", "pattern" }
size(this.operands[]) one of { 5, 11 }
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT394;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT395
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.eOption == this.helpOption
this.eOption == this.versionOption
this.eOption == this.aboutOption
this.eOption == orig(this.helpOption)
this.eOption == orig(this.versionOption)
this.eOption == orig(this.aboutOption)
this.operands[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.operands[].toString one of { [ending, public, file.java, file2, file3], [total, patternValue, file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6] }
orig(arg0.toString) one of { "<file>", "file" }
size(this.operands[]) one of { 5, 11 }
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT395;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
return == true
===========================================================================
com.fidelis.argface.ArgSample.checkTrue(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.checkValue(java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
arg0 != null
===========================================================================
com.fidelis.argface.ArgSample.checkValue(java.lang.String):::EXIT357
===========================================================================
com.fidelis.argface.ArgSample.checkValue(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
===========================================================================
com.fidelis.argface.ArgSample.checkValues(java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.checkValues(java.lang.String):::EXIT313
===========================================================================
com.fidelis.argface.ArgSample.checkValues(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.clearArgumentVariables():::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.clearArgumentVariables():::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.execute(java.lang.String[]):::ENTER
this.usageText.getClass().getName() == arg0.getClass().getName()
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == false
this.show == false
this.argFace == null
arg0 has only one value
arg0[] == []
arg0[].toString == []
===========================================================================
com.fidelis.argface.ArgSample.execute(java.lang.String[]):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(arg0.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
arg0[] == orig(arg0[])
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands has only one value
this.operands[] == []
this.operands[].getClass().getName() == []
this.operands[].toString == []
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0[] == []
arg0[].toString == []
===========================================================================
com.fidelis.argface.ArgSample.getAboutText():::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.getAboutText():::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == return.getClass().getName()
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText.getClass().getName() == return.getClass().getName()
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.getClass().getName() == return.getClass().getName()
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
return.getClass().getName() == orig(this.usageText.getClass().getName())
return.getClass().getName() == orig(this.helpText.getClass().getName())
return.getClass().getName() == orig(this.aboutText.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
return has only one value
return.getClass().getName() == java.lang.String[].class
return[] contains no nulls and has only one value, of length 5
return[].toString == [ArgSample version 1.0.0,   Developed to demonstrate the "ArgFace" Command Line Interface.,   2014-04-23,   Leo Hinterlang -- leohinterlang@gmail.com,   Fidelis Software Technologies, Butler, PA]
size(return[]) == 5
===========================================================================
com.fidelis.argface.ArgSample.getHelpText():::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.getHelpText():::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == return.getClass().getName()
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText.getClass().getName() == return.getClass().getName()
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.getClass().getName() == return.getClass().getName()
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
return.getClass().getName() == orig(this.usageText.getClass().getName())
return.getClass().getName() == orig(this.helpText.getClass().getName())
return.getClass().getName() == orig(this.aboutText.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
return has only one value
return.getClass().getName() == java.lang.String[].class
return[] contains no nulls and has only one value, of length 3
return[].toString == [Demonstrates the "ArgFace" command line interface., All output is based on the command line arguments., No files were harmed during the running of this program.]
return[].toString elements one of { "All output is based on the command line arguments.", "Demonstrates the \"ArgFace\" command line interface.", "No files were harmed during the running of this program." }
size(return[]) == 3
===========================================================================
com.fidelis.argface.ArgSample.getOperandSuffix():::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace == null
===========================================================================
com.fidelis.argface.ArgSample.getOperandSuffix():::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace == null
return == null
===========================================================================
com.fidelis.argface.ArgSample.getOptionSuffix():::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace == null
===========================================================================
com.fidelis.argface.ArgSample.getOptionSuffix():::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace == null
return == null
===========================================================================
com.fidelis.argface.ArgSample.getVersionText():::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.getVersionText():::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
return has only one value
return.toString == "ArgSample version 1.0.0"
===========================================================================
com.fidelis.argface.ArgSample.intPositive(java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.afterOption == true
this.afterLines has only one value
this.beforeLines has only one value
this.cOption == false
this.otherOperand == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 5
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [ending, public, file.java, file2, file3]
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString == "5"
size(this.fileOperand[]) == 3
size(this.operands[]) == 5
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.intPositive(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.cOption == orig(this.eOption)
this.cOption == orig(this.xOption)
this.cOption == orig(this.yOption)
this.cOption == orig(this.zOption)
this.cOption == orig(this.matchOperand)
this.cOption == orig(this.startingOperand)
this.cOption == orig(this.upperOperand)
this.cOption == orig(this.lowerOperand)
this.cOption == orig(this.anyOperand)
this.cOption == orig(this.setOperand)
this.cOption == orig(this.clearOperand)
this.cOption == orig(this.helpOption)
this.cOption == orig(this.versionOption)
this.cOption == orig(this.aboutOption)
this.otherOperand == orig(this.otherOperand)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.afterOption == true
this.afterLines has only one value
this.beforeLines has only one value
this.cOption == false
this.otherOperand == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 5
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [ending, public, file.java, file2, file3]
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString == "5"
return == 5
size(this.fileOperand[]) == 3
size(this.operands[]) == 5
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.intValue(java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.afterOption == true
this.afterLines has only one value
this.beforeLines has only one value
this.cOption == false
this.otherOperand == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 5
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [ending, public, file.java, file2, file3]
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString == "5"
size(this.fileOperand[]) == 3
size(this.operands[]) == 5
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.intValue(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.cOption == orig(this.eOption)
this.cOption == orig(this.xOption)
this.cOption == orig(this.yOption)
this.cOption == orig(this.zOption)
this.cOption == orig(this.matchOperand)
this.cOption == orig(this.startingOperand)
this.cOption == orig(this.upperOperand)
this.cOption == orig(this.lowerOperand)
this.cOption == orig(this.anyOperand)
this.cOption == orig(this.setOperand)
this.cOption == orig(this.clearOperand)
this.cOption == orig(this.helpOption)
this.cOption == orig(this.versionOption)
this.cOption == orig(this.aboutOption)
this.otherOperand == orig(this.otherOperand)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.afterOption == true
this.afterLines has only one value
this.beforeLines has only one value
this.cOption == false
this.otherOperand == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands has only one value
this.operands[] contains no nulls and has only one value, of length 5
this.operands[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.operands[].toString == [ending, public, file.java, file2, file3]
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString == "5"
return == 5
size(this.fileOperand[]) == 3
size(this.operands[]) == 5
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.isPosixFormat():::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.isPosixFormat():::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
return == false
===========================================================================
com.fidelis.argface.ArgSample.isPosixFormat():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgSample.isSortOptions():::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.isSortOptions():::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
return == true
===========================================================================
com.fidelis.argface.ArgSample.isSortOptions():::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.isSuppressHelp():::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.isSuppressHelp():::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
return == false
===========================================================================
com.fidelis.argface.ArgSample.isSuppressHelp():::EXIT;condition="not(return == true)"
===========================================================================
com.fidelis.argface.ArgSample.outArray(java.lang.String, java.lang.String[]):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.fileOperand == arg1
this.fileOperand.getClass().getName() == arg1.getClass().getName()
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 has only one value
arg0.toString == "fileOperand"
arg1[].toString one of { [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6], [file.java, file2, file3] }
size(arg1[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgSample.outArray(java.lang.String, java.lang.String[]):::EXIT571
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands[] == []
this.operands[].getClass().getName() == []
this.operands[].toString == []
===========================================================================
com.fidelis.argface.ArgSample.outArray(java.lang.String, java.lang.String[]):::EXIT576
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText.getClass().getName() == orig(arg1.getClass().getName())
this.eOption == this.helpOption
this.eOption == this.versionOption
this.eOption == this.aboutOption
this.eOption == orig(this.helpOption)
this.eOption == orig(this.versionOption)
this.eOption == orig(this.aboutOption)
this.operands[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.operands[].toString one of { [ending, public, file.java, file2, file3], [total, patternValue, file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6] }
size(this.operands[]) one of { 5, 11 }
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.outArray(java.lang.String, java.lang.String[]):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand == orig(arg1)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand.getClass().getName() == orig(arg1.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1[] == orig(arg1[])
(this.patternOperand == null)  <==>  (this.fileOperand == null)
(this.patternOperand == null)  <==>  (this.operands[].getClass().getName() == [])
(this.patternOperand == null)  <==>  (this.operands[].toString == [])
(this.patternOperand == null)  ==>  (this.afterLines == null)
(this.patternOperand == null)  ==>  (this.afterLines == this.beforeLines)
(this.patternOperand == null)  ==>  (this.afterLines == this.otherOperand)
(this.patternOperand == null)  ==>  (this.afterLines == this.patternOperand)
(this.patternOperand == null)  ==>  (this.afterOption == false)
(this.patternOperand == null)  ==>  (this.afterOption == this.cOption)
(this.patternOperand == null)  ==>  (this.afterOption == this.eOption)
(this.patternOperand == null)  ==>  (this.beforeLines == null)
(this.patternOperand == null)  ==>  (this.cOption == false)
(this.patternOperand == null)  ==>  (this.operands[] == [])
(this.patternOperand == null)  ==>  (this.otherOperand == null)
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString == "fileOperand"
arg1[].toString one of { [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6], [file.java, file2, file3] }
===========================================================================
com.fidelis.argface.ArgSample.outBoolean(java.lang.String, boolean):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
arg0 != null
===========================================================================
com.fidelis.argface.ArgSample.outBoolean(java.lang.String, boolean):::EXIT536
this.eOption == orig(arg1)
===========================================================================
com.fidelis.argface.ArgSample.outBoolean(java.lang.String, boolean):::EXIT547
orig(arg1) == true
===========================================================================
com.fidelis.argface.ArgSample.outBoolean(java.lang.String, boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
(orig(arg1) == false)  ==>  (this.eOption == orig(arg1))
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
===========================================================================
com.fidelis.argface.ArgSample.outInteger(java.lang.String, int, boolean):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == arg2
this.cOption == this.dOption
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
arg0 != null
arg0.toString one of { "after", "before" }
arg1 one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgSample.outInteger(java.lang.String, int, boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(arg2)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
arg0.toString one of { "after", "before" }
===========================================================================
com.fidelis.argface.ArgSample.outString(java.lang.String, java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
arg0 != null
===========================================================================
com.fidelis.argface.ArgSample.outString(java.lang.String, java.lang.String):::EXIT552
orig(arg1) == null
===========================================================================
com.fidelis.argface.ArgSample.outString(java.lang.String, java.lang.String):::EXIT561
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.eOption == this.helpOption
this.eOption == this.versionOption
this.eOption == this.aboutOption
this.eOption == orig(this.helpOption)
this.eOption == orig(this.versionOption)
this.eOption == orig(this.aboutOption)
this.patternOperand != null
this.fileOperand != null
this.operands[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.operands[].toString one of { [ending, public, file.java, file2, file3], [total, patternValue, file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6] }
orig(arg1) != null
size(this.operands[]) one of { 5, 11 }
this.patternOperand in this.operands[]
===========================================================================
com.fidelis.argface.ArgSample.outString(java.lang.String, java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
(orig(arg1) != null)  ==>  (size(this.operands[]) one of { 5, 11 })
(orig(arg1) != null)  ==>  (this.aboutOption == false)
(orig(arg1) != null)  ==>  (this.eOption == this.aboutOption)
(orig(arg1) != null)  ==>  (this.eOption == this.helpOption)
(orig(arg1) != null)  ==>  (this.eOption == this.versionOption)
(orig(arg1) != null)  ==>  (this.fileOperand != null)
(orig(arg1) != null)  ==>  (this.helpOption == false)
(orig(arg1) != null)  ==>  (this.operands[].getClass().getName() one of { [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] })
(orig(arg1) != null)  ==>  (this.operands[].toString one of { [ending, public, file.java, file2, file3], [total, patternValue, file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6] })
(orig(arg1) != null)  ==>  (this.patternOperand != null)
(orig(arg1) != null)  ==>  (this.patternOperand in this.operands[])
(orig(arg1) != null)  ==>  (this.versionOption == false)
(orig(arg1) == null)  ==>  (size(this.operands[]) one of { 0, 5, 11 })
this.operands != null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
===========================================================================
com.fidelis.argface.ArgSample.setAboutOption(boolean):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 == true
===========================================================================
com.fidelis.argface.ArgSample.setAboutOption(boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.aboutOption == true
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.setAfterLines(java.lang.String):::ENTER
this.afterOption == this.endingOperand
this.beforeOption == this.cOption
this.beforeOption == this.dOption
this.beforeOption == this.eOption
this.beforeOption == this.xOption
this.beforeOption == this.yOption
this.beforeOption == this.zOption
this.beforeOption == this.matchOperand
this.beforeOption == this.startingOperand
this.beforeOption == this.upperOperand
this.beforeOption == this.lowerOperand
this.beforeOption == this.anyOperand
this.beforeOption == this.setOperand
this.beforeOption == this.clearOperand
this.beforeOption == this.helpOption
this.beforeOption == this.versionOption
this.beforeOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterOption == true
this.beforeOption == false
this.afterLines == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 has only one value
arg0.toString == "5"
size(this.fileOperand[]) == 3
===========================================================================
com.fidelis.argface.ArgSample.setAfterLines(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.endingOperand)
this.beforeOption == this.cOption
this.beforeOption == this.dOption
this.beforeOption == this.eOption
this.beforeOption == this.xOption
this.beforeOption == this.yOption
this.beforeOption == this.zOption
this.beforeOption == this.matchOperand
this.beforeOption == this.startingOperand
this.beforeOption == this.upperOperand
this.beforeOption == this.lowerOperand
this.beforeOption == this.anyOperand
this.beforeOption == this.setOperand
this.beforeOption == this.clearOperand
this.beforeOption == this.helpOption
this.beforeOption == this.versionOption
this.beforeOption == this.aboutOption
this.beforeOption == orig(this.beforeOption)
this.beforeOption == orig(this.cOption)
this.beforeOption == orig(this.dOption)
this.beforeOption == orig(this.eOption)
this.beforeOption == orig(this.xOption)
this.beforeOption == orig(this.yOption)
this.beforeOption == orig(this.zOption)
this.beforeOption == orig(this.matchOperand)
this.beforeOption == orig(this.startingOperand)
this.beforeOption == orig(this.upperOperand)
this.beforeOption == orig(this.lowerOperand)
this.beforeOption == orig(this.anyOperand)
this.beforeOption == orig(this.setOperand)
this.beforeOption == orig(this.clearOperand)
this.beforeOption == orig(this.helpOption)
this.beforeOption == orig(this.versionOption)
this.beforeOption == orig(this.aboutOption)
this.beforeLines == this.otherOperand
this.beforeLines == orig(this.afterLines)
this.beforeLines == orig(this.beforeLines)
this.beforeLines == orig(this.otherOperand)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.afterOption == true
this.beforeOption == false
this.afterLines has only one value
this.beforeLines == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString == "5"
size(this.fileOperand[]) == 3
===========================================================================
com.fidelis.argface.ArgSample.setAfterOption(boolean):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterOption == false
this.afterLines == null
this.endingOperand == true
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 == true
size(this.fileOperand[]) == 3
===========================================================================
com.fidelis.argface.ArgSample.setAfterOption(boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.endingOperand
this.afterOption == orig(this.endingOperand)
this.beforeOption == this.cOption
this.beforeOption == this.dOption
this.beforeOption == this.eOption
this.beforeOption == this.xOption
this.beforeOption == this.yOption
this.beforeOption == this.zOption
this.beforeOption == this.matchOperand
this.beforeOption == this.startingOperand
this.beforeOption == this.upperOperand
this.beforeOption == this.lowerOperand
this.beforeOption == this.anyOperand
this.beforeOption == this.setOperand
this.beforeOption == this.clearOperand
this.beforeOption == this.helpOption
this.beforeOption == this.versionOption
this.beforeOption == this.aboutOption
this.beforeOption == orig(this.afterOption)
this.beforeOption == orig(this.beforeOption)
this.beforeOption == orig(this.cOption)
this.beforeOption == orig(this.dOption)
this.beforeOption == orig(this.eOption)
this.beforeOption == orig(this.xOption)
this.beforeOption == orig(this.yOption)
this.beforeOption == orig(this.zOption)
this.beforeOption == orig(this.matchOperand)
this.beforeOption == orig(this.startingOperand)
this.beforeOption == orig(this.upperOperand)
this.beforeOption == orig(this.lowerOperand)
this.beforeOption == orig(this.anyOperand)
this.beforeOption == orig(this.setOperand)
this.beforeOption == orig(this.clearOperand)
this.beforeOption == orig(this.helpOption)
this.beforeOption == orig(this.versionOption)
this.beforeOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == true
this.beforeOption == false
this.afterLines == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
size(this.fileOperand[]) == 3
===========================================================================
com.fidelis.argface.ArgSample.setBeforeLines(java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.beforeLines == this.otherOperand
this.cOption == this.dOption
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.afterOption == true
this.afterLines has only one value
this.beforeLines == null
this.cOption == false
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 has only one value
arg0.toString == "5"
size(this.fileOperand[]) == 3
===========================================================================
com.fidelis.argface.ArgSample.setBeforeLines(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.cOption == this.dOption
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.cOption == orig(this.eOption)
this.cOption == orig(this.xOption)
this.cOption == orig(this.yOption)
this.cOption == orig(this.zOption)
this.cOption == orig(this.matchOperand)
this.cOption == orig(this.startingOperand)
this.cOption == orig(this.upperOperand)
this.cOption == orig(this.lowerOperand)
this.cOption == orig(this.anyOperand)
this.cOption == orig(this.setOperand)
this.cOption == orig(this.clearOperand)
this.cOption == orig(this.helpOption)
this.cOption == orig(this.versionOption)
this.cOption == orig(this.aboutOption)
this.otherOperand == orig(this.beforeLines)
this.otherOperand == orig(this.otherOperand)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.afterOption == true
this.afterLines has only one value
this.beforeLines has only one value
this.cOption == false
this.otherOperand == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString == "5"
size(this.fileOperand[]) == 3
===========================================================================
com.fidelis.argface.ArgSample.setBeforeOption(boolean):::ENTER
this.afterOption == this.endingOperand
this.beforeOption == this.cOption
this.beforeOption == this.dOption
this.beforeOption == this.eOption
this.beforeOption == this.xOption
this.beforeOption == this.yOption
this.beforeOption == this.zOption
this.beforeOption == this.matchOperand
this.beforeOption == this.startingOperand
this.beforeOption == this.upperOperand
this.beforeOption == this.lowerOperand
this.beforeOption == this.anyOperand
this.beforeOption == this.setOperand
this.beforeOption == this.clearOperand
this.beforeOption == this.helpOption
this.beforeOption == this.versionOption
this.beforeOption == this.aboutOption
this.beforeLines == this.otherOperand
this.afterOption == true
this.beforeOption == false
this.afterLines has only one value
this.beforeLines == null
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 == true
size(this.fileOperand[]) == 3
===========================================================================
com.fidelis.argface.ArgSample.setBeforeOption(boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == this.otherOperand
this.beforeLines == orig(this.beforeLines)
this.beforeLines == orig(this.otherOperand)
this.cOption == this.dOption
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == this.helpOption
this.cOption == this.versionOption
this.cOption == this.aboutOption
this.cOption == orig(this.beforeOption)
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.cOption == orig(this.eOption)
this.cOption == orig(this.xOption)
this.cOption == orig(this.yOption)
this.cOption == orig(this.zOption)
this.cOption == orig(this.matchOperand)
this.cOption == orig(this.startingOperand)
this.cOption == orig(this.upperOperand)
this.cOption == orig(this.lowerOperand)
this.cOption == orig(this.anyOperand)
this.cOption == orig(this.setOperand)
this.cOption == orig(this.clearOperand)
this.cOption == orig(this.helpOption)
this.cOption == orig(this.versionOption)
this.cOption == orig(this.aboutOption)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == true
this.afterLines has only one value
this.beforeLines == null
this.cOption == false
this.patternOperand has only one value
this.patternOperand.toString == "public"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
size(this.fileOperand[]) == 3
===========================================================================
com.fidelis.argface.ArgSample.setEndingOperand(boolean):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 == true
===========================================================================
com.fidelis.argface.ArgSample.setEndingOperand(boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.endingOperand == true
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.setFileOperand(java.lang.String[]):::ENTER
this.usageText.getClass().getName() == arg0.getClass().getName()
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterOption == false
this.afterLines == null
this.patternOperand != null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
arg0 != null
arg0[] elements != null
arg0[].toString one of { [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6], [file.java, file2, file3] }
size(arg0[]) one of { 3, 9 }
===========================================================================
com.fidelis.argface.ArgSample.setFileOperand(java.lang.String[]):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText.getClass().getName() == orig(arg0.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.endingOperand == orig(this.endingOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand[].getClass().getName() == orig(this.fileOperand[].getClass().getName())
this.fileOperand[].toString == orig(this.fileOperand[].toString)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0[] == orig(arg0[])
this.afterOption == false
this.afterLines == null
this.patternOperand != null
this.fileOperand != null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
this.argFace != null
arg0[] elements != null
arg0[].toString one of { [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6], [file.java, file2, file3] }
this.fileOperand[] == orig(this.fileOperand[]) (elementwise)
this.fileOperand[].getClass().getName() == orig(this.fileOperand[].getClass().getName()) (elementwise)
this.fileOperand[].toString == orig(this.fileOperand[].toString) (elementwise)
this.argFace.getClass().getName() != orig(this.fileOperand.getClass().getName())
===========================================================================
com.fidelis.argface.ArgSample.setHelpOption(boolean):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 == true
===========================================================================
com.fidelis.argface.ArgSample.setHelpOption(boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.helpOption == true
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.setOperands(java.lang.String[]):::ENTER
this.usageText.getClass().getName() == arg0.getClass().getName()
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
size(arg0[]) one of { 0, 5, 11 }
===========================================================================
com.fidelis.argface.ArgSample.setOperands(java.lang.String[]):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(arg0.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0[] == orig(arg0[])
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.setOtherOperand(java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterOption == false
this.afterLines == null
this.patternOperand has only one value
this.patternOperand.toString == "patternValue"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 has only one value
arg0.toString == "total"
size(this.fileOperand[]) == 9
===========================================================================
com.fidelis.argface.ArgSample.setOtherOperand(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.afterOption == false
this.afterLines == null
this.otherOperand has only one value
this.patternOperand has only one value
this.patternOperand.toString == "patternValue"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString == "total"
size(this.fileOperand[]) == 9
===========================================================================
com.fidelis.argface.ArgSample.setPatternOperand(java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterOption == false
this.afterLines == null
this.patternOperand.toString == "patternValue"
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString one of { "patternValue", "public" }
size(this.fileOperand[]) == 9
===========================================================================
com.fidelis.argface.ArgSample.setPatternOperand(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.endingOperand == orig(this.endingOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.afterOption == false
this.afterLines == null
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0.toString one of { "patternValue", "public" }
size(this.fileOperand[]) == 9
===========================================================================
com.fidelis.argface.ArgSample.setVersionOption(boolean):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 == true
===========================================================================
com.fidelis.argface.ArgSample.setVersionOption(boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == this.otherOperand
this.afterLines == this.patternOperand
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.afterLines == orig(this.otherOperand)
this.afterLines == orig(this.patternOperand)
this.fileOperand == orig(this.fileOperand)
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.fileOperand == null
this.versionOption == true
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.setcOption(boolean):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.cOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterOption == false
this.afterLines == null
this.otherOperand has only one value
this.patternOperand has only one value
this.patternOperand.toString == "patternValue"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 == true
size(this.fileOperand[]) == 9
===========================================================================
com.fidelis.argface.ArgSample.setcOption(boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.cOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.cOption == true
this.otherOperand has only one value
this.patternOperand has only one value
this.patternOperand.toString == "patternValue"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
size(this.fileOperand[]) == 9
===========================================================================
com.fidelis.argface.ArgSample.setdOption(boolean):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.dOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterLines == this.beforeLines
this.afterOption == false
this.afterLines == null
this.cOption == true
this.otherOperand has only one value
this.patternOperand has only one value
this.patternOperand.toString == "patternValue"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
arg0 == true
size(this.fileOperand[]) == 9
===========================================================================
com.fidelis.argface.ArgSample.setdOption(boolean):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.eOption
this.afterOption == this.xOption
this.afterOption == this.yOption
this.afterOption == this.zOption
this.afterOption == this.matchOperand
this.afterOption == this.startingOperand
this.afterOption == this.endingOperand
this.afterOption == this.upperOperand
this.afterOption == this.lowerOperand
this.afterOption == this.anyOperand
this.afterOption == this.setOperand
this.afterOption == this.clearOperand
this.afterOption == this.helpOption
this.afterOption == this.versionOption
this.afterOption == this.aboutOption
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.dOption)
this.afterOption == orig(this.eOption)
this.afterOption == orig(this.xOption)
this.afterOption == orig(this.yOption)
this.afterOption == orig(this.zOption)
this.afterOption == orig(this.matchOperand)
this.afterOption == orig(this.startingOperand)
this.afterOption == orig(this.endingOperand)
this.afterOption == orig(this.upperOperand)
this.afterOption == orig(this.lowerOperand)
this.afterOption == orig(this.anyOperand)
this.afterOption == orig(this.setOperand)
this.afterOption == orig(this.clearOperand)
this.afterOption == orig(this.helpOption)
this.afterOption == orig(this.versionOption)
this.afterOption == orig(this.aboutOption)
this.afterLines == this.beforeLines
this.afterLines == orig(this.afterLines)
this.afterLines == orig(this.beforeLines)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand[] == orig(this.fileOperand[])
this.operands == orig(this.operands)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
this.afterOption == false
this.afterLines == null
this.cOption == true
this.otherOperand has only one value
this.patternOperand has only one value
this.patternOperand.toString == "patternValue"
this.fileOperand has only one value
this.fileOperand[] contains no nulls and has only one value, of length 9
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, another.file, yetAnother.file, more, more2, more3, more4, more5, more6]
this.operands == null
this.skipBlank == true
this.show == true
this.argFace has only one value
size(this.fileOperand[]) == 9
===========================================================================
com.fidelis.argface.ArgSample.showResults(int, java.lang.String[]):::ENTER
this.usageText.getClass().getName() == arg1.getClass().getName()
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
arg0 == size(arg1[])
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.showResults(int, java.lang.String[]):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText.getClass().getName() == orig(arg1.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.afterOption)
this.afterOption == orig(this.beforeOption)
this.afterOption == orig(this.endingOperand)
this.afterLines == orig(this.afterLines)
this.afterLines.toString == orig(this.afterLines.toString)
this.beforeLines == orig(this.beforeLines)
this.beforeLines.toString == orig(this.beforeLines.toString)
this.cOption == this.dOption
this.cOption == orig(this.cOption)
this.cOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.otherOperand == orig(this.otherOperand)
this.otherOperand.toString == orig(this.otherOperand.toString)
this.patternOperand == orig(this.patternOperand)
this.patternOperand.toString == orig(this.patternOperand.toString)
this.fileOperand == orig(this.fileOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.fileOperand[] == orig(this.fileOperand[])
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.operands == orig(this.operands)
this.operands[] == orig(this.operands[])
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg1[] == orig(arg1[])
this.skipBlank == true
this.show == true
this.argFace has only one value
===========================================================================
com.fidelis.argface.ArgSample.testCommandLine(java.lang.String):::ENTER
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.cOption == this.dOption
this.cOption == this.eOption
this.cOption == this.xOption
this.cOption == this.yOption
this.cOption == this.zOption
this.cOption == this.matchOperand
this.cOption == this.startingOperand
this.cOption == this.upperOperand
this.cOption == this.lowerOperand
this.cOption == this.anyOperand
this.cOption == this.setOperand
this.cOption == this.clearOperand
this.cOption == false
this.otherOperand == null
this.patternOperand.toString == "public"
this.fileOperand[] contains no nulls and has only one value, of length 3
this.fileOperand[].getClass().getName() == [java.lang.String, java.lang.String, java.lang.String]
this.fileOperand[].toString == [file.java, file2, file3]
this.fileOperand[].toString elements one of { "file.java", "file2", "file3" }
this.operands[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.operands[].toString one of { [], [ending, public, file.java, file2, file3] }
this.skipBlank == true
this.show == true
this.argFace has only one value
size(this.fileOperand[]) == 3
size(this.operands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgSample.testCommandLine(java.lang.String):::EXIT301
===========================================================================
com.fidelis.argface.ArgSample.testCommandLine(java.lang.String):::EXIT301;condition="return == true"
===========================================================================
com.fidelis.argface.ArgSample.testCommandLine(java.lang.String):::EXIT
this.usageText == orig(this.usageText)
this.usageText.getClass().getName() == orig(this.usageText.getClass().getName())
this.usageText.getClass().getName() == orig(this.helpText.getClass().getName())
this.usageText.getClass().getName() == orig(this.aboutText.getClass().getName())
this.usageText.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.usageText.getClass().getName() == orig(this.operands.getClass().getName())
this.usageText[] == orig(this.usageText[])
this.helpText == orig(this.helpText)
this.helpText[] == orig(this.helpText[])
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText[] == orig(this.aboutText[])
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == orig(this.suppressHelp)
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.afterOption == this.beforeOption
this.afterOption == this.endingOperand
this.afterOption == orig(this.helpOption)
this.cOption == this.dOption
this.cOption == orig(this.afterOption)
this.cOption == orig(this.beforeOption)
this.cOption == orig(this.endingOperand)
this.eOption == orig(this.cOption)
this.eOption == orig(this.dOption)
this.eOption == orig(this.eOption)
this.eOption == orig(this.xOption)
this.eOption == orig(this.yOption)
this.eOption == orig(this.zOption)
this.eOption == orig(this.matchOperand)
this.eOption == orig(this.startingOperand)
this.eOption == orig(this.upperOperand)
this.eOption == orig(this.lowerOperand)
this.eOption == orig(this.anyOperand)
this.eOption == orig(this.setOperand)
this.eOption == orig(this.clearOperand)
this.fileOperand.getClass().getName() == orig(this.fileOperand.getClass().getName())
this.helpOption == orig(this.versionOption)
this.versionOption == orig(this.aboutOption)
this.skipBlank == orig(this.skipBlank)
this.show == orig(this.show)
this.argFace == orig(this.argFace)
this.argFace.getClass().getName() == orig(this.argFace.getClass().getName())
arg0.toString == orig(arg0.toString)
this.skipBlank == true
this.show == true
this.argFace has only one value
return == true
===========================================================================
com.fidelis.argface.ArgSample.testCommandLine(java.lang.String):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgStandard:::OBJECT
this.reflect == this.common.reflect
this.reflect == this.common.finder.reflect
this.reflect.object == this.common.reflect.object
this.reflect.object.getClass().getName() == this.common.reflect.object.getClass().getName()
this.reflect.objectClass == this.common.reflect.objectClass
this.reflect.privateAccess == this.common.reflect.privateAccess
this.common.finder.util == com.fidelis.argface.ArgUtil.instance
this.parser.operand.list.getClass().getName() == this.parser.varList.getClass().getName()
this.parser.operand.list.getClass().getName() == this.help.optionList.getClass().getName()
this.parser.operand.list.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.operand.list.getClass().getName() == com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
this.parser.argList == this.argList
this.parser.argList.home == this.argList.home
this.parser.argList.curr == this.argList.curr
this.parser.listStack.getClass().getName() == this.pattern.listStack.getClass().getName()
this.parser.varList.getClass().getName() == this.parser.litList.getClass().getName()
this.parser.varList.getClass().getName() == this.parser.optionList.getClass().getName()
this.parser.varList.getClass().getName() == this.help.optionList.getClass().getName()
this.parser.varList.getClass().getName() == this.help.problemUsage.getClass().getName()
this.parser.varList.getClass().getName() == this.help.problemText.getClass().getName()
this.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
this.parser.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
this.parser.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
this.parser.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
this.help.argList.home == this.pattern.argList.home
this.help.argList.home == this.argList.home
this.help.argList.curr == this.pattern.argList.curr
this.help.argList.curr == this.argList.curr
this.help.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
this.help.helpText == this.helpText
this.util == com.fidelis.argface.ArgUtil.instance
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == this.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == this.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == this.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == this.targetOptions.getClass().getName()
this.util.operandSuffix == this.operandSuffix
this.util.optionSuffix == this.optionSuffix
this.pattern.argList.home == this.argList.home
this.pattern.argList.curr == this.argList.curr
this.pattern.nonOptionList == this.nonOptionList
this.pattern.patternMatch == this.patternMatch
this.pattern.failBase.entry.getClass().getName() == this.argList.home.entry.getClass().getName()
this.pattern.failBase.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this has only one value
this.reflect has only one value
this.reflect != null
this.reflect.object.getClass().getName() == com.fidelis.argface.ArgSample.class
this.reflect.privateAccess == false
this.common has only one value
this.common != null
this.common.finder has only one value
this.common.finder != null
this.common.finder.operandSuffix.toString == "Operand"
this.common.finder.optionSuffix.toString == "Option"
this.parser has only one value
this.parser != null
this.parser.source.getClass().getName() == com.fidelis.argface.TokenString.class
this.parser.delimiters has only one value
this.parser.delimiters != null
this.parser.delimiters.toString == " \t\n'-+|[]<>()=:,/"
this.parser.programName.toString == "ArgSample"
this.parser.optionalDepth == 0
this.parser.optionDefForm == false
this.parser.exor == false
this.parser.newOption == false
this.parser.specOptions == false
this.parser.operand.type == 1
this.parser.operand.name has only one value
this.parser.operand.name != null
this.parser.operand.name.toString == "file"
this.parser.operand.fieldName.toString == "fileOperand"
this.parser.operand.optional == false
this.parser.operand.field == null
this.parser.operand.repeat == true
this.parser.operand.repeatList == false
this.parser.operand.list[] elements != null
this.parser.operand.list[].getClass().getName() elements == java.lang.String.class
this.parser.operand.list.getClass().getName() == java.util.ArrayList.class
this.parser.operand.value.toString one of { "file3", "more6" }
this.parser.operand.count one of { 0, 3, 9 }
this.parser.option.spec == 3
this.parser.option.name has only one value
this.parser.option.name != null
this.parser.option.name.toString == "z"
this.parser.option.altName has only one value
this.parser.option.altName != null
this.parser.option.altName.toString == "sleep"
this.parser.option.fieldName.toString == "zOption"
this.parser.option.field == null
this.parser.option.has == false
this.parser.option.count == 0
this.parser.option.creation == false
this.parser.option.argName == null
this.parser.option.argFieldName == null
this.parser.option.argField == null
this.parser.option.argSetter == null
this.parser.option.argValue == null
this.parser.option.argOptional == false
this.parser.option.argRepeat == false
this.parser.option.argSet == false
this.parser.option.repeat == false
this.parser.option.repeatList == false
this.parser.option.list == null
this.parser.option.help has only one value
this.parser.option.help != null
this.parser.option.help.toString == "dormant state when completed"
this.parser.listStack has only one value
this.parser.listStack != null
this.parser.listStack.getClass().getName() == java.util.ArrayDeque.class
this.parser.varList has only one value
this.parser.varList != null
this.parser.varList[] elements != null
this.parser.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.parser.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.parser.varList.getClass().getName() == java.util.ArrayList.class
this.parser.litList has only one value
this.parser.litList != null
this.parser.litList[] elements != null
this.parser.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.parser.litList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.parser.optionList has only one value
this.parser.optionList != null
this.parser.optionList[] elements != null
this.parser.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.help has only one value
this.help != null
this.help.argList.home has only one value
this.help.argList.home != null
this.help.argList.curr != null
this.help.optionList[] elements != null
this.help.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.help.optionList.getClass().getName() == java.util.ArrayList.class
this.help.suppressHelp == false
this.help.usageText.toString == "Usage:\n  ArgSample set [-x|--extend | -y|--yield | -z|--sleep] [-e] [[upper | lower |\n            any] <pattern>] <other> \n  ArgSample (match [upper | lower | any] <other>) | (ending <file>) | (<other>\n            match <pattern>) [set | clear] \n  ArgSample [-a|--after <lines>] [-b|--before <lines>] [-c] [-d] [-e] match |\n            starting | ending | <other> <pattern> <file>... \n  ArgSample -h|--help | -v|--version | --about \n"
this.help.versionText.toString == "ArgSample version 1.0.0"
this.help.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
this.help.helpText.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
this.help.problemUsage has only one value
this.help.problemUsage != null
this.help.problemUsage[] elements != null
this.help.problemUsage[].getClass().getName() elements == com.fidelis.argface.ArgNode.class
this.help.problemText has only one value
this.help.problemText != null
this.help.problemText[] elements != null
this.help.problemText[].getClass().getName() elements == java.lang.String.class
com.fidelis.argface.ArgUtil.instance has only one value
com.fidelis.argface.ArgUtil.instance != null
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base != null
com.fidelis.argface.ArgUtil.base.getClass().getName() == com.fidelis.argface.ArgStandard.class
com.fidelis.argface.ArgUtil.instance.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.parser has only one value
com.fidelis.argface.ArgUtil.base.parser != null
com.fidelis.argface.ArgUtil.base.help has only one value
com.fidelis.argface.ArgUtil.base.help != null
com.fidelis.argface.ArgUtil.base.util has only one value
com.fidelis.argface.ArgUtil.base.util != null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.pattern != null
com.fidelis.argface.ArgUtil.base.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.base.usageText.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
com.fidelis.argface.ArgUtil.base.versionText.toString == "ArgSample version 1.0.0"
com.fidelis.argface.ArgUtil.base.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
com.fidelis.argface.ArgUtil.base.helpText.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.base.allowOverwrite == null
com.fidelis.argface.ArgUtil.base.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.varList[] elements != null
com.fidelis.argface.ArgUtil.base.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.litList[] elements != null
com.fidelis.argface.ArgUtil.base.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.optionList[] elements != null
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.helpOption == false
com.fidelis.argface.ArgUtil.base.versionOption == false
com.fidelis.argface.ArgUtil.base.aboutOption == false
com.fidelis.argface.ArgUtil.base.nonOptionList[] elements != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() elements == java.lang.String.class
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.targetOperands[] elements != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.targetOptions[] elements != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
this.util.programName.toString == "ArgSample"
this.util.operandSuffix.toString == "Operand"
this.util.optionSuffix.toString == "Option"
this.pattern has only one value
this.pattern != null
this.pattern.argList.home has only one value
this.pattern.argList.home != null
this.pattern.argList.curr != null
this.pattern.nonOptionList[] elements != null
this.pattern.nonOptionList[].getClass().getName() elements == java.lang.String.class
this.pattern.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
this.pattern.help == null
this.pattern.listStack has only one value
this.pattern.listStack != null
this.pattern.patternList has only one value
this.pattern.patternList != null
this.pattern.patternList[] == []
this.pattern.patternList[].getClass().getName() == []
this.pattern.saveList has only one value
this.pattern.saveList != null
this.pattern.saveList[] elements != null
this.pattern.saveList[].getClass().getName() elements == com.fidelis.argface.ArgNode.class
this.pattern.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
this.pattern.prevIndex one of { 0, 3, 4 }
this.pattern.failBase.south has only one value
this.pattern.failBase.east has only one value
this.pattern.failBase.entry has only one value
this.pattern.failBase.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.pattern.failBase.optional == false
this.pattern.failBase.repeat == false
this.pattern.failBase.spec == 0
this.pattern.failNode == null
this.pattern.lastBase == null
this.pattern.lastFail == null
this.pattern.patternMin one of { 0, 3 }
this.pattern.patternMax one of { 0, 999 }
this.pattern.targetOperands has only one value
this.pattern.targetOperands != null
this.pattern.targetOperands[] elements != null
this.pattern.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.programName.toString == "ArgSample"
this.usageText.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
this.versionText.toString == "ArgSample version 1.0.0"
this.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
this.helpText.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
this.optionSuffix.toString == "Option"
this.operandSuffix.toString == "Operand"
this.allowOverwrite == null
this.varList[] contains no nulls and has only one value, of length 3
this.varList[] elements != null
this.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.litList[] contains no nulls and has only one value, of length 8
this.litList[] elements != null
this.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.optionList[] elements != null
this.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.argList.home has only one value
this.argList.home != null
this.argList.home.south has only one value
this.argList.home.south != null
this.argList.home.east has only one value
this.argList.home.east != null
this.argList.home.entry has only one value
this.argList.home.entry != null
this.argList.home.entry.getClass().getName() == com.fidelis.argface.ArgOperand.class
this.argList.home.optional == false
this.argList.home.repeat == false
this.argList.home.spec == 0
this.argList.curr != null
this.argList.curr.entry != null
this.argList.curr.optional == false
this.argList.curr.spec == 0
this.helpOption == false
this.versionOption == false
this.aboutOption == false
this.nonOptionList[] elements != null
this.nonOptionList[].getClass().getName() elements == java.lang.String.class
this.targetOperands[] elements != null
this.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
this.targetOptions[] elements != null
this.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
this.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
size(this.parser.operand.list[]) one of { 0, 3, 9 }
size(this.parser.operand.list[])-1 != 0
size(this.parser.varList[]) one of { 0, 3 }
size(this.parser.varList[])-1 != 0
size(this.parser.litList[]) one of { 0, 8 }
size(this.parser.litList[])-1 != 0
size(this.parser.optionList[])-1 != 0
size(this.help.problemUsage[]) one of { 0, 2, 3 }
size(this.help.problemUsage[])-1 != 0
size(this.help.problemText[]) one of { 0, 2, 3 }
size(this.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1, 2 }
size(this.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(this.pattern.saveList[]) one of { 0, 4 }
size(this.pattern.saveList[])-1 != 0
size(this.pattern.targetOperands[]) one of { 0, 5, 16 }
size(this.pattern.targetOperands[])-1 != 0
size(this.varList[]) == 3
size(this.litList[]) == 8
size(this.nonOptionList[]) one of { 0, 5, 11 }
size(this.targetOperands[]) one of { 0, 5, 16 }
size(this.targetOptions[]) one of { 0, 1, 2 }
this.reflect.object.getClass().getName() != this.parser.source.getClass().getName()
this.reflect.object.getClass().getName() != this.parser.operand.list.getClass().getName()
this.reflect.object.getClass().getName() != this.parser.listStack.getClass().getName()
this.reflect.object.getClass().getName() != this.parser.varList.getClass().getName()
this.reflect.object.getClass().getName() != this.help.optionList.getClass().getName()
this.reflect.object.getClass().getName() != com.fidelis.argface.ArgUtil.base.getClass().getName()
this.reflect.object.getClass().getName() != com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.reflect.object.getClass().getName() != com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
this.reflect.object.getClass().getName() != this.argList.home.entry.getClass().getName()
this.reflect.object.getClass().getName() != this.argList.curr.entry.getClass().getName()
this.parser.source.getClass().getName() != this.parser.operand.list.getClass().getName()
this.parser.source.getClass().getName() != this.parser.listStack.getClass().getName()
this.parser.source.getClass().getName() != this.parser.varList.getClass().getName()
this.parser.source.getClass().getName() != this.help.optionList.getClass().getName()
this.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.getClass().getName()
this.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
this.parser.source.getClass().getName() != this.argList.home.entry.getClass().getName()
this.parser.source.getClass().getName() != this.argList.curr.entry.getClass().getName()
this.parser.operand.list.getClass().getName() != this.parser.listStack.getClass().getName()
this.parser.operand.list.getClass().getName() != com.fidelis.argface.ArgUtil.base.getClass().getName()
this.parser.operand.list.getClass().getName() != this.argList.home.entry.getClass().getName()
this.parser.operand.list.getClass().getName() != this.argList.curr.entry.getClass().getName()
this.parser.operand.count >= this.pattern.patternMin
this.parser.operand.count <= this.pattern.patternMax
this.parser.listStack.getClass().getName() != this.parser.varList.getClass().getName()
this.parser.listStack.getClass().getName() != this.help.optionList.getClass().getName()
this.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.getClass().getName()
this.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
this.parser.listStack.getClass().getName() != this.argList.home.entry.getClass().getName()
this.parser.listStack.getClass().getName() != this.argList.curr.entry.getClass().getName()
this.pattern.failBase.entry.getClass().getName() in this.parser.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.parser.varList[].getClass().getName()
this.parser.varList.getClass().getName() != com.fidelis.argface.ArgUtil.base.getClass().getName()
this.parser.varList.getClass().getName() != this.argList.home.entry.getClass().getName()
this.parser.varList.getClass().getName() != this.argList.curr.entry.getClass().getName()
this.pattern.failBase.entry.getClass().getName() in this.parser.litList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.parser.litList[].getClass().getName()
this.help.optionList.getClass().getName() != com.fidelis.argface.ArgUtil.base.getClass().getName()
this.help.optionList.getClass().getName() != this.argList.home.entry.getClass().getName()
this.help.optionList.getClass().getName() != this.argList.curr.entry.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != this.argList.home.entry.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != this.argList.curr.entry.getClass().getName()
this.pattern.failBase.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.varList[].getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() != this.argList.home.entry.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() != this.argList.curr.entry.getClass().getName()
this.pattern.failBase.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.litList[].getClass().getName()
this.argList.home.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.litList[].getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() != this.argList.home.entry.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() != this.argList.curr.entry.getClass().getName()
this.pattern.failBase.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName()
this.pattern.failBase.entry.getClass().getName() in this.pattern.targetOperands[].getClass().getName()
this.pattern.failBase.entry.getClass().getName() in this.varList[].getClass().getName()
this.pattern.failBase.entry.getClass().getName() in this.litList[].getClass().getName()
this.pattern.failBase.entry.getClass().getName() in this.targetOperands[].getClass().getName()
this.pattern.patternMin <= this.pattern.patternMax
this.argList.home.entry.getClass().getName() in this.varList[].getClass().getName()
this.argList.home.entry.getClass().getName() in this.litList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.ArgStandard():::EXIT
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.usageText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
this.util.programName == this.programName
this.pattern.argList == this.argList
this.pattern.patternWatch == this.patternWatch
this.versionText == this.aboutText
this.versionText == this.helpText
this.suppressHelp == this.posixFormat
this.reflect.object == null
this.reflect.objectClass == null
this.parser.source == null
this.parser.operand == null
this.parser.option == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText == null
this.versionText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
===========================================================================
com.fidelis.argface.ArgStandard.create():::EXIT
return.reflect == return.common.reflect
return.util == com.fidelis.argface.ArgUtil.instance
return has only one value
return.reflect has only one value
return.reflect.object == null
return.reflect.objectClass == null
return.reflect.privateAccess == false
return.common has only one value
return.common.finder has only one value
return.parser has only one value
return.parser.source == null
return.parser.delimiters has only one value
return.parser.delimiters.toString == " \t\n'-+|[]<>()=:,/"
return.parser.programName == null
return.parser.optionalDepth == 0
return.parser.optionDefForm == false
return.parser.exor == false
return.parser.newOption == false
return.parser.specOptions == false
return.parser.operand == null
return.parser.option == null
return.parser.argList == null
return.parser.listStack has only one value
return.parser.listStack.getClass().getName() == java.util.ArrayDeque.class
return.parser.varList has only one value
return.parser.varList[] == []
return.parser.varList[].getClass().getName() == []
return.parser.varList.getClass().getName() == java.util.ArrayList.class
return.parser.litList has only one value
return.parser.litList[] == []
return.parser.litList[].getClass().getName() == []
return.parser.optionList has only one value
return.parser.optionList[] == []
return.parser.optionList[].getClass().getName() == []
return.help has only one value
return.help.argList == null
return.help.optionList == null
return.help.suppressHelp == false
return.help.usageText == null
return.help.versionText == null
return.help.aboutText == null
return.help.helpText == null
return.help.problemUsage has only one value
return.help.problemUsage[] == []
return.help.problemUsage[].getClass().getName() == []
return.help.problemText has only one value
return.help.problemText[] == []
return.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance has only one value
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base.getClass().getName() == com.fidelis.argface.ArgStandard.class
return.util.programName == null
return.util.operandSuffix == null
return.util.optionSuffix == null
return.pattern has only one value
return.pattern.argList == null
return.pattern.nonOptionList == null
return.pattern.patternWatch == false
return.pattern.patternMatch == null
return.pattern.help == null
return.pattern.listStack has only one value
return.pattern.patternList has only one value
return.pattern.patternList[] == []
return.pattern.patternList[].getClass().getName() == []
return.pattern.saveList has only one value
return.pattern.saveList[] == []
return.pattern.saveList[].getClass().getName() == []
return.pattern.prevIndex == 0
return.pattern.failBase == null
return.pattern.failNode == null
return.pattern.lastBase == null
return.pattern.lastFail == null
return.pattern.patternMin == 0
return.pattern.patternMax == 0
return.pattern.targetOperands has only one value
return.pattern.targetOperands[] == []
return.pattern.targetOperands[].getClass().getName() == []
return.programName == null
return.usageText == null
return.versionText == null
return.aboutText == null
return.helpText == null
return.optionSuffix == null
return.operandSuffix == null
return.allowOverwrite == null
return.suppressHelp == null
return.posixFormat == null
return.sortOptions == null
return.varList == null
return.litList == null
return.optionList == null
return.argList == null
return.letters == null
return.helpOption == false
return.versionOption == false
return.aboutOption == false
return.nonOptionList == null
return.targetOperands == null
return.targetOptions == null
return.patternWatch == false
return.preParseDone == false
return.patternMatch == null
===========================================================================
com.fidelis.argface.ArgStandard.create(java.lang.String[], java.lang.Object):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] contains no nulls and has only one value, of length 19
arg0[].toString == [ArgSample, set [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ], [-e] [[upper | lower | any] <pattern>] <other>, ArgSample, ((match [upper | lower | any] <other>) |,  (ending <file>) |,  (<other> match <pattern>)), [set | clear], ArgSample, [-a, --after  <lines>] 'number of lines after a match', [-b, --before <lines>] 'number of lines before a match', [-cde], match|starting|ending|<other> <pattern> <file>..., Options:, -c confirm actions, -d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?, -e, --exit exit on error, -y, --yield yeild to substitutions, -z, --sleep dormant state when completed]
arg1 has only one value
arg1.getClass().getName() == com.fidelis.argface.ArgSample.class
size(arg0[]) == 19
===========================================================================
com.fidelis.argface.ArgStandard.create(java.lang.String[], java.lang.Object):::EXIT69
===========================================================================
com.fidelis.argface.ArgStandard.create(java.lang.String[], java.lang.Object):::EXIT
arg0[] == orig(arg0[])
return.reflect == return.common.reflect
return.reflect.object == orig(arg1)
return.reflect.object.getClass().getName() == orig(arg1.getClass().getName())
return.parser.programName == return.programName
return.parser.argList == return.argList
return.parser.listStack.getClass().getName() == return.pattern.listStack.getClass().getName()
return.parser.varList == return.varList
return.parser.varList.getClass().getName() == return.varList.getClass().getName()
return.parser.litList == return.litList
return.parser.litList.getClass().getName() == return.varList.getClass().getName()
return.parser.optionList == return.optionList
return.parser.optionList.getClass().getName() == return.varList.getClass().getName()
return.help.argList == return.argList
return.help.optionList == return.optionList
return.help.optionList.getClass().getName() == return.varList.getClass().getName()
return.help.problemUsage.getClass().getName() == return.varList.getClass().getName()
return.help.problemText.getClass().getName() == return.varList.getClass().getName()
return.util == com.fidelis.argface.ArgUtil.instance
return.util.operandSuffix == return.operandSuffix
return.util.optionSuffix == return.optionSuffix
return.pattern.patternList.getClass().getName() == return.varList.getClass().getName()
return.pattern.saveList.getClass().getName() == return.varList.getClass().getName()
return.pattern.targetOperands.getClass().getName() == return.varList.getClass().getName()
return.varList.getClass().getName() == return.litList.getClass().getName()
return.varList.getClass().getName() == return.optionList.getClass().getName()
arg0[] contains no nulls and has only one value, of length 19
arg0[].toString == [ArgSample, set [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ], [-e] [[upper | lower | any] <pattern>] <other>, ArgSample, ((match [upper | lower | any] <other>) |,  (ending <file>) |,  (<other> match <pattern>)), [set | clear], ArgSample, [-a, --after  <lines>] 'number of lines after a match', [-b, --before <lines>] 'number of lines before a match', [-cde], match|starting|ending|<other> <pattern> <file>..., Options:, -c confirm actions, -d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?, -e, --exit exit on error, -y, --yield yeild to substitutions, -z, --sleep dormant state when completed]
return has only one value
return.reflect has only one value
return.reflect.objectClass has only one value
return.reflect.privateAccess == false
return.common has only one value
return.common.finder has only one value
return.parser has only one value
return.parser.source has only one value
return.parser.source.getClass().getName() == com.fidelis.argface.TokenString.class
return.parser.delimiters has only one value
return.parser.delimiters.toString == " \t\n'-+|[]<>()=:,/"
return.parser.programName.toString == "ArgSample"
return.parser.optionalDepth == 0
return.parser.optionDefForm == false
return.parser.exor == false
return.parser.newOption == false
return.parser.specOptions == false
return.parser.operand has only one value
return.parser.option has only one value
return.parser.listStack has only one value
return.parser.listStack.getClass().getName() == java.util.ArrayDeque.class
return.parser.varList[] contains no nulls and has only one value, of length 3
return.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
return.parser.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
return.parser.litList[] contains no nulls and has only one value, of length 8
return.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
return.parser.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
return.parser.optionList[] contains no nulls and has only one value, of length 8
return.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return.parser.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
return.help has only one value
return.help.optionList[] contains no nulls and has only one value, of length 8
return.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return.help.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
return.help.suppressHelp == false
return.help.usageText == null
return.help.versionText == null
return.help.aboutText == null
return.help.helpText == null
return.help.problemUsage has only one value
return.help.problemUsage[] == []
return.help.problemUsage[].getClass().getName() == []
return.help.problemText has only one value
return.help.problemText[] == []
return.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance has only one value
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base.getClass().getName() == com.fidelis.argface.ArgStandard.class
return.util.programName has only one value
return.util.programName.toString == "ArgSample"
return.util.operandSuffix.toString == "Operand"
return.util.optionSuffix.toString == "Option"
return.pattern has only one value
return.pattern.argList == null
return.pattern.nonOptionList == null
return.pattern.patternWatch == false
return.pattern.patternMatch == null
return.pattern.help == null
return.pattern.listStack has only one value
return.pattern.patternList has only one value
return.pattern.patternList[] == []
return.pattern.patternList[].getClass().getName() == []
return.pattern.saveList has only one value
return.pattern.saveList[] == []
return.pattern.saveList[].getClass().getName() == []
return.pattern.prevIndex == 0
return.pattern.failBase == null
return.pattern.failNode == null
return.pattern.lastBase == null
return.pattern.lastFail == null
return.pattern.patternMin == 0
return.pattern.patternMax == 0
return.pattern.targetOperands has only one value
return.pattern.targetOperands[] == []
return.pattern.targetOperands[].getClass().getName() == []
return.programName has only one value
return.programName.toString == "ArgSample"
return.usageText has only one value
return.usageText.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
return.versionText == null
return.aboutText == null
return.helpText == null
return.optionSuffix has only one value
return.optionSuffix.toString == "Option"
return.operandSuffix has only one value
return.operandSuffix.toString == "Operand"
return.allowOverwrite == null
return.suppressHelp == null
return.posixFormat == null
return.sortOptions == null
return.varList has only one value
return.varList[] contains no nulls and has only one value, of length 3
return.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
return.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
return.varList.getClass().getName() == java.util.ArrayList.class
return.litList has only one value
return.litList[] contains no nulls and has only one value, of length 8
return.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
return.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
return.optionList has only one value
return.optionList[] contains no nulls and has only one value, of length 8
return.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
return.argList has only one value
return.argList.home has only one value
return.argList.curr has only one value
return.letters has only one value
return.letters.toString == "xyzeabcd"
return.helpOption == false
return.versionOption == false
return.aboutOption == false
return.nonOptionList == null
return.targetOperands == null
return.targetOptions == null
return.patternWatch == false
return.preParseDone == false
return.patternMatch == null
size(return.parser.varList[]) == 3
size(return.parser.litList[]) == 8
size(return.parser.optionList[]) == 8
size(return.help.optionList[]) == 8
size(return.varList[]) == 3
size(return.litList[]) == 8
size(return.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgStandard.modelGetAboutText():::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.operand.count == this.pattern.patternMin
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.aboutText
this.help.aboutText == this.aboutText
this.help.helpText == this.aboutText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.aboutText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.aboutText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
this.pattern.failBase == this.argList.curr.south
this.pattern.patternMin == this.pattern.patternMax
this.aboutText == this.helpText
this.suppressHelp == this.posixFormat
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 10
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 10
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 10
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 10
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 10
size(this.help.optionList[]) == 10
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 10
size(this.optionList[]) == 10
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelGetAboutText():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == this.pattern.patternMin
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.optionList[] == orig(this.help.optionList[])
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.aboutText
this.help.aboutText == this.aboutText
this.help.helpText == this.aboutText
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.aboutText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == this.argList.curr.south
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase == orig(this.argList.curr.south)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == this.pattern.patternMax
this.pattern.patternMin == orig(this.parser.operand.count)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMin == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == this.helpText
this.aboutText == orig(this.help.versionText)
this.aboutText == orig(this.help.aboutText)
this.aboutText == orig(this.help.helpText)
this.aboutText == orig(this.aboutText)
this.aboutText == orig(this.helpText)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.help.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.help.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 10
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 10
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 10
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 10
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
return.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 10
size(this.help.optionList[]) == 10
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 10
size(this.optionList[]) == 10
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelGetHelpText():::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.operand.count == this.pattern.patternMin
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.aboutText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
this.pattern.failBase == this.argList.curr.south
this.pattern.patternMin == this.pattern.patternMax
this.suppressHelp == this.posixFormat
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelGetHelpText():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == this.pattern.patternMin
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.optionList[] == orig(this.help.optionList[])
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.versionText
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == this.aboutText
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == this.argList.curr.south
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase == orig(this.argList.curr.south)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == this.pattern.patternMax
this.pattern.patternMin == orig(this.parser.operand.count)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMin == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.help.aboutText)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.help.helpText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.help.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.help.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
return.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelGetOperandSuffix():::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
this.util.programName == this.programName
this.pattern.argList == this.argList
this.pattern.patternWatch == this.patternWatch
this.versionText == this.aboutText
this.versionText == this.helpText
this.suppressHelp == this.posixFormat
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
===========================================================================
com.fidelis.argface.ArgStandard.modelGetOperandSuffix():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.option == orig(this.parser.option)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == this.programName
this.util.programName.toString == orig(this.util.programName.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == this.argList
this.pattern.patternWatch == this.patternWatch
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.util.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == this.aboutText
this.versionText == this.helpText
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.help.aboutText)
this.versionText == orig(this.help.helpText)
this.versionText == orig(this.versionText)
this.versionText == orig(this.aboutText)
this.versionText == orig(this.helpText)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.litList == orig(this.litList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.pattern.argList)
this.argList == orig(this.argList)
this.letters == orig(this.letters)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.pattern.patternWatch)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
return has only one value
return.toString == "Operand"
===========================================================================
com.fidelis.argface.ArgStandard.modelGetOptionSuffix():::ENTER
this.common.finder.optionSuffix == this.optionSuffix
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
this.util.programName == this.programName
this.pattern.argList == this.argList
this.pattern.patternWatch == this.patternWatch
this.versionText == this.aboutText
this.versionText == this.helpText
this.suppressHelp == this.posixFormat
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.common.finder.operandSuffix == null
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix == null
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
===========================================================================
com.fidelis.argface.ArgStandard.modelGetOptionSuffix():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == orig(this.common.finder.operandSuffix)
this.common.finder.optionSuffix == this.optionSuffix
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == orig(this.parser.programName)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.option == orig(this.parser.option)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == orig(this.parser.varList)
this.parser.varList[] == orig(this.parser.varList[])
this.parser.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
this.parser.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
this.parser.litList == orig(this.parser.litList)
this.parser.litList[] == orig(this.parser.litList[])
this.parser.optionList == orig(this.parser.optionList)
this.parser.optionList[] == orig(this.parser.optionList[])
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == this.programName
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == this.argList
this.pattern.patternWatch == this.patternWatch
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.util.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == this.aboutText
this.versionText == this.helpText
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.help.aboutText)
this.versionText == orig(this.help.helpText)
this.versionText == orig(this.versionText)
this.versionText == orig(this.aboutText)
this.versionText == orig(this.helpText)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.varList)
this.litList == orig(this.litList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.pattern.argList)
this.argList == orig(this.argList)
this.letters == orig(this.letters)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.pattern.patternWatch)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.common.finder.operandSuffix == null
this.parser.source == null
this.parser.programName == null
this.parser.operand == null
this.parser.option == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix == null
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
return has only one value
return.toString == "Option"
===========================================================================
com.fidelis.argface.ArgStandard.modelGetPosixFormat():::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.operand.count == this.pattern.patternMin
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.aboutText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
this.pattern.failBase == this.argList.curr.south
this.pattern.patternMin == this.pattern.patternMax
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelGetPosixFormat():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == this.pattern.patternMin
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.optionList[] == orig(this.help.optionList[])
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.versionText
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == this.aboutText
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == this.argList.curr.south
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase == orig(this.argList.curr.south)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == this.pattern.patternMax
this.pattern.patternMin == orig(this.parser.operand.count)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMin == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.help.aboutText)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.help.helpText)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == return
this.posixFormat == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.help.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.help.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
return == orig(this.suppressHelp)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.posixFormat == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelGetSortOptions():::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.operand.count == this.pattern.patternMin
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
this.pattern.failBase == this.argList.curr.south
this.pattern.patternMin == this.pattern.patternMax
this.versionText == this.aboutText
this.versionText == this.helpText
this.suppressHelp == this.posixFormat
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgStandard.modelGetSortOptions():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == this.pattern.patternMin
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.optionList[] == orig(this.help.optionList[])
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == this.argList.curr.south
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase == orig(this.argList.curr.south)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == this.pattern.patternMax
this.pattern.patternMin == orig(this.parser.operand.count)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMin == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == this.aboutText
this.versionText == this.helpText
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.help.aboutText)
this.versionText == orig(this.help.helpText)
this.versionText == orig(this.versionText)
this.versionText == orig(this.aboutText)
this.versionText == orig(this.helpText)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.help.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.help.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgStandard.modelGetSuppressHelp():::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.operand.count == this.pattern.patternMin
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.aboutText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
this.pattern.failBase == this.argList.curr.south
this.pattern.patternMin == this.pattern.patternMax
this.suppressHelp == this.posixFormat
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelGetSuppressHelp():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == this.pattern.patternMin
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.optionList[] == orig(this.help.optionList[])
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.versionText
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == this.aboutText
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == this.argList.curr.south
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase == orig(this.argList.curr.south)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == this.pattern.patternMax
this.pattern.patternMin == orig(this.parser.operand.count)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMin == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.help.aboutText)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.help.helpText)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.help.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.help.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
com.fidelis.argface.ArgUtil.base.patternMatch == null
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelGetVersionText():::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.operand.count == this.pattern.patternMin
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
this.pattern.failBase == this.argList.curr.south
this.pattern.patternMin == this.pattern.patternMax
this.versionText == this.aboutText
this.versionText == this.helpText
this.suppressHelp == this.posixFormat
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 9
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 9
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 9
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 9
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 9
size(this.help.optionList[]) == 9
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 9
size(this.optionList[]) == 9
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelGetVersionText():::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == this.pattern.patternMin
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.optionList[] == orig(this.help.optionList[])
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == this.argList.curr.south
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase == orig(this.argList.curr.south)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == this.pattern.patternMax
this.pattern.patternMin == orig(this.parser.operand.count)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMin == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == this.aboutText
this.versionText == this.helpText
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.help.aboutText)
this.versionText == orig(this.help.helpText)
this.versionText == orig(this.versionText)
this.versionText == orig(this.aboutText)
this.versionText == orig(this.helpText)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.help.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.help.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 9
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 9
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 9
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 9
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.entry.getClass().getName() == com.fidelis.argface.ArgOption.class
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == true
this.preParseDone == true
this.patternMatch == null
return has only one value
return.toString == "ArgSample version 1.0.0"
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 9
size(this.help.optionList[]) == 9
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 9
size(this.optionList[]) == 9
this.argList.curr.entry.getClass().getName() in this.parser.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.help.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName()
this.argList.curr.entry.getClass().getName() in this.optionList[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelPostProcess(com.fidelis.argface.ArgOperand):::ENTER
this.parser.programName == this.programName
this.parser.operand == this.argList.curr.entry
this.parser.operand.list.getClass().getName() == arg0.list.getClass().getName()
this.parser.operand.count == this.pattern.patternMin
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.pattern.argList
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == arg0.list.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
this.pattern.patternWatch == this.patternWatch
this.pattern.failBase == this.argList.curr.south
this.pattern.patternMin == this.pattern.patternMax
this.versionText == this.aboutText
this.versionText == this.helpText
this.suppressHelp == this.posixFormat
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName == null
this.parser.option.setter == null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == ""
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0.type one of { 1, 2 }
arg0.fieldName == null
arg0.optional == false
arg0.setter == null
arg0.field == null
arg0.repeatList == false
arg0.list[] == []
arg0.list[].getClass().getName() == []
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == false
arg0.value == null
arg0.count == 0
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
this.parser.operand.type <= arg0.type
===========================================================================
com.fidelis.argface.ArgStandard.modelPostProcess(com.fidelis.argface.ArgOperand):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == this.argList.curr.entry
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.list.getClass().getName() == arg0.list.getClass().getName()
this.parser.operand.list.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == this.pattern.patternMin
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.pattern.argList
this.help.argList == orig(this.help.argList)
this.help.argList == orig(this.pattern.argList)
this.help.optionList == orig(this.help.optionList)
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == arg0.list.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.patternWatch == this.patternWatch
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == this.argList.curr.south
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase == orig(this.argList.curr.south)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == this.pattern.patternMax
this.pattern.patternMin == orig(this.parser.operand.count)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMin == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == this.aboutText
this.versionText == this.helpText
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.help.aboutText)
this.versionText == orig(this.help.helpText)
this.versionText == orig(this.versionText)
this.versionText == orig(this.aboutText)
this.versionText == orig(this.helpText)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.pattern.patternWatch)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
arg0.type == orig(arg0.type)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.optional == orig(arg0.optional)
arg0.field == orig(arg0.field)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.list[] == orig(arg0.list[])
arg0.list.getClass().getName() == orig(arg0.list.getClass().getName())
arg0.has == orig(arg0.has)
arg0.value == orig(arg0.value)
arg0.count == orig(arg0.count)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.option.fieldName == null
this.parser.option.setter == null
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.argList == null
this.help.optionList == null
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east == null
this.argList.curr.entry has only one value
this.argList.curr.repeat == true
this.letters has only one value
this.letters.toString == ""
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0.type one of { 1, 2 }
arg0.optional == false
arg0.field == null
arg0.repeatList == false
arg0.list[] == []
arg0.list[].getClass().getName() == []
arg0.list.getClass().getName() == java.util.ArrayList.class
arg0.has == false
arg0.value == null
arg0.count == 0
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
this.parser.operand.type <= arg0.type
===========================================================================
com.fidelis.argface.ArgStandard.modelPostProcess(com.fidelis.argface.ArgOperand):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgStandard.modelPostProcess(com.fidelis.argface.ArgOption):::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.operand.count == this.pattern.patternMin
this.parser.option.repeat == arg0.repeat
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.versionText == this.helpText
this.help.aboutText == this.helpText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
this.pattern.failBase == this.argList.curr.south
this.pattern.patternMin == this.pattern.patternMax
this.suppressHelp == this.posixFormat
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList == null
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.argList has only one value
this.argList.curr.east == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternMatch == null
arg0.spec one of { 1, 3 }
arg0.fieldName == null
arg0.field == null
arg0.setter == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName == null
arg0.argField == null
arg0.argSetter == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeatList == false
arg0.list == null
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 8, 9, 10 }
size(this.help.optionList[]) one of { 8, 9, 10 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 9, 10 }
size(this.optionList[]) one of { 8, 9, 10 }
this.parser.option.spec >= arg0.spec
===========================================================================
com.fidelis.argface.ArgStandard.modelPostProcess(com.fidelis.argface.ArgOption):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.count == this.pattern.patternMin
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == arg0.repeat
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == orig(this.help.argList)
this.help.argList.home == orig(this.help.argList.home)
this.help.argList.curr == orig(this.help.argList.curr)
this.help.optionList == orig(this.help.optionList)
this.help.optionList[] == orig(this.help.optionList[])
this.help.optionList.getClass().getName() == orig(this.help.optionList.getClass().getName())
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.helpText
this.help.aboutText == this.helpText
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.patternWatch == orig(this.pattern.patternWatch)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == this.argList.curr.south
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase == orig(this.argList.curr.south)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == this.pattern.patternMax
this.pattern.patternMin == orig(this.parser.operand.count)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMin == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.help.versionText)
this.helpText == orig(this.help.aboutText)
this.helpText == orig(this.help.helpText)
this.helpText == orig(this.helpText)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
arg0.spec == orig(arg0.spec)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.altName == orig(arg0.altName)
arg0.altName.toString == orig(arg0.altName.toString)
arg0.field == orig(arg0.field)
arg0.has == orig(arg0.has)
arg0.count == orig(arg0.count)
arg0.creation == orig(arg0.creation)
arg0.argName == orig(arg0.argName)
arg0.argName.toString == orig(arg0.argName.toString)
arg0.argField == orig(arg0.argField)
arg0.argValue == orig(arg0.argValue)
arg0.argOptional == orig(arg0.argOptional)
arg0.argRepeat == orig(arg0.argRepeat)
arg0.argSet == orig(arg0.argSet)
arg0.repeat == orig(this.parser.option.repeat)
arg0.repeat == orig(arg0.repeat)
arg0.repeatList == orig(arg0.repeatList)
arg0.list == orig(arg0.list)
arg0.help == orig(arg0.help)
arg0.help.toString == orig(arg0.help.toString)
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.operand.value == null
this.parser.option has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.nonOptionList == null
this.util.programName has only one value
this.pattern.argList == null
this.pattern.patternWatch == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.helpText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.argList has only one value
this.argList.curr.east == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternMatch == null
arg0.spec one of { 1, 3 }
arg0.field == null
arg0.has == false
arg0.count == 0
arg0.argName.toString == "lines"
arg0.argFieldName.toString one of { "afterLines", "beforeLines" }
arg0.argField == null
arg0.argValue == null
arg0.argOptional == false
arg0.argRepeat == false
arg0.argSet == false
arg0.repeat == false
arg0.repeatList == false
arg0.list == null
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 8, 9, 10 }
size(this.help.optionList[]) one of { 8, 9, 10 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 9, 10 }
size(this.optionList[]) one of { 8, 9, 10 }
this.parser.option.spec >= arg0.spec
===========================================================================
com.fidelis.argface.ArgStandard.modelPostProcess(com.fidelis.argface.ArgOption):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgStandard.modelSetNonOptions(java.util.List):::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.aboutText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.suppressHelp == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == arg0.getClass().getName()
this.pattern.argList == this.argList
this.pattern.patternWatch == this.patternWatch
this.pattern.targetOperands == this.targetOperands
this.suppressHelp == this.posixFormat
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.nonOptionList == arg0
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.targetOperands has only one value
this.targetOptions has only one value
this.patternWatch == true
this.preParseDone == true
arg0[].getClass().getName() elements == java.lang.String.class
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
size(arg0[]) one of { 0, 5, 11 }
===========================================================================
com.fidelis.argface.ArgStandard.modelSetNonOptions(java.util.List):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.optionList[] == orig(this.help.optionList[])
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == this.versionText
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == this.aboutText
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(arg0.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == this.argList
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.patternWatch == this.patternWatch
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == this.targetOperands
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.help.aboutText)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.help.helpText)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.pattern.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.help.argList.home)
this.argList.home == orig(this.pattern.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.help.argList.curr)
this.argList.curr == orig(this.pattern.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList == orig(arg0)
this.nonOptionList[] == orig(this.nonOptionList[])
this.targetOperands == orig(this.pattern.targetOperands)
this.targetOperands == orig(this.targetOperands)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOptions == orig(this.targetOptions)
this.targetOptions[] == orig(this.targetOptions[])
this.patternWatch == orig(this.pattern.patternWatch)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0[] == orig(arg0[])
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.targetOperands has only one value
this.targetOptions has only one value
this.patternWatch == true
this.preParseDone == true
arg0[].getClass().getName() elements == java.lang.String.class
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
===========================================================================
com.fidelis.argface.ArgStandard.modelSetProgramVariables(java.util.List, java.util.List):::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.aboutText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.suppressHelp == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == arg0.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == arg1.getClass().getName()
this.pattern.argList == this.argList
this.pattern.patternWatch == this.patternWatch
this.pattern.targetOperands == this.targetOperands
this.suppressHelp == this.posixFormat
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.targetOperands == arg0
this.targetOptions == arg1
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.targetOperands has only one value
this.targetOptions has only one value
this.patternWatch == true
this.preParseDone == true
arg0[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
arg1[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
size(arg0[]) one of { 0, 5, 16 }
size(arg1[]) one of { 0, 1, 2 }
this.pattern.failBase.entry.getClass().getName() in arg0[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.modelSetProgramVariables(java.util.List, java.util.List):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.operand.list[] == orig(this.parser.operand.list[])
this.parser.operand.has == orig(this.parser.operand.has)
this.parser.operand.value == orig(this.parser.operand.value)
this.parser.operand.value.toString == orig(this.parser.operand.value.toString)
this.parser.operand.count == orig(this.parser.operand.count)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList[] == orig(this.parser.optionList[])
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.optionList[] == orig(this.help.optionList[])
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == this.versionText
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == this.aboutText
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(arg0.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(arg1.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == this.argList
this.pattern.nonOptionList[] == orig(this.pattern.nonOptionList[])
this.pattern.patternWatch == this.patternWatch
this.pattern.patternMatch.toString == orig(this.pattern.patternMatch.toString)
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failBase.south == orig(this.pattern.failBase.south)
this.pattern.failBase.east == orig(this.pattern.failBase.east)
this.pattern.failBase.entry == orig(this.pattern.failBase.entry)
this.pattern.failBase.optional == orig(this.pattern.failBase.optional)
this.pattern.failBase.repeat == orig(this.pattern.failBase.repeat)
this.pattern.failBase.spec == orig(this.pattern.failBase.spec)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMax == orig(this.pattern.patternMax)
this.pattern.targetOperands == this.targetOperands
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.versionText)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText == orig(this.help.aboutText)
this.aboutText == orig(this.aboutText)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText == orig(this.help.helpText)
this.helpText == orig(this.helpText)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.optionList[] == orig(this.optionList[])
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.pattern.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.help.argList.home)
this.argList.home == orig(this.pattern.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr == orig(this.parser.argList.curr)
this.argList.curr == orig(this.help.argList.curr)
this.argList.curr == orig(this.pattern.argList.curr)
this.argList.curr == orig(this.argList.curr)
this.argList.curr.south == orig(this.argList.curr.south)
this.argList.curr.east == orig(this.argList.curr.east)
this.argList.curr.entry == orig(this.argList.curr.entry)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.repeat == orig(this.argList.curr.repeat)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.nonOptionList[] == orig(this.nonOptionList[])
this.targetOperands == orig(this.pattern.targetOperands)
this.targetOperands == orig(this.targetOperands)
this.targetOperands == orig(arg0)
this.targetOperands[] == orig(this.targetOperands[])
this.targetOptions == orig(this.targetOptions)
this.targetOptions == orig(arg1)
this.targetOptions[] == orig(this.targetOptions[])
this.patternWatch == orig(this.pattern.patternWatch)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.patternMatch.toString == orig(this.patternMatch.toString)
arg0[] == orig(arg0[])
arg1[] == orig(arg1[])
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.targetOperands has only one value
this.targetOptions has only one value
this.patternWatch == true
this.preParseDone == true
arg0[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
arg1[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
this.pattern.failBase.entry.getClass().getName() in arg0[].getClass().getName()
===========================================================================
com.fidelis.argface.ArgStandard.parse(java.lang.String[]):::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.parser.operand.count == this.pattern.patternMin
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.aboutText
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.suppressHelp == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
this.suppressHelp == this.posixFormat
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String] }
this.parser.operand.value.toString == "file3"
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.help.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.patternMatch.toString == "ending <pattern> <file>..."
this.util.programName has only one value
this.pattern.nonOptionList[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.pattern.patternMatch.toString == "ending <pattern> <file>..."
this.pattern.prevIndex one of { 0, 4 }
this.pattern.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.programName has only one value
this.usageText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
this.argList has only one value
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList[].getClass().getName() one of { [], [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String] }
this.targetOperands[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
this.patternWatch == true
this.patternMatch.toString == "ending <pattern> <file>..."
arg0.getClass().getName() == java.lang.String[].class
size(this.parser.operand.list[]) one of { 0, 3 }
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) one of { 8, 11 }
size(this.help.optionList[]) one of { 8, 11 }
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 11 }
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5 }
size(this.pattern.nonOptionList[]) one of { 0, 5 }
size(this.pattern.targetOperands[]) one of { 0, 5 }
size(this.optionList[]) one of { 8, 11 }
size(this.nonOptionList[]) one of { 0, 5 }
size(this.targetOperands[]) one of { 0, 5 }
===========================================================================
com.fidelis.argface.ArgStandard.parse(java.lang.String[]):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(this.reflect.object)
this.reflect.object == orig(this.common.reflect.object)
this.reflect.object.getClass().getName() == orig(this.reflect.object.getClass().getName())
this.reflect.object.getClass().getName() == orig(this.common.reflect.object.getClass().getName())
this.reflect.objectClass == orig(this.reflect.objectClass)
this.reflect.objectClass == orig(this.common.reflect.objectClass)
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.operandSuffix.toString == orig(this.common.finder.operandSuffix.toString)
this.common.finder.optionSuffix == this.optionSuffix
this.common.finder.optionSuffix.toString == orig(this.common.finder.optionSuffix.toString)
this.parser == orig(this.parser)
this.parser.source == orig(this.parser.source)
this.parser.source.getClass().getName() == orig(this.parser.source.getClass().getName())
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.programName.toString == orig(this.parser.programName.toString)
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand == orig(this.parser.operand)
this.parser.operand.type == orig(this.parser.operand.type)
this.parser.operand.name == orig(this.parser.operand.name)
this.parser.operand.name.toString == orig(this.parser.operand.name.toString)
this.parser.operand.fieldName == orig(this.parser.operand.fieldName)
this.parser.operand.fieldName.toString == orig(this.parser.operand.fieldName.toString)
this.parser.operand.optional == orig(this.parser.operand.optional)
this.parser.operand.setter == orig(this.parser.operand.setter)
this.parser.operand.field == orig(this.parser.operand.field)
this.parser.operand.repeat == orig(this.parser.operand.repeat)
this.parser.operand.repeatList == orig(this.parser.operand.repeatList)
this.parser.operand.list == orig(this.parser.operand.list)
this.parser.option == orig(this.parser.option)
this.parser.option.spec == orig(this.parser.option.spec)
this.parser.option.name == orig(this.parser.option.name)
this.parser.option.name.toString == orig(this.parser.option.name.toString)
this.parser.option.altName == orig(this.parser.option.altName)
this.parser.option.altName.toString == orig(this.parser.option.altName.toString)
this.parser.option.fieldName == orig(this.parser.option.fieldName)
this.parser.option.fieldName.toString == orig(this.parser.option.fieldName.toString)
this.parser.option.field == orig(this.parser.option.field)
this.parser.option.setter == orig(this.parser.option.setter)
this.parser.option.has == orig(this.parser.option.has)
this.parser.option.count == orig(this.parser.option.count)
this.parser.option.creation == orig(this.parser.option.creation)
this.parser.option.argName == orig(this.parser.option.argName)
this.parser.option.argFieldName == orig(this.parser.option.argFieldName)
this.parser.option.argField == orig(this.parser.option.argField)
this.parser.option.argSetter == orig(this.parser.option.argSetter)
this.parser.option.argValue == orig(this.parser.option.argValue)
this.parser.option.argOptional == orig(this.parser.option.argOptional)
this.parser.option.argRepeat == orig(this.parser.option.argRepeat)
this.parser.option.argSet == orig(this.parser.option.argSet)
this.parser.option.repeat == orig(this.parser.option.repeat)
this.parser.option.repeatList == orig(this.parser.option.repeatList)
this.parser.option.list == orig(this.parser.option.list)
this.parser.option.help == orig(this.parser.option.help)
this.parser.option.help.toString == orig(this.parser.option.help.toString)
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.varList[] == orig(this.parser.varList[])
this.parser.litList == this.litList
this.parser.litList[] == orig(this.parser.litList[])
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.usageText.toString == orig(this.help.usageText.toString)
this.help.versionText == this.versionText
this.help.versionText.toString == orig(this.help.versionText.toString)
this.help.aboutText == this.aboutText
this.help.aboutText.toString == orig(this.help.aboutText.toString)
this.help.helpText.toString == orig(this.help.helpText.toString)
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.operand.list.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
this.util.programName == orig(this.util.programName)
this.util.programName.toString == orig(this.util.programName.toString)
this.util.operandSuffix.toString == orig(this.util.operandSuffix.toString)
this.util.optionSuffix.toString == orig(this.util.optionSuffix.toString)
this.pattern == orig(this.pattern)
this.pattern.argList == this.argList
this.pattern.patternWatch == this.patternWatch
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.targetOperands == this.targetOperands
this.programName == orig(this.parser.programName)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText.toString == orig(this.versionText.toString)
this.aboutText.toString == orig(this.aboutText.toString)
this.helpText.toString == orig(this.helpText.toString)
this.optionSuffix == orig(this.common.finder.optionSuffix)
this.optionSuffix == orig(this.util.optionSuffix)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
this.operandSuffix == orig(this.common.finder.operandSuffix)
this.operandSuffix == orig(this.util.operandSuffix)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.varList == orig(this.parser.varList)
this.varList == orig(this.varList)
this.varList[] == orig(this.varList[])
this.litList == orig(this.parser.litList)
this.litList == orig(this.litList)
this.litList[] == orig(this.litList[])
this.optionList == orig(this.parser.optionList)
this.optionList == orig(this.help.optionList)
this.optionList == orig(this.optionList)
this.argList == orig(this.parser.argList)
this.argList == orig(this.help.argList)
this.argList == orig(this.argList)
this.argList.home == orig(this.parser.argList.home)
this.argList.home == orig(this.help.argList.home)
this.argList.home == orig(this.pattern.argList.home)
this.argList.home == orig(this.argList.home)
this.argList.home.south == orig(this.argList.home.south)
this.argList.home.east == orig(this.argList.home.east)
this.argList.home.entry == orig(this.argList.home.entry)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.argList.home.entry.getClass().getName() == orig(this.pattern.failBase.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.home.entry.getClass().getName())
this.argList.home.entry.getClass().getName() == orig(this.argList.curr.entry.getClass().getName())
this.argList.home.optional == orig(this.argList.home.optional)
this.argList.home.repeat == orig(this.argList.home.repeat)
this.argList.home.spec == orig(this.argList.home.spec)
this.argList.curr.optional == orig(this.argList.curr.optional)
this.argList.curr.spec == orig(this.argList.curr.spec)
this.letters == orig(this.letters)
this.letters.toString == orig(this.letters.toString)
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.targetOperands == orig(this.pattern.targetOperands)
this.patternWatch == orig(this.patternWatch)
arg0[] == orig(arg0[])
return == orig(size(arg0[]))
this.reflect.object has only one value
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 11
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 11
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText has only one value
com.fidelis.argface.ArgUtil.base.aboutText has only one value
com.fidelis.argface.ArgUtil.base.helpText has only one value
com.fidelis.argface.ArgUtil.base.suppressHelp has only one value
com.fidelis.argface.ArgUtil.base.sortOptions has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 11
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList has only one value
com.fidelis.argface.ArgUtil.base.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.targetOptions has only one value
com.fidelis.argface.ArgUtil.base.patternWatch == true
com.fidelis.argface.ArgUtil.base.preParseDone == true
this.util.programName has only one value
this.programName has only one value
this.usageText has only one value
this.versionText has only one value
this.aboutText has only one value
this.helpText has only one value
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp has only one value
this.sortOptions has only one value
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 11
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList has only one value
this.targetOperands has only one value
this.targetOptions has only one value
this.patternWatch == true
this.preParseDone == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 11
size(this.help.optionList[]) == 11
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 11
size(this.optionList[]) == 11
orig(this.pattern.failBase.entry.getClass().getName()) in this.parser.varList[].getClass().getName()
orig(this.pattern.failBase.entry.getClass().getName()) in this.parser.litList[].getClass().getName()
orig(this.pattern.failBase.entry.getClass().getName()) in com.fidelis.argface.ArgUtil.base.varList[].getClass().getName()
orig(this.pattern.failBase.entry.getClass().getName()) in com.fidelis.argface.ArgUtil.base.litList[].getClass().getName()
orig(this.pattern.failBase.entry.getClass().getName()) in com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName()
orig(this.pattern.failBase.entry.getClass().getName()) in this.pattern.targetOperands[].getClass().getName()
orig(this.pattern.failBase.entry.getClass().getName()) in this.varList[].getClass().getName()
orig(this.pattern.failBase.entry.getClass().getName()) in this.litList[].getClass().getName()
orig(this.pattern.failBase.entry.getClass().getName()) in this.targetOperands[].getClass().getName()
size(this.parser.operand.list[])-1 % orig(size(this.parser.operand.list[]))-1 == 0
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) % orig(size(com.fidelis.argface.ArgUtil.base.targetOperands[]))-1 == 0
size(this.pattern.targetOperands[]) % orig(size(this.pattern.targetOperands[]))-1 == 0
size(this.targetOperands[]) % orig(size(this.targetOperands[]))-1 == 0
===========================================================================
com.fidelis.argface.ArgStandard.parseUsage(java.lang.Object):::ENTER
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser.programName == this.programName
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
this.util.programName == this.programName
this.pattern.argList == this.argList
this.pattern.patternWatch == this.patternWatch
this.pattern.patternMin == this.pattern.patternMax
this.versionText == this.aboutText
this.versionText == this.helpText
this.suppressHelp == this.posixFormat
this.reflect.object == null
this.reflect.objectClass == null
this.parser.source == null
this.parser.operand == null
this.parser.option == null
this.parser.varList[] == []
this.parser.varList[].getClass().getName() == []
this.parser.litList[] == []
this.parser.litList[].getClass().getName() == []
this.parser.optionList[] == []
this.parser.optionList[].getClass().getName() == []
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName == null
this.usageText has only one value
this.versionText == null
this.optionSuffix == null
this.operandSuffix == null
this.suppressHelp == null
this.sortOptions == null
this.varList == null
this.litList == null
this.optionList == null
this.argList == null
this.letters == null
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
arg0 has only one value
arg0.getClass().getName() == com.fidelis.argface.ArgSample.class
===========================================================================
com.fidelis.argface.ArgStandard.parseUsage(java.lang.Object):::EXIT
this.reflect == orig(this.reflect)
this.reflect == orig(this.common.reflect)
this.reflect == orig(this.common.finder.reflect)
this.reflect.object == orig(arg0)
this.reflect.object.getClass().getName() == orig(arg0.getClass().getName())
this.reflect.privateAccess == orig(this.reflect.privateAccess)
this.reflect.privateAccess == orig(this.common.reflect.privateAccess)
this.common == orig(this.common)
this.common.reflect.object == orig(arg0)
this.common.reflect.object.getClass().getName() == orig(arg0.getClass().getName())
this.common.finder == orig(this.common.finder)
this.common.finder.operandSuffix == this.operandSuffix
this.common.finder.optionSuffix == this.optionSuffix
this.parser == orig(this.parser)
this.parser.delimiters == orig(this.parser.delimiters)
this.parser.delimiters.toString == orig(this.parser.delimiters.toString)
this.parser.programName == this.programName
this.parser.optionalDepth == orig(this.parser.optionalDepth)
this.parser.optionDefForm == orig(this.parser.optionDefForm)
this.parser.exor == orig(this.parser.exor)
this.parser.newOption == orig(this.parser.newOption)
this.parser.specOptions == orig(this.parser.specOptions)
this.parser.operand.value == orig(this.programName)
this.parser.operand.count == this.pattern.patternMin
this.parser.listStack == orig(this.parser.listStack)
this.parser.listStack.getClass().getName() == orig(this.parser.listStack.getClass().getName())
this.parser.listStack.getClass().getName() == orig(this.pattern.listStack.getClass().getName())
this.parser.varList == this.varList
this.parser.litList == this.litList
this.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.parser.optionList == this.optionList
this.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help == orig(this.help)
this.help.argList == this.argList
this.help.optionList == this.optionList
this.help.suppressHelp == orig(this.help.suppressHelp)
this.help.usageText == orig(this.help.usageText)
this.help.versionText == this.versionText
this.help.aboutText == this.versionText
this.help.helpText == this.versionText
this.help.problemUsage == orig(this.help.problemUsage)
this.help.problemUsage[] == orig(this.help.problemUsage[])
this.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
this.help.problemText == orig(this.help.problemText)
this.help.problemText[] == orig(this.help.problemText[])
this.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.instance == orig(this.common.finder.util)
com.fidelis.argface.ArgUtil.instance == orig(this.util)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == this.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(this.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
this.pattern == orig(this.pattern)
this.pattern.argList == orig(this.parser.argList)
this.pattern.argList == orig(this.help.argList)
this.pattern.argList == orig(this.pattern.argList)
this.pattern.argList == orig(this.argList)
this.pattern.patternWatch == this.patternWatch
this.pattern.help == orig(this.pattern.help)
this.pattern.listStack == orig(this.pattern.listStack)
this.pattern.patternList == orig(this.pattern.patternList)
this.pattern.patternList[] == orig(this.pattern.patternList[])
this.pattern.saveList == orig(this.pattern.saveList)
this.pattern.saveList[] == orig(this.pattern.saveList[])
this.pattern.prevIndex == orig(this.pattern.prevIndex)
this.pattern.failBase == this.argList.curr.south
this.pattern.failBase == orig(this.pattern.failBase)
this.pattern.failNode == orig(this.pattern.failNode)
this.pattern.lastBase == orig(this.pattern.lastBase)
this.pattern.lastFail == orig(this.pattern.lastFail)
this.pattern.patternMin == this.pattern.patternMax
this.pattern.patternMin == orig(this.pattern.patternMin)
this.pattern.patternMin == orig(this.pattern.patternMax)
this.pattern.targetOperands == orig(this.pattern.targetOperands)
this.pattern.targetOperands[] == orig(this.pattern.targetOperands[])
this.usageText == orig(this.usageText)
this.usageText.toString == orig(this.usageText.toString)
this.versionText == this.aboutText
this.versionText == this.helpText
this.versionText == orig(this.help.versionText)
this.versionText == orig(this.help.aboutText)
this.versionText == orig(this.help.helpText)
this.versionText == orig(this.versionText)
this.versionText == orig(this.aboutText)
this.versionText == orig(this.helpText)
this.allowOverwrite == orig(this.allowOverwrite)
this.suppressHelp == this.posixFormat
this.suppressHelp == orig(this.suppressHelp)
this.suppressHelp == orig(this.posixFormat)
this.sortOptions == orig(this.sortOptions)
this.varList == orig(this.parser.varList)
this.litList == orig(this.parser.litList)
this.optionList == orig(this.parser.optionList)
this.argList.home.entry.getClass().getName() == this.argList.curr.entry.getClass().getName()
this.helpOption == orig(this.helpOption)
this.versionOption == orig(this.versionOption)
this.aboutOption == orig(this.aboutOption)
this.nonOptionList == orig(this.pattern.nonOptionList)
this.nonOptionList == orig(this.nonOptionList)
this.targetOperands == orig(this.targetOperands)
this.targetOptions == orig(this.targetOptions)
this.patternWatch == orig(this.pattern.patternWatch)
this.patternWatch == orig(this.patternWatch)
this.preParseDone == orig(this.preParseDone)
this.patternMatch == orig(this.pattern.patternMatch)
this.patternMatch == orig(this.patternMatch)
this.reflect.objectClass has only one value
this.parser.source has only one value
this.parser.operand has only one value
this.parser.operand.fieldName has only one value
this.parser.operand.setter has only one value
this.parser.operand.list has only one value
this.parser.operand.list[] == []
this.parser.operand.list[].getClass().getName() == []
this.parser.operand.has == false
this.parser.option has only one value
this.parser.option.fieldName has only one value
this.parser.option.setter has only one value
this.parser.varList[] contains no nulls and has only one value, of length 3
this.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.litList[] contains no nulls and has only one value, of length 8
this.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
this.parser.optionList[] contains no nulls and has only one value, of length 8
this.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.optionList[] contains no nulls and has only one value, of length 8
this.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.help.usageText == null
this.help.problemUsage[] == []
this.help.problemUsage[].getClass().getName() == []
this.help.problemText[] == []
this.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.letters.toString == "xyzeabcd"
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
this.util.programName has only one value
this.pattern.argList == null
this.pattern.saveList[] == []
this.pattern.saveList[].getClass().getName() == []
this.pattern.prevIndex == 0
this.pattern.failBase == null
this.pattern.patternMin == 0
this.pattern.targetOperands[] == []
this.pattern.targetOperands[].getClass().getName() == []
this.programName has only one value
this.usageText has only one value
this.versionText == null
this.optionSuffix has only one value
this.operandSuffix has only one value
this.suppressHelp == null
this.sortOptions == null
this.varList has only one value
this.litList has only one value
this.optionList has only one value
this.optionList[] contains no nulls and has only one value, of length 8
this.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.argList has only one value
this.argList.curr has only one value
this.argList.curr.east has only one value
this.argList.curr.entry has only one value
this.argList.curr.repeat == false
this.letters has only one value
this.letters.toString == "xyzeabcd"
this.nonOptionList == null
this.targetOperands == null
this.targetOptions == null
this.patternWatch == false
this.preParseDone == false
this.patternMatch == null
return == true
size(this.parser.varList[]) == 3
size(this.parser.litList[]) == 8
size(this.parser.optionList[]) == 8
size(this.help.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(this.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgStandard.parseUsage(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
com.fidelis.argface.ArgUtil:::CLASS
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.failNode == com.fidelis.argface.ArgUtil.base.pattern.lastBase
com.fidelis.argface.ArgUtil.base.pattern.failNode == com.fidelis.argface.ArgUtil.base.pattern.lastFail
com.fidelis.argface.ArgUtil.base.pattern.lastBase == com.fidelis.argface.ArgUtil.base.pattern.lastFail
com.fidelis.argface.ArgUtil.instance has only one value
com.fidelis.argface.ArgUtil.instance != null
com.fidelis.argface.ArgUtil.base.getClass().getName() == com.fidelis.argface.ArgStandard.class
com.fidelis.argface.ArgUtil.instance.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.parser has only one value
com.fidelis.argface.ArgUtil.base.parser != null
com.fidelis.argface.ArgUtil.base.help has only one value
com.fidelis.argface.ArgUtil.base.help != null
com.fidelis.argface.ArgUtil.base.util has only one value
com.fidelis.argface.ArgUtil.base.util != null
com.fidelis.argface.ArgUtil.base.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.base.usageText.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
com.fidelis.argface.ArgUtil.base.versionText.toString == "ArgSample version 1.0.0"
com.fidelis.argface.ArgUtil.base.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
com.fidelis.argface.ArgUtil.base.helpText.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.base.allowOverwrite == null
com.fidelis.argface.ArgUtil.base.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.varList[] elements != null
com.fidelis.argface.ArgUtil.base.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.litList[] elements != null
com.fidelis.argface.ArgUtil.base.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.optionList[] elements != null
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.helpOption == false
com.fidelis.argface.ArgUtil.base.versionOption == false
com.fidelis.argface.ArgUtil.base.aboutOption == false
com.fidelis.argface.ArgUtil.base.nonOptionList[] elements != null
com.fidelis.argface.ArgUtil.base.nonOptionList[].getClass().getName() elements == java.lang.String.class
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.targetOperands[] elements != null
com.fidelis.argface.ArgUtil.base.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.targetOptions[] elements != null
com.fidelis.argface.ArgUtil.base.targetOptions[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() == com.fidelis.argface.TokenString.class
com.fidelis.argface.ArgUtil.base.parser.delimiters has only one value
com.fidelis.argface.ArgUtil.base.parser.delimiters != null
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == " \t\n'-+|[]<>()=:,/"
com.fidelis.argface.ArgUtil.base.parser.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == 0
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == false
com.fidelis.argface.ArgUtil.base.parser.exor == false
com.fidelis.argface.ArgUtil.base.parser.newOption == false
com.fidelis.argface.ArgUtil.base.parser.specOptions == false
com.fidelis.argface.ArgUtil.base.parser.listStack has only one value
com.fidelis.argface.ArgUtil.base.parser.listStack != null
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == java.util.ArrayDeque.class
com.fidelis.argface.ArgUtil.base.parser.varList has only one value
com.fidelis.argface.ArgUtil.base.parser.varList != null
com.fidelis.argface.ArgUtil.base.parser.varList[] elements != null
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.parser.litList has only one value
com.fidelis.argface.ArgUtil.base.parser.litList != null
com.fidelis.argface.ArgUtil.base.parser.litList[] elements != null
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.parser.optionList has only one value
com.fidelis.argface.ArgUtil.base.parser.optionList != null
com.fidelis.argface.ArgUtil.base.parser.optionList[] elements != null
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.help.optionList[] elements != null
com.fidelis.argface.ArgUtil.base.help.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.help.suppressHelp == false
com.fidelis.argface.ArgUtil.base.help.usageText.toString == "Usage:\n  ArgSample set [-x|--extend | -y|--yield | -z|--sleep] [-e] [[upper | lower |\n            any] <pattern>] <other> \n  ArgSample (match [upper | lower | any] <other>) | (ending <file>) | (<other>\n            match <pattern>) [set | clear] \n  ArgSample [-a|--after <lines>] [-b|--before <lines>] [-c] [-d] [-e] match |\n            starting | ending | <other> <pattern> <file>... \n  ArgSample -h|--help | -v|--version | --about \n"
com.fidelis.argface.ArgUtil.base.help.versionText.toString == "ArgSample version 1.0.0"
com.fidelis.argface.ArgUtil.base.help.aboutText.toString == "ArgSample version 1.0.0\n  Developed to demonstrate the \"ArgFace\" Command Line Interface.\n  2014-04-23\n  Leo Hinterlang -- leohinterlang@gmail.com\n  Fidelis Software Technologies, Butler, PA\n"
com.fidelis.argface.ArgUtil.base.help.helpText.toString == "Demonstrates the \"ArgFace\" command line interface.\nAll output is based on the command line arguments.\nNo files were harmed during the running of this program.\n"
com.fidelis.argface.ArgUtil.base.help.problemUsage has only one value
com.fidelis.argface.ArgUtil.base.help.problemUsage != null
com.fidelis.argface.ArgUtil.base.help.problemUsage[] elements != null
com.fidelis.argface.ArgUtil.base.help.problemUsage[].getClass().getName() elements == com.fidelis.argface.ArgNode.class
com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.help.problemText has only one value
com.fidelis.argface.ArgUtil.base.help.problemText != null
com.fidelis.argface.ArgUtil.base.help.problemText[] elements != null
com.fidelis.argface.ArgUtil.base.help.problemText[].getClass().getName() elements == java.lang.String.class
com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.util.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.pattern.nonOptionList[] elements != null
com.fidelis.argface.ArgUtil.base.pattern.nonOptionList[].getClass().getName() elements == java.lang.String.class
com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.pattern.patternMatch.toString one of { "<other> <pattern> <file>...", "ending <pattern> <file>..." }
com.fidelis.argface.ArgUtil.base.pattern.help == null
com.fidelis.argface.ArgUtil.base.pattern.listStack has only one value
com.fidelis.argface.ArgUtil.base.pattern.listStack != null
com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName() == java.util.ArrayDeque.class
com.fidelis.argface.ArgUtil.base.pattern.patternList has only one value
com.fidelis.argface.ArgUtil.base.pattern.patternList != null
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == []
com.fidelis.argface.ArgUtil.base.pattern.patternList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.pattern.saveList has only one value
com.fidelis.argface.ArgUtil.base.pattern.saveList != null
com.fidelis.argface.ArgUtil.base.pattern.saveList[] elements != null
com.fidelis.argface.ArgUtil.base.pattern.saveList[].getClass().getName() elements == com.fidelis.argface.ArgNode.class
com.fidelis.argface.ArgUtil.base.pattern.saveList[].getClass().getName() one of { [], [com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode, com.fidelis.argface.ArgNode] }
com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.pattern.prevIndex one of { 0, 3, 4 }
com.fidelis.argface.ArgUtil.base.pattern.failNode == null
com.fidelis.argface.ArgUtil.base.pattern.lastBase == null
com.fidelis.argface.ArgUtil.base.pattern.lastFail == null
com.fidelis.argface.ArgUtil.base.pattern.patternMin one of { 0, 3 }
com.fidelis.argface.ArgUtil.base.pattern.patternMax one of { 0, 999 }
com.fidelis.argface.ArgUtil.base.pattern.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.pattern.targetOperands != null
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] elements != null
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.argList.home has only one value
com.fidelis.argface.ArgUtil.base.argList.home != null
com.fidelis.argface.ArgUtil.base.argList.curr != null
size(com.fidelis.argface.ArgUtil.base.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.targetOperands[]) one of { 0, 5, 16 }
size(com.fidelis.argface.ArgUtil.base.targetOptions[]) one of { 0, 1, 2 }
size(com.fidelis.argface.ArgUtil.base.parser.varList[]) one of { 0, 3 }
size(com.fidelis.argface.ArgUtil.base.parser.varList[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.parser.litList[]) one of { 0, 8 }
size(com.fidelis.argface.ArgUtil.base.parser.litList[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.parser.optionList[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.help.problemUsage[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.help.problemUsage[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.help.problemText[]) one of { 0, 2, 3 }
size(com.fidelis.argface.ArgUtil.base.help.problemText[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList[]) one of { 0, 5, 11 }
size(com.fidelis.argface.ArgUtil.base.pattern.saveList[]) one of { 0, 4 }
size(com.fidelis.argface.ArgUtil.base.pattern.saveList[])-1 != 0
size(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[]) one of { 0, 5, 16 }
size(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[])-1 != 0
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
===========================================================================
com.fidelis.argface.ArgUtil:::OBJECT
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.help.argList == com.fidelis.argface.ArgUtil.base.pattern.argList
com.fidelis.argface.ArgUtil.base.help.optionList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.help.usageText == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.help.usageText == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.help.usageText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.help.usageText == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.failNode
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastBase
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastFail
this has only one value
com.fidelis.argface.ArgUtil.base.versionText == null
com.fidelis.argface.ArgUtil.base.aboutText == null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.suppressHelp == null
com.fidelis.argface.ArgUtil.base.posixFormat == null
com.fidelis.argface.ArgUtil.base.sortOptions == null
com.fidelis.argface.ArgUtil.base.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
com.fidelis.argface.ArgUtil.base.letters.toString == ""
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.targetOperands == null
com.fidelis.argface.ArgUtil.base.targetOptions == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.patternMatch == null
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() == com.fidelis.argface.TokenString.class
com.fidelis.argface.ArgUtil.base.parser.delimiters has only one value
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == " \t\n'-+|[]<>()=:,/"
com.fidelis.argface.ArgUtil.base.parser.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == 0
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == false
com.fidelis.argface.ArgUtil.base.parser.exor == false
com.fidelis.argface.ArgUtil.base.parser.newOption == false
com.fidelis.argface.ArgUtil.base.parser.specOptions == false
com.fidelis.argface.ArgUtil.base.parser.listStack has only one value
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == java.util.ArrayDeque.class
com.fidelis.argface.ArgUtil.base.parser.varList has only one value
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.parser.litList has only one value
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() elements == com.fidelis.argface.ArgOperand.class
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand] }
com.fidelis.argface.ArgUtil.base.parser.optionList has only one value
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() elements == com.fidelis.argface.ArgOption.class
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() one of { [], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.help.argList == null
com.fidelis.argface.ArgUtil.base.help.optionList == null
com.fidelis.argface.ArgUtil.base.help.suppressHelp == false
com.fidelis.argface.ArgUtil.base.help.usageText == null
com.fidelis.argface.ArgUtil.base.help.problemUsage has only one value
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == []
com.fidelis.argface.ArgUtil.base.help.problemUsage[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.help.problemText has only one value
com.fidelis.argface.ArgUtil.base.help.problemText[] == []
com.fidelis.argface.ArgUtil.base.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.util.programName.toString == "ArgSample"
com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString == "Operand"
com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString == "Option"
com.fidelis.argface.ArgUtil.base.pattern.argList == null
com.fidelis.argface.ArgUtil.base.pattern.nonOptionList == null
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == false
com.fidelis.argface.ArgUtil.base.pattern.patternMatch == null
com.fidelis.argface.ArgUtil.base.pattern.help == null
com.fidelis.argface.ArgUtil.base.pattern.listStack has only one value
com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName() == java.util.ArrayDeque.class
com.fidelis.argface.ArgUtil.base.pattern.patternList has only one value
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == []
com.fidelis.argface.ArgUtil.base.pattern.patternList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName() == java.util.ArrayList.class
com.fidelis.argface.ArgUtil.base.pattern.saveList has only one value
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == []
com.fidelis.argface.ArgUtil.base.pattern.saveList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == 0
com.fidelis.argface.ArgUtil.base.pattern.failBase == null
com.fidelis.argface.ArgUtil.base.pattern.patternMin == 0
com.fidelis.argface.ArgUtil.base.pattern.patternMax == 0
com.fidelis.argface.ArgUtil.base.pattern.targetOperands has only one value
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.argList.home has only one value
com.fidelis.argface.ArgUtil.base.argList.curr has only one value
this.programName.toString == "ArgSample"
this.operandSuffix.toString == "Operand"
this.optionSuffix.toString == "Option"
size(com.fidelis.argface.ArgUtil.base.optionList[]) == 8
size(com.fidelis.argface.ArgUtil.base.parser.varList[]) one of { 0, 3 }
size(com.fidelis.argface.ArgUtil.base.parser.litList[]) one of { 0, 8 }
size(com.fidelis.argface.ArgUtil.base.parser.optionList[]) one of { 0, 8 }
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName() != com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName()
===========================================================================
com.fidelis.argface.ArgUtil.ArgUtil():::EXIT
this.programName == null
this.operandSuffix == null
this.optionSuffix == null
===========================================================================
com.fidelis.argface.ArgUtil.camelCase(java.lang.String):::ENTER
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.parser.varList
com.fidelis.argface.ArgUtil.base.litList == com.fidelis.argface.ArgUtil.base.parser.litList
com.fidelis.argface.ArgUtil.base.optionList == com.fidelis.argface.ArgUtil.base.parser.optionList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.failNode
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastBase
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastFail
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.pattern != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.parser.source has only one value
com.fidelis.argface.ArgUtil.base.parser.source != null
com.fidelis.argface.ArgUtil.base.parser.operand has only one value
com.fidelis.argface.ArgUtil.base.parser.operand != null
com.fidelis.argface.ArgUtil.base.parser.option has only one value
com.fidelis.argface.ArgUtil.base.parser.option != null
com.fidelis.argface.ArgUtil.base.parser.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == []
com.fidelis.argface.ArgUtil.base.help.problemUsage[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.help.problemText[] == []
com.fidelis.argface.ArgUtil.base.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.argList == null
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == false
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == []
com.fidelis.argface.ArgUtil.base.pattern.saveList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == 0
com.fidelis.argface.ArgUtil.base.pattern.failBase == null
com.fidelis.argface.ArgUtil.base.pattern.patternMin == 0
com.fidelis.argface.ArgUtil.base.pattern.patternMax == 0
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[].getClass().getName() == []
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 9, 10 }
size(com.fidelis.argface.ArgUtil.base.parser.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.parser.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.parser.optionList[]) one of { 8, 9, 10 }
size(com.fidelis.argface.ArgUtil.base.help.optionList[]) one of { 8, 9, 10 }
===========================================================================
com.fidelis.argface.ArgUtil.camelCase(java.lang.String):::EXIT145
com.fidelis.argface.ArgUtil.base.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.letters.toString one of { "xyzeabc", "xyzeabcd" }
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() one of { [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption], [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption] }
com.fidelis.argface.ArgUtil.base.help.optionList[] contains no nulls and has only one value, of length 10
com.fidelis.argface.ArgUtil.base.help.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
return == null
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 10 }
size(com.fidelis.argface.ArgUtil.base.parser.optionList[]) one of { 8, 10 }
size(com.fidelis.argface.ArgUtil.base.help.optionList[]) == 10
===========================================================================
com.fidelis.argface.ArgUtil.camelCase(java.lang.String):::EXIT149
return != null
===========================================================================
com.fidelis.argface.ArgUtil.camelCase(java.lang.String):::EXIT
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.util.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.parser.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.help.usageText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.help.versionText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.help.aboutText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.help.helpText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.parser.varList
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.parser.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == com.fidelis.argface.ArgUtil.base.parser.litList
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.parser.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == com.fidelis.argface.ArgUtil.base.parser.optionList
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.parser.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.parser.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.parser.source == orig(com.fidelis.argface.ArgUtil.base.parser.source)
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.delimiters == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters)
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters.toString)
com.fidelis.argface.ArgUtil.base.parser.programName.toString == orig(com.fidelis.argface.ArgUtil.base.parser.programName.toString)
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == orig(com.fidelis.argface.ArgUtil.base.parser.optionalDepth)
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == orig(com.fidelis.argface.ArgUtil.base.parser.optionDefForm)
com.fidelis.argface.ArgUtil.base.parser.exor == orig(com.fidelis.argface.ArgUtil.base.parser.exor)
com.fidelis.argface.ArgUtil.base.parser.newOption == orig(com.fidelis.argface.ArgUtil.base.parser.newOption)
com.fidelis.argface.ArgUtil.base.parser.specOptions == orig(com.fidelis.argface.ArgUtil.base.parser.specOptions)
com.fidelis.argface.ArgUtil.base.parser.operand == orig(com.fidelis.argface.ArgUtil.base.parser.operand)
com.fidelis.argface.ArgUtil.base.parser.option == orig(com.fidelis.argface.ArgUtil.base.parser.option)
com.fidelis.argface.ArgUtil.base.parser.listStack == orig(com.fidelis.argface.ArgUtil.base.parser.listStack)
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList[] == orig(com.fidelis.argface.ArgUtil.base.parser.varList[])
com.fidelis.argface.ArgUtil.base.parser.litList[] == orig(com.fidelis.argface.ArgUtil.base.parser.litList[])
com.fidelis.argface.ArgUtil.base.parser.optionList[] == orig(com.fidelis.argface.ArgUtil.base.parser.optionList[])
com.fidelis.argface.ArgUtil.base.help.argList == orig(com.fidelis.argface.ArgUtil.base.help.argList)
com.fidelis.argface.ArgUtil.base.help.optionList == orig(com.fidelis.argface.ArgUtil.base.help.optionList)
com.fidelis.argface.ArgUtil.base.help.optionList[] == orig(com.fidelis.argface.ArgUtil.base.help.optionList[])
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.help.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.help.suppressHelp)
com.fidelis.argface.ArgUtil.base.help.problemUsage == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage)
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage[])
com.fidelis.argface.ArgUtil.base.help.problemText == orig(com.fidelis.argface.ArgUtil.base.help.problemText)
com.fidelis.argface.ArgUtil.base.help.problemText[] == orig(com.fidelis.argface.ArgUtil.base.help.problemText[])
com.fidelis.argface.ArgUtil.base.util.programName.toString == orig(com.fidelis.argface.ArgUtil.base.util.programName.toString)
com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.pattern.argList == orig(com.fidelis.argface.ArgUtil.base.pattern.argList)
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == orig(com.fidelis.argface.ArgUtil.base.pattern.patternWatch)
com.fidelis.argface.ArgUtil.base.pattern.help == orig(com.fidelis.argface.ArgUtil.base.pattern.help)
com.fidelis.argface.ArgUtil.base.pattern.listStack == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack)
com.fidelis.argface.ArgUtil.base.pattern.patternList == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList)
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList[])
com.fidelis.argface.ArgUtil.base.pattern.saveList == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList)
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList[])
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == orig(com.fidelis.argface.ArgUtil.base.pattern.prevIndex)
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.failNode
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastBase
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastFail
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failNode)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastFail)
com.fidelis.argface.ArgUtil.base.pattern.patternMin == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMin)
com.fidelis.argface.ArgUtil.base.pattern.patternMax == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMax)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[])
com.fidelis.argface.ArgUtil.base.argList.home == orig(com.fidelis.argface.ArgUtil.base.argList.home)
com.fidelis.argface.ArgUtil.base.argList.curr == orig(com.fidelis.argface.ArgUtil.base.argList.curr)
arg0.toString == orig(arg0.toString)
return == orig(arg0)
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix != null
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix != null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.pattern != null
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
com.fidelis.argface.ArgUtil.base.helpText == null
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.varList != null
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.litList != null
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.optionList != null
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.argList != null
com.fidelis.argface.ArgUtil.base.letters != null
com.fidelis.argface.ArgUtil.base.nonOptionList == null
com.fidelis.argface.ArgUtil.base.parser.source has only one value
com.fidelis.argface.ArgUtil.base.parser.source != null
com.fidelis.argface.ArgUtil.base.parser.operand has only one value
com.fidelis.argface.ArgUtil.base.parser.operand != null
com.fidelis.argface.ArgUtil.base.parser.option has only one value
com.fidelis.argface.ArgUtil.base.parser.option != null
com.fidelis.argface.ArgUtil.base.parser.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == []
com.fidelis.argface.ArgUtil.base.help.problemUsage[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.help.problemText[] == []
com.fidelis.argface.ArgUtil.base.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.argList == null
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == false
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == []
com.fidelis.argface.ArgUtil.base.pattern.saveList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == 0
com.fidelis.argface.ArgUtil.base.pattern.failBase == null
com.fidelis.argface.ArgUtil.base.pattern.patternMin == 0
com.fidelis.argface.ArgUtil.base.pattern.patternMax == 0
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[].getClass().getName() == []
size(com.fidelis.argface.ArgUtil.base.optionList[]) one of { 8, 9, 10 }
size(com.fidelis.argface.ArgUtil.base.parser.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.parser.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.parser.optionList[]) one of { 8, 9, 10 }
size(com.fidelis.argface.ArgUtil.base.help.optionList[]) one of { 8, 9, 10 }
===========================================================================
com.fidelis.argface.ArgUtil.camelCase(java.lang.String, java.lang.String):::ENTER
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.patternMatch == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.pattern != null
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
arg0 != null
arg1 != null
===========================================================================
com.fidelis.argface.ArgUtil.camelCase(java.lang.String, java.lang.String):::EXIT
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.util.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.versionText.toString)
com.fidelis.argface.ArgUtil.base.aboutText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.aboutText.toString)
com.fidelis.argface.ArgUtil.base.helpText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.helpText == orig(com.fidelis.argface.ArgUtil.base.help.helpText)
com.fidelis.argface.ArgUtil.base.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.helpText.toString)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.posixFormat == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.sortOptions == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.parser.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.nonOptionList[])
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.targetOptions.getClass().getName())
com.fidelis.argface.ArgUtil.base.nonOptionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.targetOperands == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.targetOperands[])
com.fidelis.argface.ArgUtil.base.targetOptions == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.targetOptions[] == orig(com.fidelis.argface.ArgUtil.base.targetOptions[])
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.patternMatch == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMatch)
com.fidelis.argface.ArgUtil.base.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.patternMatch.toString)
com.fidelis.argface.ArgUtil.base.parser.source == orig(com.fidelis.argface.ArgUtil.base.parser.source)
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.delimiters == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters)
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters.toString)
com.fidelis.argface.ArgUtil.base.parser.programName == orig(com.fidelis.argface.ArgUtil.base.parser.programName)
com.fidelis.argface.ArgUtil.base.parser.programName.toString == orig(com.fidelis.argface.ArgUtil.base.parser.programName.toString)
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == orig(com.fidelis.argface.ArgUtil.base.parser.optionalDepth)
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == orig(com.fidelis.argface.ArgUtil.base.parser.optionDefForm)
com.fidelis.argface.ArgUtil.base.parser.exor == orig(com.fidelis.argface.ArgUtil.base.parser.exor)
com.fidelis.argface.ArgUtil.base.parser.newOption == orig(com.fidelis.argface.ArgUtil.base.parser.newOption)
com.fidelis.argface.ArgUtil.base.parser.specOptions == orig(com.fidelis.argface.ArgUtil.base.parser.specOptions)
com.fidelis.argface.ArgUtil.base.parser.operand == orig(com.fidelis.argface.ArgUtil.base.parser.operand)
com.fidelis.argface.ArgUtil.base.parser.option == orig(com.fidelis.argface.ArgUtil.base.parser.option)
com.fidelis.argface.ArgUtil.base.parser.listStack == orig(com.fidelis.argface.ArgUtil.base.parser.listStack)
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList == orig(com.fidelis.argface.ArgUtil.base.parser.varList)
com.fidelis.argface.ArgUtil.base.parser.varList[] == orig(com.fidelis.argface.ArgUtil.base.parser.varList[])
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.litList == orig(com.fidelis.argface.ArgUtil.base.parser.litList)
com.fidelis.argface.ArgUtil.base.parser.litList[] == orig(com.fidelis.argface.ArgUtil.base.parser.litList[])
com.fidelis.argface.ArgUtil.base.parser.optionList == orig(com.fidelis.argface.ArgUtil.base.parser.optionList)
com.fidelis.argface.ArgUtil.base.parser.optionList[] == orig(com.fidelis.argface.ArgUtil.base.parser.optionList[])
com.fidelis.argface.ArgUtil.base.help.argList == orig(com.fidelis.argface.ArgUtil.base.help.argList)
com.fidelis.argface.ArgUtil.base.help.optionList == orig(com.fidelis.argface.ArgUtil.base.help.optionList)
com.fidelis.argface.ArgUtil.base.help.optionList[] == orig(com.fidelis.argface.ArgUtil.base.help.optionList[])
com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.help.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.help.suppressHelp)
com.fidelis.argface.ArgUtil.base.help.usageText == orig(com.fidelis.argface.ArgUtil.base.help.usageText)
com.fidelis.argface.ArgUtil.base.help.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.help.usageText.toString)
com.fidelis.argface.ArgUtil.base.help.versionText == orig(com.fidelis.argface.ArgUtil.base.help.versionText)
com.fidelis.argface.ArgUtil.base.help.versionText.toString == orig(com.fidelis.argface.ArgUtil.base.help.versionText.toString)
com.fidelis.argface.ArgUtil.base.help.aboutText == orig(com.fidelis.argface.ArgUtil.base.help.aboutText)
com.fidelis.argface.ArgUtil.base.help.aboutText.toString == orig(com.fidelis.argface.ArgUtil.base.help.aboutText.toString)
com.fidelis.argface.ArgUtil.base.help.helpText.toString == orig(com.fidelis.argface.ArgUtil.base.help.helpText.toString)
com.fidelis.argface.ArgUtil.base.help.problemUsage == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage)
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage[])
com.fidelis.argface.ArgUtil.base.help.problemText == orig(com.fidelis.argface.ArgUtil.base.help.problemText)
com.fidelis.argface.ArgUtil.base.help.problemText[] == orig(com.fidelis.argface.ArgUtil.base.help.problemText[])
com.fidelis.argface.ArgUtil.base.util.programName.toString == orig(com.fidelis.argface.ArgUtil.base.util.programName.toString)
com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.pattern.argList == orig(com.fidelis.argface.ArgUtil.base.pattern.argList)
com.fidelis.argface.ArgUtil.base.pattern.nonOptionList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList[])
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == orig(com.fidelis.argface.ArgUtil.base.pattern.patternWatch)
com.fidelis.argface.ArgUtil.base.pattern.patternMatch.toString == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMatch.toString)
com.fidelis.argface.ArgUtil.base.pattern.help == orig(com.fidelis.argface.ArgUtil.base.pattern.help)
com.fidelis.argface.ArgUtil.base.pattern.listStack == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack)
com.fidelis.argface.ArgUtil.base.pattern.patternList == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList)
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList[])
com.fidelis.argface.ArgUtil.base.pattern.saveList == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList)
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList[])
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == orig(com.fidelis.argface.ArgUtil.base.pattern.prevIndex)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failBase)
com.fidelis.argface.ArgUtil.base.pattern.failNode == orig(com.fidelis.argface.ArgUtil.base.pattern.failNode)
com.fidelis.argface.ArgUtil.base.pattern.failNode == orig(com.fidelis.argface.ArgUtil.base.pattern.lastBase)
com.fidelis.argface.ArgUtil.base.pattern.failNode == orig(com.fidelis.argface.ArgUtil.base.pattern.lastFail)
com.fidelis.argface.ArgUtil.base.pattern.patternMin == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMin)
com.fidelis.argface.ArgUtil.base.pattern.patternMax == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMax)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[])
com.fidelis.argface.ArgUtil.base.argList.home == orig(com.fidelis.argface.ArgUtil.base.argList.home)
com.fidelis.argface.ArgUtil.base.argList.curr == orig(com.fidelis.argface.ArgUtil.base.argList.curr)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.base != null
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.programName != null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.pattern != null
com.fidelis.argface.ArgUtil.base.programName != null
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.usageText != null
return != null
===========================================================================
com.fidelis.argface.ArgUtil.getInstance():::ENTER
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.usageText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.help.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.pattern.argList
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.failNode
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastBase
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastFail
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.parser.source == null
com.fidelis.argface.ArgUtil.base.parser.operand == null
com.fidelis.argface.ArgUtil.base.parser.option == null
com.fidelis.argface.ArgUtil.base.parser.varList[] == []
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.litList[] == []
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.optionList[] == []
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == []
com.fidelis.argface.ArgUtil.base.help.problemUsage[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.help.problemText[] == []
com.fidelis.argface.ArgUtil.base.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == false
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == []
com.fidelis.argface.ArgUtil.base.pattern.saveList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == 0
com.fidelis.argface.ArgUtil.base.pattern.failBase == null
com.fidelis.argface.ArgUtil.base.pattern.patternMin == 0
com.fidelis.argface.ArgUtil.base.pattern.patternMax == 0
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[].getClass().getName() == []
===========================================================================
com.fidelis.argface.ArgUtil.getInstance():::EXIT
com.fidelis.argface.ArgUtil.instance == return
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.usageText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.parser.programName)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.help.usageText)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.help.versionText)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.help.aboutText)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.help.helpText)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.util.programName)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMatch)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.help.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList)
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.help.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.pattern.argList
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.parser.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.help.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.pattern.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.parser.source == orig(com.fidelis.argface.ArgUtil.base.parser.source)
com.fidelis.argface.ArgUtil.base.parser.delimiters == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters)
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters.toString)
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == orig(com.fidelis.argface.ArgUtil.base.parser.optionalDepth)
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == orig(com.fidelis.argface.ArgUtil.base.parser.optionDefForm)
com.fidelis.argface.ArgUtil.base.parser.exor == orig(com.fidelis.argface.ArgUtil.base.parser.exor)
com.fidelis.argface.ArgUtil.base.parser.newOption == orig(com.fidelis.argface.ArgUtil.base.parser.newOption)
com.fidelis.argface.ArgUtil.base.parser.specOptions == orig(com.fidelis.argface.ArgUtil.base.parser.specOptions)
com.fidelis.argface.ArgUtil.base.parser.operand == orig(com.fidelis.argface.ArgUtil.base.parser.operand)
com.fidelis.argface.ArgUtil.base.parser.option == orig(com.fidelis.argface.ArgUtil.base.parser.option)
com.fidelis.argface.ArgUtil.base.parser.listStack == orig(com.fidelis.argface.ArgUtil.base.parser.listStack)
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList == orig(com.fidelis.argface.ArgUtil.base.parser.varList)
com.fidelis.argface.ArgUtil.base.parser.varList[] == orig(com.fidelis.argface.ArgUtil.base.parser.varList[])
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.litList == orig(com.fidelis.argface.ArgUtil.base.parser.litList)
com.fidelis.argface.ArgUtil.base.parser.litList[] == orig(com.fidelis.argface.ArgUtil.base.parser.litList[])
com.fidelis.argface.ArgUtil.base.parser.optionList == orig(com.fidelis.argface.ArgUtil.base.parser.optionList)
com.fidelis.argface.ArgUtil.base.parser.optionList[] == orig(com.fidelis.argface.ArgUtil.base.parser.optionList[])
com.fidelis.argface.ArgUtil.base.help.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.help.suppressHelp)
com.fidelis.argface.ArgUtil.base.help.problemUsage == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage)
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage[])
com.fidelis.argface.ArgUtil.base.help.problemText == orig(com.fidelis.argface.ArgUtil.base.help.problemText)
com.fidelis.argface.ArgUtil.base.help.problemText[] == orig(com.fidelis.argface.ArgUtil.base.help.problemText[])
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == orig(com.fidelis.argface.ArgUtil.base.pattern.patternWatch)
com.fidelis.argface.ArgUtil.base.pattern.help == orig(com.fidelis.argface.ArgUtil.base.pattern.help)
com.fidelis.argface.ArgUtil.base.pattern.listStack == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack)
com.fidelis.argface.ArgUtil.base.pattern.patternList == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList)
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList[])
com.fidelis.argface.ArgUtil.base.pattern.saveList == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList)
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList[])
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == orig(com.fidelis.argface.ArgUtil.base.pattern.prevIndex)
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.failNode
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastBase
com.fidelis.argface.ArgUtil.base.pattern.failBase == com.fidelis.argface.ArgUtil.base.pattern.lastFail
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failNode)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastFail)
com.fidelis.argface.ArgUtil.base.pattern.patternMin == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMin)
com.fidelis.argface.ArgUtil.base.pattern.patternMax == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMax)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[])
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.programName == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.patternWatch == false
com.fidelis.argface.ArgUtil.base.preParseDone == false
com.fidelis.argface.ArgUtil.base.parser.source == null
com.fidelis.argface.ArgUtil.base.parser.operand == null
com.fidelis.argface.ArgUtil.base.parser.option == null
com.fidelis.argface.ArgUtil.base.parser.varList[] == []
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.litList[] == []
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.optionList[] == []
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == []
com.fidelis.argface.ArgUtil.base.help.problemUsage[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.help.problemText[] == []
com.fidelis.argface.ArgUtil.base.help.problemText[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == false
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == []
com.fidelis.argface.ArgUtil.base.pattern.saveList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == 0
com.fidelis.argface.ArgUtil.base.pattern.failBase == null
com.fidelis.argface.ArgUtil.base.pattern.patternMin == 0
com.fidelis.argface.ArgUtil.base.pattern.patternMax == 0
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == []
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[].getClass().getName() == []
return.programName == null
return.operandSuffix == null
return.optionSuffix == null
===========================================================================
com.fidelis.argface.ArgUtil.getOperandSuffix():::ENTER
this == com.fidelis.argface.ArgUtil.instance
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.parser.varList
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.litList == com.fidelis.argface.ArgUtil.base.parser.litList
com.fidelis.argface.ArgUtil.base.optionList == com.fidelis.argface.ArgUtil.base.parser.optionList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.parser.source has only one value
com.fidelis.argface.ArgUtil.base.parser.operand has only one value
com.fidelis.argface.ArgUtil.base.parser.option has only one value
com.fidelis.argface.ArgUtil.base.parser.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
size(com.fidelis.argface.ArgUtil.base.parser.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.parser.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.parser.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgUtil.getOperandSuffix():::EXIT
com.fidelis.argface.ArgUtil.instance == orig(this)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.util.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.parser.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.usageText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.parser.varList
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.parser.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == com.fidelis.argface.ArgUtil.base.parser.litList
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.parser.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == com.fidelis.argface.ArgUtil.base.parser.optionList
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.parser.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.parser.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.help.optionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.parser.source == orig(com.fidelis.argface.ArgUtil.base.parser.source)
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.delimiters == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters)
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters.toString)
com.fidelis.argface.ArgUtil.base.parser.programName.toString == orig(com.fidelis.argface.ArgUtil.base.parser.programName.toString)
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == orig(com.fidelis.argface.ArgUtil.base.parser.optionalDepth)
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == orig(com.fidelis.argface.ArgUtil.base.parser.optionDefForm)
com.fidelis.argface.ArgUtil.base.parser.exor == orig(com.fidelis.argface.ArgUtil.base.parser.exor)
com.fidelis.argface.ArgUtil.base.parser.newOption == orig(com.fidelis.argface.ArgUtil.base.parser.newOption)
com.fidelis.argface.ArgUtil.base.parser.specOptions == orig(com.fidelis.argface.ArgUtil.base.parser.specOptions)
com.fidelis.argface.ArgUtil.base.parser.operand == orig(com.fidelis.argface.ArgUtil.base.parser.operand)
com.fidelis.argface.ArgUtil.base.parser.option == orig(com.fidelis.argface.ArgUtil.base.parser.option)
com.fidelis.argface.ArgUtil.base.parser.listStack == orig(com.fidelis.argface.ArgUtil.base.parser.listStack)
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList[] == orig(com.fidelis.argface.ArgUtil.base.parser.varList[])
com.fidelis.argface.ArgUtil.base.parser.litList[] == orig(com.fidelis.argface.ArgUtil.base.parser.litList[])
com.fidelis.argface.ArgUtil.base.parser.optionList[] == orig(com.fidelis.argface.ArgUtil.base.parser.optionList[])
com.fidelis.argface.ArgUtil.base.help.argList == orig(com.fidelis.argface.ArgUtil.base.help.argList)
com.fidelis.argface.ArgUtil.base.help.argList == orig(com.fidelis.argface.ArgUtil.base.pattern.argList)
com.fidelis.argface.ArgUtil.base.help.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.help.suppressHelp)
com.fidelis.argface.ArgUtil.base.help.problemUsage == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage)
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage[])
com.fidelis.argface.ArgUtil.base.help.problemText == orig(com.fidelis.argface.ArgUtil.base.help.problemText)
com.fidelis.argface.ArgUtil.base.help.problemText[] == orig(com.fidelis.argface.ArgUtil.base.help.problemText[])
com.fidelis.argface.ArgUtil.base.util.programName.toString == orig(com.fidelis.argface.ArgUtil.base.util.programName.toString)
com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == orig(com.fidelis.argface.ArgUtil.base.pattern.patternWatch)
com.fidelis.argface.ArgUtil.base.pattern.help == orig(com.fidelis.argface.ArgUtil.base.pattern.help)
com.fidelis.argface.ArgUtil.base.pattern.listStack == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack)
com.fidelis.argface.ArgUtil.base.pattern.patternList == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList)
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList[])
com.fidelis.argface.ArgUtil.base.pattern.saveList == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList)
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList[])
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == orig(com.fidelis.argface.ArgUtil.base.pattern.prevIndex)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failNode)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastFail)
com.fidelis.argface.ArgUtil.base.pattern.patternMin == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMin)
com.fidelis.argface.ArgUtil.base.pattern.patternMax == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMax)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[])
com.fidelis.argface.ArgUtil.base.argList.home == orig(com.fidelis.argface.ArgUtil.base.argList.home)
com.fidelis.argface.ArgUtil.base.argList.curr == orig(com.fidelis.argface.ArgUtil.base.argList.curr)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.operandSuffix == return
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(this.optionSuffix)
this.optionSuffix.toString == orig(this.optionSuffix.toString)
return == orig(this.operandSuffix)
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.parser.source has only one value
com.fidelis.argface.ArgUtil.base.parser.operand has only one value
com.fidelis.argface.ArgUtil.base.parser.option has only one value
com.fidelis.argface.ArgUtil.base.parser.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.programName has only one value
this.optionSuffix has only one value
return has only one value
return.toString == "Operand"
size(com.fidelis.argface.ArgUtil.base.parser.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.parser.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.parser.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgUtil.getOptionSuffix():::ENTER
this == com.fidelis.argface.ArgUtil.instance
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.parser.varList
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.litList == com.fidelis.argface.ArgUtil.base.parser.litList
com.fidelis.argface.ArgUtil.base.optionList == com.fidelis.argface.ArgUtil.base.parser.optionList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.parser.source has only one value
com.fidelis.argface.ArgUtil.base.parser.operand has only one value
com.fidelis.argface.ArgUtil.base.parser.option has only one value
com.fidelis.argface.ArgUtil.base.parser.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
size(com.fidelis.argface.ArgUtil.base.parser.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.parser.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.parser.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgUtil.getOptionSuffix():::EXIT
com.fidelis.argface.ArgUtil.instance == orig(this)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.util.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.base.programName == orig(com.fidelis.argface.ArgUtil.base.parser.programName)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.usageText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.parser.varList
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.parser.varList)
com.fidelis.argface.ArgUtil.base.varList[] == orig(com.fidelis.argface.ArgUtil.base.varList[])
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.litList == com.fidelis.argface.ArgUtil.base.parser.litList
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.litList == orig(com.fidelis.argface.ArgUtil.base.parser.litList)
com.fidelis.argface.ArgUtil.base.litList[] == orig(com.fidelis.argface.ArgUtil.base.litList[])
com.fidelis.argface.ArgUtil.base.optionList == com.fidelis.argface.ArgUtil.base.parser.optionList
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.optionList == orig(com.fidelis.argface.ArgUtil.base.parser.optionList)
com.fidelis.argface.ArgUtil.base.optionList[] == orig(com.fidelis.argface.ArgUtil.base.optionList[])
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.parser.argList)
com.fidelis.argface.ArgUtil.base.letters == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.letters.toString == orig(com.fidelis.argface.ArgUtil.base.letters.toString)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.nonOptionList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.help.optionList)
com.fidelis.argface.ArgUtil.base.nonOptionList == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.parser.source == orig(com.fidelis.argface.ArgUtil.base.parser.source)
com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.source.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.delimiters == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters)
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters.toString)
com.fidelis.argface.ArgUtil.base.parser.programName.toString == orig(com.fidelis.argface.ArgUtil.base.parser.programName.toString)
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == orig(com.fidelis.argface.ArgUtil.base.parser.optionalDepth)
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == orig(com.fidelis.argface.ArgUtil.base.parser.optionDefForm)
com.fidelis.argface.ArgUtil.base.parser.exor == orig(com.fidelis.argface.ArgUtil.base.parser.exor)
com.fidelis.argface.ArgUtil.base.parser.newOption == orig(com.fidelis.argface.ArgUtil.base.parser.newOption)
com.fidelis.argface.ArgUtil.base.parser.specOptions == orig(com.fidelis.argface.ArgUtil.base.parser.specOptions)
com.fidelis.argface.ArgUtil.base.parser.operand == orig(com.fidelis.argface.ArgUtil.base.parser.operand)
com.fidelis.argface.ArgUtil.base.parser.option == orig(com.fidelis.argface.ArgUtil.base.parser.option)
com.fidelis.argface.ArgUtil.base.parser.listStack == orig(com.fidelis.argface.ArgUtil.base.parser.listStack)
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList[] == orig(com.fidelis.argface.ArgUtil.base.parser.varList[])
com.fidelis.argface.ArgUtil.base.parser.litList[] == orig(com.fidelis.argface.ArgUtil.base.parser.litList[])
com.fidelis.argface.ArgUtil.base.parser.optionList[] == orig(com.fidelis.argface.ArgUtil.base.parser.optionList[])
com.fidelis.argface.ArgUtil.base.help.argList == orig(com.fidelis.argface.ArgUtil.base.help.argList)
com.fidelis.argface.ArgUtil.base.help.argList == orig(com.fidelis.argface.ArgUtil.base.pattern.argList)
com.fidelis.argface.ArgUtil.base.help.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.help.suppressHelp)
com.fidelis.argface.ArgUtil.base.help.problemUsage == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage)
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage[])
com.fidelis.argface.ArgUtil.base.help.problemText == orig(com.fidelis.argface.ArgUtil.base.help.problemText)
com.fidelis.argface.ArgUtil.base.help.problemText[] == orig(com.fidelis.argface.ArgUtil.base.help.problemText[])
com.fidelis.argface.ArgUtil.base.util.programName.toString == orig(com.fidelis.argface.ArgUtil.base.util.programName.toString)
com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == orig(com.fidelis.argface.ArgUtil.base.pattern.patternWatch)
com.fidelis.argface.ArgUtil.base.pattern.help == orig(com.fidelis.argface.ArgUtil.base.pattern.help)
com.fidelis.argface.ArgUtil.base.pattern.listStack == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack)
com.fidelis.argface.ArgUtil.base.pattern.patternList == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList)
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList[])
com.fidelis.argface.ArgUtil.base.pattern.saveList == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList)
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList[])
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == orig(com.fidelis.argface.ArgUtil.base.pattern.prevIndex)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failNode)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastFail)
com.fidelis.argface.ArgUtil.base.pattern.patternMin == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMin)
com.fidelis.argface.ArgUtil.base.pattern.patternMax == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMax)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[])
com.fidelis.argface.ArgUtil.base.argList.home == orig(com.fidelis.argface.ArgUtil.base.argList.home)
com.fidelis.argface.ArgUtil.base.argList.curr == orig(com.fidelis.argface.ArgUtil.base.argList.curr)
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == return
this.optionSuffix.toString == orig(this.optionSuffix.toString)
return == orig(this.optionSuffix)
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList has only one value
com.fidelis.argface.ArgUtil.base.litList has only one value
com.fidelis.argface.ArgUtil.base.optionList has only one value
com.fidelis.argface.ArgUtil.base.argList has only one value
com.fidelis.argface.ArgUtil.base.letters has only one value
com.fidelis.argface.ArgUtil.base.parser.source has only one value
com.fidelis.argface.ArgUtil.base.parser.operand has only one value
com.fidelis.argface.ArgUtil.base.parser.option has only one value
com.fidelis.argface.ArgUtil.base.parser.varList[] contains no nulls and has only one value, of length 3
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.litList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == [com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand, com.fidelis.argface.ArgOperand]
com.fidelis.argface.ArgUtil.base.parser.optionList[] contains no nulls and has only one value, of length 8
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == [com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption, com.fidelis.argface.ArgOption]
this.programName has only one value
this.operandSuffix has only one value
return has only one value
return.toString == "Option"
size(com.fidelis.argface.ArgUtil.base.parser.varList[]) == 3
size(com.fidelis.argface.ArgUtil.base.parser.litList[]) == 8
size(com.fidelis.argface.ArgUtil.base.parser.optionList[]) == 8
===========================================================================
com.fidelis.argface.ArgUtil.setBase(com.fidelis.argface.ArgBase):::ENTER
this == com.fidelis.argface.ArgUtil.instance
com.fidelis.argface.ArgUtil.instance == arg0.util
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
arg0.parser.varList.getClass().getName() == arg0.parser.litList.getClass().getName()
arg0.parser.varList.getClass().getName() == arg0.parser.optionList.getClass().getName()
arg0.parser.varList.getClass().getName() == arg0.help.problemUsage.getClass().getName()
arg0.parser.varList.getClass().getName() == arg0.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base == null
com.fidelis.argface.ArgUtil.instance.programName == null
this.programName == null
this.operandSuffix == null
this.optionSuffix == null
arg0 has only one value
arg0.getClass().getName() == com.fidelis.argface.ArgStandard.class
arg0.parser has only one value
arg0.parser.source == null
arg0.parser.delimiters has only one value
arg0.parser.delimiters.toString == " \t\n'-+|[]<>()=:,/"
arg0.parser.programName == null
arg0.parser.optionalDepth == 0
arg0.parser.optionDefForm == false
arg0.parser.exor == false
arg0.parser.newOption == false
arg0.parser.specOptions == false
arg0.parser.operand == null
arg0.parser.option == null
arg0.parser.argList == null
arg0.parser.listStack has only one value
arg0.parser.listStack.getClass().getName() == java.util.ArrayDeque.class
arg0.parser.varList has only one value
arg0.parser.varList[] == []
arg0.parser.varList[].getClass().getName() == []
arg0.parser.varList.getClass().getName() == java.util.ArrayList.class
arg0.parser.litList has only one value
arg0.parser.litList[] == []
arg0.parser.litList[].getClass().getName() == []
arg0.parser.optionList has only one value
arg0.parser.optionList[] == []
arg0.parser.optionList[].getClass().getName() == []
arg0.help has only one value
arg0.help.argList == null
arg0.help.optionList == null
arg0.help.suppressHelp == false
arg0.help.usageText == null
arg0.help.versionText == null
arg0.help.aboutText == null
arg0.help.helpText == null
arg0.help.problemUsage has only one value
arg0.help.problemUsage[] == []
arg0.help.problemUsage[].getClass().getName() == []
arg0.help.problemText has only one value
arg0.help.problemText[] == []
arg0.help.problemText[].getClass().getName() == []
arg0.util.programName == null
arg0.util.operandSuffix == null
arg0.util.optionSuffix == null
arg0.pattern == null
arg0.programName == null
arg0.usageText == null
arg0.versionText == null
arg0.aboutText == null
arg0.helpText == null
arg0.optionSuffix == null
arg0.operandSuffix == null
arg0.allowOverwrite == null
arg0.suppressHelp == null
arg0.posixFormat == null
arg0.sortOptions == null
arg0.varList == null
arg0.litList == null
arg0.optionList == null
arg0.argList == null
arg0.letters == null
arg0.helpOption == false
arg0.versionOption == false
arg0.aboutOption == false
arg0.nonOptionList == null
arg0.targetOperands == null
arg0.targetOptions == null
arg0.patternWatch == false
arg0.preParseDone == false
arg0.patternMatch == null
===========================================================================
com.fidelis.argface.ArgUtil.setBase(com.fidelis.argface.ArgBase):::EXIT
com.fidelis.argface.ArgUtil.instance == arg0.util
com.fidelis.argface.ArgUtil.instance == orig(this)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.instance == orig(arg0.util)
com.fidelis.argface.ArgUtil.base == orig(arg0)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(arg0.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.usageText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.help.argList
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == arg0.parser.listStack.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(arg0.parser.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == arg0.parser.varList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == arg0.parser.litList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == arg0.parser.optionList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == arg0.help.problemUsage.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == arg0.help.problemText.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(arg0.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(arg0.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(arg0.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(arg0.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(arg0.help.problemText.getClass().getName())
this.programName == orig(this.programName)
this.operandSuffix == orig(this.operandSuffix)
this.optionSuffix == orig(this.optionSuffix)
arg0.parser == orig(arg0.parser)
arg0.parser.source == orig(arg0.parser.source)
arg0.parser.delimiters == orig(arg0.parser.delimiters)
arg0.parser.delimiters.toString == orig(arg0.parser.delimiters.toString)
arg0.parser.programName == orig(arg0.parser.programName)
arg0.parser.optionalDepth == orig(arg0.parser.optionalDepth)
arg0.parser.optionDefForm == orig(arg0.parser.optionDefForm)
arg0.parser.exor == orig(arg0.parser.exor)
arg0.parser.newOption == orig(arg0.parser.newOption)
arg0.parser.specOptions == orig(arg0.parser.specOptions)
arg0.parser.operand == orig(arg0.parser.operand)
arg0.parser.option == orig(arg0.parser.option)
arg0.parser.argList == orig(arg0.parser.argList)
arg0.parser.listStack == orig(arg0.parser.listStack)
arg0.parser.varList == orig(arg0.parser.varList)
arg0.parser.varList[] == orig(arg0.parser.varList[])
arg0.parser.litList == orig(arg0.parser.litList)
arg0.parser.litList[] == orig(arg0.parser.litList[])
arg0.parser.optionList == orig(arg0.parser.optionList)
arg0.parser.optionList[] == orig(arg0.parser.optionList[])
arg0.help == orig(arg0.help)
arg0.help.argList == orig(arg0.help.argList)
arg0.help.optionList == orig(arg0.help.optionList)
arg0.help.suppressHelp == orig(arg0.help.suppressHelp)
arg0.help.usageText == orig(arg0.help.usageText)
arg0.help.versionText == orig(arg0.help.versionText)
arg0.help.aboutText == orig(arg0.help.aboutText)
arg0.help.helpText == orig(arg0.help.helpText)
arg0.help.problemUsage == orig(arg0.help.problemUsage)
arg0.help.problemUsage[] == orig(arg0.help.problemUsage[])
arg0.help.problemText == orig(arg0.help.problemText)
arg0.help.problemText[] == orig(arg0.help.problemText[])
arg0.util.programName == orig(arg0.util.programName)
arg0.util.operandSuffix == orig(arg0.util.operandSuffix)
arg0.util.optionSuffix == orig(arg0.util.optionSuffix)
arg0.pattern == orig(arg0.pattern)
arg0.programName == orig(arg0.programName)
arg0.usageText == orig(arg0.usageText)
arg0.versionText == orig(arg0.versionText)
arg0.aboutText == orig(arg0.aboutText)
arg0.helpText == orig(arg0.helpText)
arg0.optionSuffix == orig(arg0.optionSuffix)
arg0.operandSuffix == orig(arg0.operandSuffix)
arg0.allowOverwrite == orig(arg0.allowOverwrite)
arg0.suppressHelp == orig(arg0.suppressHelp)
arg0.posixFormat == orig(arg0.posixFormat)
arg0.sortOptions == orig(arg0.sortOptions)
arg0.varList == orig(arg0.varList)
arg0.litList == orig(arg0.litList)
arg0.optionList == orig(arg0.optionList)
arg0.argList == orig(arg0.argList)
arg0.letters == orig(arg0.letters)
arg0.helpOption == orig(arg0.helpOption)
arg0.versionOption == orig(arg0.versionOption)
arg0.aboutOption == orig(arg0.aboutOption)
arg0.nonOptionList == orig(arg0.nonOptionList)
arg0.targetOperands == orig(arg0.targetOperands)
arg0.targetOptions == orig(arg0.targetOptions)
arg0.patternWatch == orig(arg0.patternWatch)
arg0.preParseDone == orig(arg0.preParseDone)
arg0.patternMatch == orig(arg0.patternMatch)
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.base.pattern == null
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.parser.source == null
com.fidelis.argface.ArgUtil.base.parser.operand == null
com.fidelis.argface.ArgUtil.base.parser.option == null
com.fidelis.argface.ArgUtil.base.parser.varList[] == []
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.litList[] == []
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.optionList[] == []
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == []
this.programName == null
this.operandSuffix == null
this.optionSuffix == null
arg0.parser has only one value
arg0.parser.source == null
arg0.parser.delimiters has only one value
arg0.parser.delimiters.toString == " \t\n'-+|[]<>()=:,/"
arg0.parser.programName == null
arg0.parser.optionalDepth == 0
arg0.parser.optionDefForm == false
arg0.parser.exor == false
arg0.parser.newOption == false
arg0.parser.specOptions == false
arg0.parser.operand == null
arg0.parser.option == null
arg0.parser.argList == null
arg0.parser.listStack has only one value
arg0.parser.varList has only one value
arg0.parser.varList[] == []
arg0.parser.varList[].getClass().getName() == []
arg0.parser.litList has only one value
arg0.parser.litList[] == []
arg0.parser.litList[].getClass().getName() == []
arg0.parser.optionList has only one value
arg0.parser.optionList[] == []
arg0.parser.optionList[].getClass().getName() == []
arg0.help has only one value
arg0.help.argList == null
arg0.help.optionList == null
arg0.help.suppressHelp == false
arg0.help.usageText == null
arg0.help.versionText == null
arg0.help.aboutText == null
arg0.help.helpText == null
arg0.help.problemUsage has only one value
arg0.help.problemUsage[] == []
arg0.help.problemUsage[].getClass().getName() == []
arg0.help.problemText has only one value
arg0.help.problemText[] == []
arg0.help.problemText[].getClass().getName() == []
arg0.util.programName == null
arg0.util.operandSuffix == null
arg0.util.optionSuffix == null
arg0.pattern == null
arg0.programName == null
arg0.usageText == null
arg0.versionText == null
arg0.aboutText == null
arg0.helpText == null
arg0.optionSuffix == null
arg0.operandSuffix == null
arg0.allowOverwrite == null
arg0.suppressHelp == null
arg0.posixFormat == null
arg0.sortOptions == null
arg0.varList == null
arg0.litList == null
arg0.optionList == null
arg0.argList == null
arg0.letters == null
arg0.helpOption == false
arg0.versionOption == false
arg0.aboutOption == false
arg0.nonOptionList == null
arg0.targetOperands == null
arg0.targetOptions == null
arg0.patternWatch == false
arg0.preParseDone == false
arg0.patternMatch == null
===========================================================================
com.fidelis.argface.ArgUtil.setOperandSuffix(java.lang.String):::ENTER
this == com.fidelis.argface.ArgUtil.instance
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.help.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.pattern.argList
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.operandSuffix has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.parser.source == null
com.fidelis.argface.ArgUtil.base.parser.operand == null
com.fidelis.argface.ArgUtil.base.parser.option == null
com.fidelis.argface.ArgUtil.base.parser.varList[] == []
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.litList[] == []
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.optionList[] == []
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == []
this.programName has only one value
this.operandSuffix == null
this.optionSuffix == null
arg0 has only one value
arg0.toString == "Operand"
===========================================================================
com.fidelis.argface.ArgUtil.setOperandSuffix(java.lang.String):::EXIT
com.fidelis.argface.ArgUtil.instance == orig(this)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.util.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.parser.programName)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.help.usageText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.help.versionText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.help.aboutText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.help.helpText)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix)
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMatch)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.help.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList)
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.help.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.pattern.argList
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.parser.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.help.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.pattern.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.parser.source == orig(com.fidelis.argface.ArgUtil.base.parser.source)
com.fidelis.argface.ArgUtil.base.parser.delimiters == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters)
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters.toString)
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == orig(com.fidelis.argface.ArgUtil.base.parser.optionalDepth)
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == orig(com.fidelis.argface.ArgUtil.base.parser.optionDefForm)
com.fidelis.argface.ArgUtil.base.parser.exor == orig(com.fidelis.argface.ArgUtil.base.parser.exor)
com.fidelis.argface.ArgUtil.base.parser.newOption == orig(com.fidelis.argface.ArgUtil.base.parser.newOption)
com.fidelis.argface.ArgUtil.base.parser.specOptions == orig(com.fidelis.argface.ArgUtil.base.parser.specOptions)
com.fidelis.argface.ArgUtil.base.parser.operand == orig(com.fidelis.argface.ArgUtil.base.parser.operand)
com.fidelis.argface.ArgUtil.base.parser.option == orig(com.fidelis.argface.ArgUtil.base.parser.option)
com.fidelis.argface.ArgUtil.base.parser.listStack == orig(com.fidelis.argface.ArgUtil.base.parser.listStack)
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList == orig(com.fidelis.argface.ArgUtil.base.parser.varList)
com.fidelis.argface.ArgUtil.base.parser.varList[] == orig(com.fidelis.argface.ArgUtil.base.parser.varList[])
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.litList == orig(com.fidelis.argface.ArgUtil.base.parser.litList)
com.fidelis.argface.ArgUtil.base.parser.litList[] == orig(com.fidelis.argface.ArgUtil.base.parser.litList[])
com.fidelis.argface.ArgUtil.base.parser.optionList == orig(com.fidelis.argface.ArgUtil.base.parser.optionList)
com.fidelis.argface.ArgUtil.base.parser.optionList[] == orig(com.fidelis.argface.ArgUtil.base.parser.optionList[])
com.fidelis.argface.ArgUtil.base.help.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.help.suppressHelp)
com.fidelis.argface.ArgUtil.base.help.problemUsage == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage)
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage[])
com.fidelis.argface.ArgUtil.base.help.problemText == orig(com.fidelis.argface.ArgUtil.base.help.problemText)
com.fidelis.argface.ArgUtil.base.help.problemText[] == orig(com.fidelis.argface.ArgUtil.base.help.problemText[])
com.fidelis.argface.ArgUtil.base.util.programName.toString == orig(com.fidelis.argface.ArgUtil.base.util.programName.toString)
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == orig(com.fidelis.argface.ArgUtil.base.pattern.patternWatch)
com.fidelis.argface.ArgUtil.base.pattern.help == orig(com.fidelis.argface.ArgUtil.base.pattern.help)
com.fidelis.argface.ArgUtil.base.pattern.listStack == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack)
com.fidelis.argface.ArgUtil.base.pattern.patternList == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList)
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList[])
com.fidelis.argface.ArgUtil.base.pattern.saveList == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList)
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList[])
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == orig(com.fidelis.argface.ArgUtil.base.pattern.prevIndex)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failNode)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastFail)
com.fidelis.argface.ArgUtil.base.pattern.patternMin == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMin)
com.fidelis.argface.ArgUtil.base.pattern.patternMax == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMax)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[])
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.operandSuffix == orig(arg0)
this.optionSuffix == orig(this.optionSuffix)
arg0.toString == orig(arg0.toString)
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.parser.source == null
com.fidelis.argface.ArgUtil.base.parser.operand == null
com.fidelis.argface.ArgUtil.base.parser.option == null
com.fidelis.argface.ArgUtil.base.parser.varList[] == []
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.litList[] == []
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.optionList[] == []
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == []
this.programName has only one value
this.operandSuffix has only one value
this.optionSuffix == null
arg0.toString == "Operand"
===========================================================================
com.fidelis.argface.ArgUtil.setOptionSuffix(java.lang.String):::ENTER
this == com.fidelis.argface.ArgUtil.instance
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.help.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.pattern.argList
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix == null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.parser.source == null
com.fidelis.argface.ArgUtil.base.parser.operand == null
com.fidelis.argface.ArgUtil.base.parser.option == null
com.fidelis.argface.ArgUtil.base.parser.varList[] == []
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.litList[] == []
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.optionList[] == []
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == []
this.programName has only one value
this.operandSuffix has only one value
this.optionSuffix == null
arg0 has only one value
arg0.toString == "Option"
===========================================================================
com.fidelis.argface.ArgUtil.setOptionSuffix(java.lang.String):::EXIT
com.fidelis.argface.ArgUtil.instance == orig(this)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.util.programName)
com.fidelis.argface.ArgUtil.instance.programName.toString == orig(com.fidelis.argface.ArgUtil.instance.programName.toString)
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix.toString)
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.optionSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.base.versionText == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.parser.programName)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.usageText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.versionText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.aboutText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.help.helpText)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix)
com.fidelis.argface.ArgUtil.base.versionText == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMatch)
com.fidelis.argface.ArgUtil.base.optionSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.optionSuffix.toString)
com.fidelis.argface.ArgUtil.base.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.help.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList)
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.help.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.pattern.argList
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.parser.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.help.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.pattern.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.parser.source == orig(com.fidelis.argface.ArgUtil.base.parser.source)
com.fidelis.argface.ArgUtil.base.parser.delimiters == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters)
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters.toString)
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == orig(com.fidelis.argface.ArgUtil.base.parser.optionalDepth)
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == orig(com.fidelis.argface.ArgUtil.base.parser.optionDefForm)
com.fidelis.argface.ArgUtil.base.parser.exor == orig(com.fidelis.argface.ArgUtil.base.parser.exor)
com.fidelis.argface.ArgUtil.base.parser.newOption == orig(com.fidelis.argface.ArgUtil.base.parser.newOption)
com.fidelis.argface.ArgUtil.base.parser.specOptions == orig(com.fidelis.argface.ArgUtil.base.parser.specOptions)
com.fidelis.argface.ArgUtil.base.parser.operand == orig(com.fidelis.argface.ArgUtil.base.parser.operand)
com.fidelis.argface.ArgUtil.base.parser.option == orig(com.fidelis.argface.ArgUtil.base.parser.option)
com.fidelis.argface.ArgUtil.base.parser.listStack == orig(com.fidelis.argface.ArgUtil.base.parser.listStack)
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList == orig(com.fidelis.argface.ArgUtil.base.parser.varList)
com.fidelis.argface.ArgUtil.base.parser.varList[] == orig(com.fidelis.argface.ArgUtil.base.parser.varList[])
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.litList == orig(com.fidelis.argface.ArgUtil.base.parser.litList)
com.fidelis.argface.ArgUtil.base.parser.litList[] == orig(com.fidelis.argface.ArgUtil.base.parser.litList[])
com.fidelis.argface.ArgUtil.base.parser.optionList == orig(com.fidelis.argface.ArgUtil.base.parser.optionList)
com.fidelis.argface.ArgUtil.base.parser.optionList[] == orig(com.fidelis.argface.ArgUtil.base.parser.optionList[])
com.fidelis.argface.ArgUtil.base.help.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.help.suppressHelp)
com.fidelis.argface.ArgUtil.base.help.problemUsage == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage)
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage[])
com.fidelis.argface.ArgUtil.base.help.problemText == orig(com.fidelis.argface.ArgUtil.base.help.problemText)
com.fidelis.argface.ArgUtil.base.help.problemText[] == orig(com.fidelis.argface.ArgUtil.base.help.problemText[])
com.fidelis.argface.ArgUtil.base.util.programName.toString == orig(com.fidelis.argface.ArgUtil.base.util.programName.toString)
com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix.toString)
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == orig(com.fidelis.argface.ArgUtil.base.pattern.patternWatch)
com.fidelis.argface.ArgUtil.base.pattern.help == orig(com.fidelis.argface.ArgUtil.base.pattern.help)
com.fidelis.argface.ArgUtil.base.pattern.listStack == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack)
com.fidelis.argface.ArgUtil.base.pattern.patternList == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList)
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList[])
com.fidelis.argface.ArgUtil.base.pattern.saveList == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList)
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList[])
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == orig(com.fidelis.argface.ArgUtil.base.pattern.prevIndex)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failNode)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastFail)
com.fidelis.argface.ArgUtil.base.pattern.patternMin == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMin)
com.fidelis.argface.ArgUtil.base.pattern.patternMax == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMax)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[])
this.programName == orig(this.programName)
this.programName.toString == orig(this.programName.toString)
this.operandSuffix == orig(this.operandSuffix)
this.operandSuffix.toString == orig(this.operandSuffix.toString)
this.optionSuffix == orig(arg0)
arg0.toString == orig(arg0.toString)
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix has only one value
com.fidelis.argface.ArgUtil.instance.optionSuffix has only one value
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.parser.source == null
com.fidelis.argface.ArgUtil.base.parser.operand == null
com.fidelis.argface.ArgUtil.base.parser.option == null
com.fidelis.argface.ArgUtil.base.parser.varList[] == []
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.litList[] == []
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.optionList[] == []
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == []
this.programName has only one value
this.operandSuffix has only one value
this.optionSuffix has only one value
arg0.toString == "Option"
===========================================================================
com.fidelis.argface.ArgUtil.setProgramName(java.lang.String):::ENTER
this == com.fidelis.argface.ArgUtil.instance
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.help.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.pattern.argList
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName == null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.programName has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.parser.source == null
com.fidelis.argface.ArgUtil.base.parser.operand == null
com.fidelis.argface.ArgUtil.base.parser.option == null
com.fidelis.argface.ArgUtil.base.parser.varList[] == []
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.litList[] == []
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.optionList[] == []
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == []
this.programName == null
this.operandSuffix == null
this.optionSuffix == null
arg0 has only one value
arg0.toString == "ArgSample"
===========================================================================
com.fidelis.argface.ArgUtil.setProgramName(java.lang.String):::EXIT
com.fidelis.argface.ArgUtil.instance == orig(this)
com.fidelis.argface.ArgUtil.instance == orig(com.fidelis.argface.ArgUtil.instance)
com.fidelis.argface.ArgUtil.base == orig(com.fidelis.argface.ArgUtil.base)
com.fidelis.argface.ArgUtil.base.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.getClass().getName())
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.programName
com.fidelis.argface.ArgUtil.instance.programName == com.fidelis.argface.ArgUtil.base.util.programName
com.fidelis.argface.ArgUtil.instance.programName == orig(com.fidelis.argface.ArgUtil.base.programName)
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.instance.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.versionText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.aboutText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.helpText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.letters
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.patternMatch
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.parser.programName
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.help.usageText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.help.versionText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.help.aboutText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.help.helpText
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.operandSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.util.optionSuffix
com.fidelis.argface.ArgUtil.instance.operandSuffix == com.fidelis.argface.ArgUtil.base.pattern.patternMatch
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.programName)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.instance.optionSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.versionText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.aboutText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.helpText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.optionSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.letters)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.patternMatch)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.parser.programName)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.help.usageText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.help.versionText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.help.aboutText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.help.helpText)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.util.programName)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.util.operandSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.util.optionSuffix)
com.fidelis.argface.ArgUtil.instance.operandSuffix == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMatch)
com.fidelis.argface.ArgUtil.base.parser == orig(com.fidelis.argface.ArgUtil.base.parser)
com.fidelis.argface.ArgUtil.base.help == orig(com.fidelis.argface.ArgUtil.base.help)
com.fidelis.argface.ArgUtil.base.util == orig(com.fidelis.argface.ArgUtil.base.util)
com.fidelis.argface.ArgUtil.base.pattern == orig(com.fidelis.argface.ArgUtil.base.pattern)
com.fidelis.argface.ArgUtil.base.programName.toString == orig(com.fidelis.argface.ArgUtil.base.programName.toString)
com.fidelis.argface.ArgUtil.base.usageText == orig(com.fidelis.argface.ArgUtil.base.usageText)
com.fidelis.argface.ArgUtil.base.usageText.toString == orig(com.fidelis.argface.ArgUtil.base.usageText.toString)
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.suppressHelp
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.posixFormat
com.fidelis.argface.ArgUtil.base.allowOverwrite == com.fidelis.argface.ArgUtil.base.sortOptions
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.allowOverwrite)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.suppressHelp)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.posixFormat)
com.fidelis.argface.ArgUtil.base.allowOverwrite == orig(com.fidelis.argface.ArgUtil.base.sortOptions)
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.litList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOperands
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.targetOptions
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.help.optionList
com.fidelis.argface.ArgUtil.base.varList == com.fidelis.argface.ArgUtil.base.pattern.nonOptionList
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.varList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.litList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.nonOptionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOperands)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.targetOptions)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.help.optionList)
com.fidelis.argface.ArgUtil.base.varList == orig(com.fidelis.argface.ArgUtil.base.pattern.nonOptionList)
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.parser.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.help.argList
com.fidelis.argface.ArgUtil.base.argList == com.fidelis.argface.ArgUtil.base.pattern.argList
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.parser.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.help.argList)
com.fidelis.argface.ArgUtil.base.argList == orig(com.fidelis.argface.ArgUtil.base.pattern.argList)
com.fidelis.argface.ArgUtil.base.helpOption == orig(com.fidelis.argface.ArgUtil.base.helpOption)
com.fidelis.argface.ArgUtil.base.versionOption == orig(com.fidelis.argface.ArgUtil.base.versionOption)
com.fidelis.argface.ArgUtil.base.aboutOption == orig(com.fidelis.argface.ArgUtil.base.aboutOption)
com.fidelis.argface.ArgUtil.base.patternWatch == orig(com.fidelis.argface.ArgUtil.base.patternWatch)
com.fidelis.argface.ArgUtil.base.preParseDone == orig(com.fidelis.argface.ArgUtil.base.preParseDone)
com.fidelis.argface.ArgUtil.base.parser.source == orig(com.fidelis.argface.ArgUtil.base.parser.source)
com.fidelis.argface.ArgUtil.base.parser.delimiters == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters)
com.fidelis.argface.ArgUtil.base.parser.delimiters.toString == orig(com.fidelis.argface.ArgUtil.base.parser.delimiters.toString)
com.fidelis.argface.ArgUtil.base.parser.optionalDepth == orig(com.fidelis.argface.ArgUtil.base.parser.optionalDepth)
com.fidelis.argface.ArgUtil.base.parser.optionDefForm == orig(com.fidelis.argface.ArgUtil.base.parser.optionDefForm)
com.fidelis.argface.ArgUtil.base.parser.exor == orig(com.fidelis.argface.ArgUtil.base.parser.exor)
com.fidelis.argface.ArgUtil.base.parser.newOption == orig(com.fidelis.argface.ArgUtil.base.parser.newOption)
com.fidelis.argface.ArgUtil.base.parser.specOptions == orig(com.fidelis.argface.ArgUtil.base.parser.specOptions)
com.fidelis.argface.ArgUtil.base.parser.operand == orig(com.fidelis.argface.ArgUtil.base.parser.operand)
com.fidelis.argface.ArgUtil.base.parser.option == orig(com.fidelis.argface.ArgUtil.base.parser.option)
com.fidelis.argface.ArgUtil.base.parser.listStack == orig(com.fidelis.argface.ArgUtil.base.parser.listStack)
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.listStack.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList == orig(com.fidelis.argface.ArgUtil.base.parser.varList)
com.fidelis.argface.ArgUtil.base.parser.varList[] == orig(com.fidelis.argface.ArgUtil.base.parser.varList[])
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName()
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.litList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.parser.optionList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.help.problemText.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.varList.getClass().getName() == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands.getClass().getName())
com.fidelis.argface.ArgUtil.base.parser.litList == orig(com.fidelis.argface.ArgUtil.base.parser.litList)
com.fidelis.argface.ArgUtil.base.parser.litList[] == orig(com.fidelis.argface.ArgUtil.base.parser.litList[])
com.fidelis.argface.ArgUtil.base.parser.optionList == orig(com.fidelis.argface.ArgUtil.base.parser.optionList)
com.fidelis.argface.ArgUtil.base.parser.optionList[] == orig(com.fidelis.argface.ArgUtil.base.parser.optionList[])
com.fidelis.argface.ArgUtil.base.help.suppressHelp == orig(com.fidelis.argface.ArgUtil.base.help.suppressHelp)
com.fidelis.argface.ArgUtil.base.help.problemUsage == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage)
com.fidelis.argface.ArgUtil.base.help.problemUsage[] == orig(com.fidelis.argface.ArgUtil.base.help.problemUsage[])
com.fidelis.argface.ArgUtil.base.help.problemText == orig(com.fidelis.argface.ArgUtil.base.help.problemText)
com.fidelis.argface.ArgUtil.base.help.problemText[] == orig(com.fidelis.argface.ArgUtil.base.help.problemText[])
com.fidelis.argface.ArgUtil.base.pattern.patternWatch == orig(com.fidelis.argface.ArgUtil.base.pattern.patternWatch)
com.fidelis.argface.ArgUtil.base.pattern.help == orig(com.fidelis.argface.ArgUtil.base.pattern.help)
com.fidelis.argface.ArgUtil.base.pattern.listStack == orig(com.fidelis.argface.ArgUtil.base.pattern.listStack)
com.fidelis.argface.ArgUtil.base.pattern.patternList == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList)
com.fidelis.argface.ArgUtil.base.pattern.patternList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.patternList[])
com.fidelis.argface.ArgUtil.base.pattern.saveList == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList)
com.fidelis.argface.ArgUtil.base.pattern.saveList[] == orig(com.fidelis.argface.ArgUtil.base.pattern.saveList[])
com.fidelis.argface.ArgUtil.base.pattern.prevIndex == orig(com.fidelis.argface.ArgUtil.base.pattern.prevIndex)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.failNode)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastBase)
com.fidelis.argface.ArgUtil.base.pattern.failBase == orig(com.fidelis.argface.ArgUtil.base.pattern.lastFail)
com.fidelis.argface.ArgUtil.base.pattern.patternMin == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMin)
com.fidelis.argface.ArgUtil.base.pattern.patternMax == orig(com.fidelis.argface.ArgUtil.base.pattern.patternMax)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands)
com.fidelis.argface.ArgUtil.base.pattern.targetOperands[] == orig(com.fidelis.argface.ArgUtil.base.pattern.targetOperands[])
this.programName == orig(arg0)
this.operandSuffix == orig(this.operandSuffix)
this.optionSuffix == orig(this.optionSuffix)
arg0.toString == orig(arg0.toString)
com.fidelis.argface.ArgUtil.base has only one value
com.fidelis.argface.ArgUtil.instance.programName has only one value
com.fidelis.argface.ArgUtil.instance.operandSuffix == null
com.fidelis.argface.ArgUtil.base.pattern has only one value
com.fidelis.argface.ArgUtil.base.usageText has only one value
com.fidelis.argface.ArgUtil.base.varList == null
com.fidelis.argface.ArgUtil.base.argList == null
com.fidelis.argface.ArgUtil.base.parser.source == null
com.fidelis.argface.ArgUtil.base.parser.operand == null
com.fidelis.argface.ArgUtil.base.parser.option == null
com.fidelis.argface.ArgUtil.base.parser.varList[] == []
com.fidelis.argface.ArgUtil.base.parser.varList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.litList[] == []
com.fidelis.argface.ArgUtil.base.parser.litList[].getClass().getName() == []
com.fidelis.argface.ArgUtil.base.parser.optionList[] == []
com.fidelis.argface.ArgUtil.base.parser.optionList[].getClass().getName() == []
this.programName has only one value
this.operandSuffix == null
this.optionSuffix == null
arg0.toString == "ArgSample"
===========================================================================
com.fidelis.argface.Debug:::CLASS
===========================================================================
com.fidelis.argface.Debug.setTrace(boolean):::ENTER
com.fidelis.argface.Debug.verbose == com.fidelis.argface.Debug.trace
com.fidelis.argface.Debug.verbose == false
arg0 == true
===========================================================================
com.fidelis.argface.Debug.setTrace(boolean):::EXIT
com.fidelis.argface.Debug.verbose == orig(com.fidelis.argface.Debug.verbose)
com.fidelis.argface.Debug.verbose == orig(com.fidelis.argface.Debug.trace)
com.fidelis.argface.Debug.trace == orig(arg0)
com.fidelis.argface.Debug.verbose == false
com.fidelis.argface.Debug.trace == true
===========================================================================
com.fidelis.argface.Debug.setVerbose(boolean):::ENTER
com.fidelis.argface.Debug.trace == arg0
com.fidelis.argface.Debug.verbose == false
com.fidelis.argface.Debug.trace == true
===========================================================================
com.fidelis.argface.Debug.setVerbose(boolean):::EXIT
com.fidelis.argface.Debug.verbose == com.fidelis.argface.Debug.trace
com.fidelis.argface.Debug.verbose == orig(com.fidelis.argface.Debug.trace)
com.fidelis.argface.Debug.verbose == orig(arg0)
com.fidelis.argface.Debug.verbose == true
===========================================================================
com.fidelis.argface.Debug.trace(java.lang.String):::ENTER
com.fidelis.argface.Debug.verbose == com.fidelis.argface.Debug.trace
com.fidelis.argface.Debug.verbose == true
arg0 != null
===========================================================================
com.fidelis.argface.Debug.trace(java.lang.String):::EXIT
com.fidelis.argface.Debug.verbose == com.fidelis.argface.Debug.trace
com.fidelis.argface.Debug.verbose == orig(com.fidelis.argface.Debug.verbose)
com.fidelis.argface.Debug.verbose == orig(com.fidelis.argface.Debug.trace)
arg0.toString == orig(arg0.toString)
com.fidelis.argface.Debug.verbose == true
===========================================================================
com.fidelis.argface.TokenString:::OBJECT
this has only one value
this.text has only one value
this.text != null
this.text.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
this.delimiters has only one value
this.delimiters != null
this.delimiters.toString == " \t\n'-+|[]<>()=:,/"
this.tokenizer has only one value
this.tokenizer != null
this.meta.toString == "<sQuote>"
this.stack has only one value
this.stack != null
this.stack.getClass().getName() == java.util.ArrayDeque.class
this.metaQuotes == true
this.backslash == false
===========================================================================
com.fidelis.argface.TokenString.TokenString(java.lang.String, java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
arg1 has only one value
arg1.toString == " \t\n'-+|[]<>()=:,/"
===========================================================================
com.fidelis.argface.TokenString.TokenString(java.lang.String, java.lang.String):::EXIT
this.text == orig(arg0)
this.delimiters == orig(arg1)
this.token == this.meta
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
this.token == null
this.filterLineBreaks == true
this.trimSpaces == true
arg0.toString == "ArgSample\nset [ -x, --extend 'help description for x' | -y, --yield | -z, --sleep ]\n[-e] [[upper | lower | any] <pattern>] <other>\nArgSample\n((match [upper | lower | any] <other>) |\n (ending <file>) |\n (<other> match <pattern>))\n[set | clear]\nArgSample\n[-a, --after  <lines>] 'number of lines after a match'\n[-b, --before <lines>] 'number of lines before a match'\n[-cde]\nmatch|starting|ending|<other> <pattern> <file>...\nOptions:\n-c confirm actions\n-d delete matching line and by the way, if this runs too long, and continues for a long time, where will all this text go ?\n-e, --exit exit on error\n-y, --yield yeild to substitutions\n-z, --sleep dormant state when completed\n"
arg1.toString == " \t\n'-+|[]<>()=:,/"
===========================================================================
com.fidelis.argface.TokenString.escapeFilter(java.lang.String, java.lang.StringBuilder, char):::ENTER
this.token != null
this.token.toString == "'"
this.meta == null
this.filterLineBreaks == true
this.trimSpaces == true
arg0 != null
arg1 != null
arg2 == 39
===========================================================================
com.fidelis.argface.TokenString.escapeFilter(java.lang.String, java.lang.StringBuilder, char):::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.token == orig(this.token)
this.token.toString == orig(this.token.toString)
this.meta == orig(this.meta)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(this.filterLineBreaks)
this.trimSpaces == orig(this.trimSpaces)
arg0.toString == orig(arg0.toString)
(return == true)  ==>  (arg0.toString == "'")
this.token != null
this.token.toString == "'"
this.meta == null
this.filterLineBreaks == true
this.trimSpaces == true
===========================================================================
com.fidelis.argface.TokenString.escapeFilter(java.lang.String, java.lang.StringBuilder, char):::EXIT;condition="return == true"
arg0.toString == "'"
return == true
===========================================================================
com.fidelis.argface.TokenString.escapeFilter(java.lang.String, java.lang.StringBuilder, char):::EXIT;condition="not(return == true)"
return == false
===========================================================================
com.fidelis.argface.TokenString.getToken():::ENTER
this.token.toString one of { "help description for x", "number of lines after a match", "number of lines before a match" }
this.meta has only one value
this.filterLineBreaks == true
this.trimSpaces == true
===========================================================================
com.fidelis.argface.TokenString.getToken():::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.token == return
this.token.toString == orig(this.token.toString)
this.meta == orig(this.meta)
this.meta.toString == orig(this.meta.toString)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(this.filterLineBreaks)
this.trimSpaces == orig(this.trimSpaces)
return == orig(this.token)
this.token.toString one of { "help description for x", "number of lines after a match", "number of lines before a match" }
this.meta has only one value
this.filterLineBreaks == true
this.trimSpaces == true
return.toString one of { "help description for x", "number of lines after a match", "number of lines before a match" }
===========================================================================
com.fidelis.argface.TokenString.isMeta(java.lang.String):::ENTER
this.token == arg0
this.token != null
this.meta == null
this.filterLineBreaks == true
this.trimSpaces == true
===========================================================================
com.fidelis.argface.TokenString.isMeta(java.lang.String):::EXIT162
this.token has only one value
this.token.toString == "<sQuote>"
arg0.toString == "<sQuote>"
return == true
===========================================================================
com.fidelis.argface.TokenString.isMeta(java.lang.String):::EXIT162;condition="return == true"
===========================================================================
com.fidelis.argface.TokenString.isMeta(java.lang.String):::EXIT164
return == false
===========================================================================
com.fidelis.argface.TokenString.isMeta(java.lang.String):::EXIT164;condition="not(return == true)"
===========================================================================
com.fidelis.argface.TokenString.isMeta(java.lang.String):::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.token == orig(this.token)
this.token == orig(arg0)
this.token.toString == orig(this.token.toString)
this.meta == orig(this.meta)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(this.filterLineBreaks)
this.trimSpaces == orig(this.trimSpaces)
arg0.toString == orig(arg0.toString)
(return == true)  ==>  (arg0.toString == "<sQuote>")
(return == true)  ==>  (this.token has only one value)
(return == true)  ==>  (this.token.toString == "<sQuote>")
this.token != null
this.meta == null
this.filterLineBreaks == true
this.trimSpaces == true
===========================================================================
com.fidelis.argface.TokenString.isMeta(java.lang.String):::EXIT;condition="return == true"
this.token has only one value
this.token.toString == "<sQuote>"
arg0.toString == "<sQuote>"
return == true
===========================================================================
com.fidelis.argface.TokenString.isMeta(java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
com.fidelis.argface.TokenString.metaFilter():::ENTER
this.token != null
===========================================================================
com.fidelis.argface.TokenString.metaFilter():::EXIT184
this.meta == return
this.token.toString one of { "help description for x", "number of lines after a match", "number of lines before a match" }
this.filterLineBreaks == true
this.trimSpaces == true
return has only one value
return.toString == "<sQuote>"
orig(this.token.toString) == "'"
orig(this.meta) == null
===========================================================================
com.fidelis.argface.TokenString.metaFilter():::EXIT189
this.token == return
this.token.toString == orig(this.token.toString)
return == orig(this.token)
this.meta == null
===========================================================================
com.fidelis.argface.TokenString.metaFilter():::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(this.filterLineBreaks)
this.trimSpaces == orig(this.trimSpaces)
this.token != null
return != null
this.token.toString >= orig(this.token.toString)
===========================================================================
com.fidelis.argface.TokenString.next():::ENTER
===========================================================================
com.fidelis.argface.TokenString.next():::EXIT102
this.token == return
this.meta == orig(this.meta)
this.token.toString == "\n"
this.meta == null
this.filterLineBreaks == false
this.trimSpaces == false
return.toString == "\n"
===========================================================================
com.fidelis.argface.TokenString.next():::EXIT109
this.token != null
return != null
===========================================================================
com.fidelis.argface.TokenString.next():::EXIT113
this.token == return
this.token.toString == orig(this.token.toString)
this.meta == orig(this.meta)
this.meta == null
this.filterLineBreaks == true
this.trimSpaces == true
orig(this.token) != null
===========================================================================
com.fidelis.argface.TokenString.next():::EXIT95
this.token == orig(this.token)
this.token.toString == orig(this.token.toString)
this.meta == return
this.token has only one value
this.token.toString == "help description for x"
this.filterLineBreaks == true
this.trimSpaces == true
return has only one value
return.toString == "<sQuote>"
orig(this.meta) == null
===========================================================================
com.fidelis.argface.TokenString.next():::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(this.filterLineBreaks)
this.trimSpaces == orig(this.trimSpaces)
===========================================================================
com.fidelis.argface.TokenString.pop():::ENTER
===========================================================================
com.fidelis.argface.TokenString.pop():::EXIT137
this.token != null
this.meta == null
this.filterLineBreaks == true
this.trimSpaces == true
return != null
===========================================================================
com.fidelis.argface.TokenString.pop():::EXIT139
return == null
===========================================================================
com.fidelis.argface.TokenString.pop():::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.token == orig(this.token)
this.token.toString == orig(this.token.toString)
this.meta == orig(this.meta)
this.meta.toString == orig(this.meta.toString)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(this.filterLineBreaks)
this.trimSpaces == orig(this.trimSpaces)
(return != null)  ==>  (this.filterLineBreaks == true)
(return != null)  ==>  (this.meta == null)
(return != null)  ==>  (this.token != null)
(return != null)  ==>  (this.trimSpaces == true)
(return == null)  ==>  (this.meta.toString == "<sQuote>")
===========================================================================
com.fidelis.argface.TokenString.push():::ENTER
this.token != null
this.filterLineBreaks == true
this.trimSpaces == true
===========================================================================
com.fidelis.argface.TokenString.push():::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.token == orig(this.token)
this.token.toString == orig(this.token.toString)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(this.filterLineBreaks)
this.trimSpaces == orig(this.trimSpaces)
this.token != null
this.meta == null
this.filterLineBreaks == true
this.trimSpaces == true
===========================================================================
com.fidelis.argface.TokenString.setFilterLineBreaks(boolean):::ENTER
this.meta == null
this.trimSpaces == true
===========================================================================
com.fidelis.argface.TokenString.setFilterLineBreaks(boolean):::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.token == orig(this.token)
this.token.toString == orig(this.token.toString)
this.meta == orig(this.meta)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(arg0)
this.trimSpaces == orig(this.trimSpaces)
this.meta == null
this.trimSpaces == true
===========================================================================
com.fidelis.argface.TokenString.setTrimSpaces(boolean):::ENTER
this.meta == null
this.filterLineBreaks == false
===========================================================================
com.fidelis.argface.TokenString.setTrimSpaces(boolean):::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.token == orig(this.token)
this.token.toString == orig(this.token.toString)
this.meta == orig(this.meta)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(this.filterLineBreaks)
this.trimSpaces == orig(arg0)
this.meta == null
this.filterLineBreaks == false
===========================================================================
com.fidelis.argface.TokenString.stringToken():::ENTER
this.token.toString == "'"
this.meta == null
this.filterLineBreaks == true
this.trimSpaces == true
===========================================================================
com.fidelis.argface.TokenString.stringToken():::EXIT
this.text == orig(this.text)
this.text.toString == orig(this.text.toString)
this.delimiters == orig(this.delimiters)
this.delimiters.toString == orig(this.delimiters.toString)
this.tokenizer == orig(this.tokenizer)
this.token == orig(this.token)
this.token.toString == orig(this.token.toString)
this.meta == orig(this.meta)
this.stack == orig(this.stack)
this.stack.getClass().getName() == orig(this.stack.getClass().getName())
this.metaQuotes == orig(this.metaQuotes)
this.backslash == orig(this.backslash)
this.filterLineBreaks == orig(this.filterLineBreaks)
this.trimSpaces == orig(this.trimSpaces)
this.token.toString == "'"
this.meta == null
this.filterLineBreaks == true
this.trimSpaces == true
return.toString one of { "help description for x", "number of lines after a match", "number of lines before a match" }
Exiting Daikon.
