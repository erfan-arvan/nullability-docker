Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

===========================================================================
hugo.project.hospital.Device:::OBJECT
this.type != null
this.type.toString one of { "needle", "stethoscopeDevice" }
this.amount one of { 0, 1, 2 }
===========================================================================
hugo.project.hospital.Device.Device(java.lang.String, int):::ENTER
arg0.toString one of { "needle", "stethoscopeDevice" }
arg1 one of { 0, 1, 2 }
===========================================================================
hugo.project.hospital.Device.Device(java.lang.String, int):::EXIT
this.type == orig(arg0)
this.amount == orig(arg1)
arg0.toString == orig(arg0.toString)
arg0.toString one of { "needle", "stethoscopeDevice" }
===========================================================================
hugo.project.hospital.Device.equals(hugo.project.hospital.Device):::ENTER
this.getClass().getName() == hugo.project.hospital.NeedleDevice.class
this.type has only one value
this.type.toString == "needle"
this.amount one of { 1, 2 }
arg0.type.toString one of { "needle", "stethoscopeDevice" }
arg0.amount == 0
===========================================================================
hugo.project.hospital.Device.equals(hugo.project.hospital.Device):::EXIT
this.type == orig(this.type)
this.type.toString == orig(this.type.toString)
this.amount == orig(this.amount)
arg0.type == orig(arg0.type)
arg0.type.toString == orig(arg0.type.toString)
arg0.amount == orig(arg0.amount)
(this.amount == 1)  <==>  (arg0.type.toString == "stethoscopeDevice")
(this.amount == 1)  <==>  (orig(arg0.getClass().getName()) == hugo.project.hospital.StethoscopeDevice.class)
(this.amount == 1)  <==>  (return == false)
(this.amount == 2)  <==>  (arg0.type.toString == "needle")
(this.amount == 2)  <==>  (orig(arg0.getClass().getName()) == hugo.project.hospital.NeedleDevice.class)
(this.amount == 2)  <==>  (orig(this.getClass().getName()) == orig(arg0.getClass().getName()))
(this.amount == 2)  <==>  (return == true)
(this.amount == 2)  ==>  (this.type == arg0.type)
this.type has only one value
this.type.toString == "needle"
this.amount one of { 1, 2 }
arg0.type.toString one of { "needle", "stethoscopeDevice" }
arg0.amount == 0
===========================================================================
hugo.project.hospital.Device.equals(hugo.project.hospital.Device):::EXIT;condition="return == true"
this.type == arg0.type
this.type == orig(arg0.type)
orig(this.getClass().getName()) == orig(arg0.getClass().getName())
this.amount == 2
arg0.type.toString == "needle"
return == true
orig(this) has only one value
orig(arg0) has only one value
===========================================================================
hugo.project.hospital.Device.equals(hugo.project.hospital.Device):::EXIT;condition="not(return == true)"
this.amount == 1
arg0.type has only one value
arg0.type.toString == "stethoscopeDevice"
return == false
orig(this) has only one value
orig(arg0) has only one value
orig(arg0.getClass().getName()) == hugo.project.hospital.StethoscopeDevice.class
===========================================================================
hugo.project.hospital.Device.getAmount():::ENTER
this.amount one of { 1, 2 }
===========================================================================
hugo.project.hospital.Device.getAmount():::EXIT
this.type == orig(this.type)
this.type.toString == orig(this.type.toString)
this.amount == return
return == orig(this.amount)
return one of { 1, 2 }
===========================================================================
hugo.project.hospital.Device.getType():::ENTER
===========================================================================
hugo.project.hospital.Device.getType():::EXIT
this.type == return
this.type.toString == orig(this.type.toString)
this.amount == orig(this.amount)
return == orig(this.type)
return.toString one of { "needle", "stethoscopeDevice" }
===========================================================================
hugo.project.hospital.Hospital$CardiologyDepartment:::OBJECT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this has only one value
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 1
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
this.name has only one value
this.name.toString == "Cardiology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Cardiology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$CardiologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Cardiology"
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 2
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
===========================================================================
hugo.project.hospital.Hospital$CardiologyDepartment.CardiologyDepartment(hugo.project.hospital.Hospital):::ENTER
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 1
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$CardiologyDepartment.CardiologyDepartment(hugo.project.hospital.Hospital):::EXIT
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
===========================================================================
hugo.project.hospital.Hospital$Department$Room:::OBJECT
this.roomType == null
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WAITINGROOM != null
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.WARD != null
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[] elements != null
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
hugo.project.hospital.Hospital$Department.this.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 0, 1 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size >= 0
hugo.project.hospital.Hospital$Department.this.deviceList == null
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
this.getClass().getName() != hugo.project.hospital.Hospital$Department.this.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != hugo.project.hospital.Hospital$Department.this.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Room.Room(hugo.project.hospital.Hospital$Department):::ENTER
hugo.project.hospital.Hospital$Department.this != null
hugo.project.hospital.Hospital$Department.this.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 0, 1 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size >= 0
hugo.project.hospital.Hospital$Department.this.deviceList == null
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$Department$Room.Room(hugo.project.hospital.Hospital$Department):::EXIT
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom:::OBJECT
this.name != null
this.waitingList != null
this.waitingList.data != null
this.waitingList.data.size >= 0
hugo.project.hospital.Hospital$Department.this.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 1, 2 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList.size one of { 0, 1, 2 }
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
this.roomType has only one value
this.roomType != null
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WAITINGROOM != null
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.WARD != null
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[] elements != null
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.WaitingRoom(hugo.project.hospital.Hospital$Department, java.lang.String):::ENTER
hugo.project.hospital.Hospital$Department.this.waitingRoom == null
hugo.project.hospital.Hospital$Department.this.wardsForSingle == null
hugo.project.hospital.Hospital$Department.this.wardsForMulti == null
hugo.project.hospital.Hospital$Department.this.deviceList == null
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.WaitingRoom(hugo.project.hospital.Hospital$Department, java.lang.String):::EXIT
this.name == orig(arg1)
this.waitingList == hugo.util.structure.PriorityQueue.this
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
arg1.toString == orig(arg1.toString)
this.waitingList.data.head == null
this.waitingList.data.size == 0
hugo.project.hospital.Hospital$Department.this.waitingRoom == null
hugo.project.hospital.Hospital$Department.this.wardsForSingle == null
hugo.project.hospital.Hospital$Department.this.wardsForMulti == null
hugo.project.hospital.Hospital$Department.this.deviceList == null
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.addWaitingPatient(hugo.project.hospital.Hospital$Patient):::ENTER
this == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.name == hugo.project.hospital.Hospital$Department.this.waitingRoom.name
this.waitingList == hugo.util.structure.PriorityQueue.this
this.waitingList == hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this has only one value
this.name has only one value
this.name.toString == "WR Neurology"
this.waitingList has only one value
this.waitingList.data has only one value
hugo.util.structure.PriorityQueue.this has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == "WR Neurology"
hugo.project.hospital.Hospital$Department.this.wardsForSingle has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == 3
hugo.project.hospital.Hospital$Department.this.deviceList has only one value
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0.severity one of { 0, 1, 3 }
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.addWaitingPatient(hugo.project.hospital.Hospital$Patient):::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.waitingRoom.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
this.name.toString == orig(this.name.toString)
this.waitingList == hugo.util.structure.PriorityQueue.this
this.waitingList == hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList
this.waitingList == orig(this.waitingList)
this.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
this.waitingList.data == orig(this.waitingList.data)
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(this)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.severity == orig(arg0.severity)
arg0.wantsSingleRoom == orig(arg0.wantsSingleRoom)
this.name has only one value
this.name.toString == "WR Neurology"
this.waitingList has only one value
this.waitingList.data has only one value
hugo.util.structure.PriorityQueue.this has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == "WR Neurology"
hugo.project.hospital.Hospital$Department.this.wardsForSingle has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == 3
hugo.project.hospital.Hospital$Department.this.deviceList has only one value
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0.severity one of { 0, 1, 3 }
this.waitingList.data.size - orig(this.waitingList.data.size) - 1 == 0
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.getName():::ENTER
this.waitingList == hugo.util.structure.PriorityQueue.this
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.waitingList.data.size one of { 0, 4, 5 }
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.getName():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.waitingList == hugo.util.structure.PriorityQueue.this
this.waitingList == orig(this.waitingList)
this.waitingList.data == orig(this.waitingList.data)
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
this.waitingList.data.head == orig(this.waitingList.data.head)
this.waitingList.data.size == orig(this.waitingList.data.size)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.waitingList.data.size one of { 0, 4, 5 }
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.info():::ENTER
this.waitingList == hugo.util.structure.PriorityQueue.this
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.waitingList.data.size one of { 0, 4, 5 }
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.info():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.waitingList == hugo.util.structure.PriorityQueue.this
this.waitingList == orig(this.waitingList)
this.waitingList.data == orig(this.waitingList.data)
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
this.waitingList.data.head == orig(this.waitingList.data.head)
this.waitingList.data.size == orig(this.waitingList.data.size)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.waitingList.data.size one of { 0, 4, 5 }
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.noOneWaiting():::ENTER
this == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.name == hugo.project.hospital.Hospital$Department.this.waitingRoom.name
this.waitingList == hugo.util.structure.PriorityQueue.this
this.waitingList == hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this has only one value
this.name has only one value
this.name.toString == "WR Neurology"
this.waitingList has only one value
this.waitingList.data has only one value
hugo.util.structure.PriorityQueue.this has only one value
this.waitingList.data.head has only one value
this.waitingList.data.size == 5
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == "WR Neurology"
hugo.project.hospital.Hospital$Department.this.wardsForSingle has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == 3
hugo.project.hospital.Hospital$Department.this.deviceList has only one value
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.noOneWaiting():::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.waitingRoom.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
this.name.toString == orig(this.name.toString)
this.waitingList == hugo.util.structure.PriorityQueue.this
this.waitingList == hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList
this.waitingList == orig(this.waitingList)
this.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
this.waitingList.data == orig(this.waitingList.data)
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
this.waitingList.data.head == orig(this.waitingList.data.head)
this.waitingList.data.size == orig(this.waitingList.data.size)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(this)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.name has only one value
this.name.toString == "WR Neurology"
this.waitingList has only one value
this.waitingList.data has only one value
hugo.util.structure.PriorityQueue.this has only one value
this.waitingList.data.head has only one value
this.waitingList.data.size == 5
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == "WR Neurology"
hugo.project.hospital.Hospital$Department.this.wardsForSingle has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == 3
hugo.project.hospital.Hospital$Department.this.deviceList has only one value
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
return == false
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.noOneWaiting():::EXIT;condition="not(return == true)"
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.numberOfPeopleWaiting():::ENTER
this.waitingList == hugo.util.structure.PriorityQueue.this
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.waitingList.data.size one of { 0, 4, 5 }
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.numberOfPeopleWaiting():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.waitingList == hugo.util.structure.PriorityQueue.this
this.waitingList == orig(this.waitingList)
this.waitingList.data == orig(this.waitingList.data)
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
this.waitingList.data.head == orig(this.waitingList.data.head)
this.waitingList.data.size == orig(this.waitingList.data.size)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.waitingList.data.size one of { 0, 4, 5 }
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return one of { 0, 4, 5 }
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.toString():::ENTER
this.waitingList.data.size one of { 0, 4, 5 }
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
===========================================================================
hugo.project.hospital.Hospital$Department$WaitingRoom.toString():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.waitingList == orig(this.waitingList)
this.waitingList.data == orig(this.waitingList.data)
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
this.waitingList.data.head == orig(this.waitingList.data.head)
this.waitingList.data.size == orig(this.waitingList.data.size)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == orig(this.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.waitingList.data.size one of { 0, 4, 5 }
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return != null
===========================================================================
hugo.project.hospital.Hospital$Department$Ward:::OBJECT
this.capacity one of { 1, 2, 3 }
this.patients != null
this.patients.head.el1 != null
this.patients.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Patient.class
this.patients.size one of { 0, 1, 2 }
hugo.project.hospital.Hospital$Department.this.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 0, 1, 2 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList.size one of { 0, 1, 2 }
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
this.roomType has only one value
this.roomType != null
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WAITINGROOM != null
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.WARD != null
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[] elements != null
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.Ward(hugo.project.hospital.Hospital$Department, int, int):::ENTER
hugo.project.hospital.Hospital$Department.this != null
hugo.project.hospital.Hospital$Department.this.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList != null
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 0, 1 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size >= 0
hugo.project.hospital.Hospital$Department.this.deviceList == null
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
arg2 one of { 1, 2, 3 }
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.Ward(hugo.project.hospital.Hospital$Department, int, int):::EXIT
this.number == orig(arg1)
this.capacity == orig(arg2)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WARD
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
this.patients.head == null
this.patients.size == 0
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 0, 1 }
hugo.project.hospital.Hospital$Department.this.deviceList == null
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
this.capacity > this.patients.size
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.addPatient(hugo.project.hospital.Hospital$Patient):::ENTER
this.patients == hugo.util.structure.LinkedList.this
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.roomType == hugo.project.hospital.RoomType.WARD
this.capacity one of { 1, 2 }
this.patients.head.el2 == null
this.patients.size one of { 0, 1 }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
this.capacity > this.patients.size
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.addPatient(hugo.project.hospital.Hospital$Patient):::EXIT
this.number == orig(this.number)
this.capacity == orig(this.capacity)
this.patients == hugo.util.structure.LinkedList.this
this.patients == orig(this.patients)
this.patients == orig(hugo.util.structure.LinkedList.this)
this.patients.head.el1.getClass().getName() == orig(this.patients.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WARD
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(this.roomType)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.severity == orig(arg0.severity)
arg0.wantsSingleRoom == orig(arg0.wantsSingleRoom)
this.capacity one of { 1, 2 }
this.patients.size one of { 1, 2 }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
this.capacity >= this.patients.size
this.capacity > orig(this.patients.size)
this.patients.head.el1.getClass().getName() != hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.patients.head.el1.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
this.patients.size > orig(this.patients.size)
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.getName():::ENTER
this.patients == hugo.util.structure.LinkedList.this
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 1, 2 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
this.capacity >= this.patients.size
this.patients.size % this.capacity == 0
this.patients.head.el1.getClass().getName() != hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.patients.head.el1.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.getName():::EXIT
this.number == orig(this.number)
this.capacity == orig(this.capacity)
this.patients == hugo.util.structure.LinkedList.this
this.patients == orig(this.patients)
this.patients.head == orig(this.patients.head)
this.patients.head.el1 == orig(this.patients.head.el1)
this.patients.head.el1.getClass().getName() == orig(this.patients.head.el1.getClass().getName())
this.patients.head.el2 == orig(this.patients.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.patients.size == orig(this.patients.size)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == orig(this.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 1, 2 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return != null
this.capacity >= this.patients.size
this.patients.size % this.capacity == 0
this.patients.head.el1.getClass().getName() != hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.patients.head.el1.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.info():::ENTER
this.patients == hugo.util.structure.LinkedList.this
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 1, 2 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
this.capacity >= this.patients.size
this.patients.size % this.capacity == 0
this.patients.head.el1.getClass().getName() != hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.patients.head.el1.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.info():::EXIT
this.number == orig(this.number)
this.capacity == orig(this.capacity)
this.patients == hugo.util.structure.LinkedList.this
this.patients == orig(this.patients)
this.patients.head == orig(this.patients.head)
this.patients.head.el1 == orig(this.patients.head.el1)
this.patients.head.el1.getClass().getName() == orig(this.patients.head.el1.getClass().getName())
this.patients.head.el2 == orig(this.patients.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.patients.size == orig(this.patients.size)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == orig(this.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 1, 2 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return != null
this.capacity >= this.patients.size
this.patients.size % this.capacity == 0
this.patients.head.el1.getClass().getName() != hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.patients.head.el1.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.isFull():::ENTER
this.patients == hugo.util.structure.LinkedList.this
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.roomType == hugo.project.hospital.RoomType.WARD
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
this.capacity >= this.patients.size
this.patients.head.el1.getClass().getName() != hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.patients.head.el1.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.isFull():::EXIT
this.number == orig(this.number)
this.capacity == orig(this.capacity)
this.patients == hugo.util.structure.LinkedList.this
this.patients == orig(this.patients)
this.patients.head == orig(this.patients.head)
this.patients.head.el1 == orig(this.patients.head.el1)
this.patients.head.el1.getClass().getName() == orig(this.patients.head.el1.getClass().getName())
this.patients.head.el2 == orig(this.patients.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.patients.size == orig(this.patients.size)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WARD
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(this.roomType)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
(return == false)  <==>  (this.capacity > this.patients.size)
(return == false)  ==>  (hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" })
(return == false)  ==>  (hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" })
(return == false)  ==>  (hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 })
(return == false)  ==>  (this.capacity one of { 1, 2, 3 })
(return == false)  ==>  (this.patients.head.el2 == null)
(return == false)  ==>  (this.patients.size one of { 0, 1 })
(return == true)  <==>  (this.capacity == this.patients.size)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this has only one value)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.deviceList has only one value)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.name has only one value)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology")
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.waitingRoom has only one value)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.waitingRoom.name has only one value)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == "WR Neurology")
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList has only one value)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.wardsForMulti has only one value)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.wardsForMulti.head has only one value)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == 3)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.wardsForSingle has only one value)
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.wardsForSingle.head has only one value)
(return == true)  ==>  (this.capacity one of { 1, 2 })
(return == true)  ==>  (this.patients.head != null)
(return == true)  ==>  (this.patients.size one of { 1, 2 })
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
this.capacity >= this.patients.size
this.patients.head.el1.getClass().getName() != hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.patients.head.el1.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.isFull():::EXIT;condition="return == true"
this.capacity == this.patients.size
this.capacity == orig(this.patients.size)
this.capacity one of { 1, 2 }
this.patients.head != null
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == "WR Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == 3
hugo.project.hospital.Hospital$Department.this.deviceList has only one value
return == true
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.isFull():::EXIT;condition="not(return == true)"
this.patients.head.el2 == null
this.patients.size one of { 0, 1 }
return == false
this.capacity > this.patients.size
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.removePatient(hugo.project.hospital.Hospital$Patient):::ENTER
this.capacity == this.patients.size
this.patients == hugo.util.structure.LinkedList.this
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.roomType == hugo.project.hospital.RoomType.WARD
this has only one value
this.number == 108
this.capacity == 2
this.patients has only one value
this.patients.head has only one value
this.patients.head.el1 has only one value
this.patients.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == "WR Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == 3
hugo.project.hospital.Hospital$Department.this.deviceList has only one value
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "p5"
arg0.severity == 0
arg0.wantsSingleRoom == false
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.removePatient(hugo.project.hospital.Hospital$Patient):::EXIT
this.number == orig(this.number)
this.capacity == orig(this.capacity)
this.capacity == orig(this.patients.size)
this.patients == hugo.util.structure.LinkedList.this
this.patients == orig(this.patients)
this.patients.head.el1.getClass().getName() == orig(this.patients.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == hugo.project.hospital.RoomType.WARD
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(this.roomType)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.severity == orig(arg0.severity)
arg0.wantsSingleRoom == orig(arg0.wantsSingleRoom)
this.number == 108
this.capacity == 2
this.patients has only one value
this.patients.head has only one value
this.patients.head.el1 has only one value
this.patients.head.el2 == null
hugo.util.structure.LinkedList.this has only one value
this.patients.size == 1
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name has only one value
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == "WR Neurology"
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == 2
hugo.project.hospital.Hospital$Department.this.wardsForMulti has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head has only one value
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == 3
hugo.project.hospital.Hospital$Department.this.deviceList has only one value
hugo.project.hospital.Hospital$Department.this.deviceList.head == null
hugo.project.hospital.Hospital$Department.this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0.name has only one value
arg0.name.toString == "p5"
arg0.severity == 0
arg0.wantsSingleRoom == false
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.toString():::ENTER
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 1, 2 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
===========================================================================
hugo.project.hospital.Hospital$Department$Ward.toString():::EXIT
this.number == orig(this.number)
this.capacity == orig(this.capacity)
this.patients == orig(this.patients)
this.patients.head == orig(this.patients.head)
this.patients.head.el1 == orig(this.patients.head.el1)
this.patients.head.el1.getClass().getName() == orig(this.patients.head.el1.getClass().getName())
this.patients.head.el2 == orig(this.patients.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.patients.size == orig(this.patients.size)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name)
hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom.roomType)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.head)
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle.size)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.head)
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti.size)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital$Department.this.deviceList.head == orig(hugo.project.hospital.Hospital$Department.this.deviceList.head)
hugo.project.hospital.Hospital$Department.this.deviceList.size == orig(hugo.project.hospital.Hospital$Department.this.deviceList.size)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.roomType == orig(this.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.wardsForSingle.head != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle.size one of { 1, 2 }
hugo.project.hospital.Hospital$Department.this.wardsForMulti.head != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti.size one of { 2, 3 }
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return != null
===========================================================================
hugo.project.hospital.Hospital$Department:::OBJECT
this.waitingRoom.name != null
this.waitingRoom.waitingList != null
this.waitingRoom.waitingList.data != null
hugo.project.hospital.Hospital$Department.this.name != null
hugo.project.hospital.Hospital$Department.this.waitingRoom != null
hugo.project.hospital.Hospital$Department.this.wardsForSingle != null
hugo.project.hospital.Hospital$Department.this.wardsForMulti != null
hugo.project.hospital.Hospital$Department.this.deviceList != null
hugo.project.hospital.Hospital.this has only one value
this.waitingRoom.roomType has only one value
this.waitingRoom.roomType != null
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WAITINGROOM != null
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.WARD != null
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[] elements != null
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
this.wardsForSingle.head != null
this.wardsForSingle.head.el1 != null
this.wardsForSingle.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
this.wardsForSingle.size one of { 1, 2 }
this.wardsForMulti.head != null
this.wardsForMulti.head.el1 != null
this.wardsForMulti.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
this.wardsForMulti.head.el2 != null
this.wardsForMulti.size one of { 2, 3 }
this.deviceList.head.el1 != null
this.deviceList.size one of { 0, 1, 2 }
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentMap.nodes has only one value
hugo.project.hospital.Hospital.this.departmentMap.nodes != null
hugo.project.hospital.Hospital.this.reception.register has only one value
hugo.project.hospital.Hospital.this.reception.register != null
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
===========================================================================
hugo.project.hospital.Hospital$Department.Department(hugo.project.hospital.Hospital):::ENTER
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$Department.Department(hugo.project.hospital.Hospital):::EXIT
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.name == null
this.waitingRoom == null
this.wardsForSingle == null
this.wardsForMulti == null
this.deviceList == null
===========================================================================
hugo.project.hospital.Hospital$Department.addDevice(java.lang.String, int):::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name.toString one of { "Oncology", "Radiotherapy" }
this.waitingRoom.name.toString one of { "WR Oncology", "WR Radiotherapy" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Oncology", "Radiotherapy" }
this.deviceList.head.el1 has only one value
this.deviceList.head.el1.getClass().getName() == hugo.project.hospital.NeedleDevice.class
this.deviceList.head.el2 == null
this.deviceList.size one of { 0, 1 }
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size one of { 3, 4 }
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
arg0.toString one of { "needle", "stethoscope" }
arg1 one of { 1, 2 }
===========================================================================
hugo.project.hospital.Hospital$Department.addDevice(java.lang.String, int):::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
arg0.toString == orig(arg0.toString)
this.name.toString one of { "Oncology", "Radiotherapy" }
this.waitingRoom.name.toString one of { "WR Oncology", "WR Radiotherapy" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Oncology", "Radiotherapy" }
this.deviceList.size one of { 1, 2 }
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size one of { 3, 4 }
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
arg0.toString one of { "needle", "stethoscope" }
===========================================================================
hugo.project.hospital.Hospital$Department.addPatient(hugo.project.hospital.Hospital$Patient):::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name != null
this.name.toString one of { "Cardiology", "Neurology" }
this.waitingRoom != null
this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
this.wardsForSingle != null
this.wardsForSingle.head.el2 != null
this.wardsForSingle.size == 2
this.wardsForMulti != null
this.deviceList != null
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
arg0 != null
arg0.name != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department.addPatient(hugo.project.hospital.Hospital$Patient):::EXIT294
===========================================================================
hugo.project.hospital.Hospital$Department.addPatient(hugo.project.hospital.Hospital$Patient):::EXIT298
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
arg0.severity one of { 0, 1, 3 }
orig(this) has only one value
orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class
===========================================================================
hugo.project.hospital.Hospital$Department.addPatient(hugo.project.hospital.Hospital$Patient):::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.severity == orig(arg0.severity)
arg0.wantsSingleRoom == orig(arg0.wantsSingleRoom)
this.name != null
this.name.toString one of { "Cardiology", "Neurology" }
this.waitingRoom != null
this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
this.wardsForSingle != null
this.wardsForSingle.head.el2 != null
this.wardsForSingle.size == 2
this.wardsForMulti != null
this.deviceList != null
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
arg0.name != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() != orig(this.getClass().getName())
===========================================================================
hugo.project.hospital.Hospital$Department.addPatientFromWaitingRoom():::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
===========================================================================
hugo.project.hospital.Hospital$Department.addPatientFromWaitingRoom():::EXIT324
===========================================================================
hugo.project.hospital.Hospital$Department.addPatientFromWaitingRoom():::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
orig(this) has only one value
orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class
===========================================================================
hugo.project.hospital.Hospital$Department.getName():::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name != null
this.waitingRoom != null
this.wardsForSingle != null
this.wardsForMulti != null
this.deviceList != null
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != this.deviceList.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.deviceList.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() != this.deviceList.head.el1.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department.getName():::EXIT
this.name == return
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == return
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.head.el1 == orig(this.deviceList.head.el1)
this.deviceList.head.el1.getClass().getName() == orig(this.deviceList.head.el1.getClass().getName())
this.deviceList.head.el2 == orig(this.deviceList.head.el2)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
return == orig(this.name)
return == orig(hugo.project.hospital.Hospital$Department.this.name)
this.waitingRoom != null
this.wardsForSingle != null
this.wardsForMulti != null
this.deviceList != null
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.deviceList.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() != this.deviceList.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() != orig(this.getClass().getName())
this.deviceList.head.el1.getClass().getName() != orig(this.getClass().getName())
===========================================================================
hugo.project.hospital.Hospital$Department.hasDevice(java.lang.String):::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name.toString one of { "Oncology", "Radiology", "Radiotherapy" }
this.waitingRoom.name.toString one of { "WR Oncology", "WR Radiology", "WR Radiotherapy" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Oncology", "Radiology", "Radiotherapy" }
this.deviceList.head.el1.getClass().getName() == hugo.project.hospital.NeedleDevice.class
this.deviceList.head.el2 == null
this.deviceList.size one of { 0, 1 }
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size one of { 3, 4, 6 }
arg0.toString one of { "needle", "stethoscope" }
===========================================================================
hugo.project.hospital.Hospital$Department.hasDevice(java.lang.String):::EXIT354
return.getClass().getName() == orig(this.deviceList.head.el1.getClass().getName())
this.name has only one value
this.name.toString == "Radiotherapy"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Radiotherapy"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Radiotherapy"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 == null
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 1
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head has only one value
this.deviceList.head.el1 has only one value
this.deviceList.size == 1
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0.toString == "needle"
return has only one value
orig(this) has only one value
orig(this.getClass().getName()) == hugo.project.hospital.Hospital$RadiotherapyDepartment.class
===========================================================================
hugo.project.hospital.Hospital$Department.hasDevice(java.lang.String):::EXIT356
this.deviceList.head.el1 has only one value
return == null
===========================================================================
hugo.project.hospital.Hospital$Department.hasDevice(java.lang.String):::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.head.el1 == orig(this.deviceList.head.el1)
this.deviceList.head.el1.getClass().getName() == return.getClass().getName()
this.deviceList.head.el1.getClass().getName() == orig(this.deviceList.head.el1.getClass().getName())
this.deviceList.head.el2 == orig(this.deviceList.head.el2)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
arg0.toString == orig(arg0.toString)
return.type == orig(arg0)
(this.deviceList.head has only one value)  <==>  (return has only one value)
(this.deviceList.head has only one value)  ==>  (arg0.toString == "needle")
(this.deviceList.head has only one value)  ==>  (hugo.project.hospital.Hospital$Department.this.name.toString == "Radiotherapy")
(this.deviceList.head has only one value)  ==>  (hugo.project.hospital.Hospital.this.departmentList.size == 6)
(this.deviceList.head has only one value)  ==>  (hugo.project.hospital.Hospital.this.departmentMap has only one value)
(this.deviceList.head has only one value)  ==>  (hugo.project.hospital.Hospital.this.reception has only one value)
(this.deviceList.head has only one value)  ==>  (hugo.util.structure.LinkedList.this has only one value)
(this.deviceList.head has only one value)  ==>  (orig(arg0) has only one value)
(this.deviceList.head has only one value)  ==>  (orig(this) has only one value)
(this.deviceList.head has only one value)  ==>  (orig(this.getClass().getName()) == hugo.project.hospital.Hospital$RadiotherapyDepartment.class)
(this.deviceList.head has only one value)  ==>  (return.getClass().getName() == hugo.project.hospital.NeedleDevice.class)
(this.deviceList.head has only one value)  ==>  (return.type == orig(arg0))
(this.deviceList.head has only one value)  ==>  (return.type has only one value)
(this.deviceList.head has only one value)  ==>  (return.type.toString == "needle")
(this.deviceList.head has only one value)  ==>  (this.deviceList has only one value)
(this.deviceList.head has only one value)  ==>  (this.deviceList.head.el1.getClass().getName() == return.getClass().getName())
(this.deviceList.head has only one value)  ==>  (this.deviceList.size == 1)
(this.deviceList.head has only one value)  ==>  (this.name has only one value)
(this.deviceList.head has only one value)  ==>  (this.name.toString == "Radiotherapy")
(this.deviceList.head has only one value)  ==>  (this.waitingRoom has only one value)
(this.deviceList.head has only one value)  ==>  (this.waitingRoom.name has only one value)
(this.deviceList.head has only one value)  ==>  (this.waitingRoom.name.toString == "WR Radiotherapy")
(this.deviceList.head has only one value)  ==>  (this.waitingRoom.waitingList has only one value)
(this.deviceList.head has only one value)  ==>  (this.waitingRoom.waitingList.data has only one value)
(this.deviceList.head has only one value)  ==>  (this.wardsForMulti has only one value)
(this.deviceList.head has only one value)  ==>  (this.wardsForMulti.head has only one value)
(this.deviceList.head has only one value)  ==>  (this.wardsForMulti.head.el1 has only one value)
(this.deviceList.head has only one value)  ==>  (this.wardsForMulti.head.el2 has only one value)
(this.deviceList.head has only one value)  ==>  (this.wardsForMulti.size == 3)
(this.deviceList.head has only one value)  ==>  (this.wardsForSingle has only one value)
(this.deviceList.head has only one value)  ==>  (this.wardsForSingle.head has only one value)
(this.deviceList.head has only one value)  ==>  (this.wardsForSingle.head.el1 has only one value)
(this.deviceList.head has only one value)  ==>  (this.wardsForSingle.head.el2 == null)
(this.deviceList.head has only one value)  ==>  (this.wardsForSingle.size == 1)
this.name.toString one of { "Oncology", "Radiology", "Radiotherapy" }
this.waitingRoom.name.toString one of { "WR Oncology", "WR Radiology", "WR Radiotherapy" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Oncology", "Radiology", "Radiotherapy" }
this.deviceList.head.el1.getClass().getName() == hugo.project.hospital.NeedleDevice.class
this.deviceList.head.el2 == null
this.deviceList.size one of { 0, 1 }
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size one of { 3, 4, 6 }
arg0.toString one of { "needle", "stethoscope" }
return.getClass().getName() == hugo.project.hospital.NeedleDevice.class
return.type has only one value
return.type.toString == "needle"
return.amount == 2
===========================================================================
hugo.project.hospital.Hospital$Department.info():::ENTER
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name != null
this.waitingRoom != null
this.wardsForSingle != null
this.wardsForMulti != null
this.deviceList != null
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department.info():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.head.el1 == orig(this.deviceList.head.el1)
this.deviceList.head.el1.getClass().getName() == orig(this.deviceList.head.el1.getClass().getName())
this.deviceList.head.el2 == orig(this.deviceList.head.el2)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.name != null
this.waitingRoom != null
this.wardsForSingle != null
this.wardsForMulti != null
this.deviceList != null
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() != orig(this.getClass().getName())
===========================================================================
hugo.project.hospital.Hospital$Department.isForMultiFull():::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name != null
this.name.toString one of { "Cardiology", "Neurology" }
this.waitingRoom != null
this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
this.wardsForSingle != null
this.wardsForSingle.head.el2 != null
this.wardsForSingle.size == 2
this.wardsForMulti != null
this.deviceList != null
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department.isForMultiFull():::EXIT270
return == false
===========================================================================
hugo.project.hospital.Hospital$Department.isForMultiFull():::EXIT270;condition="not(return == true)"
===========================================================================
hugo.project.hospital.Hospital$Department.isForMultiFull():::EXIT272
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
return == true
orig(this) has only one value
orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class
===========================================================================
hugo.project.hospital.Hospital$Department.isForMultiFull():::EXIT272;condition="return == true"
===========================================================================
hugo.project.hospital.Hospital$Department.isForMultiFull():::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
(return == false)  ==>  (hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" })
(return == false)  ==>  (this.name.toString one of { "Cardiology", "Neurology" })
(return == false)  ==>  (this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" })
(return == false)  ==>  (this.wardsForMulti.size one of { 2, 3 })
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology")
(return == true)  ==>  (hugo.util.structure.LinkedList.this has only one value)
(return == true)  ==>  (orig(this) has only one value)
(return == true)  ==>  (orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class)
(return == true)  ==>  (this.deviceList has only one value)
(return == true)  ==>  (this.name has only one value)
(return == true)  ==>  (this.name.toString == "Neurology")
(return == true)  ==>  (this.waitingRoom has only one value)
(return == true)  ==>  (this.waitingRoom.name has only one value)
(return == true)  ==>  (this.waitingRoom.name.toString == "WR Neurology")
(return == true)  ==>  (this.waitingRoom.waitingList has only one value)
(return == true)  ==>  (this.waitingRoom.waitingList.data has only one value)
(return == true)  ==>  (this.wardsForMulti has only one value)
(return == true)  ==>  (this.wardsForMulti.head has only one value)
(return == true)  ==>  (this.wardsForMulti.head.el1 has only one value)
(return == true)  ==>  (this.wardsForMulti.head.el2 has only one value)
(return == true)  ==>  (this.wardsForMulti.size == 3)
(return == true)  ==>  (this.wardsForSingle has only one value)
(return == true)  ==>  (this.wardsForSingle.head has only one value)
(return == true)  ==>  (this.wardsForSingle.head.el1 has only one value)
(return == true)  ==>  (this.wardsForSingle.head.el2 has only one value)
this.name != null
this.name.toString one of { "Cardiology", "Neurology" }
this.waitingRoom != null
this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
this.wardsForSingle != null
this.wardsForSingle.head.el2 != null
this.wardsForSingle.size == 2
this.wardsForMulti != null
this.deviceList != null
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() != orig(this.getClass().getName())
===========================================================================
hugo.project.hospital.Hospital$Department.isForMultiFull():::EXIT;condition="return == true"
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
return == true
orig(this) has only one value
orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class
===========================================================================
hugo.project.hospital.Hospital$Department.isForMultiFull():::EXIT;condition="not(return == true)"
return == false
===========================================================================
hugo.project.hospital.Hospital$Department.isForSingleFull():::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
===========================================================================
hugo.project.hospital.Hospital$Department.isForSingleFull():::EXIT278
===========================================================================
hugo.project.hospital.Hospital$Department.isForSingleFull():::EXIT278;condition="return == true"
===========================================================================
hugo.project.hospital.Hospital$Department.isForSingleFull():::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
return == true
orig(this) has only one value
orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class
===========================================================================
hugo.project.hospital.Hospital$Department.isForSingleFull():::EXIT;condition="return == true"
===========================================================================
hugo.project.hospital.Hospital$Department.isFull():::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name != null
this.name.toString one of { "Cardiology", "Neurology" }
this.waitingRoom != null
this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
this.wardsForSingle != null
this.wardsForSingle.head.el2 != null
this.wardsForSingle.size == 2
this.wardsForMulti != null
this.deviceList != null
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.Hospital$Department.this.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
hugo.project.hospital.Hospital$Department.this.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Department.isFull():::EXIT281
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
return == true
orig(this) has only one value
orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class
===========================================================================
hugo.project.hospital.Hospital$Department.isFull():::EXIT281;condition="return == true"
===========================================================================
hugo.project.hospital.Hospital$Department.isFull():::EXIT282
return == false
===========================================================================
hugo.project.hospital.Hospital$Department.isFull():::EXIT282;condition="not(return == true)"
===========================================================================
hugo.project.hospital.Hospital$Department.isFull():::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
(return == false)  ==>  (hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" })
(return == false)  ==>  (this.name.toString one of { "Cardiology", "Neurology" })
(return == false)  ==>  (this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" })
(return == false)  ==>  (this.wardsForMulti.size one of { 2, 3 })
(return == true)  ==>  (hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology")
(return == true)  ==>  (hugo.util.structure.LinkedList.this has only one value)
(return == true)  ==>  (orig(this) has only one value)
(return == true)  ==>  (orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class)
(return == true)  ==>  (this.deviceList has only one value)
(return == true)  ==>  (this.name has only one value)
(return == true)  ==>  (this.name.toString == "Neurology")
(return == true)  ==>  (this.waitingRoom has only one value)
(return == true)  ==>  (this.waitingRoom.name has only one value)
(return == true)  ==>  (this.waitingRoom.name.toString == "WR Neurology")
(return == true)  ==>  (this.waitingRoom.waitingList has only one value)
(return == true)  ==>  (this.waitingRoom.waitingList.data has only one value)
(return == true)  ==>  (this.wardsForMulti has only one value)
(return == true)  ==>  (this.wardsForMulti.head has only one value)
(return == true)  ==>  (this.wardsForMulti.head.el1 has only one value)
(return == true)  ==>  (this.wardsForMulti.head.el2 has only one value)
(return == true)  ==>  (this.wardsForMulti.size == 3)
(return == true)  ==>  (this.wardsForSingle has only one value)
(return == true)  ==>  (this.wardsForSingle.head has only one value)
(return == true)  ==>  (this.wardsForSingle.head.el1 has only one value)
(return == true)  ==>  (this.wardsForSingle.head.el2 has only one value)
this.name != null
this.name.toString one of { "Cardiology", "Neurology" }
this.waitingRoom != null
this.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
this.wardsForSingle != null
this.wardsForSingle.head.el2 != null
this.wardsForSingle.size == 2
this.wardsForMulti != null
this.deviceList != null
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != this.wardsForSingle.head.el1.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != orig(this.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() != orig(this.getClass().getName())
===========================================================================
hugo.project.hospital.Hospital$Department.isFull():::EXIT;condition="return == true"
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
return == true
orig(this) has only one value
orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class
===========================================================================
hugo.project.hospital.Hospital$Department.isFull():::EXIT;condition="not(return == true)"
return == false
===========================================================================
hugo.project.hospital.Hospital$Department.signOutPatient(hugo.project.hospital.Hospital$Patient):::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "p5"
arg0.severity == 0
arg0.wantsSingleRoom == false
===========================================================================
hugo.project.hospital.Hospital$Department.signOutPatient(hugo.project.hospital.Hospital$Patient):::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.severity == orig(arg0.severity)
arg0.wantsSingleRoom == orig(arg0.wantsSingleRoom)
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0.name has only one value
arg0.name.toString == "p5"
arg0.severity == 0
arg0.wantsSingleRoom == false
orig(this) has only one value
orig(this.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class
===========================================================================
hugo.project.hospital.Hospital$Department.signOutPatient(hugo.project.hospital.Hospital$Reception$PatientInfo):::ENTER
this == hugo.project.hospital.Hospital$Department.this
this.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == arg0.department.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == arg0.department.waitingRoom
hugo.project.hospital.Hospital$Department.this == arg0.department
hugo.project.hospital.Hospital$Department.this.getClass().getName() == arg0.department.getClass().getName()
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WARD == arg0.room.roomType
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == arg0.department.wardsForSingle
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this.wardsForSingle.head.el1.getClass().getName() == arg0.room.getClass().getName()
this.wardsForMulti == arg0.department.wardsForMulti
this.deviceList == arg0.department.deviceList
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception.register == hugo.project.hospital.Hospital$Reception.this.register
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0 has only one value
arg0.patient has only one value
arg0.patient.name has only one value
arg0.patient.name.toString == "p5"
arg0.patient.severity == 0
arg0.patient.wantsSingleRoom == false
arg0.department has only one value
arg0.department.name.toString == "Neurology"
arg0.room has only one value
hugo.project.hospital.Hospital$Reception.this has only one value
===========================================================================
hugo.project.hospital.Hospital$Department.signOutPatient(hugo.project.hospital.Hospital$Reception$PatientInfo):::EXIT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.name == arg0.department.name
this.name == orig(this.name)
this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.name == orig(arg0.department.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.waitingRoom == arg0.department.waitingRoom
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.waitingRoom == orig(arg0.department.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == arg0.department.getClass().getName()
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == arg0.room.roomType
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.WARD == orig(arg0.room.roomType)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle == arg0.department.wardsForSingle
this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle == orig(arg0.department.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == arg0.room.getClass().getName()
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == arg0.department.wardsForMulti
this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti == orig(arg0.department.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el1.getClass().getName() == arg0.room.getClass().getName()
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == arg0.department.deviceList
this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.deviceList == orig(this.deviceList)
this.deviceList == orig(arg0.department.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == hugo.project.hospital.Hospital$Reception.this.register
arg0.patient == orig(arg0.patient)
arg0.patient.name == orig(arg0.patient.name)
arg0.patient.name.toString == orig(arg0.patient.name.toString)
arg0.patient.severity == orig(arg0.patient.severity)
arg0.patient.wantsSingleRoom == orig(arg0.patient.wantsSingleRoom)
arg0.department == orig(this)
arg0.department == orig(arg0.department)
arg0.department.getClass().getName() == orig(this.getClass().getName())
arg0.department.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
arg0.department.getClass().getName() == orig(arg0.department.getClass().getName())
arg0.department.name.toString == orig(arg0.department.name.toString)
arg0.room == orig(arg0.room)
arg0.room.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
arg0.room.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
arg0.room.getClass().getName() == orig(arg0.room.getClass().getName())
hugo.project.hospital.Hospital$Reception.this == orig(hugo.project.hospital.Hospital$Reception.this)
hugo.project.hospital.Hospital$Reception.this.register == orig(hugo.project.hospital.Hospital.this.reception.register)
hugo.project.hospital.Hospital$Reception.this.register == orig(hugo.project.hospital.Hospital$Reception.this.register)
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0.patient has only one value
arg0.patient.name has only one value
arg0.patient.name.toString == "p5"
arg0.patient.severity == 0
arg0.patient.wantsSingleRoom == false
arg0.department has only one value
arg0.department.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
arg0.department.name.toString == "Neurology"
arg0.room has only one value
arg0.room.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
hugo.project.hospital.Hospital$Reception.this has only one value
hugo.project.hospital.Hospital$Reception.this.register has only one value
orig(this) has only one value
===========================================================================
hugo.project.hospital.Hospital$Department.toString():::ENTER
this.name != null
this.waitingRoom != null
this.wardsForSingle != null
this.wardsForMulti != null
this.deviceList != null
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
===========================================================================
hugo.project.hospital.Hospital$Department.toString():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.waitingRoom == orig(this.waitingRoom)
this.waitingRoom.name == orig(this.waitingRoom.name)
this.waitingRoom.name.toString == orig(this.waitingRoom.name.toString)
this.waitingRoom.waitingList == orig(this.waitingRoom.waitingList)
this.waitingRoom.waitingList.data == orig(this.waitingRoom.waitingList.data)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
hugo.project.hospital.Hospital$Department.this.name == orig(hugo.project.hospital.Hospital$Department.this.name)
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
hugo.project.hospital.Hospital$Department.this.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
hugo.project.hospital.Hospital$Department.this.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
hugo.project.hospital.Hospital$Department.this.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
this.waitingRoom.roomType == orig(this.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
this.wardsForSingle == orig(this.wardsForSingle)
this.wardsForSingle.head == orig(this.wardsForSingle.head)
this.wardsForSingle.head.el1 == orig(this.wardsForSingle.head.el1)
this.wardsForSingle.head.el1.getClass().getName() == orig(this.wardsForSingle.head.el1.getClass().getName())
this.wardsForSingle.head.el2 == orig(this.wardsForSingle.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.wardsForSingle.size == orig(this.wardsForSingle.size)
this.wardsForMulti == orig(this.wardsForMulti)
this.wardsForMulti.head == orig(this.wardsForMulti.head)
this.wardsForMulti.head.el1 == orig(this.wardsForMulti.head.el1)
this.wardsForMulti.head.el1.getClass().getName() == orig(this.wardsForMulti.head.el1.getClass().getName())
this.wardsForMulti.head.el2 == orig(this.wardsForMulti.head.el2)
this.wardsForMulti.size == orig(this.wardsForMulti.size)
this.deviceList == orig(this.deviceList)
this.deviceList.head == orig(this.deviceList.head)
this.deviceList.head.el1 == orig(this.deviceList.head.el1)
this.deviceList.head.el1.getClass().getName() == orig(this.deviceList.head.el1.getClass().getName())
this.deviceList.head.el2 == orig(this.deviceList.head.el2)
this.deviceList.size == orig(this.deviceList.size)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.name != null
this.waitingRoom != null
this.wardsForSingle != null
this.wardsForMulti != null
this.deviceList != null
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
return != null
===========================================================================
hugo.project.hospital.Hospital$NeurologyDepartment:::OBJECT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this has only one value
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head == null
hugo.project.hospital.Hospital.this.departmentList.size == 0
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
this.name has only one value
this.name.toString == "Neurology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Neurology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Neurology"
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
===========================================================================
hugo.project.hospital.Hospital$NeurologyDepartment.NeurologyDepartment(hugo.project.hospital.Hospital):::ENTER
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head == null
hugo.project.hospital.Hospital.this.departmentList.size == 0
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$NeurologyDepartment.NeurologyDepartment(hugo.project.hospital.Hospital):::EXIT
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
===========================================================================
hugo.project.hospital.Hospital$OncologyDepartment:::OBJECT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this has only one value
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 4
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
this.name has only one value
this.name.toString == "Oncology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Oncology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$OncologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Oncology"
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 2
this.deviceList has only one value
this.deviceList.head has only one value
this.deviceList.head.el1 has only one value
this.deviceList.head.el1.getClass().getName() == hugo.project.hospital.StethoscopeDevice.class
this.deviceList.head.el2 has only one value
this.deviceList.size == 2
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
===========================================================================
hugo.project.hospital.Hospital$OncologyDepartment.OncologyDepartment(hugo.project.hospital.Hospital):::ENTER
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 4
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$OncologyDepartment.OncologyDepartment(hugo.project.hospital.Hospital):::EXIT
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
===========================================================================
hugo.project.hospital.Hospital$Patient:::OBJECT
this.name != null
this.severity >= 0
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.departmentMap.nodes has only one value
hugo.project.hospital.Hospital.this.departmentMap.nodes != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.Hospital.this.reception.register has only one value
hugo.project.hospital.Hospital.this.reception.register != null
===========================================================================
hugo.project.hospital.Hospital$Patient.Patient(hugo.project.hospital.Hospital, java.lang.String, int, boolean):::ENTER
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this != null
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.departmentMap.nodes has only one value
hugo.project.hospital.Hospital.this.departmentMap.nodes != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
hugo.project.hospital.Hospital.this.reception.register has only one value
hugo.project.hospital.Hospital.this.reception.register != null
arg1 != null
===========================================================================
hugo.project.hospital.Hospital$Patient.Patient(hugo.project.hospital.Hospital, java.lang.String, int, boolean):::EXIT
this.name == orig(arg1)
this.severity == orig(arg2)
this.wantsSingleRoom == orig(arg3)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
arg1.toString == orig(arg1.toString)
===========================================================================
hugo.project.hospital.Hospital$Patient.getName():::ENTER
===========================================================================
hugo.project.hospital.Hospital$Patient.getName():::EXIT
this.name == return
this.name.toString == orig(this.name.toString)
this.severity == orig(this.severity)
this.wantsSingleRoom == orig(this.wantsSingleRoom)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
return == orig(this.name)
return != null
===========================================================================
hugo.project.hospital.Hospital$Patient.toString():::ENTER
===========================================================================
hugo.project.hospital.Hospital$Patient.toString():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.severity == orig(this.severity)
this.wantsSingleRoom == orig(this.wantsSingleRoom)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
return != null
===========================================================================
hugo.project.hospital.Hospital$Patient.wantsSingleRoom():::ENTER
===========================================================================
hugo.project.hospital.Hospital$Patient.wantsSingleRoom():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.severity == orig(this.severity)
this.wantsSingleRoom == return
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
return == orig(this.wantsSingleRoom)
(return == true)  ==>  (this.name.toString one of { "p14", "p3", "p6" })
(return == true)  ==>  (this.severity == 1)
===========================================================================
hugo.project.hospital.Hospital$Patient.wantsSingleRoom():::EXIT;condition="return == true"
this.name.toString one of { "p14", "p3", "p6" }
this.severity == 1
return == true
===========================================================================
hugo.project.hospital.Hospital$Patient.wantsSingleRoom():::EXIT;condition="not(return == true)"
return == false
===========================================================================
hugo.project.hospital.Hospital$PhysiotherapyDepartment:::OBJECT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this has only one value
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 5
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
this.name has only one value
this.name.toString == "Physiotherapy"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Physiotherapy"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$PhysiotherapyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Physiotherapy"
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
this.wardsForSingle.head.el2 has only one value
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 2
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
===========================================================================
hugo.project.hospital.Hospital$PhysiotherapyDepartment.PhysiotherapyDepartment(hugo.project.hospital.Hospital):::ENTER
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 5
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$PhysiotherapyDepartment.PhysiotherapyDepartment(hugo.project.hospital.Hospital):::EXIT
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
===========================================================================
hugo.project.hospital.Hospital$RadiologyDepartment:::OBJECT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this has only one value
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 2
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
this.name has only one value
this.name.toString == "Radiology"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Radiology"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$RadiologyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Radiology"
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
this.wardsForSingle.head.el2 == null
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 1
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head == null
this.deviceList.size == 0
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
===========================================================================
hugo.project.hospital.Hospital$RadiologyDepartment.RadiologyDepartment(hugo.project.hospital.Hospital):::ENTER
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 2
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$RadiologyDepartment.RadiologyDepartment(hugo.project.hospital.Hospital):::EXIT
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
===========================================================================
hugo.project.hospital.Hospital$RadiotherapyDepartment:::OBJECT
this.name == hugo.project.hospital.Hospital$Department.this.name
this.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == this.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == this.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == this.deviceList
this.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.wardsForSingle == hugo.util.structure.LinkedList.this
this.wardsForSingle.head.el1.getClass().getName() == this.wardsForMulti.head.el1.getClass().getName()
this has only one value
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 3
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
this.name has only one value
this.name.toString == "Radiotherapy"
this.waitingRoom has only one value
this.waitingRoom.name has only one value
this.waitingRoom.name.toString == "WR Radiotherapy"
this.waitingRoom.waitingList has only one value
this.waitingRoom.waitingList.data has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Department.this.getClass().getName() == hugo.project.hospital.Hospital$RadiotherapyDepartment.class
hugo.project.hospital.Hospital$Department.this.name.toString == "Radiotherapy"
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
this.wardsForSingle has only one value
this.wardsForSingle.head has only one value
this.wardsForSingle.head.el1 has only one value
this.wardsForSingle.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
this.wardsForSingle.head.el2 == null
hugo.util.structure.LinkedList.this has only one value
this.wardsForSingle.size == 1
this.wardsForMulti has only one value
this.wardsForMulti.head has only one value
this.wardsForMulti.head.el1 has only one value
this.wardsForMulti.head.el2 has only one value
this.wardsForMulti.size == 3
this.deviceList has only one value
this.deviceList.head has only one value
this.deviceList.head.el1 has only one value
this.deviceList.head.el1.getClass().getName() == hugo.project.hospital.NeedleDevice.class
this.deviceList.head.el2 == null
this.deviceList.size == 1
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
===========================================================================
hugo.project.hospital.Hospital$RadiotherapyDepartment.RadiotherapyDepartment(hugo.project.hospital.Hospital):::ENTER
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 3
hugo.project.hospital.Hospital.this.departmentMap == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$RadiotherapyDepartment.RadiotherapyDepartment(hugo.project.hospital.Hospital):::EXIT
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo:::OBJECT
this.department.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.department.name == hugo.project.hospital.Hospital$Department.this.name
this.department.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
this.department.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
this.department.wardsForSingle == hugo.project.hospital.Hospital$Department.this.wardsForSingle
this.department.wardsForMulti == hugo.project.hospital.Hospital$Department.this.wardsForMulti
this.department.deviceList == hugo.project.hospital.Hospital$Department.this.deviceList
this.patient != null
this.patient.name != null
this.patient.severity >= 0
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
this.department != null
this.department.name != null
this.department.name.toString one of { "Cardiology", "Neurology" }
this.department.waitingRoom != null
this.department.waitingRoom.name != null
this.department.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
this.department.waitingRoom.waitingList != null
this.department.wardsForSingle != null
this.department.wardsForSingle.head != null
this.department.wardsForSingle.size == 2
this.department.wardsForMulti != null
this.department.wardsForMulti.head != null
this.department.wardsForMulti.size one of { 2, 3 }
this.department.deviceList != null
this.department.deviceList.head == null
this.department.deviceList.size == 0
this.room != null
this.room.roomType != null
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WAITINGROOM != null
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.WARD != null
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[] elements != null
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
hugo.project.hospital.Hospital$Reception.this has only one value
hugo.project.hospital.Hospital$Reception.this.register has only one value
hugo.project.hospital.Hospital$Reception.this.register != null
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
this.department.getClass().getName() != this.room.getClass().getName()
this.department.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
this.room.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.PatientInfo(hugo.project.hospital.Hospital$Reception, hugo.project.hospital.Hospital$Patient, hugo.project.hospital.Hospital$Department, hugo.project.hospital.Hospital$Department$Room):::ENTER
hugo.project.hospital.Hospital$Reception.this == hugo.project.hospital.Hospital.this.reception
arg2 == hugo.project.hospital.Hospital$Department.this
arg2.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
arg2.name == hugo.project.hospital.Hospital$Department.this.name
arg2.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
arg2.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
arg2.wardsForSingle == hugo.project.hospital.Hospital$Department.this.wardsForSingle
arg2.wardsForMulti == hugo.project.hospital.Hospital$Department.this.wardsForMulti
arg2.deviceList == hugo.project.hospital.Hospital$Department.this.deviceList
hugo.project.hospital.Hospital$Reception.this has only one value
hugo.project.hospital.Hospital$Reception.this != null
hugo.project.hospital.Hospital$Reception.this.register has only one value
hugo.project.hospital.Hospital$Reception.this.register != null
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
arg1 != null
arg1.name != null
arg2 != null
arg2.name != null
arg2.name.toString one of { "Cardiology", "Neurology" }
arg2.waitingRoom != null
arg2.waitingRoom.name != null
arg2.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
arg2.waitingRoom.waitingList != null
arg2.wardsForSingle != null
arg2.wardsForSingle.head != null
arg2.wardsForSingle.size == 2
arg2.wardsForMulti != null
arg2.wardsForMulti.head != null
arg2.wardsForMulti.size one of { 2, 3 }
arg2.deviceList != null
arg2.deviceList.head == null
arg2.deviceList.size == 0
arg3 != null
arg3.roomType != null
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WAITINGROOM != null
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.WARD != null
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[] elements != null
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
arg2.getClass().getName() != arg3.getClass().getName()
arg2.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
arg3.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.PatientInfo(hugo.project.hospital.Hospital$Reception, hugo.project.hospital.Hospital$Patient, hugo.project.hospital.Hospital$Department, hugo.project.hospital.Hospital$Department$Room):::EXIT
this.patient == orig(arg1)
this.patient.name == arg1.name
this.patient.severity == arg1.severity
this.patient.wantsSingleRoom == arg1.wantsSingleRoom
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital$Reception.this)
this.department == hugo.project.hospital.Hospital$Department.this
this.department == orig(arg2)
this.department.getClass().getName() == orig(arg2.getClass().getName())
this.department.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
this.department.name == arg2.name
this.department.waitingRoom == arg2.waitingRoom
this.department.waitingRoom.name == arg2.waitingRoom.name
this.department.waitingRoom.waitingList == arg2.waitingRoom.waitingList
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
this.department.wardsForSingle == arg2.wardsForSingle
this.department.wardsForSingle.head == arg2.wardsForSingle.head
this.department.wardsForSingle.size == arg2.wardsForSingle.size
this.department.wardsForMulti == arg2.wardsForMulti
this.department.wardsForMulti.head == arg2.wardsForMulti.head
this.department.wardsForMulti.size == arg2.wardsForMulti.size
this.department.deviceList == arg2.deviceList
this.department.deviceList.size == arg2.deviceList.size
this.room == orig(arg3)
this.room.getClass().getName() == orig(arg3.getClass().getName())
this.room.roomType == arg3.roomType
hugo.project.hospital.RoomType.WAITINGROOM == arg2.waitingRoom.roomType
hugo.project.hospital.RoomType.WAITINGROOM == orig(arg2.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.name == arg2.name
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == arg2.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == arg2.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == arg2.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == arg2.deviceList
hugo.project.hospital.Hospital$Reception.this == orig(hugo.project.hospital.Hospital$Reception.this)
hugo.project.hospital.Hospital$Reception.this.register == orig(hugo.project.hospital.Hospital$Reception.this.register)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode == orig(hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode)
arg1.name == orig(arg1.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.severity == orig(arg1.severity)
arg1.wantsSingleRoom == orig(arg1.wantsSingleRoom)
arg2.name == orig(arg2.name)
arg2.name == orig(hugo.project.hospital.Hospital$Department.this.name)
arg2.name.toString == orig(arg2.name.toString)
arg2.waitingRoom == orig(arg2.waitingRoom)
arg2.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
arg2.waitingRoom.name == orig(arg2.waitingRoom.name)
arg2.waitingRoom.name.toString == orig(arg2.waitingRoom.name.toString)
arg2.waitingRoom.waitingList == orig(arg2.waitingRoom.waitingList)
arg2.wardsForSingle == orig(arg2.wardsForSingle)
arg2.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
arg2.wardsForSingle.head == orig(arg2.wardsForSingle.head)
arg2.wardsForSingle.size == orig(arg2.wardsForSingle.size)
arg2.wardsForMulti == orig(arg2.wardsForMulti)
arg2.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
arg2.wardsForMulti.head == orig(arg2.wardsForMulti.head)
arg2.wardsForMulti.size == orig(arg2.wardsForMulti.size)
arg2.deviceList == orig(arg2.deviceList)
arg2.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
arg2.deviceList.head == orig(arg2.deviceList.head)
arg2.deviceList.size == orig(arg2.deviceList.size)
arg3.roomType == orig(arg3.roomType)
arg1.name != null
arg2.name != null
arg2.name.toString one of { "Cardiology", "Neurology" }
arg2.waitingRoom != null
arg2.waitingRoom.name != null
arg2.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
arg2.waitingRoom.waitingList != null
arg2.wardsForSingle != null
arg2.wardsForSingle.head != null
arg2.wardsForSingle.size == 2
arg2.wardsForMulti != null
arg2.wardsForMulti.head != null
arg2.wardsForMulti.size one of { 2, 3 }
arg2.deviceList != null
arg2.deviceList.head == null
arg2.deviceList.size == 0
arg3.roomType != null
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.compareTo(hugo.project.hospital.Hospital$Reception$PatientInfo):::ENTER
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
this.department == hugo.project.hospital.Hospital$Department.this
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
arg0 != null
arg0.patient != null
arg0.patient.name != null
arg0.patient.severity >= 0
arg0.department != null
arg0.department.name != null
arg0.department.name.toString one of { "Cardiology", "Neurology" }
arg0.department.waitingRoom != null
arg0.department.wardsForSingle != null
arg0.department.wardsForMulti != null
arg0.department.deviceList != null
arg0.room != null
arg0.room.roomType != null
this.department.getClass().getName() != arg0.room.getClass().getName()
this.room.getClass().getName() != arg0.department.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != arg0.department.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != arg0.room.getClass().getName()
arg0.department.getClass().getName() != arg0.room.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.compareTo(hugo.project.hospital.Hospital$Reception$PatientInfo):::EXIT
this.patient == orig(this.patient)
this.patient.name == orig(this.patient.name)
this.patient.name.toString == orig(this.patient.name.toString)
this.patient.severity == orig(this.patient.severity)
this.patient.wantsSingleRoom == orig(this.patient.wantsSingleRoom)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.department == hugo.project.hospital.Hospital$Department.this
this.department == orig(this.department)
this.department.getClass().getName() == orig(this.department.getClass().getName())
this.department.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
this.department.name == orig(this.department.name)
this.department.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.department.name.toString == orig(this.department.name.toString)
this.department.waitingRoom == orig(this.department.waitingRoom)
this.department.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.department.waitingRoom.name == orig(this.department.waitingRoom.name)
this.department.waitingRoom.name.toString == orig(this.department.waitingRoom.name.toString)
this.department.waitingRoom.waitingList == orig(this.department.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
this.department.wardsForSingle == orig(this.department.wardsForSingle)
this.department.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.department.wardsForSingle.head == orig(this.department.wardsForSingle.head)
this.department.wardsForSingle.size == orig(this.department.wardsForSingle.size)
this.department.wardsForMulti == orig(this.department.wardsForMulti)
this.department.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.department.wardsForMulti.head == orig(this.department.wardsForMulti.head)
this.department.wardsForMulti.size == orig(this.department.wardsForMulti.size)
this.department.deviceList == orig(this.department.deviceList)
this.department.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.department.deviceList.head == orig(this.department.deviceList.head)
this.department.deviceList.size == orig(this.department.deviceList.size)
this.room == orig(this.room)
this.room.getClass().getName() == orig(this.room.getClass().getName())
this.room.roomType == orig(this.room.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.department.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Reception.this == orig(hugo.project.hospital.Hospital$Reception.this)
hugo.project.hospital.Hospital$Reception.this.register == orig(hugo.project.hospital.Hospital$Reception.this.register)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode == orig(hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode)
arg0.patient == orig(arg0.patient)
arg0.patient.name == orig(arg0.patient.name)
arg0.patient.name.toString == orig(arg0.patient.name.toString)
arg0.patient.severity == orig(arg0.patient.severity)
arg0.patient.wantsSingleRoom == orig(arg0.patient.wantsSingleRoom)
arg0.department == orig(arg0.department)
arg0.department.getClass().getName() == orig(arg0.department.getClass().getName())
arg0.department.name == orig(arg0.department.name)
arg0.department.name.toString == orig(arg0.department.name.toString)
arg0.department.waitingRoom == orig(arg0.department.waitingRoom)
arg0.department.wardsForSingle == orig(arg0.department.wardsForSingle)
arg0.department.wardsForMulti == orig(arg0.department.wardsForMulti)
arg0.department.deviceList == orig(arg0.department.deviceList)
arg0.room == orig(arg0.room)
arg0.room.getClass().getName() == orig(arg0.room.getClass().getName())
arg0.room.roomType == orig(arg0.room.roomType)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
arg0.patient != null
arg0.patient.name != null
arg0.patient.severity >= 0
arg0.department != null
arg0.department.name != null
arg0.department.name.toString one of { "Cardiology", "Neurology" }
arg0.department.waitingRoom != null
arg0.department.wardsForSingle != null
arg0.department.wardsForMulti != null
arg0.department.deviceList != null
arg0.room != null
arg0.room.roomType != null
this.department.getClass().getName() != arg0.room.getClass().getName()
this.room.getClass().getName() != arg0.department.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != arg0.department.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != arg0.room.getClass().getName()
arg0.department.getClass().getName() != arg0.room.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.getDepartment():::ENTER
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
this.department == hugo.project.hospital.Hospital$Department.this
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.getDepartment():::EXIT
this.patient == orig(this.patient)
this.patient.name == orig(this.patient.name)
this.patient.name.toString == orig(this.patient.name.toString)
this.patient.severity == orig(this.patient.severity)
this.patient.wantsSingleRoom == orig(this.patient.wantsSingleRoom)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.department == return
this.department.getClass().getName() == return.getClass().getName()
this.department.name == return.name
this.department.name.toString == orig(this.department.name.toString)
this.department.waitingRoom == return.waitingRoom
this.department.waitingRoom.name == return.waitingRoom.name
this.department.waitingRoom.name.toString == orig(this.department.waitingRoom.name.toString)
this.department.waitingRoom.waitingList == return.waitingRoom.waitingList
hugo.project.hospital.Hospital$Department.this == return
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == return.getClass().getName()
this.department.wardsForSingle == return.wardsForSingle
this.department.wardsForSingle.head == return.wardsForSingle.head
this.department.wardsForSingle.size == return.wardsForSingle.size
this.department.wardsForMulti == return.wardsForMulti
this.department.wardsForMulti.head == return.wardsForMulti.head
this.department.wardsForMulti.size == return.wardsForMulti.size
this.department.deviceList == return.deviceList
this.department.deviceList.head == orig(this.department.deviceList.head)
this.department.deviceList.size == return.deviceList.size
this.room == orig(this.room)
this.room.getClass().getName() == orig(this.room.getClass().getName())
this.room.roomType == orig(this.room.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == return.waitingRoom.roomType
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.department.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.name == return.name
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Department.this.waitingRoom == return.waitingRoom
hugo.project.hospital.Hospital$Department.this.wardsForSingle == return.wardsForSingle
hugo.project.hospital.Hospital$Department.this.wardsForMulti == return.wardsForMulti
hugo.project.hospital.Hospital$Department.this.deviceList == return.deviceList
hugo.project.hospital.Hospital$Reception.this == orig(hugo.project.hospital.Hospital$Reception.this)
hugo.project.hospital.Hospital$Reception.this.register == orig(hugo.project.hospital.Hospital$Reception.this.register)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode == orig(hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode)
return == orig(this.department)
return.getClass().getName() == orig(this.department.getClass().getName())
return.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
return.name == orig(this.department.name)
return.name == orig(hugo.project.hospital.Hospital$Department.this.name)
return.waitingRoom == orig(this.department.waitingRoom)
return.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
return.waitingRoom.name == orig(this.department.waitingRoom.name)
return.waitingRoom.waitingList == orig(this.department.waitingRoom.waitingList)
return.wardsForSingle == orig(this.department.wardsForSingle)
return.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
return.wardsForSingle.head == orig(this.department.wardsForSingle.head)
return.wardsForSingle.size == orig(this.department.wardsForSingle.size)
return.wardsForMulti == orig(this.department.wardsForMulti)
return.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
return.wardsForMulti.head == orig(this.department.wardsForMulti.head)
return.wardsForMulti.size == orig(this.department.wardsForMulti.size)
return.deviceList == orig(this.department.deviceList)
return.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
return.deviceList.size == orig(this.department.deviceList.size)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
return != null
return.name != null
return.name.toString one of { "Cardiology", "Neurology" }
return.waitingRoom != null
return.waitingRoom.name != null
return.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
return.waitingRoom.waitingList != null
return.wardsForSingle != null
return.wardsForSingle.head != null
return.wardsForSingle.size == 2
return.wardsForMulti != null
return.wardsForMulti.head != null
return.wardsForMulti.size one of { 2, 3 }
return.deviceList != null
return.deviceList.head == null
return.deviceList.size == 0
this.room.getClass().getName() != return.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != return.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.getName():::ENTER
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
this.department == hugo.project.hospital.Hospital$Department.this
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.getName():::EXIT
this.patient == orig(this.patient)
this.patient.name == return
this.patient.name.toString == orig(this.patient.name.toString)
this.patient.severity == orig(this.patient.severity)
this.patient.wantsSingleRoom == orig(this.patient.wantsSingleRoom)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.department == hugo.project.hospital.Hospital$Department.this
this.department == orig(this.department)
this.department.getClass().getName() == orig(this.department.getClass().getName())
this.department.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
this.department.name == orig(this.department.name)
this.department.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.department.name.toString == orig(this.department.name.toString)
this.department.waitingRoom == orig(this.department.waitingRoom)
this.department.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.department.waitingRoom.name == orig(this.department.waitingRoom.name)
this.department.waitingRoom.name.toString == orig(this.department.waitingRoom.name.toString)
this.department.waitingRoom.waitingList == orig(this.department.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
this.department.wardsForSingle == orig(this.department.wardsForSingle)
this.department.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.department.wardsForSingle.head == orig(this.department.wardsForSingle.head)
this.department.wardsForSingle.size == orig(this.department.wardsForSingle.size)
this.department.wardsForMulti == orig(this.department.wardsForMulti)
this.department.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.department.wardsForMulti.head == orig(this.department.wardsForMulti.head)
this.department.wardsForMulti.size == orig(this.department.wardsForMulti.size)
this.department.deviceList == orig(this.department.deviceList)
this.department.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.department.deviceList.head == orig(this.department.deviceList.head)
this.department.deviceList.size == orig(this.department.deviceList.size)
this.room == orig(this.room)
this.room.getClass().getName() == orig(this.room.getClass().getName())
this.room.roomType == orig(this.room.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.department.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Reception.this == orig(hugo.project.hospital.Hospital$Reception.this)
hugo.project.hospital.Hospital$Reception.this.register == orig(hugo.project.hospital.Hospital$Reception.this.register)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode == orig(hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode)
return == orig(this.patient.name)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
return != null
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.getPatient():::ENTER
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
this.department == hugo.project.hospital.Hospital$Department.this
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.getPatient():::EXIT
this.patient == return
this.patient.name == return.name
this.patient.name.toString == orig(this.patient.name.toString)
this.patient.severity == return.severity
this.patient.wantsSingleRoom == return.wantsSingleRoom
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.department == hugo.project.hospital.Hospital$Department.this
this.department == orig(this.department)
this.department.getClass().getName() == orig(this.department.getClass().getName())
this.department.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
this.department.name == orig(this.department.name)
this.department.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.department.name.toString == orig(this.department.name.toString)
this.department.waitingRoom == orig(this.department.waitingRoom)
this.department.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.department.waitingRoom.name == orig(this.department.waitingRoom.name)
this.department.waitingRoom.name.toString == orig(this.department.waitingRoom.name.toString)
this.department.waitingRoom.waitingList == orig(this.department.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
this.department.wardsForSingle == orig(this.department.wardsForSingle)
this.department.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.department.wardsForSingle.head == orig(this.department.wardsForSingle.head)
this.department.wardsForSingle.size == orig(this.department.wardsForSingle.size)
this.department.wardsForMulti == orig(this.department.wardsForMulti)
this.department.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.department.wardsForMulti.head == orig(this.department.wardsForMulti.head)
this.department.wardsForMulti.size == orig(this.department.wardsForMulti.size)
this.department.deviceList == orig(this.department.deviceList)
this.department.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.department.deviceList.head == orig(this.department.deviceList.head)
this.department.deviceList.size == orig(this.department.deviceList.size)
this.room == orig(this.room)
this.room.getClass().getName() == orig(this.room.getClass().getName())
this.room.roomType == orig(this.room.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.department.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Reception.this == orig(hugo.project.hospital.Hospital$Reception.this)
hugo.project.hospital.Hospital$Reception.this.register == orig(hugo.project.hospital.Hospital$Reception.this.register)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode == orig(hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode)
return == orig(this.patient)
return.name == orig(this.patient.name)
return.severity == orig(this.patient.severity)
return.wantsSingleRoom == orig(this.patient.wantsSingleRoom)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
return != null
return.name != null
return.severity >= 0
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.getRoom():::ENTER
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
this.department == hugo.project.hospital.Hospital$Department.this
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
===========================================================================
hugo.project.hospital.Hospital$Reception$PatientInfo.getRoom():::EXIT
this.patient == orig(this.patient)
this.patient.name == orig(this.patient.name)
this.patient.name.toString == orig(this.patient.name.toString)
this.patient.severity == orig(this.patient.severity)
this.patient.wantsSingleRoom == orig(this.patient.wantsSingleRoom)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.department == hugo.project.hospital.Hospital$Department.this
this.department == orig(this.department)
this.department.getClass().getName() == orig(this.department.getClass().getName())
this.department.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
this.department.name == orig(this.department.name)
this.department.name == orig(hugo.project.hospital.Hospital$Department.this.name)
this.department.name.toString == orig(this.department.name.toString)
this.department.waitingRoom == orig(this.department.waitingRoom)
this.department.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
this.department.waitingRoom.name == orig(this.department.waitingRoom.name)
this.department.waitingRoom.name.toString == orig(this.department.waitingRoom.name.toString)
this.department.waitingRoom.waitingList == orig(this.department.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
this.department.wardsForSingle == orig(this.department.wardsForSingle)
this.department.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
this.department.wardsForSingle.head == orig(this.department.wardsForSingle.head)
this.department.wardsForSingle.size == orig(this.department.wardsForSingle.size)
this.department.wardsForMulti == orig(this.department.wardsForMulti)
this.department.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
this.department.wardsForMulti.head == orig(this.department.wardsForMulti.head)
this.department.wardsForMulti.size == orig(this.department.wardsForMulti.size)
this.department.deviceList == orig(this.department.deviceList)
this.department.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
this.department.deviceList.head == orig(this.department.deviceList.head)
this.department.deviceList.size == orig(this.department.deviceList.size)
this.room == return
this.room.getClass().getName() == return.getClass().getName()
this.room.roomType == return.roomType
hugo.project.hospital.RoomType.WAITINGROOM == orig(this.department.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
hugo.project.hospital.Hospital$Reception.this == orig(hugo.project.hospital.Hospital$Reception.this)
hugo.project.hospital.Hospital$Reception.this.register == orig(hugo.project.hospital.Hospital$Reception.this.register)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode == orig(hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode)
return == orig(this.room)
return.getClass().getName() == orig(this.room.getClass().getName())
return.roomType == orig(this.room.roomType)
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode has only one value
hugo.project.hospital.Hospital$Reception.this.register.rootTreeNode != null
return != null
return.roomType != null
this.department.getClass().getName() != return.getClass().getName()
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != return.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Reception:::OBJECT
this has only one value
this.register has only one value
this.register != null
this.register.rootTreeNode.leftTreeNode == null
this.register.rootTreeNode.parentTreeNode == null
this.register.rootTreeNode.value has only one value
this.register.rootTreeNode.value != null
this.register.rootTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
hugo.util.structure.BinaryTree.this has only one value
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.head != null
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.departmentMap.nodes has only one value
hugo.project.hospital.Hospital.this.departmentMap.nodes != null
hugo.project.hospital.Hospital.this.reception.register has only one value
hugo.project.hospital.Hospital.this.reception.register != null
===========================================================================
hugo.project.hospital.Hospital$Reception.Reception(hugo.project.hospital.Hospital):::ENTER
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList.head has only one value
hugo.project.hospital.Hospital.this.departmentList.size == 6
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap.nodes has only one value
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$Reception.Reception(hugo.project.hospital.Hospital):::EXIT
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.register.rootTreeNode == null
hugo.project.hospital.Hospital.this.reception == null
===========================================================================
hugo.project.hospital.Hospital$Reception.addPatientInfo(hugo.project.hospital.Hospital$Patient, hugo.project.hospital.Hospital$Department, hugo.project.hospital.Hospital$Department$Room):::ENTER
this == hugo.project.hospital.Hospital.this.reception
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
arg1 == hugo.project.hospital.Hospital$Department.this
arg1.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
arg1.name == hugo.project.hospital.Hospital$Department.this.name
arg1.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
arg1.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
arg1.wardsForSingle == hugo.project.hospital.Hospital$Department.this.wardsForSingle
arg1.wardsForMulti == hugo.project.hospital.Hospital$Department.this.wardsForMulti
arg1.deviceList == hugo.project.hospital.Hospital$Department.this.deviceList
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
arg0 != null
arg0.name != null
arg1 != null
arg1.name != null
arg1.name.toString one of { "Cardiology", "Neurology" }
arg1.waitingRoom != null
arg1.waitingRoom.name != null
arg1.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
arg1.waitingRoom.waitingList != null
arg1.wardsForSingle != null
arg1.wardsForSingle.head != null
arg1.wardsForSingle.size == 2
arg1.wardsForMulti != null
arg1.wardsForMulti.head != null
arg1.wardsForMulti.size one of { 2, 3 }
arg1.deviceList != null
arg1.deviceList.head == null
arg1.deviceList.size == 0
arg2 != null
arg2.roomType != null
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WAITINGROOM != null
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.WARD != null
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[] elements != null
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
this.register.rootTreeNode.value.getClass().getName() != arg1.getClass().getName()
this.register.rootTreeNode.value.getClass().getName() != arg2.getClass().getName()
this.register.rootTreeNode.value.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
arg1.getClass().getName() != arg2.getClass().getName()
arg1.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
arg2.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital$Reception.addPatientInfo(hugo.project.hospital.Hospital$Patient, hugo.project.hospital.Hospital$Department, hugo.project.hospital.Hospital$Department$Room):::EXIT
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
this.register == orig(this.register)
this.register == orig(hugo.util.structure.BinaryTree.this)
this.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.register.rootTreeNode.leftTreeNode == orig(this.register.rootTreeNode.leftTreeNode)
this.register.rootTreeNode.parentTreeNode == orig(this.register.rootTreeNode.parentTreeNode)
this.register.rootTreeNode.value == orig(this.register.rootTreeNode.value)
this.register.rootTreeNode.value.getClass().getName() == orig(this.register.rootTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(this)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.severity == orig(arg0.severity)
arg0.wantsSingleRoom == orig(arg0.wantsSingleRoom)
arg1.name == hugo.project.hospital.Hospital$Department.this.name
arg1.name == orig(arg1.name)
arg1.name == orig(hugo.project.hospital.Hospital$Department.this.name)
arg1.name.toString == orig(arg1.name.toString)
arg1.waitingRoom == hugo.project.hospital.Hospital$Department.this.waitingRoom
arg1.waitingRoom == orig(arg1.waitingRoom)
arg1.waitingRoom == orig(hugo.project.hospital.Hospital$Department.this.waitingRoom)
arg1.waitingRoom.name == orig(arg1.waitingRoom.name)
arg1.waitingRoom.name.toString == orig(arg1.waitingRoom.name.toString)
arg1.waitingRoom.waitingList == orig(arg1.waitingRoom.waitingList)
hugo.project.hospital.Hospital$Department.this == orig(arg1)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Department.this.getClass().getName() == orig(arg1.getClass().getName())
arg1.waitingRoom.roomType == hugo.project.hospital.RoomType.WAITINGROOM
arg1.wardsForSingle == hugo.project.hospital.Hospital$Department.this.wardsForSingle
arg1.wardsForSingle == orig(arg1.wardsForSingle)
arg1.wardsForSingle == orig(hugo.project.hospital.Hospital$Department.this.wardsForSingle)
arg1.wardsForSingle.head == orig(arg1.wardsForSingle.head)
arg1.wardsForSingle.size == orig(arg1.wardsForSingle.size)
arg1.wardsForMulti == hugo.project.hospital.Hospital$Department.this.wardsForMulti
arg1.wardsForMulti == orig(arg1.wardsForMulti)
arg1.wardsForMulti == orig(hugo.project.hospital.Hospital$Department.this.wardsForMulti)
arg1.wardsForMulti.head == orig(arg1.wardsForMulti.head)
arg1.wardsForMulti.size == orig(arg1.wardsForMulti.size)
arg1.deviceList == hugo.project.hospital.Hospital$Department.this.deviceList
arg1.deviceList == orig(arg1.deviceList)
arg1.deviceList == orig(hugo.project.hospital.Hospital$Department.this.deviceList)
arg1.deviceList.head == orig(arg1.deviceList.head)
arg1.deviceList.size == orig(arg1.deviceList.size)
arg2.roomType == orig(arg2.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(arg1.waitingRoom.roomType)
hugo.project.hospital.RoomType.WAITINGROOM == orig(hugo.project.hospital.RoomType.WAITINGROOM)
hugo.project.hospital.RoomType.WARD == orig(hugo.project.hospital.RoomType.WARD)
hugo.project.hospital.RoomType.$VALUES == orig(hugo.project.hospital.RoomType.$VALUES)
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == orig(hugo.project.hospital.RoomType.$VALUES.getClass().getName())
hugo.project.hospital.RoomType.$VALUES[] == orig(hugo.project.hospital.RoomType.$VALUES[])
hugo.project.hospital.Hospital$Department.this.name.toString == orig(hugo.project.hospital.Hospital$Department.this.name.toString)
this.register.rootTreeNode has only one value
this.register.rootTreeNode != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
arg0.name != null
arg1.name != null
arg1.name.toString one of { "Cardiology", "Neurology" }
arg1.waitingRoom != null
arg1.waitingRoom.name != null
arg1.waitingRoom.name.toString one of { "WR Cardiology", "WR Neurology" }
arg1.waitingRoom.waitingList != null
arg1.wardsForSingle != null
arg1.wardsForSingle.head != null
arg1.wardsForSingle.size == 2
arg1.wardsForMulti != null
arg1.wardsForMulti.head != null
arg1.wardsForMulti.size one of { 2, 3 }
arg1.deviceList != null
arg1.deviceList.head == null
arg1.deviceList.size == 0
arg2.roomType != null
hugo.project.hospital.RoomType.WAITINGROOM has only one value
hugo.project.hospital.RoomType.WAITINGROOM != null
hugo.project.hospital.RoomType.WARD has only one value
hugo.project.hospital.RoomType.WARD != null
hugo.project.hospital.RoomType.$VALUES has only one value
hugo.project.hospital.RoomType.$VALUES != null
hugo.project.hospital.RoomType.$VALUES.getClass().getName() == hugo.project.hospital.RoomType[].class
hugo.project.hospital.RoomType.$VALUES[] contains no nulls and has only one value, of length 2
hugo.project.hospital.RoomType.$VALUES[] elements != null
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() == [hugo.project.hospital.RoomType, hugo.project.hospital.RoomType]
hugo.project.hospital.RoomType.$VALUES[].getClass().getName() elements == hugo.project.hospital.RoomType.class
hugo.project.hospital.Hospital$Department.this.name.toString one of { "Cardiology", "Neurology" }
size(hugo.project.hospital.RoomType.$VALUES[]) == 2
this.register.rootTreeNode.value.getClass().getName() != hugo.project.hospital.RoomType.$VALUES.getClass().getName()
this.register.rootTreeNode.value.getClass().getName() != orig(arg1.getClass().getName())
this.register.rootTreeNode.value.getClass().getName() != orig(arg2.getClass().getName())
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != orig(this.register.rootTreeNode.value.getClass().getName())
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != orig(arg1.getClass().getName())
hugo.project.hospital.RoomType.$VALUES.getClass().getName() != orig(arg2.getClass().getName())
===========================================================================
hugo.project.hospital.Hospital$Reception.getPatientInfo(hugo.project.hospital.Hospital$Patient):::ENTER
this == hugo.project.hospital.Hospital.this.reception
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0 has only one value
arg0.name has only one value
arg0.name.toString == "p5"
arg0.severity == 0
arg0.wantsSingleRoom == false
===========================================================================
hugo.project.hospital.Hospital$Reception.getPatientInfo(hugo.project.hospital.Hospital$Patient):::EXIT
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
this.register == hugo.project.hospital.Hospital$Reception.this.register
this.register == orig(this.register)
this.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.register.rootTreeNode == orig(this.register.rootTreeNode)
this.register.rootTreeNode.leftTreeNode == orig(this.register.rootTreeNode.leftTreeNode)
this.register.rootTreeNode.rightTreeNode == orig(this.register.rootTreeNode.rightTreeNode)
this.register.rootTreeNode.parentTreeNode == orig(this.register.rootTreeNode.parentTreeNode)
this.register.rootTreeNode.value == orig(this.register.rootTreeNode.value)
this.register.rootTreeNode.value.getClass().getName() == orig(this.register.rootTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
arg0.name == return.patient.name
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.severity == return.patient.severity
arg0.severity == orig(arg0.severity)
arg0.wantsSingleRoom == return.patient.wantsSingleRoom
arg0.wantsSingleRoom == orig(arg0.wantsSingleRoom)
return.patient == orig(arg0)
return.department == hugo.project.hospital.Hospital$Department.this
return.department.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
hugo.project.hospital.Hospital$Reception.this == orig(this)
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0.name has only one value
arg0.name.toString == "p5"
arg0.severity == 0
arg0.wantsSingleRoom == false
return has only one value
return.patient has only one value
return.patient.name.toString == "p5"
return.department has only one value
return.department.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
return.department.name has only one value
return.department.name.toString == "Neurology"
return.department.waitingRoom has only one value
return.department.wardsForSingle has only one value
return.department.wardsForMulti has only one value
return.department.deviceList has only one value
return.room has only one value
return.room.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
return.room.roomType has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Reception.this has only one value
===========================================================================
hugo.project.hospital.Hospital$Reception.getPatientInfo(java.lang.String):::ENTER
this == hugo.project.hospital.Hospital.this.reception
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0 has only one value
arg0.toString == "p5"
===========================================================================
hugo.project.hospital.Hospital$Reception.getPatientInfo(java.lang.String):::EXIT94
===========================================================================
hugo.project.hospital.Hospital$Reception.getPatientInfo(java.lang.String):::EXIT
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
this.register == hugo.project.hospital.Hospital$Reception.this.register
this.register == orig(this.register)
this.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.register.rootTreeNode == orig(this.register.rootTreeNode)
this.register.rootTreeNode.leftTreeNode == orig(this.register.rootTreeNode.leftTreeNode)
this.register.rootTreeNode.rightTreeNode == orig(this.register.rootTreeNode.rightTreeNode)
this.register.rootTreeNode.parentTreeNode == orig(this.register.rootTreeNode.parentTreeNode)
this.register.rootTreeNode.value == orig(this.register.rootTreeNode.value)
this.register.rootTreeNode.value.getClass().getName() == orig(this.register.rootTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
arg0.toString == orig(arg0.toString)
return.patient.name == orig(arg0)
return.department == hugo.project.hospital.Hospital$Department.this
return.department.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
hugo.project.hospital.Hospital$Reception.this == orig(this)
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0.toString == "p5"
return has only one value
return.patient has only one value
return.patient.name.toString == "p5"
return.patient.severity == 0
return.patient.wantsSingleRoom == false
return.department has only one value
return.department.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
return.department.name has only one value
return.department.name.toString == "Neurology"
return.department.waitingRoom has only one value
return.department.wardsForSingle has only one value
return.department.wardsForMulti has only one value
return.department.deviceList has only one value
return.room has only one value
return.room.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
return.room.roomType has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Reception.this has only one value
===========================================================================
hugo.project.hospital.Hospital$Reception.removePatientInfo(hugo.project.hospital.Hospital$Reception$PatientInfo):::ENTER
this == hugo.project.hospital.Hospital.this.reception
this == hugo.project.hospital.Hospital$Reception.this
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
this.register == hugo.project.hospital.Hospital$Reception.this.register
arg0.department == hugo.project.hospital.Hospital$Department.this
arg0.department.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0 has only one value
arg0.patient has only one value
arg0.patient.name has only one value
arg0.patient.name.toString == "p5"
arg0.patient.severity == 0
arg0.patient.wantsSingleRoom == false
arg0.department has only one value
arg0.department.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
arg0.department.name has only one value
arg0.department.name.toString == "Neurology"
arg0.department.waitingRoom has only one value
arg0.department.wardsForSingle has only one value
arg0.department.wardsForMulti has only one value
arg0.department.deviceList has only one value
arg0.room has only one value
arg0.room.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
arg0.room.roomType has only one value
hugo.project.hospital.Hospital$Department.this has only one value
===========================================================================
hugo.project.hospital.Hospital$Reception.removePatientInfo(hugo.project.hospital.Hospital$Reception$PatientInfo):::EXIT
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
this.register == hugo.project.hospital.Hospital$Reception.this.register
this.register == orig(this.register)
this.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.register == orig(hugo.project.hospital.Hospital$Reception.this.register)
this.register.rootTreeNode == orig(this.register.rootTreeNode)
this.register.rootTreeNode.leftTreeNode == orig(this.register.rootTreeNode.leftTreeNode)
this.register.rootTreeNode.rightTreeNode == orig(this.register.rootTreeNode.rightTreeNode)
this.register.rootTreeNode.parentTreeNode == orig(this.register.rootTreeNode.parentTreeNode)
this.register.rootTreeNode.value == orig(this.register.rootTreeNode.value)
this.register.rootTreeNode.value.getClass().getName() == orig(this.register.rootTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == hugo.project.hospital.Hospital$Reception.this
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
arg0.patient == orig(arg0.patient)
arg0.patient.name == orig(arg0.patient.name)
arg0.patient.name.toString == orig(arg0.patient.name.toString)
arg0.patient.severity == orig(arg0.patient.severity)
arg0.patient.wantsSingleRoom == orig(arg0.patient.wantsSingleRoom)
arg0.department == hugo.project.hospital.Hospital$Department.this
arg0.department == orig(arg0.department)
arg0.department.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
arg0.department.getClass().getName() == orig(arg0.department.getClass().getName())
arg0.department.getClass().getName() == orig(hugo.project.hospital.Hospital$Department.this.getClass().getName())
arg0.department.name == orig(arg0.department.name)
arg0.department.name.toString == orig(arg0.department.name.toString)
arg0.department.waitingRoom == orig(arg0.department.waitingRoom)
arg0.department.wardsForSingle == orig(arg0.department.wardsForSingle)
arg0.department.wardsForMulti == orig(arg0.department.wardsForMulti)
arg0.department.deviceList == orig(arg0.department.deviceList)
arg0.room == orig(arg0.room)
arg0.room.getClass().getName() == orig(arg0.room.getClass().getName())
arg0.room.roomType == orig(arg0.room.roomType)
hugo.project.hospital.Hospital$Department.this == orig(hugo.project.hospital.Hospital$Department.this)
hugo.project.hospital.Hospital$Reception.this == orig(this)
hugo.project.hospital.Hospital$Reception.this == orig(hugo.project.hospital.Hospital$Reception.this)
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
arg0.patient has only one value
arg0.patient.name has only one value
arg0.patient.name.toString == "p5"
arg0.patient.severity == 0
arg0.patient.wantsSingleRoom == false
arg0.department has only one value
arg0.department.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
arg0.department.name has only one value
arg0.department.name.toString == "Neurology"
arg0.department.waitingRoom has only one value
arg0.department.wardsForSingle has only one value
arg0.department.wardsForMulti has only one value
arg0.department.deviceList has only one value
arg0.room has only one value
arg0.room.getClass().getName() == hugo.project.hospital.Hospital$Department$Ward.class
arg0.room.roomType has only one value
hugo.project.hospital.Hospital$Department.this has only one value
hugo.project.hospital.Hospital$Reception.this has only one value
===========================================================================
hugo.project.hospital.Hospital$Reception.show():::ENTER
this == hugo.project.hospital.Hospital.this.reception
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
===========================================================================
hugo.project.hospital.Hospital$Reception.show():::EXIT
this.register == hugo.util.structure.BinaryTree.this
this.register == hugo.project.hospital.Hospital.this.reception.register
this.register == orig(this.register)
this.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.register.rootTreeNode == orig(this.register.rootTreeNode)
this.register.rootTreeNode.leftTreeNode == orig(this.register.rootTreeNode.leftTreeNode)
this.register.rootTreeNode.rightTreeNode == orig(this.register.rootTreeNode.rightTreeNode)
this.register.rootTreeNode.parentTreeNode == orig(this.register.rootTreeNode.parentTreeNode)
this.register.rootTreeNode.value == orig(this.register.rootTreeNode.value)
this.register.rootTreeNode.value.getClass().getName() == orig(this.register.rootTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(this)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
return.toString one of { "p1:\tNeurology,\tRoom 107\np2:\tNeurology,\tRoom 107\np10:\tNeurology,\tWR Neurology\np14:\tCardiology,\tRoom 103\np11:\tNeurology,\tWR Neurology\np12:\tNeurology,\tWR Neurology\np13:\tNeurology,\tWR Neurology\np3:\tNeurology,\tRoom 101\np4:\tNeurology,\tRoom 108\np5:\tNeurology,\tRoom 108\np6:\tNeurology,\tRoom 102\np7:\tNeurology,\tRoom 109\np8:\tNeurology,\tRoom 109\np9:\tNeurology,\tWR Neurology\n", "p1:\tNeurology,\tRoom 107\np2:\tNeurology,\tRoom 107\np10:\tNeurology,\tWR Neurology\np14:\tCardiology,\tRoom 103\np11:\tNeurology,\tWR Neurology\np12:\tNeurology,\tWR Neurology\np13:\tNeurology,\tWR Neurology\np3:\tNeurology,\tRoom 101\np4:\tNeurology,\tRoom 108\np6:\tNeurology,\tRoom 102\n" }
===========================================================================
hugo.project.hospital.Hospital$Reception.toString():::ENTER
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
===========================================================================
hugo.project.hospital.Hospital$Reception.toString():::EXIT
this.register == orig(this.register)
this.register.rootTreeNode == orig(this.register.rootTreeNode)
this.register.rootTreeNode.leftTreeNode == orig(this.register.rootTreeNode.leftTreeNode)
this.register.rootTreeNode.rightTreeNode == orig(this.register.rootTreeNode.rightTreeNode)
this.register.rootTreeNode.parentTreeNode == orig(this.register.rootTreeNode.parentTreeNode)
this.register.rootTreeNode.value == orig(this.register.rootTreeNode.value)
this.register.rootTreeNode.value.getClass().getName() == orig(this.register.rootTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentList.head == orig(hugo.project.hospital.Hospital.this.departmentList.head)
hugo.project.hospital.Hospital.this.departmentList.size == orig(hugo.project.hospital.Hospital.this.departmentList.size)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.departmentMap.nodes == orig(hugo.project.hospital.Hospital.this.departmentMap.nodes)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
hugo.project.hospital.Hospital.this.reception.register == orig(hugo.project.hospital.Hospital.this.reception.register)
this.register.rootTreeNode has only one value
this.register.rootTreeNode.rightTreeNode has only one value
hugo.project.hospital.Hospital.this.reception has only one value
return.toString one of { "p1:\tNeurology,\tRoom 107\np2:\tNeurology,\tRoom 107\np10:\tNeurology,\tWR Neurology\np14:\tCardiology,\tRoom 103\np11:\tNeurology,\tWR Neurology\np12:\tNeurology,\tWR Neurology\np13:\tNeurology,\tWR Neurology\np3:\tNeurology,\tRoom 101\np4:\tNeurology,\tRoom 108\np5:\tNeurology,\tRoom 108\np6:\tNeurology,\tRoom 102\np7:\tNeurology,\tRoom 109\np8:\tNeurology,\tRoom 109\np9:\tNeurology,\tWR Neurology\n", "p1:\tNeurology,\tRoom 107\np2:\tNeurology,\tRoom 107\np10:\tNeurology,\tWR Neurology\np14:\tCardiology,\tRoom 103\np11:\tNeurology,\tWR Neurology\np12:\tNeurology,\tWR Neurology\np13:\tNeurology,\tWR Neurology\np3:\tNeurology,\tRoom 101\np4:\tNeurology,\tRoom 108\np6:\tNeurology,\tRoom 102\n" }
===========================================================================
hugo.project.hospital.Hospital:::OBJECT
this has only one value
this.departmentList has only one value
this.departmentList != null
this.departmentList.head has only one value
this.departmentList.head != null
this.departmentList.head.el1 has only one value
this.departmentList.head.el1 != null
this.departmentList.head.el1.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
this.departmentList.head.el2 has only one value
this.departmentList.head.el2 != null
hugo.util.structure.LinkedList.this has only one value
this.departmentList.size one of { 3, 4, 6 }
this.departmentMap.nodes has only one value
this.departmentMap.nodes != null
this.departmentMap.nodes.head has only one value
this.departmentMap.nodes.head != null
this.departmentMap.nodes.size == 6
this.reception.register has only one value
this.reception.register != null
hugo.project.hospital.Hospital.this has only one value
hugo.project.hospital.Hospital.this.departmentList has only one value
hugo.project.hospital.Hospital.this.departmentList != null
hugo.project.hospital.Hospital.this.departmentMap has only one value
hugo.project.hospital.Hospital.this.departmentMap != null
hugo.project.hospital.Hospital.this.reception has only one value
hugo.project.hospital.Hospital.this.reception != null
===========================================================================
hugo.project.hospital.Hospital.Hospital():::EXIT
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.reception == hugo.project.hospital.Hospital.this.reception
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode == null
===========================================================================
hugo.project.hospital.Hospital.closestDepartmentToWithDevice(java.lang.String, java.lang.String):::ENTER
this == hugo.project.hospital.Hospital.this
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.reception == hugo.project.hospital.Hospital.this.reception
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0 has only one value
arg0.toString == "Radiology"
arg1 has only one value
arg1.toString == "needle"
===========================================================================
hugo.project.hospital.Hospital.closestDepartmentToWithDevice(java.lang.String, java.lang.String):::EXIT635
===========================================================================
hugo.project.hospital.Hospital.closestDepartmentToWithDevice(java.lang.String, java.lang.String):::EXIT
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentList == orig(this.departmentList)
this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
this.departmentList.head == orig(this.departmentList.head)
this.departmentList.head.el1 == orig(this.departmentList.head.el1)
this.departmentList.head.el1.getClass().getName() == orig(this.departmentList.head.el1.getClass().getName())
this.departmentList.head.el2 == orig(this.departmentList.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.departmentList.size == orig(this.departmentList.size)
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.departmentMap == orig(this.departmentMap)
this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
this.departmentMap.nodes == orig(this.departmentMap.nodes)
this.departmentMap.nodes.head == orig(this.departmentMap.nodes.head)
this.departmentMap.nodes.size == orig(this.departmentMap.nodes.size)
this.reception == hugo.project.hospital.Hospital.this.reception
this.reception == orig(this.reception)
this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.reception.register == orig(this.reception.register)
this.reception.register.rootTreeNode == orig(this.reception.register.rootTreeNode)
hugo.project.hospital.Hospital.this == orig(this)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0.toString == "Radiology"
arg1.toString == "needle"
return has only one value
return.toString == "Radiotherapy"
orig(this) has only one value
===========================================================================
hugo.project.hospital.Hospital.deviceFactory(java.lang.String, int):::ENTER
this == hugo.project.hospital.Hospital.this
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
hugo.util.structure.LinkedList.this == hugo.project.hospital.Hospital.this.departmentList
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.reception == hugo.project.hospital.Hospital.this.reception
this.reception.register.rootTreeNode has only one value
arg0.toString one of { "needle", "stethoscope" }
arg1 one of { 0, 1, 2 }
===========================================================================
hugo.project.hospital.Hospital.deviceFactory(java.lang.String, int):::EXIT541
return.type == orig(arg0)
arg0.toString == "needle"
return.getClass().getName() == hugo.project.hospital.NeedleDevice.class
return.type has only one value
return.type.toString == "needle"
===========================================================================
hugo.project.hospital.Hospital.deviceFactory(java.lang.String, int):::EXIT542
this.departmentList.size == 4
this.departmentMap == null
this.reception == null
arg0.toString == "stethoscope"
return.getClass().getName() == hugo.project.hospital.StethoscopeDevice.class
return.type has only one value
return.type.toString == "stethoscopeDevice"
return.amount one of { 0, 1 }
orig(arg0) has only one value
===========================================================================
hugo.project.hospital.Hospital.deviceFactory(java.lang.String, int):::EXIT
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentList == orig(this.departmentList)
this.departmentList.head == orig(this.departmentList.head)
this.departmentList.head.el1 == orig(this.departmentList.head.el1)
this.departmentList.head.el1.getClass().getName() == orig(this.departmentList.head.el1.getClass().getName())
this.departmentList.head.el2 == orig(this.departmentList.head.el2)
hugo.util.structure.LinkedList.this == hugo.project.hospital.Hospital.this.departmentList
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.departmentList.size == orig(this.departmentList.size)
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.departmentMap == orig(this.departmentMap)
this.departmentMap.nodes == orig(this.departmentMap.nodes)
this.departmentMap.nodes.head == orig(this.departmentMap.nodes.head)
this.departmentMap.nodes.size == orig(this.departmentMap.nodes.size)
this.reception == hugo.project.hospital.Hospital.this.reception
this.reception == orig(this.reception)
this.reception.register == orig(this.reception.register)
this.reception.register.rootTreeNode == orig(this.reception.register.rootTreeNode)
hugo.project.hospital.Hospital.this == orig(this)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
arg0.toString == orig(arg0.toString)
return.amount == orig(arg1)
this.reception.register.rootTreeNode has only one value
arg0.toString one of { "needle", "stethoscope" }
return.type.toString one of { "needle", "stethoscopeDevice" }
return.amount one of { 0, 1, 2 }
this.departmentList.head.el1.getClass().getName() != return.getClass().getName()
===========================================================================
hugo.project.hospital.Hospital.getDepartmentByName(java.lang.String):::ENTER
this == hugo.project.hospital.Hospital.this
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.reception == hugo.project.hospital.Hospital.this.reception
this.departmentList.size == 6
this.departmentMap has only one value
this.departmentMap != null
this.reception has only one value
this.reception != null
arg0 != null
===========================================================================
hugo.project.hospital.Hospital.getDepartmentByName(java.lang.String):::EXIT535
===========================================================================
hugo.project.hospital.Hospital.getDepartmentByName(java.lang.String):::EXIT
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentList == orig(this.departmentList)
this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
this.departmentList.head == orig(this.departmentList.head)
this.departmentList.head.el1 == orig(this.departmentList.head.el1)
this.departmentList.head.el1.getClass().getName() == orig(this.departmentList.head.el1.getClass().getName())
this.departmentList.head.el2 == orig(this.departmentList.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.departmentList.size == orig(this.departmentList.size)
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.departmentMap == orig(this.departmentMap)
this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
this.departmentMap.nodes == orig(this.departmentMap.nodes)
this.departmentMap.nodes.head == orig(this.departmentMap.nodes.head)
this.departmentMap.nodes.size == orig(this.departmentMap.nodes.size)
this.reception == hugo.project.hospital.Hospital.this.reception
this.reception == orig(this.reception)
this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.reception.register == orig(this.reception.register)
this.reception.register.rootTreeNode == orig(this.reception.register.rootTreeNode)
hugo.project.hospital.Hospital.this == orig(this)
arg0.toString == orig(arg0.toString)
return == hugo.project.hospital.Hospital$Department.this
return.getClass().getName() == hugo.project.hospital.Hospital$Department.this.getClass().getName()
return.name == orig(arg0)
this.departmentList.size == 6
this.departmentMap has only one value
this.departmentMap != null
this.reception has only one value
this.reception != null
return != null
return.name != null
return.waitingRoom != null
return.waitingRoom.name != null
return.waitingRoom.waitingList != null
return.waitingRoom.roomType has only one value
return.waitingRoom.roomType != null
return.wardsForSingle != null
return.wardsForSingle.head != null
return.wardsForSingle.size one of { 1, 2 }
return.wardsForMulti != null
return.wardsForMulti.head != null
return.wardsForMulti.size one of { 2, 3 }
return.deviceList != null
return.deviceList.size one of { 0, 1, 2 }
orig(this) has only one value
===========================================================================
hugo.project.hospital.Hospital.printRouteFromTo(java.lang.String, java.lang.String):::ENTER
this == hugo.project.hospital.Hospital.this
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.reception == hugo.project.hospital.Hospital.this.reception
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0 has only one value
arg0.toString == "Neurology"
arg1.toString one of { "Oncology", "Radiotherapy" }
===========================================================================
hugo.project.hospital.Hospital.printRouteFromTo(java.lang.String, java.lang.String):::EXIT582
===========================================================================
hugo.project.hospital.Hospital.printRouteFromTo(java.lang.String, java.lang.String):::EXIT
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentList == orig(this.departmentList)
this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
this.departmentList.head == orig(this.departmentList.head)
this.departmentList.head.el1 == orig(this.departmentList.head.el1)
this.departmentList.head.el1.getClass().getName() == orig(this.departmentList.head.el1.getClass().getName())
this.departmentList.head.el2 == orig(this.departmentList.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.departmentList.size == orig(this.departmentList.size)
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.departmentMap == orig(this.departmentMap)
this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
this.departmentMap.nodes == orig(this.departmentMap.nodes)
this.departmentMap.nodes.head == orig(this.departmentMap.nodes.head)
this.departmentMap.nodes.size == orig(this.departmentMap.nodes.size)
this.reception == hugo.project.hospital.Hospital.this.reception
this.reception == orig(this.reception)
this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.reception.register == orig(this.reception.register)
this.reception.register.rootTreeNode == orig(this.reception.register.rootTreeNode)
hugo.project.hospital.Hospital.this == orig(this)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0.toString == "Neurology"
arg1.toString one of { "Oncology", "Radiotherapy" }
orig(this) has only one value
===========================================================================
hugo.project.hospital.Hospital.printRouteFromToAvoiding(java.lang.String, java.lang.String, java.lang.String):::ENTER
this == hugo.project.hospital.Hospital.this
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.reception == hugo.project.hospital.Hospital.this.reception
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0 has only one value
arg0.toString == "Neurology"
arg1 has only one value
arg1.toString == "Radiotherapy"
arg2.toString one of { "Cardiology", "Oncology" }
===========================================================================
hugo.project.hospital.Hospital.printRouteFromToAvoiding(java.lang.String, java.lang.String, java.lang.String):::EXIT595
arg2.toString == "Cardiology"
orig(arg2) has only one value
===========================================================================
hugo.project.hospital.Hospital.printRouteFromToAvoiding(java.lang.String, java.lang.String, java.lang.String):::EXIT606
arg2.toString == "Oncology"
orig(arg2) has only one value
===========================================================================
hugo.project.hospital.Hospital.printRouteFromToAvoiding(java.lang.String, java.lang.String, java.lang.String):::EXIT
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentList == orig(this.departmentList)
this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
this.departmentList.head == orig(this.departmentList.head)
this.departmentList.head.el1 == orig(this.departmentList.head.el1)
this.departmentList.head.el1.getClass().getName() == orig(this.departmentList.head.el1.getClass().getName())
this.departmentList.head.el2 == orig(this.departmentList.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.departmentList.size == orig(this.departmentList.size)
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.departmentMap == orig(this.departmentMap)
this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
this.departmentMap.nodes == orig(this.departmentMap.nodes)
this.departmentMap.nodes.head == orig(this.departmentMap.nodes.head)
this.departmentMap.nodes.size == orig(this.departmentMap.nodes.size)
this.reception == hugo.project.hospital.Hospital.this.reception
this.reception == orig(this.reception)
this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.reception.register == orig(this.reception.register)
this.reception.register.rootTreeNode == orig(this.reception.register.rootTreeNode)
hugo.project.hospital.Hospital.this == orig(this)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0.toString == "Neurology"
arg1.toString == "Radiotherapy"
arg2.toString one of { "Cardiology", "Oncology" }
orig(this) has only one value
===========================================================================
hugo.project.hospital.Hospital.printRouteFromToVia(java.lang.String, java.lang.String, java.lang.String):::ENTER
this == hugo.project.hospital.Hospital.this
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.reception == hugo.project.hospital.Hospital.this.reception
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0 has only one value
arg0.toString == "Neurology"
arg1 has only one value
arg1.toString == "Physiotherapy"
arg2.toString one of { "Radiology", "Radiotherapy" }
===========================================================================
hugo.project.hospital.Hospital.printRouteFromToVia(java.lang.String, java.lang.String, java.lang.String):::EXIT630
===========================================================================
hugo.project.hospital.Hospital.printRouteFromToVia(java.lang.String, java.lang.String, java.lang.String):::EXIT
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentList == orig(this.departmentList)
this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
this.departmentList.head == orig(this.departmentList.head)
this.departmentList.head.el1 == orig(this.departmentList.head.el1)
this.departmentList.head.el1.getClass().getName() == orig(this.departmentList.head.el1.getClass().getName())
this.departmentList.head.el2 == orig(this.departmentList.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.departmentList.size == orig(this.departmentList.size)
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.departmentMap == orig(this.departmentMap)
this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
this.departmentMap.nodes == orig(this.departmentMap.nodes)
this.departmentMap.nodes.head == orig(this.departmentMap.nodes.head)
this.departmentMap.nodes.size == orig(this.departmentMap.nodes.size)
this.reception == hugo.project.hospital.Hospital.this.reception
this.reception == orig(this.reception)
this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.reception.register == orig(this.reception.register)
this.reception.register.rootTreeNode == orig(this.reception.register.rootTreeNode)
hugo.project.hospital.Hospital.this == orig(this)
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg2.toString == orig(arg2.toString)
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0.toString == "Neurology"
arg1.toString == "Physiotherapy"
arg2.toString one of { "Radiology", "Radiotherapy" }
orig(this) has only one value
===========================================================================
hugo.project.hospital.Hospital.signInPatientToDepartment(hugo.project.hospital.Hospital$Patient, java.lang.String):::ENTER
this == hugo.project.hospital.Hospital.this
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.reception == hugo.project.hospital.Hospital.this.reception
this.departmentList.size == 6
this.departmentMap has only one value
this.departmentMap != null
this.reception has only one value
this.reception != null
arg0 != null
arg0.name != null
arg1 != null
arg1.toString one of { "Cardiology", "Neurology" }
===========================================================================
hugo.project.hospital.Hospital.signInPatientToDepartment(hugo.project.hospital.Hospital$Patient, java.lang.String):::EXIT
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentList == orig(this.departmentList)
this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
this.departmentList.head == orig(this.departmentList.head)
this.departmentList.head.el1 == orig(this.departmentList.head.el1)
this.departmentList.head.el1.getClass().getName() == orig(this.departmentList.head.el1.getClass().getName())
this.departmentList.head.el2 == orig(this.departmentList.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.departmentList.size == orig(this.departmentList.size)
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.departmentMap == orig(this.departmentMap)
this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
this.departmentMap.nodes == orig(this.departmentMap.nodes)
this.departmentMap.nodes.head == orig(this.departmentMap.nodes.head)
this.departmentMap.nodes.size == orig(this.departmentMap.nodes.size)
this.reception == hugo.project.hospital.Hospital.this.reception
this.reception == orig(this.reception)
this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.reception.register == orig(this.reception.register)
hugo.project.hospital.Hospital.this == orig(this)
arg0.name == orig(arg0.name)
arg0.name.toString == orig(arg0.name.toString)
arg0.severity == orig(arg0.severity)
arg0.wantsSingleRoom == orig(arg0.wantsSingleRoom)
arg1.toString == orig(arg1.toString)
this.departmentList.size == 6
this.departmentMap has only one value
this.departmentMap != null
this.reception has only one value
this.reception != null
this.reception.register.rootTreeNode has only one value
this.reception.register.rootTreeNode != null
arg0.name != null
arg1.toString one of { "Cardiology", "Neurology" }
orig(this) has only one value
===========================================================================
hugo.project.hospital.Hospital.signOutPatient(java.lang.String):::ENTER
this == hugo.project.hospital.Hospital.this
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.reception == hugo.project.hospital.Hospital.this.reception
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0 has only one value
arg0.toString == "p5"
===========================================================================
hugo.project.hospital.Hospital.signOutPatient(java.lang.String):::EXIT
this.departmentList == hugo.util.structure.LinkedList.this
this.departmentList == hugo.project.hospital.Hospital.this.departmentList
this.departmentList == orig(this.departmentList)
this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
this.departmentList.head == orig(this.departmentList.head)
this.departmentList.head.el1 == orig(this.departmentList.head.el1)
this.departmentList.head.el1.getClass().getName() == orig(this.departmentList.head.el1.getClass().getName())
this.departmentList.head.el2 == orig(this.departmentList.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.departmentList.size == orig(this.departmentList.size)
this.departmentMap == hugo.project.hospital.Hospital.this.departmentMap
this.departmentMap == orig(this.departmentMap)
this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
this.departmentMap.nodes == orig(this.departmentMap.nodes)
this.departmentMap.nodes.head == orig(this.departmentMap.nodes.head)
this.departmentMap.nodes.size == orig(this.departmentMap.nodes.size)
this.reception == hugo.project.hospital.Hospital.this.reception
this.reception == orig(this.reception)
this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.reception.register == orig(this.reception.register)
this.reception.register.rootTreeNode == orig(this.reception.register.rootTreeNode)
hugo.project.hospital.Hospital.this == orig(this)
arg0.toString == orig(arg0.toString)
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
arg0.toString == "p5"
orig(this) has only one value
===========================================================================
hugo.project.hospital.Hospital.toString():::ENTER
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
===========================================================================
hugo.project.hospital.Hospital.toString():::EXIT
this.departmentList == orig(this.departmentList)
this.departmentList.head == orig(this.departmentList.head)
this.departmentList.head.el1 == orig(this.departmentList.head.el1)
this.departmentList.head.el1.getClass().getName() == orig(this.departmentList.head.el1.getClass().getName())
this.departmentList.head.el2 == orig(this.departmentList.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.departmentList.size == orig(this.departmentList.size)
this.departmentMap == orig(this.departmentMap)
this.departmentMap.nodes == orig(this.departmentMap.nodes)
this.departmentMap.nodes.head == orig(this.departmentMap.nodes.head)
this.departmentMap.nodes.size == orig(this.departmentMap.nodes.size)
this.reception == orig(this.reception)
this.reception.register == orig(this.reception.register)
this.reception.register.rootTreeNode == orig(this.reception.register.rootTreeNode)
hugo.project.hospital.Hospital.this == orig(hugo.project.hospital.Hospital.this)
hugo.project.hospital.Hospital.this.departmentList == orig(hugo.project.hospital.Hospital.this.departmentList)
hugo.project.hospital.Hospital.this.departmentMap == orig(hugo.project.hospital.Hospital.this.departmentMap)
hugo.project.hospital.Hospital.this.reception == orig(hugo.project.hospital.Hospital.this.reception)
this.departmentList.size == 6
this.departmentMap has only one value
this.reception has only one value
this.reception.register.rootTreeNode has only one value
return.toString one of { "\n******************* PATIENTS ********************\np1:\tNeurology,\tRoom 107\np2:\tNeurology,\tRoom 107\np10:\tNeurology,\tWR Neurology\np14:\tCardiology,\tRoom 103\np11:\tNeurology,\tWR Neurology\np12:\tNeurology,\tWR Neurology\np13:\tNeurology,\tWR Neurology\np3:\tNeurology,\tRoom 101\np4:\tNeurology,\tRoom 108\np5:\tNeurology,\tRoom 108\np6:\tNeurology,\tRoom 102\np7:\tNeurology,\tRoom 109\np8:\tNeurology,\tRoom 109\np9:\tNeurology,\tWR Neurology\n\n****************** DEPARTMENTS ******************\nNeurology:\n  Device: [ ]\n  -> WR Neurology (5) [ << p10 << p9 << p12 << p13 << p11 <<  ]\n  -> Room 101 (1/1) [ p3  ]\n  -> Room 102 (1/1) [ p6  ]\n  -> Room 107 (2/2) [ p2 p1  ]\n  -> Room 108 (2/2) [ p5 p4  ]\n  -> Room 109 (2/2) [ p8 p7  ]\n\n\nCardiology:\n  Device: [ ]\n  -> WR Cardiology (0) [ <<  ]\n  -> Room 103 (1/1) [ p14  ]\n  -> Room 104 (0/1) [  ]\n  -> Room 111 (0/3) [  ]\n  -> Room 110 (0/2) [  ]\n\n\nRadiology:\n  Device: [ ]\n  -> WR Radiology (0) [ <<  ]\n  -> Room 105 (0/1) [  ]\n  -> Room 112 (0/3) [  ]\n  -> Room 106 (0/3) [  ]\n  -> Room 113 (0/2) [  ]\n\n\nRadiotherapy:\n  Device: [ needle(2) ]\n  -> WR Radiotherapy (0) [ <<  ]\n  -> Room 125 (0/1) [  ]\n  -> Room 119 (0/3) [  ]\n  -> Room 126 (0/3) [  ]\n  -> Room 120 (0/2) [  ]\n\n\nOncology:\n  Device: [ stethoscopeDevice(1) needle(1) ]\n  -> WR Oncology (0) [ <<  ]\n  -> Room 124 (0/1) [  ]\n  -> Room 123 (0/1) [  ]\n  -> Room 118 (0/3) [  ]\n  -> Room 117 (0/2) [  ]\n\n\nPhysiotherapy:\n  Device: [ ]\n  -> WR Physiotherapy (0) [ <<  ]\n  -> Room 122 (0/1) [  ]\n  -> Room 121 (0/1) [  ]\n  -> Room 116 (0/2) [  ]\n  -> Room 115 (0/2) [  ]\n  -> Room 114 (0/2) [  ]\n\n\n", "\n******************* PATIENTS ********************\np1:\tNeurology,\tRoom 107\np2:\tNeurology,\tRoom 107\np10:\tNeurology,\tWR Neurology\np14:\tCardiology,\tRoom 103\np11:\tNeurology,\tWR Neurology\np12:\tNeurology,\tWR Neurology\np13:\tNeurology,\tWR Neurology\np3:\tNeurology,\tRoom 101\np4:\tNeurology,\tRoom 108\np6:\tNeurology,\tRoom 102\n\n****************** DEPARTMENTS ******************\nNeurology:\n  Device: [ ]\n  -> WR Neurology (4) [ << p10 << p12 << p13 << p11 <<  ]\n  -> Room 101 (1/1) [ p3  ]\n  -> Room 102 (1/1) [ p6  ]\n  -> Room 107 (2/2) [ p2 p1  ]\n  -> Room 108 (2/2) [ p9 p4  ]\n  -> Room 109 (2/2) [ p8 p7  ]\n\n\nCardiology:\n  Device: [ ]\n  -> WR Cardiology (0) [ <<  ]\n  -> Room 103 (1/1) [ p14  ]\n  -> Room 104 (0/1) [  ]\n  -> Room 111 (0/3) [  ]\n  -> Room 110 (0/2) [  ]\n\n\nRadiology:\n  Device: [ ]\n  -> WR Radiology (0) [ <<  ]\n  -> Room 105 (0/1) [  ]\n  -> Room 112 (0/3) [  ]\n  -> Room 106 (0/3) [  ]\n  -> Room 113 (0/2) [  ]\n\n\nRadiotherapy:\n  Device: [ needle(2) ]\n  -> WR Radiotherapy (0) [ <<  ]\n  -> Room 125 (0/1) [  ]\n  -> Room 119 (0/3) [  ]\n  -> Room 126 (0/3) [  ]\n  -> Room 120 (0/2) [  ]\n\n\nOncology:\n  Device: [ stethoscopeDevice(1) needle(1) ]\n  -> WR Oncology (0) [ <<  ]\n  -> Room 124 (0/1) [  ]\n  -> Room 123 (0/1) [  ]\n  -> Room 118 (0/3) [  ]\n  -> Room 117 (0/2) [  ]\n\n\nPhysiotherapy:\n  Device: [ ]\n  -> WR Physiotherapy (0) [ <<  ]\n  -> Room 122 (0/1) [  ]\n  -> Room 121 (0/1) [  ]\n  -> Room 116 (0/2) [  ]\n  -> Room 115 (0/2) [  ]\n  -> Room 114 (0/2) [  ]\n\n\n" }
===========================================================================
hugo.project.hospital.NeedleDevice:::OBJECT
this.type has only one value
this.type.toString == "needle"
this.amount one of { 0, 1, 2 }
===========================================================================
hugo.project.hospital.NeedleDevice.NeedleDevice(int):::ENTER
arg0 one of { 0, 1, 2 }
===========================================================================
hugo.project.hospital.NeedleDevice.NeedleDevice(int):::EXIT
this.amount == orig(arg0)
===========================================================================
hugo.project.hospital.ProjectTest.main(java.lang.String[]):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.lang.String[].class
arg0[] == []
arg0[].toString == []
===========================================================================
hugo.project.hospital.ProjectTest.main(java.lang.String[]):::EXIT
arg0[] == orig(arg0[])
arg0[] == []
arg0[].toString == []
===========================================================================
hugo.project.hospital.RoomType:::OBJECT
===========================================================================
hugo.project.hospital.RoomType.RoomType(java.lang.String, int):::ENTER
arg0.toString one of { "WAITINGROOM", "WARD" }
arg1 one of { 0, 1 }
===========================================================================
hugo.project.hospital.RoomType.RoomType(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "WAITINGROOM", "WARD" }
===========================================================================
hugo.project.hospital.StethoscopeDevice:::OBJECT
this.type has only one value
this.type.toString == "stethoscopeDevice"
this.amount one of { 0, 1 }
===========================================================================
hugo.project.hospital.StethoscopeDevice.StethoscopeDevice(int):::ENTER
arg0 one of { 0, 1 }
===========================================================================
hugo.project.hospital.StethoscopeDevice.StethoscopeDevice(int):::EXIT
this.amount == orig(arg0)
===========================================================================
hugo.util.structure.BinaryTree$1$1$1:::OBJECT
this.data == hugo.util.structure.LinkedList.this
hugo.util.structure.BinaryTree$1$1.this.toDoQueue == null
hugo.util.structure.BinaryTree.this has only one value
this.data.head.el1 has only one value
this.data.head.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.data.head.el2 == null
this.data.size == 1
===========================================================================
hugo.util.structure.BinaryTree$1$1$1.(hugo.util.structure.BinaryTree$1$1):::ENTER
hugo.util.structure.BinaryTree$1$1.this.toDoQueue == null
hugo.util.structure.BinaryTree.this has only one value
===========================================================================
hugo.util.structure.BinaryTree$1$1$1.(hugo.util.structure.BinaryTree$1$1):::EXIT
hugo.util.structure.BinaryTree$1$1.this == orig(hugo.util.structure.BinaryTree$1$1.this)
hugo.util.structure.BinaryTree$1$1.this.toDoQueue == orig(hugo.util.structure.BinaryTree$1$1.this.toDoQueue)
hugo.util.structure.BinaryTree$1.this == orig(hugo.util.structure.BinaryTree$1.this)
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
===========================================================================
hugo.util.structure.BinaryTree$1$1:::OBJECT
this.toDoQueue != null
this.toDoQueue.data != null
this.toDoQueue.data.head != null
this.toDoQueue.data.size one of { 1, 2 }
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode != null
===========================================================================
hugo.util.structure.BinaryTree$1$1.(hugo.util.structure.BinaryTree$1):::ENTER
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
===========================================================================
hugo.util.structure.BinaryTree$1$1.(hugo.util.structure.BinaryTree$1):::EXIT
hugo.util.structure.BinaryTree$1.this == orig(hugo.util.structure.BinaryTree$1.this)
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.toDoQueue.data.size == 1
===========================================================================
hugo.util.structure.BinaryTree$1$1.hasNext():::ENTER
===========================================================================
hugo.util.structure.BinaryTree$1$1.hasNext():::EXIT
this.toDoQueue == orig(this.toDoQueue)
this.toDoQueue.data == orig(this.toDoQueue.data)
this.toDoQueue.data.head == orig(this.toDoQueue.data.head)
this.toDoQueue.data.size == orig(this.toDoQueue.data.size)
hugo.util.structure.BinaryTree$1.this == orig(hugo.util.structure.BinaryTree$1.this)
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
return == true
===========================================================================
hugo.util.structure.BinaryTree$1$1.hasNext():::EXIT;condition="return == true"
===========================================================================
hugo.util.structure.BinaryTree$1$1.next():::ENTER
===========================================================================
hugo.util.structure.BinaryTree$1$1.next():::EXIT
this.toDoQueue == orig(this.toDoQueue)
this.toDoQueue.data == orig(this.toDoQueue.data)
hugo.util.structure.BinaryTree$1.this == orig(hugo.util.structure.BinaryTree$1.this)
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
return != null
return.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.toDoQueue.data.size >= orig(this.toDoQueue.data.size)
===========================================================================
hugo.util.structure.BinaryTree$1:::OBJECT
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.value has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree$1.(hugo.util.structure.BinaryTree):::ENTER
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.value has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree$1.(hugo.util.structure.BinaryTree):::EXIT
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
===========================================================================
hugo.util.structure.BinaryTree$1.iterator():::ENTER
===========================================================================
hugo.util.structure.BinaryTree$1.iterator():::EXIT
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
return.getClass().getName() == hugo.util.structure.BinaryTree$1$1.class
===========================================================================
hugo.util.structure.BinaryTree$2$1$1:::OBJECT
hugo.util.structure.BinaryTree$2$1.this.toDoStack == null
hugo.util.structure.BinaryTree.this has only one value
this.data.head.el1 has only one value
this.data.head.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.data.head.el2 == null
this.data.size == 1
===========================================================================
hugo.util.structure.BinaryTree$2$1$1.(hugo.util.structure.BinaryTree$2$1):::ENTER
hugo.util.structure.BinaryTree$2$1.this.toDoStack == null
hugo.util.structure.BinaryTree.this has only one value
===========================================================================
hugo.util.structure.BinaryTree$2$1$1.(hugo.util.structure.BinaryTree$2$1):::EXIT
hugo.util.structure.BinaryTree$2$1.this == orig(hugo.util.structure.BinaryTree$2$1.this)
hugo.util.structure.BinaryTree$2$1.this.toDoStack == orig(hugo.util.structure.BinaryTree$2$1.this.toDoStack)
hugo.util.structure.BinaryTree$2.this == orig(hugo.util.structure.BinaryTree$2.this)
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
===========================================================================
hugo.util.structure.BinaryTree$2$1:::OBJECT
this.toDoStack != null
this.toDoStack.data != null
this.toDoStack.data.size one of { 0, 1, 2 }
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode != null
===========================================================================
hugo.util.structure.BinaryTree$2$1.(hugo.util.structure.BinaryTree$2):::ENTER
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
===========================================================================
hugo.util.structure.BinaryTree$2$1.(hugo.util.structure.BinaryTree$2):::EXIT
hugo.util.structure.BinaryTree$2.this == orig(hugo.util.structure.BinaryTree$2.this)
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.toDoStack.data.size == 1
===========================================================================
hugo.util.structure.BinaryTree$2$1.hasNext():::ENTER
===========================================================================
hugo.util.structure.BinaryTree$2$1.hasNext():::EXIT
this.toDoStack == orig(this.toDoStack)
this.toDoStack.data == orig(this.toDoStack.data)
this.toDoStack.data.head == orig(this.toDoStack.data.head)
this.toDoStack.data.size == orig(this.toDoStack.data.size)
hugo.util.structure.BinaryTree$2.this == orig(hugo.util.structure.BinaryTree$2.this)
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
(this.toDoStack.data.head != null)  <==>  (return == true)
(this.toDoStack.data.head != null)  <==>  (this.toDoStack.data.size one of { 1, 2 })
(this.toDoStack.data.head == null)  <==>  (return == false)
(this.toDoStack.data.head == null)  <==>  (this.toDoStack.data.size == 0)
===========================================================================
hugo.util.structure.BinaryTree$2$1.hasNext():::EXIT;condition="return == true"
this.toDoStack.data.head != null
this.toDoStack.data.size one of { 1, 2 }
return == true
===========================================================================
hugo.util.structure.BinaryTree$2$1.hasNext():::EXIT;condition="not(return == true)"
this.toDoStack.data.head == null
this.toDoStack.data.size == 0
return == false
===========================================================================
hugo.util.structure.BinaryTree$2$1.next():::ENTER
this.toDoStack.data.head != null
this.toDoStack.data.size one of { 1, 2 }
===========================================================================
hugo.util.structure.BinaryTree$2$1.next():::EXIT
this.toDoStack == orig(this.toDoStack)
this.toDoStack.data == orig(this.toDoStack.data)
hugo.util.structure.BinaryTree$2.this == orig(hugo.util.structure.BinaryTree$2.this)
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
return != null
return.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree$2:::OBJECT
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.value has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree$2.(hugo.util.structure.BinaryTree):::ENTER
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.value has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree$2.(hugo.util.structure.BinaryTree):::EXIT
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
===========================================================================
hugo.util.structure.BinaryTree$2.iterator():::ENTER
===========================================================================
hugo.util.structure.BinaryTree$2.iterator():::EXIT
hugo.util.structure.BinaryTree.this == orig(hugo.util.structure.BinaryTree.this)
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
return.getClass().getName() == hugo.util.structure.BinaryTree$2$1.class
===========================================================================
hugo.util.structure.BinaryTree$TreeNode:::OBJECT
this == this.leftTreeNode.parentTreeNode
this == this.rightTreeNode.parentTreeNode
this.leftTreeNode == this.leftTreeNode.rightTreeNode.parentTreeNode
this.leftTreeNode == this.leftTreeNode.parentTreeNode.leftTreeNode
this.leftTreeNode == this.rightTreeNode.parentTreeNode.leftTreeNode
this.leftTreeNode == this.parentTreeNode.rightTreeNode.leftTreeNode
this.leftTreeNode.rightTreeNode.parentTreeNode == this.leftTreeNode.parentTreeNode.leftTreeNode
this.leftTreeNode.rightTreeNode.parentTreeNode == this.rightTreeNode.parentTreeNode.leftTreeNode
this.leftTreeNode.rightTreeNode.parentTreeNode == this.parentTreeNode.rightTreeNode.leftTreeNode
this.leftTreeNode.rightTreeNode.value.getClass().getName() == this.leftTreeNode.value.getClass().getName()
this.leftTreeNode.rightTreeNode.value.getClass().getName() == this.rightTreeNode.rightTreeNode.value.getClass().getName()
this.leftTreeNode.rightTreeNode.value.getClass().getName() == this.rightTreeNode.value.getClass().getName()
this.leftTreeNode.rightTreeNode.value.getClass().getName() == this.parentTreeNode.rightTreeNode.value.getClass().getName()
this.leftTreeNode.rightTreeNode.value.getClass().getName() == this.parentTreeNode.parentTreeNode.value.getClass().getName()
this.leftTreeNode.rightTreeNode.value.getClass().getName() == this.parentTreeNode.value.getClass().getName()
this.leftTreeNode.rightTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.leftTreeNode.rightTreeNode.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
this.leftTreeNode.parentTreeNode == this.rightTreeNode.parentTreeNode
this.leftTreeNode.parentTreeNode == this.parentTreeNode.rightTreeNode
this.leftTreeNode.parentTreeNode.leftTreeNode == this.rightTreeNode.parentTreeNode.leftTreeNode
this.leftTreeNode.parentTreeNode.leftTreeNode == this.parentTreeNode.rightTreeNode.leftTreeNode
this.leftTreeNode.parentTreeNode.rightTreeNode == this.rightTreeNode
this.leftTreeNode.parentTreeNode.rightTreeNode == this.rightTreeNode.rightTreeNode.parentTreeNode
this.leftTreeNode.parentTreeNode.rightTreeNode == this.rightTreeNode.parentTreeNode.rightTreeNode
this.leftTreeNode.parentTreeNode.rightTreeNode == this.parentTreeNode.rightTreeNode.rightTreeNode
this.leftTreeNode.parentTreeNode.parentTreeNode == this.rightTreeNode.parentTreeNode.parentTreeNode
this.leftTreeNode.parentTreeNode.parentTreeNode == this.parentTreeNode
this.leftTreeNode.parentTreeNode.parentTreeNode == this.parentTreeNode.rightTreeNode.parentTreeNode
this.leftTreeNode.parentTreeNode.parentTreeNode == this.parentTreeNode.parentTreeNode.leftTreeNode
this.leftTreeNode.parentTreeNode.value == this.rightTreeNode.parentTreeNode.value
this.leftTreeNode.parentTreeNode.value == this.parentTreeNode.rightTreeNode.value
this.leftTreeNode.parentTreeNode.value == this.value
this.leftTreeNode.parentTreeNode.value.getClass().getName() == this.leftTreeNode.value.getClass().getName()
this.leftTreeNode.value.getClass().getName() == this.rightTreeNode.rightTreeNode.value.getClass().getName()
this.leftTreeNode.value.getClass().getName() == this.rightTreeNode.value.getClass().getName()
this.leftTreeNode.value.getClass().getName() == this.parentTreeNode.rightTreeNode.value.getClass().getName()
this.leftTreeNode.value.getClass().getName() == this.parentTreeNode.parentTreeNode.value.getClass().getName()
this.leftTreeNode.value.getClass().getName() == this.parentTreeNode.value.getClass().getName()
this.leftTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.leftTreeNode.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
this.rightTreeNode == this.rightTreeNode.leftTreeNode.parentTreeNode
this.rightTreeNode == this.rightTreeNode.rightTreeNode.parentTreeNode
this.rightTreeNode == this.rightTreeNode.parentTreeNode.rightTreeNode
this.rightTreeNode.leftTreeNode.parentTreeNode == this.rightTreeNode.rightTreeNode.parentTreeNode
this.rightTreeNode.leftTreeNode.parentTreeNode == this.rightTreeNode.parentTreeNode.rightTreeNode
this.rightTreeNode.leftTreeNode.parentTreeNode == this.parentTreeNode.leftTreeNode.rightTreeNode
this.rightTreeNode.leftTreeNode.value.getClass().getName() == this.rightTreeNode.rightTreeNode.value.getClass().getName()
this.rightTreeNode.leftTreeNode.value.getClass().getName() == this.rightTreeNode.value.getClass().getName()
this.rightTreeNode.leftTreeNode.value.getClass().getName() == this.parentTreeNode.leftTreeNode.value.getClass().getName()
this.rightTreeNode.leftTreeNode.value.getClass().getName() == this.parentTreeNode.rightTreeNode.value.getClass().getName()
this.rightTreeNode.leftTreeNode.value.getClass().getName() == this.parentTreeNode.parentTreeNode.value.getClass().getName()
this.rightTreeNode.leftTreeNode.value.getClass().getName() == this.parentTreeNode.value.getClass().getName()
this.rightTreeNode.leftTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.rightTreeNode.leftTreeNode.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
this.rightTreeNode.rightTreeNode.parentTreeNode == this.rightTreeNode.parentTreeNode.rightTreeNode
this.rightTreeNode.rightTreeNode.parentTreeNode == this.parentTreeNode.rightTreeNode.rightTreeNode
this.rightTreeNode.rightTreeNode.value.getClass().getName() == this.rightTreeNode.value.getClass().getName()
this.rightTreeNode.rightTreeNode.value.getClass().getName() == this.parentTreeNode.leftTreeNode.value.getClass().getName()
this.rightTreeNode.rightTreeNode.value.getClass().getName() == this.parentTreeNode.rightTreeNode.value.getClass().getName()
this.rightTreeNode.rightTreeNode.value.getClass().getName() == this.parentTreeNode.parentTreeNode.value.getClass().getName()
this.rightTreeNode.rightTreeNode.value.getClass().getName() == this.parentTreeNode.value.getClass().getName()
this.rightTreeNode.rightTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.rightTreeNode.rightTreeNode.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
this.rightTreeNode.parentTreeNode.leftTreeNode == this.parentTreeNode.rightTreeNode.leftTreeNode
this.rightTreeNode.parentTreeNode.parentTreeNode == this.parentTreeNode
this.rightTreeNode.parentTreeNode.parentTreeNode == this.parentTreeNode.leftTreeNode.parentTreeNode
this.rightTreeNode.parentTreeNode.parentTreeNode == this.parentTreeNode.rightTreeNode.parentTreeNode
this.rightTreeNode.parentTreeNode.value == this.value
this.rightTreeNode.parentTreeNode.value.getClass().getName() == this.rightTreeNode.value.getClass().getName()
this.rightTreeNode.value.getClass().getName() == this.parentTreeNode.leftTreeNode.value.getClass().getName()
this.rightTreeNode.value.getClass().getName() == this.parentTreeNode.rightTreeNode.value.getClass().getName()
this.rightTreeNode.value.getClass().getName() == this.parentTreeNode.parentTreeNode.value.getClass().getName()
this.rightTreeNode.value.getClass().getName() == this.parentTreeNode.value.getClass().getName()
this.rightTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.rightTreeNode.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
this.parentTreeNode == this.parentTreeNode.leftTreeNode.parentTreeNode
this.parentTreeNode == this.parentTreeNode.rightTreeNode.parentTreeNode
this.parentTreeNode.leftTreeNode.parentTreeNode == this.parentTreeNode.rightTreeNode.parentTreeNode
this.parentTreeNode.leftTreeNode.parentTreeNode == this.parentTreeNode.parentTreeNode.rightTreeNode
this.parentTreeNode.leftTreeNode.value.getClass().getName() == this.parentTreeNode.rightTreeNode.value.getClass().getName()
this.parentTreeNode.leftTreeNode.value.getClass().getName() == this.parentTreeNode.parentTreeNode.value.getClass().getName()
this.parentTreeNode.leftTreeNode.value.getClass().getName() == this.parentTreeNode.value.getClass().getName()
this.parentTreeNode.leftTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.parentTreeNode.leftTreeNode.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
this.parentTreeNode.rightTreeNode.value.getClass().getName() == this.parentTreeNode.parentTreeNode.value.getClass().getName()
this.parentTreeNode.rightTreeNode.value.getClass().getName() == this.parentTreeNode.value.getClass().getName()
this.parentTreeNode.rightTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.parentTreeNode.rightTreeNode.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
this.parentTreeNode.parentTreeNode.value.getClass().getName() == this.parentTreeNode.value.getClass().getName()
this.parentTreeNode.parentTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.parentTreeNode.parentTreeNode.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
this.parentTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.parentTreeNode.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
this.value.getClass().getName() == hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName()
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode
this.leftTreeNode.leftTreeNode == null
this.leftTreeNode.rightTreeNode.parentTreeNode != null
this.leftTreeNode.rightTreeNode.value != null
this.leftTreeNode.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.leftTreeNode.parentTreeNode != null
this.leftTreeNode.parentTreeNode.leftTreeNode != null
this.leftTreeNode.parentTreeNode.parentTreeNode != null
this.leftTreeNode.parentTreeNode.value != null
this.leftTreeNode.value != null
this.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode != null
this.rightTreeNode.leftTreeNode.leftTreeNode == null
this.rightTreeNode.leftTreeNode.parentTreeNode != null
this.rightTreeNode.leftTreeNode.value != null
this.rightTreeNode.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.rightTreeNode.rightTreeNode.leftTreeNode == null
this.rightTreeNode.rightTreeNode.parentTreeNode != null
this.rightTreeNode.rightTreeNode.value != null
this.rightTreeNode.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.rightTreeNode.parentTreeNode != null
this.rightTreeNode.parentTreeNode.rightTreeNode != null
this.rightTreeNode.parentTreeNode.value != null
this.rightTreeNode.value != null
this.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.parentTreeNode.leftTreeNode.leftTreeNode == null
this.parentTreeNode.leftTreeNode.parentTreeNode != null
this.parentTreeNode.leftTreeNode.value != null
this.parentTreeNode.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.parentTreeNode.rightTreeNode.parentTreeNode != null
this.parentTreeNode.rightTreeNode.value != null
this.parentTreeNode.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.parentTreeNode.parentTreeNode.value != null
this.parentTreeNode.parentTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.parentTreeNode.value != null
this.parentTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.value != null
this.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.value has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.value != null
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.TreeNode(hugo.util.structure.BinaryTree, java.lang.Comparable):::ENTER
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == arg1.getClass().getName()
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this != null
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.value has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.value != null
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1 != null
arg1.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.TreeNode(hugo.util.structure.BinaryTree, java.lang.Comparable):::EXIT
this.rightTreeNode == this.parentTreeNode
this.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
this.value == orig(arg1)
this.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(arg1.getClass().getName())
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
this.leftTreeNode == null
this.rightTreeNode == null
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.TreeNode(hugo.util.structure.BinaryTree, java.lang.Comparable, hugo.util.structure.BinaryTree$TreeNode, hugo.util.structure.BinaryTree$TreeNode, hugo.util.structure.BinaryTree$TreeNode):::ENTER
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == arg1.getClass().getName()
hugo.util.structure.BinaryTree.this has only one value
hugo.util.structure.BinaryTree.this != null
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == null
hugo.util.structure.BinaryTree.this.rootTreeNode.value has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.value != null
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1 != null
arg1.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg2 == null
arg3 == null
arg4 == null
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.TreeNode(hugo.util.structure.BinaryTree, java.lang.Comparable, hugo.util.structure.BinaryTree$TreeNode, hugo.util.structure.BinaryTree$TreeNode, hugo.util.structure.BinaryTree$TreeNode):::EXIT
this.rightTreeNode == this.parentTreeNode
this.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
this.value == orig(arg1)
this.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(arg1.getClass().getName())
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
this.leftTreeNode == null
this.rightTreeNode == null
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.compareTo(hugo.util.structure.BinaryTree$TreeNode):::ENTER
this.rightTreeNode == this.parentTreeNode.leftTreeNode
this.rightTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode
this.rightTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode
this.parentTreeNode == arg0
this.parentTreeNode.rightTreeNode == arg0.rightTreeNode
this.parentTreeNode.rightTreeNode.parentTreeNode == this.parentTreeNode.parentTreeNode.rightTreeNode
this.parentTreeNode.rightTreeNode.parentTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode
this.parentTreeNode.parentTreeNode == arg0.parentTreeNode
this.parentTreeNode.parentTreeNode.leftTreeNode == arg0.parentTreeNode.leftTreeNode
this.parentTreeNode.parentTreeNode.rightTreeNode == arg0.parentTreeNode.rightTreeNode
this.parentTreeNode.parentTreeNode.parentTreeNode == arg0.parentTreeNode.parentTreeNode
this.parentTreeNode.parentTreeNode.value == arg0.parentTreeNode.value
this.parentTreeNode.parentTreeNode.value.getClass().getName() == arg0.parentTreeNode.value.getClass().getName()
this.parentTreeNode.value == arg0.value
this.value.getClass().getName() == arg0.value.getClass().getName()
this.leftTreeNode == null
this.rightTreeNode == null
this.parentTreeNode != null
this.parentTreeNode.rightTreeNode.leftTreeNode == null
this.parentTreeNode.rightTreeNode.rightTreeNode has only one value
this.parentTreeNode.rightTreeNode.parentTreeNode has only one value
this.parentTreeNode.rightTreeNode.value has only one value
arg0.leftTreeNode == null
arg0.rightTreeNode.leftTreeNode == null
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.compareTo(hugo.util.structure.BinaryTree$TreeNode):::EXIT
this.leftTreeNode == orig(this.leftTreeNode)
this.rightTreeNode == this.parentTreeNode.leftTreeNode
this.rightTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode
this.rightTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode
this.rightTreeNode == orig(this.rightTreeNode)
this.rightTreeNode == orig(this.parentTreeNode.leftTreeNode)
this.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
this.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode)
this.parentTreeNode == arg0.rightTreeNode.parentTreeNode
this.parentTreeNode == orig(this.parentTreeNode)
this.parentTreeNode == orig(arg0)
this.parentTreeNode.rightTreeNode == arg0.rightTreeNode
this.parentTreeNode.parentTreeNode == arg0.parentTreeNode
this.parentTreeNode.parentTreeNode.leftTreeNode == arg0.parentTreeNode.leftTreeNode
this.parentTreeNode.parentTreeNode.rightTreeNode == arg0.parentTreeNode.rightTreeNode
this.parentTreeNode.parentTreeNode.parentTreeNode == arg0.parentTreeNode.parentTreeNode
this.parentTreeNode.parentTreeNode.value == arg0.parentTreeNode.value
this.parentTreeNode.parentTreeNode.value.getClass().getName() == arg0.parentTreeNode.value.getClass().getName()
this.parentTreeNode.value == arg0.value
this.value == orig(this.value)
this.value.getClass().getName() == arg0.rightTreeNode.value.getClass().getName()
this.value.getClass().getName() == arg0.parentTreeNode.value.getClass().getName()
this.value.getClass().getName() == arg0.value.getClass().getName()
this.value.getClass().getName() == orig(this.parentTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(arg0.value.getClass().getName())
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == arg0.rightTreeNode.parentTreeNode
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
arg0.leftTreeNode == orig(arg0.leftTreeNode)
arg0.rightTreeNode == orig(this.parentTreeNode.rightTreeNode)
arg0.rightTreeNode == orig(arg0.rightTreeNode)
arg0.rightTreeNode.leftTreeNode == orig(arg0.rightTreeNode.leftTreeNode)
arg0.rightTreeNode.parentTreeNode == arg0.parentTreeNode.rightTreeNode
arg0.rightTreeNode.value.getClass().getName() == arg0.parentTreeNode.value.getClass().getName()
arg0.parentTreeNode == orig(this.parentTreeNode.parentTreeNode)
arg0.parentTreeNode == orig(arg0.parentTreeNode)
arg0.parentTreeNode.leftTreeNode == orig(this.parentTreeNode.parentTreeNode.leftTreeNode)
arg0.parentTreeNode.leftTreeNode == orig(arg0.parentTreeNode.leftTreeNode)
arg0.parentTreeNode.rightTreeNode == orig(this.parentTreeNode.parentTreeNode.rightTreeNode)
arg0.parentTreeNode.rightTreeNode == orig(arg0.parentTreeNode.rightTreeNode)
arg0.parentTreeNode.parentTreeNode == orig(this.parentTreeNode.parentTreeNode.parentTreeNode)
arg0.parentTreeNode.parentTreeNode == orig(arg0.parentTreeNode.parentTreeNode)
arg0.parentTreeNode.value == orig(this.parentTreeNode.parentTreeNode.value)
arg0.parentTreeNode.value == orig(arg0.parentTreeNode.value)
arg0.parentTreeNode.value.getClass().getName() == orig(this.parentTreeNode.parentTreeNode.value.getClass().getName())
arg0.parentTreeNode.value.getClass().getName() == orig(arg0.parentTreeNode.value.getClass().getName())
arg0.value == orig(this.parentTreeNode.value)
arg0.value == orig(arg0.value)
this.leftTreeNode == null
this.rightTreeNode == null
this.parentTreeNode != null
this.parentTreeNode.rightTreeNode.leftTreeNode == null
arg0.leftTreeNode == null
arg0.rightTreeNode.leftTreeNode == null
arg0.rightTreeNode.rightTreeNode has only one value
arg0.rightTreeNode.parentTreeNode has only one value
arg0.rightTreeNode.value has only one value
arg0.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg0.parentTreeNode.value != null
arg0.parentTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg0.value != null
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.getLeftTree():::ENTER
hugo.util.structure.BinaryTree.this.rootTreeNode == this.rightTreeNode.parentTreeNode.parentTreeNode
hugo.util.structure.BinaryTree.this.rootTreeNode == this.parentTreeNode.parentTreeNode.parentTreeNode
this.parentTreeNode.leftTreeNode.rightTreeNode != null
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode != null
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.getLeftTree():::EXIT
this.leftTreeNode == return
this.leftTreeNode.leftTreeNode == orig(this.leftTreeNode.leftTreeNode)
this.leftTreeNode.rightTreeNode == return.rightTreeNode
this.leftTreeNode.rightTreeNode.leftTreeNode == return.rightTreeNode.leftTreeNode
this.leftTreeNode.rightTreeNode.rightTreeNode == return.rightTreeNode.rightTreeNode
this.leftTreeNode.rightTreeNode.parentTreeNode == return.rightTreeNode.parentTreeNode
this.leftTreeNode.rightTreeNode.value == return.rightTreeNode.value
this.leftTreeNode.rightTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.leftTreeNode.parentTreeNode == return.parentTreeNode
this.leftTreeNode.parentTreeNode.leftTreeNode == return.parentTreeNode.leftTreeNode
this.leftTreeNode.parentTreeNode.rightTreeNode == return.parentTreeNode.rightTreeNode
this.leftTreeNode.parentTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
this.leftTreeNode.parentTreeNode.value == return.parentTreeNode.value
this.leftTreeNode.parentTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.leftTreeNode.value == return.value
this.leftTreeNode.value.getClass().getName() == return.value.getClass().getName()
hugo.util.structure.BinaryTree.this.rootTreeNode == this.rightTreeNode.parentTreeNode.parentTreeNode
hugo.util.structure.BinaryTree.this.rootTreeNode == this.parentTreeNode.parentTreeNode.parentTreeNode
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rightTreeNode == return.parentTreeNode.rightTreeNode
this.rightTreeNode == orig(this.rightTreeNode)
this.rightTreeNode.leftTreeNode == orig(this.rightTreeNode.leftTreeNode)
this.rightTreeNode.leftTreeNode.leftTreeNode == orig(this.rightTreeNode.leftTreeNode.leftTreeNode)
this.rightTreeNode.leftTreeNode.rightTreeNode == orig(this.rightTreeNode.leftTreeNode.rightTreeNode)
this.rightTreeNode.leftTreeNode.parentTreeNode == orig(this.rightTreeNode.leftTreeNode.parentTreeNode)
this.rightTreeNode.leftTreeNode.value == orig(this.rightTreeNode.leftTreeNode.value)
this.rightTreeNode.leftTreeNode.value.getClass().getName() == orig(this.rightTreeNode.leftTreeNode.value.getClass().getName())
this.rightTreeNode.rightTreeNode == orig(this.rightTreeNode.rightTreeNode)
this.rightTreeNode.rightTreeNode.leftTreeNode == orig(this.rightTreeNode.rightTreeNode.leftTreeNode)
this.rightTreeNode.rightTreeNode.rightTreeNode == orig(this.rightTreeNode.rightTreeNode.rightTreeNode)
this.rightTreeNode.rightTreeNode.parentTreeNode == return.parentTreeNode.rightTreeNode
this.rightTreeNode.rightTreeNode.parentTreeNode == orig(this.rightTreeNode.rightTreeNode.parentTreeNode)
this.rightTreeNode.rightTreeNode.value == orig(this.rightTreeNode.rightTreeNode.value)
this.rightTreeNode.rightTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.rightTreeNode.rightTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.rightTreeNode.rightTreeNode.value.getClass().getName() == orig(this.rightTreeNode.rightTreeNode.value.getClass().getName())
this.rightTreeNode.parentTreeNode == return.parentTreeNode
this.rightTreeNode.parentTreeNode == orig(this)
this.rightTreeNode.parentTreeNode == orig(this.rightTreeNode.parentTreeNode)
this.rightTreeNode.parentTreeNode.leftTreeNode == return
this.rightTreeNode.parentTreeNode.leftTreeNode == return.rightTreeNode.parentTreeNode
this.rightTreeNode.parentTreeNode.leftTreeNode == return.parentTreeNode.leftTreeNode
this.rightTreeNode.parentTreeNode.leftTreeNode == orig(this.rightTreeNode.parentTreeNode.leftTreeNode)
this.rightTreeNode.parentTreeNode.rightTreeNode == return.parentTreeNode.rightTreeNode
this.rightTreeNode.parentTreeNode.rightTreeNode == orig(this.rightTreeNode.parentTreeNode.rightTreeNode)
this.rightTreeNode.parentTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
this.rightTreeNode.parentTreeNode.parentTreeNode == orig(this.rightTreeNode.parentTreeNode.parentTreeNode)
this.rightTreeNode.parentTreeNode.value == return.parentTreeNode.value
this.rightTreeNode.parentTreeNode.value == orig(this.rightTreeNode.parentTreeNode.value)
this.rightTreeNode.value == orig(this.rightTreeNode.value)
this.rightTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.rightTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.rightTreeNode.value.getClass().getName() == orig(this.rightTreeNode.parentTreeNode.value.getClass().getName())
this.rightTreeNode.value.getClass().getName() == orig(this.rightTreeNode.value.getClass().getName())
this.parentTreeNode == return.parentTreeNode.parentTreeNode
this.parentTreeNode == orig(this.parentTreeNode)
this.parentTreeNode.leftTreeNode == orig(this.parentTreeNode.leftTreeNode)
this.parentTreeNode.leftTreeNode.leftTreeNode == orig(this.parentTreeNode.leftTreeNode.leftTreeNode)
this.parentTreeNode.leftTreeNode.rightTreeNode == orig(this.parentTreeNode.leftTreeNode.rightTreeNode)
this.parentTreeNode.leftTreeNode.parentTreeNode == orig(this.parentTreeNode.leftTreeNode.parentTreeNode)
this.parentTreeNode.leftTreeNode.value == orig(this.parentTreeNode.leftTreeNode.value)
this.parentTreeNode.leftTreeNode.value.getClass().getName() == orig(this.parentTreeNode.leftTreeNode.value.getClass().getName())
this.parentTreeNode.rightTreeNode == return.parentTreeNode
this.parentTreeNode.rightTreeNode == orig(this.parentTreeNode.rightTreeNode)
this.parentTreeNode.rightTreeNode.leftTreeNode == return
this.parentTreeNode.rightTreeNode.leftTreeNode == return.rightTreeNode.parentTreeNode
this.parentTreeNode.rightTreeNode.leftTreeNode == return.parentTreeNode.leftTreeNode
this.parentTreeNode.rightTreeNode.leftTreeNode == orig(this.parentTreeNode.rightTreeNode.leftTreeNode)
this.parentTreeNode.rightTreeNode.rightTreeNode == return.parentTreeNode.rightTreeNode
this.parentTreeNode.rightTreeNode.rightTreeNode == orig(this.parentTreeNode.rightTreeNode.rightTreeNode)
this.parentTreeNode.rightTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
this.parentTreeNode.rightTreeNode.parentTreeNode == orig(this.parentTreeNode.rightTreeNode.parentTreeNode)
this.parentTreeNode.rightTreeNode.value == return.parentTreeNode.value
this.parentTreeNode.rightTreeNode.value == orig(this.parentTreeNode.rightTreeNode.value)
this.parentTreeNode.rightTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.parentTreeNode.rightTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.parentTreeNode.rightTreeNode.value.getClass().getName() == orig(this.parentTreeNode.rightTreeNode.value.getClass().getName())
this.parentTreeNode.parentTreeNode == orig(this.parentTreeNode.parentTreeNode)
this.parentTreeNode.parentTreeNode.leftTreeNode == return.parentTreeNode.parentTreeNode
this.parentTreeNode.parentTreeNode.leftTreeNode == orig(this.parentTreeNode.parentTreeNode.leftTreeNode)
this.parentTreeNode.parentTreeNode.rightTreeNode == orig(this.parentTreeNode.parentTreeNode.rightTreeNode)
this.parentTreeNode.parentTreeNode.parentTreeNode == orig(this.parentTreeNode.parentTreeNode.parentTreeNode)
this.parentTreeNode.parentTreeNode.value == orig(this.parentTreeNode.parentTreeNode.value)
this.parentTreeNode.parentTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.parentTreeNode.parentTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.parentTreeNode.parentTreeNode.value.getClass().getName() == orig(this.parentTreeNode.parentTreeNode.value.getClass().getName())
this.parentTreeNode.value == orig(this.parentTreeNode.value)
this.parentTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.parentTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.parentTreeNode.value.getClass().getName() == orig(this.parentTreeNode.value.getClass().getName())
this.value == return.parentTreeNode.value
this.value == orig(this.value)
this.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
return == return.rightTreeNode.parentTreeNode
return == return.parentTreeNode.leftTreeNode
return == orig(this.leftTreeNode)
return.rightTreeNode == orig(this.leftTreeNode.rightTreeNode)
return.rightTreeNode.leftTreeNode == orig(this.leftTreeNode.rightTreeNode.leftTreeNode)
return.rightTreeNode.rightTreeNode == orig(this.leftTreeNode.rightTreeNode.rightTreeNode)
return.rightTreeNode.parentTreeNode == return.parentTreeNode.leftTreeNode
return.rightTreeNode.parentTreeNode == orig(this.leftTreeNode.rightTreeNode.parentTreeNode)
return.rightTreeNode.value == orig(this.leftTreeNode.rightTreeNode.value)
return.rightTreeNode.value.getClass().getName() == return.value.getClass().getName()
return.rightTreeNode.value.getClass().getName() == orig(this.leftTreeNode.rightTreeNode.value.getClass().getName())
return.parentTreeNode == orig(this)
return.parentTreeNode == orig(this.leftTreeNode.parentTreeNode)
return.parentTreeNode.leftTreeNode == orig(this.leftTreeNode.parentTreeNode.leftTreeNode)
return.parentTreeNode.rightTreeNode == orig(this.leftTreeNode.parentTreeNode.rightTreeNode)
return.parentTreeNode.parentTreeNode == orig(this.leftTreeNode.parentTreeNode.parentTreeNode)
return.parentTreeNode.value == orig(this.leftTreeNode.parentTreeNode.value)
return.parentTreeNode.value.getClass().getName() == return.value.getClass().getName()
return.value == orig(this.leftTreeNode.value)
return.value.getClass().getName() == orig(this.leftTreeNode.parentTreeNode.value.getClass().getName())
return.value.getClass().getName() == orig(this.leftTreeNode.value.getClass().getName())
this.parentTreeNode.leftTreeNode.rightTreeNode != null
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode != null
return.leftTreeNode == null
return.rightTreeNode.parentTreeNode != null
return.rightTreeNode.value != null
return.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
return.parentTreeNode != null
return.parentTreeNode.leftTreeNode != null
return.parentTreeNode.parentTreeNode != null
return.parentTreeNode.value != null
return.value != null
return.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.getParentNode():::ENTER
this.rightTreeNode == this.parentTreeNode.rightTreeNode.rightTreeNode
this.rightTreeNode.parentTreeNode == this.parentTreeNode.rightTreeNode
this.rightTreeNode.parentTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.parentTreeNode == this.parentTreeNode.parentTreeNode.rightTreeNode
this.parentTreeNode.leftTreeNode == this.parentTreeNode.parentTreeNode.leftTreeNode
this.parentTreeNode.leftTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode
this.parentTreeNode.leftTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode
this.parentTreeNode.rightTreeNode.value == this.value
this.parentTreeNode.value == this.value
this has only one value
this.leftTreeNode == null
this.rightTreeNode has only one value
this.rightTreeNode.leftTreeNode == null
this.rightTreeNode.rightTreeNode has only one value
this.rightTreeNode.rightTreeNode.rightTreeNode has only one value
this.rightTreeNode.rightTreeNode.value has only one value
this.rightTreeNode.parentTreeNode has only one value
this.rightTreeNode.value has only one value
this.parentTreeNode has only one value
this.parentTreeNode.leftTreeNode == null
this.parentTreeNode.parentTreeNode has only one value
this.parentTreeNode.parentTreeNode.parentTreeNode has only one value
this.parentTreeNode.parentTreeNode.value has only one value
this.value has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode has only one value
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.getParentNode():::EXIT
this.leftTreeNode == orig(this.leftTreeNode)
this.leftTreeNode == orig(this.rightTreeNode.parentTreeNode.leftTreeNode)
this.leftTreeNode == orig(this.parentTreeNode.rightTreeNode.leftTreeNode)
this.rightTreeNode == this.parentTreeNode.rightTreeNode.rightTreeNode
this.rightTreeNode == return.rightTreeNode.rightTreeNode
this.rightTreeNode == orig(this.rightTreeNode)
this.rightTreeNode == orig(this.rightTreeNode.rightTreeNode.parentTreeNode)
this.rightTreeNode == orig(this.rightTreeNode.parentTreeNode.rightTreeNode)
this.rightTreeNode == orig(this.parentTreeNode.rightTreeNode.rightTreeNode)
this.rightTreeNode.leftTreeNode == orig(this.rightTreeNode.leftTreeNode)
this.rightTreeNode.rightTreeNode == orig(this.rightTreeNode.rightTreeNode)
this.rightTreeNode.rightTreeNode.leftTreeNode == orig(this.rightTreeNode.rightTreeNode.leftTreeNode)
this.rightTreeNode.rightTreeNode.rightTreeNode == orig(this.rightTreeNode.rightTreeNode.rightTreeNode)
this.rightTreeNode.rightTreeNode.value == orig(this.rightTreeNode.rightTreeNode.value)
this.rightTreeNode.parentTreeNode == return.rightTreeNode
this.rightTreeNode.parentTreeNode.parentTreeNode == return
this.rightTreeNode.parentTreeNode.value.getClass().getName() == this.value.getClass().getName()
this.rightTreeNode.value == orig(this.rightTreeNode.value)
this.parentTreeNode == return
this.parentTreeNode.leftTreeNode == this.parentTreeNode.parentTreeNode.leftTreeNode
this.parentTreeNode.leftTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode
this.parentTreeNode.leftTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode
this.parentTreeNode.leftTreeNode == orig(this.parentTreeNode.leftTreeNode)
this.parentTreeNode.leftTreeNode == orig(this.parentTreeNode.parentTreeNode.leftTreeNode)
this.parentTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
this.parentTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode)
this.parentTreeNode.rightTreeNode == return.rightTreeNode
this.parentTreeNode.rightTreeNode.parentTreeNode == return
this.parentTreeNode.rightTreeNode.value == this.value
this.parentTreeNode.parentTreeNode == return.parentTreeNode
this.parentTreeNode.parentTreeNode.rightTreeNode == return
this.parentTreeNode.parentTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
this.parentTreeNode.parentTreeNode.value == return.parentTreeNode.value
this.parentTreeNode.value == this.value
this.value == return.rightTreeNode.value
this.value == return.value
this.value == orig(this.rightTreeNode.parentTreeNode.value)
this.value == orig(this.parentTreeNode.rightTreeNode.value)
this.value == orig(this.parentTreeNode.value)
this.value == orig(this.value)
this.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.value.getClass().getName() == return.parentTreeNode.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.rightTreeNode.rightTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(this.rightTreeNode.parentTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(this.rightTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(this.parentTreeNode.rightTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(this.parentTreeNode.parentTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(this.parentTreeNode.value.getClass().getName())
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
return == return.rightTreeNode.parentTreeNode
return == return.parentTreeNode.rightTreeNode
return == orig(this.rightTreeNode.parentTreeNode.parentTreeNode)
return == orig(this.parentTreeNode)
return == orig(this.parentTreeNode.rightTreeNode.parentTreeNode)
return == orig(this.parentTreeNode.parentTreeNode.rightTreeNode)
return.rightTreeNode == orig(this)
return.rightTreeNode == orig(this.rightTreeNode.parentTreeNode)
return.rightTreeNode == orig(this.parentTreeNode.rightTreeNode)
return.parentTreeNode == orig(this.parentTreeNode.parentTreeNode)
return.parentTreeNode.parentTreeNode == orig(this.parentTreeNode.parentTreeNode.parentTreeNode)
return.parentTreeNode.value == orig(this.parentTreeNode.parentTreeNode.value)
this.leftTreeNode == null
this.rightTreeNode has only one value
this.rightTreeNode.leftTreeNode == null
this.rightTreeNode.rightTreeNode has only one value
this.rightTreeNode.rightTreeNode.rightTreeNode has only one value
this.rightTreeNode.rightTreeNode.value has only one value
this.rightTreeNode.value has only one value
this.parentTreeNode.leftTreeNode == null
this.value has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode has only one value
return has only one value
return.leftTreeNode == null
return.rightTreeNode has only one value
return.rightTreeNode.leftTreeNode == null
return.parentTreeNode has only one value
return.parentTreeNode.leftTreeNode == null
return.parentTreeNode.parentTreeNode has only one value
return.parentTreeNode.value has only one value
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.getRightTree():::ENTER
hugo.util.structure.BinaryTree.this.rootTreeNode == this.rightTreeNode.parentTreeNode.parentTreeNode
hugo.util.structure.BinaryTree.this.rootTreeNode == this.parentTreeNode.parentTreeNode.parentTreeNode
this.leftTreeNode.rightTreeNode != null
===========================================================================
hugo.util.structure.BinaryTree$TreeNode.getRightTree():::EXIT
this.leftTreeNode == return.parentTreeNode.leftTreeNode
this.leftTreeNode == orig(this.leftTreeNode)
this.leftTreeNode.leftTreeNode == orig(this.leftTreeNode.leftTreeNode)
this.leftTreeNode.rightTreeNode == orig(this.leftTreeNode.rightTreeNode)
this.leftTreeNode.rightTreeNode.leftTreeNode == orig(this.leftTreeNode.rightTreeNode.leftTreeNode)
this.leftTreeNode.rightTreeNode.rightTreeNode == orig(this.leftTreeNode.rightTreeNode.rightTreeNode)
this.leftTreeNode.rightTreeNode.parentTreeNode == return.parentTreeNode.leftTreeNode
this.leftTreeNode.rightTreeNode.parentTreeNode == orig(this.leftTreeNode.rightTreeNode.parentTreeNode)
this.leftTreeNode.rightTreeNode.parentTreeNode == orig(this.leftTreeNode.parentTreeNode.leftTreeNode)
this.leftTreeNode.rightTreeNode.value == orig(this.leftTreeNode.rightTreeNode.value)
this.leftTreeNode.parentTreeNode == return.parentTreeNode
this.leftTreeNode.parentTreeNode == orig(this)
this.leftTreeNode.parentTreeNode == orig(this.leftTreeNode.parentTreeNode)
this.leftTreeNode.parentTreeNode.rightTreeNode == return
this.leftTreeNode.parentTreeNode.rightTreeNode == return.rightTreeNode.parentTreeNode
this.leftTreeNode.parentTreeNode.rightTreeNode == return.parentTreeNode.rightTreeNode
this.leftTreeNode.parentTreeNode.rightTreeNode == orig(this.leftTreeNode.parentTreeNode.rightTreeNode)
this.leftTreeNode.parentTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
this.leftTreeNode.parentTreeNode.parentTreeNode == orig(this.leftTreeNode.parentTreeNode.parentTreeNode)
this.leftTreeNode.parentTreeNode.value == return.parentTreeNode.value
this.leftTreeNode.parentTreeNode.value == orig(this.leftTreeNode.parentTreeNode.value)
this.leftTreeNode.value == orig(this.leftTreeNode.value)
this.leftTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.leftTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.leftTreeNode.value.getClass().getName() == orig(this.leftTreeNode.rightTreeNode.value.getClass().getName())
this.leftTreeNode.value.getClass().getName() == orig(this.leftTreeNode.parentTreeNode.value.getClass().getName())
this.leftTreeNode.value.getClass().getName() == orig(this.leftTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this.rootTreeNode == this.parentTreeNode.parentTreeNode.parentTreeNode
hugo.util.structure.BinaryTree.this.rootTreeNode == return.parentTreeNode.parentTreeNode
hugo.util.structure.BinaryTree.this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rightTreeNode == return
this.rightTreeNode.leftTreeNode == return.leftTreeNode
this.rightTreeNode.leftTreeNode.leftTreeNode == orig(this.rightTreeNode.leftTreeNode.leftTreeNode)
this.rightTreeNode.leftTreeNode.rightTreeNode == return.leftTreeNode.rightTreeNode
this.rightTreeNode.leftTreeNode.parentTreeNode == return.leftTreeNode.parentTreeNode
this.rightTreeNode.leftTreeNode.value == return.leftTreeNode.value
this.rightTreeNode.leftTreeNode.value.getClass().getName() == return.leftTreeNode.value.getClass().getName()
this.rightTreeNode.rightTreeNode == return.rightTreeNode
this.rightTreeNode.rightTreeNode.leftTreeNode == orig(this.rightTreeNode.rightTreeNode.leftTreeNode)
this.rightTreeNode.rightTreeNode.rightTreeNode == return.rightTreeNode.rightTreeNode
this.rightTreeNode.rightTreeNode.parentTreeNode == return.rightTreeNode.parentTreeNode
this.rightTreeNode.rightTreeNode.value == return.rightTreeNode.value
this.rightTreeNode.rightTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.rightTreeNode.parentTreeNode == return.parentTreeNode
this.rightTreeNode.parentTreeNode.leftTreeNode == return.parentTreeNode.leftTreeNode
this.rightTreeNode.parentTreeNode.rightTreeNode == return.parentTreeNode.rightTreeNode
this.rightTreeNode.parentTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
this.rightTreeNode.parentTreeNode.value == return.parentTreeNode.value
this.rightTreeNode.parentTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.rightTreeNode.value == return.value
this.rightTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.parentTreeNode == return.parentTreeNode.parentTreeNode
this.parentTreeNode == orig(this.parentTreeNode)
this.parentTreeNode.leftTreeNode == orig(this.parentTreeNode.leftTreeNode)
this.parentTreeNode.leftTreeNode.leftTreeNode == orig(this.parentTreeNode.leftTreeNode.leftTreeNode)
this.parentTreeNode.leftTreeNode.rightTreeNode == return.leftTreeNode.parentTreeNode
this.parentTreeNode.leftTreeNode.rightTreeNode == orig(this.parentTreeNode.leftTreeNode.rightTreeNode)
this.parentTreeNode.leftTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
this.parentTreeNode.leftTreeNode.parentTreeNode == orig(this.parentTreeNode.leftTreeNode.parentTreeNode)
this.parentTreeNode.leftTreeNode.value == orig(this.parentTreeNode.leftTreeNode.value)
this.parentTreeNode.leftTreeNode.value.getClass().getName() == return.leftTreeNode.value.getClass().getName()
this.parentTreeNode.leftTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.parentTreeNode.leftTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.parentTreeNode.leftTreeNode.value.getClass().getName() == orig(this.parentTreeNode.leftTreeNode.value.getClass().getName())
this.parentTreeNode.rightTreeNode == orig(this.parentTreeNode.rightTreeNode)
this.parentTreeNode.rightTreeNode.leftTreeNode == return.parentTreeNode.leftTreeNode
this.parentTreeNode.rightTreeNode.leftTreeNode == orig(this.parentTreeNode.rightTreeNode.leftTreeNode)
this.parentTreeNode.rightTreeNode.rightTreeNode == return.rightTreeNode.parentTreeNode
this.parentTreeNode.rightTreeNode.rightTreeNode == orig(this.parentTreeNode.rightTreeNode.rightTreeNode)
this.parentTreeNode.rightTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
this.parentTreeNode.rightTreeNode.parentTreeNode == orig(this.parentTreeNode.rightTreeNode.parentTreeNode)
this.parentTreeNode.rightTreeNode.value == orig(this.parentTreeNode.rightTreeNode.value)
this.parentTreeNode.rightTreeNode.value.getClass().getName() == return.leftTreeNode.value.getClass().getName()
this.parentTreeNode.rightTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.parentTreeNode.rightTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.parentTreeNode.rightTreeNode.value.getClass().getName() == orig(this.parentTreeNode.rightTreeNode.value.getClass().getName())
this.parentTreeNode.parentTreeNode == orig(this.parentTreeNode.parentTreeNode)
this.parentTreeNode.parentTreeNode.leftTreeNode == orig(this.parentTreeNode.parentTreeNode.leftTreeNode)
this.parentTreeNode.parentTreeNode.rightTreeNode == orig(this.parentTreeNode.parentTreeNode.rightTreeNode)
this.parentTreeNode.parentTreeNode.parentTreeNode == orig(this.parentTreeNode.parentTreeNode.parentTreeNode)
this.parentTreeNode.parentTreeNode.value == orig(this.parentTreeNode.parentTreeNode.value)
this.parentTreeNode.parentTreeNode.value.getClass().getName() == return.leftTreeNode.value.getClass().getName()
this.parentTreeNode.parentTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.parentTreeNode.parentTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.parentTreeNode.parentTreeNode.value.getClass().getName() == orig(this.parentTreeNode.parentTreeNode.value.getClass().getName())
this.parentTreeNode.value == orig(this.parentTreeNode.value)
this.parentTreeNode.value.getClass().getName() == return.leftTreeNode.value.getClass().getName()
this.parentTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.parentTreeNode.value.getClass().getName() == return.value.getClass().getName()
this.parentTreeNode.value.getClass().getName() == orig(this.parentTreeNode.value.getClass().getName())
this.value == return.parentTreeNode.value
this.value == orig(this.value)
this.value.getClass().getName() == return.leftTreeNode.value.getClass().getName()
this.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
this.value.getClass().getName() == return.value.getClass().getName()
this.value.getClass().getName() == orig(this.value.getClass().getName())
this.value.getClass().getName() == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value.getClass().getName())
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.leftTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.parentTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.rightTreeNode)
hugo.util.structure.BinaryTree.this.rootTreeNode.value == orig(hugo.util.structure.BinaryTree.this.rootTreeNode.value)
return == return.leftTreeNode.parentTreeNode
return == return.rightTreeNode.parentTreeNode
return == return.parentTreeNode.rightTreeNode
return == orig(this.rightTreeNode)
return.leftTreeNode == orig(this.rightTreeNode.leftTreeNode)
return.leftTreeNode.rightTreeNode == orig(this.rightTreeNode.leftTreeNode.rightTreeNode)
return.leftTreeNode.parentTreeNode == return.rightTreeNode.parentTreeNode
return.leftTreeNode.parentTreeNode == return.parentTreeNode.rightTreeNode
return.leftTreeNode.parentTreeNode == orig(this.rightTreeNode.leftTreeNode.parentTreeNode)
return.leftTreeNode.value == orig(this.rightTreeNode.leftTreeNode.value)
return.leftTreeNode.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
return.leftTreeNode.value.getClass().getName() == return.value.getClass().getName()
return.leftTreeNode.value.getClass().getName() == orig(this.rightTreeNode.leftTreeNode.value.getClass().getName())
return.rightTreeNode == orig(this.rightTreeNode.rightTreeNode)
return.rightTreeNode.rightTreeNode == orig(this.rightTreeNode.rightTreeNode.rightTreeNode)
return.rightTreeNode.parentTreeNode == return.parentTreeNode.rightTreeNode
return.rightTreeNode.parentTreeNode == orig(this.rightTreeNode.rightTreeNode.parentTreeNode)
return.rightTreeNode.value == orig(this.rightTreeNode.rightTreeNode.value)
return.rightTreeNode.value.getClass().getName() == return.value.getClass().getName()
return.rightTreeNode.value.getClass().getName() == orig(this.rightTreeNode.rightTreeNode.value.getClass().getName())
return.parentTreeNode == orig(this)
return.parentTreeNode == orig(this.rightTreeNode.parentTreeNode)
return.parentTreeNode.leftTreeNode == orig(this.rightTreeNode.parentTreeNode.leftTreeNode)
return.parentTreeNode.rightTreeNode == orig(this.rightTreeNode.parentTreeNode.rightTreeNode)
return.parentTreeNode.parentTreeNode == orig(this.rightTreeNode.parentTreeNode.parentTreeNode)
return.parentTreeNode.value == orig(this.rightTreeNode.parentTreeNode.value)
return.parentTreeNode.value.getClass().getName() == return.value.getClass().getName()
return.value == orig(this.rightTreeNode.value)
return.value.getClass().getName() == orig(this.rightTreeNode.parentTreeNode.value.getClass().getName())
return.value.getClass().getName() == orig(this.rightTreeNode.value.getClass().getName())
this.leftTreeNode.rightTreeNode != null
return.leftTreeNode.leftTreeNode == null
return.leftTreeNode.parentTreeNode != null
return.leftTreeNode.value != null
return.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
return.rightTreeNode.leftTreeNode == null
return.rightTreeNode.parentTreeNode != null
return.rightTreeNode.value != null
return.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
return.parentTreeNode != null
return.parentTreeNode.rightTreeNode != null
return.parentTreeNode.value != null
return.value != null
return.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree:::OBJECT
this.rootTreeNode == this.rootTreeNode.rightTreeNode.parentTreeNode
this.rootTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode
this.rootTreeNode.rightTreeNode.parentTreeNode == hugo.util.structure.BinaryTree.this.rootTreeNode
this.rootTreeNode.rightTreeNode.value.getClass().getName() == this.rootTreeNode.value.getClass().getName()
this has only one value
this.rootTreeNode.leftTreeNode == null
this.rootTreeNode.rightTreeNode.parentTreeNode has only one value
this.rootTreeNode.rightTreeNode.parentTreeNode != null
this.rootTreeNode.rightTreeNode.value has only one value
this.rootTreeNode.rightTreeNode.value != null
this.rootTreeNode.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
this.rootTreeNode.parentTreeNode == null
this.rootTreeNode.value has only one value
this.rootTreeNode.value != null
this.rootTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
hugo.util.structure.BinaryTree.this.rootTreeNode has only one value
hugo.util.structure.BinaryTree.this.rootTreeNode != null
===========================================================================
hugo.util.structure.BinaryTree.BfsTraversalIterable():::ENTER
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
===========================================================================
hugo.util.structure.BinaryTree.BfsTraversalIterable():::EXIT
this.rootTreeNode == orig(this.rootTreeNode)
this.rootTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rootTreeNode.leftTreeNode == orig(this.rootTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.leftTreeNode == orig(this.rootTreeNode.rightTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.value == orig(this.rootTreeNode.rightTreeNode.value)
this.rootTreeNode.parentTreeNode == orig(this.rootTreeNode.parentTreeNode)
this.rootTreeNode.value == orig(this.rootTreeNode.value)
this.rootTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
this.rootTreeNode.value.getClass().getName() == orig(this.rootTreeNode.value.getClass().getName())
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
return.getClass().getName() == hugo.util.structure.BinaryTree$1.class
===========================================================================
hugo.util.structure.BinaryTree.BinaryTree():::EXIT
this.rootTreeNode == null
===========================================================================
hugo.util.structure.BinaryTree.DfsTraversalIterable():::ENTER
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
===========================================================================
hugo.util.structure.BinaryTree.DfsTraversalIterable():::EXIT
this.rootTreeNode == orig(this.rootTreeNode)
this.rootTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rootTreeNode.leftTreeNode == orig(this.rootTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.leftTreeNode == orig(this.rootTreeNode.rightTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.value == orig(this.rootTreeNode.rightTreeNode.value)
this.rootTreeNode.parentTreeNode == orig(this.rootTreeNode.parentTreeNode)
this.rootTreeNode.value == orig(this.rootTreeNode.value)
this.rootTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
this.rootTreeNode.value.getClass().getName() == orig(this.rootTreeNode.value.getClass().getName())
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
return.getClass().getName() == hugo.util.structure.BinaryTree$2.class
===========================================================================
hugo.util.structure.BinaryTree.deleteFromParent(hugo.util.structure.BinaryTree$TreeNode):::ENTER
arg0 == arg0.rightTreeNode.parentTreeNode
arg0.parentTreeNode.value == arg0.value
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
arg0 has only one value
arg0.leftTreeNode == null
arg0.rightTreeNode has only one value
arg0.rightTreeNode.leftTreeNode == null
arg0.rightTreeNode.rightTreeNode has only one value
arg0.rightTreeNode.value has only one value
arg0.parentTreeNode has only one value
arg0.parentTreeNode.leftTreeNode == null
arg0.parentTreeNode.rightTreeNode has only one value
arg0.parentTreeNode.parentTreeNode has only one value
arg0.value has only one value
===========================================================================
hugo.util.structure.BinaryTree.deleteFromParent(hugo.util.structure.BinaryTree$TreeNode):::EXIT
this.rootTreeNode == orig(this.rootTreeNode)
this.rootTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rootTreeNode.leftTreeNode == orig(this.rootTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.leftTreeNode == orig(this.rootTreeNode.rightTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.value == orig(this.rootTreeNode.rightTreeNode.value)
this.rootTreeNode.parentTreeNode == orig(this.rootTreeNode.parentTreeNode)
this.rootTreeNode.value == orig(this.rootTreeNode.value)
arg0.leftTreeNode == orig(arg0.leftTreeNode)
arg0.rightTreeNode == orig(arg0.rightTreeNode)
arg0.rightTreeNode.leftTreeNode == orig(arg0.rightTreeNode.leftTreeNode)
arg0.rightTreeNode.rightTreeNode == orig(arg0.rightTreeNode.rightTreeNode)
arg0.rightTreeNode.parentTreeNode == orig(arg0)
arg0.rightTreeNode.value == orig(arg0.rightTreeNode.value)
arg0.parentTreeNode == orig(arg0.parentTreeNode)
arg0.parentTreeNode.leftTreeNode == orig(arg0.parentTreeNode.leftTreeNode)
arg0.parentTreeNode.parentTreeNode == orig(arg0.parentTreeNode.parentTreeNode)
arg0.parentTreeNode.value == arg0.value
arg0.value == orig(arg0.parentTreeNode.value)
arg0.value == orig(arg0.value)
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
arg0.leftTreeNode == null
arg0.rightTreeNode has only one value
arg0.rightTreeNode.leftTreeNode == null
arg0.rightTreeNode.rightTreeNode has only one value
arg0.rightTreeNode.value has only one value
arg0.parentTreeNode has only one value
arg0.parentTreeNode.leftTreeNode == null
arg0.parentTreeNode.rightTreeNode == null
arg0.parentTreeNode.parentTreeNode has only one value
arg0.value has only one value
arg0.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree.findNode(java.lang.Comparable, hugo.util.structure.BinaryTree$TreeNode):::ENTER
this.rootTreeNode.rightTreeNode == arg1.leftTreeNode.parentTreeNode
this.rootTreeNode.value.getClass().getName() == arg0.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg1.leftTreeNode.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg1.rightTreeNode.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1 == arg1.leftTreeNode.parentTreeNode
arg1 == arg1.rightTreeNode.parentTreeNode
arg1 == arg1.parentTreeNode.rightTreeNode
arg1.leftTreeNode.parentTreeNode == arg1.parentTreeNode.rightTreeNode
arg1.leftTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
arg0 has only one value
arg1.leftTreeNode.leftTreeNode == null
arg1.leftTreeNode.rightTreeNode has only one value
arg1.leftTreeNode.parentTreeNode has only one value
arg1.leftTreeNode.value has only one value
arg1.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.parentTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree.findNode(java.lang.Comparable, hugo.util.structure.BinaryTree$TreeNode):::EXIT133
===========================================================================
hugo.util.structure.BinaryTree.findNode(java.lang.Comparable, hugo.util.structure.BinaryTree$TreeNode):::EXIT137
this.rootTreeNode.rightTreeNode.rightTreeNode == arg1.parentTreeNode.parentTreeNode
arg1.leftTreeNode == arg1.rightTreeNode.leftTreeNode
arg1.leftTreeNode == arg1.parentTreeNode.leftTreeNode
arg1.leftTreeNode == orig(arg1.rightTreeNode.leftTreeNode)
arg1.leftTreeNode == orig(arg1.parentTreeNode.leftTreeNode)
arg1.rightTreeNode == return.rightTreeNode
arg1.rightTreeNode.rightTreeNode == return.rightTreeNode.rightTreeNode
arg1.rightTreeNode.parentTreeNode == return
arg1.rightTreeNode.value == return.rightTreeNode.value
arg1.parentTreeNode == return.parentTreeNode
arg1.parentTreeNode.rightTreeNode == return
arg1.parentTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
arg1.parentTreeNode.parentTreeNode == orig(this.rootTreeNode.rightTreeNode.rightTreeNode)
arg1.parentTreeNode.value == return.parentTreeNode.value
arg1.value == return.value
arg1.value == orig(arg0)
return == orig(arg1)
return == orig(arg1.rightTreeNode.parentTreeNode)
return == orig(arg1.parentTreeNode.rightTreeNode)
arg1.leftTreeNode == null
arg1.rightTreeNode has only one value
arg1.rightTreeNode.rightTreeNode has only one value
arg1.rightTreeNode.value has only one value
arg1.parentTreeNode has only one value
arg1.parentTreeNode.parentTreeNode has only one value
arg1.parentTreeNode.value has only one value
arg1.value has only one value
===========================================================================
hugo.util.structure.BinaryTree.findNode(java.lang.Comparable, hugo.util.structure.BinaryTree$TreeNode):::EXIT
this.rootTreeNode == orig(this.rootTreeNode)
this.rootTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rootTreeNode.leftTreeNode == orig(this.rootTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode == arg1.leftTreeNode.parentTreeNode
this.rootTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.leftTreeNode == orig(this.rootTreeNode.rightTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode.rightTreeNode == return.parentTreeNode.parentTreeNode
this.rootTreeNode.rightTreeNode.value == orig(this.rootTreeNode.rightTreeNode.value)
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
this.rootTreeNode.parentTreeNode == orig(this.rootTreeNode.parentTreeNode)
this.rootTreeNode.value == orig(this.rootTreeNode.value)
this.rootTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.leftTreeNode == orig(arg1.leftTreeNode)
arg1.leftTreeNode.leftTreeNode == orig(arg1.leftTreeNode.leftTreeNode)
arg1.leftTreeNode.rightTreeNode == orig(arg1.leftTreeNode.rightTreeNode)
arg1.leftTreeNode.parentTreeNode == arg1.parentTreeNode.rightTreeNode
arg1.leftTreeNode.parentTreeNode == orig(arg1)
arg1.leftTreeNode.parentTreeNode == orig(arg1.leftTreeNode.parentTreeNode)
arg1.leftTreeNode.value == orig(arg1.leftTreeNode.value)
arg1.leftTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.rightTreeNode == orig(arg1.rightTreeNode)
arg1.rightTreeNode.leftTreeNode == orig(arg1.rightTreeNode.leftTreeNode)
arg1.rightTreeNode.rightTreeNode == orig(arg1.rightTreeNode.rightTreeNode)
arg1.rightTreeNode.parentTreeNode == orig(arg1)
arg1.rightTreeNode.value == orig(arg1.rightTreeNode.value)
arg1.rightTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.parentTreeNode == orig(arg1.parentTreeNode)
arg1.parentTreeNode.leftTreeNode == orig(arg1.parentTreeNode.leftTreeNode)
arg1.parentTreeNode.rightTreeNode == orig(arg1)
arg1.parentTreeNode.rightTreeNode == orig(arg1.parentTreeNode.rightTreeNode)
arg1.parentTreeNode.parentTreeNode == orig(arg1.parentTreeNode.parentTreeNode)
arg1.parentTreeNode.value == orig(arg1.parentTreeNode.value)
arg1.parentTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == orig(arg1.parentTreeNode.value.getClass().getName())
arg1.value == orig(arg1.value)
arg1.value.getClass().getName() == return.rightTreeNode.value.getClass().getName()
arg1.value.getClass().getName() == return.parentTreeNode.value.getClass().getName()
arg1.value.getClass().getName() == return.value.getClass().getName()
arg1.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
arg1.value.getClass().getName() == orig(this.rootTreeNode.value.getClass().getName())
arg1.value.getClass().getName() == orig(arg0.getClass().getName())
arg1.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
arg1.value.getClass().getName() == orig(arg1.value.getClass().getName())
return == return.rightTreeNode.parentTreeNode
return == return.parentTreeNode.rightTreeNode
return.parentTreeNode.parentTreeNode == orig(this.rootTreeNode.rightTreeNode.rightTreeNode)
return.value == orig(arg0)
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
arg1.leftTreeNode.leftTreeNode == null
arg1.leftTreeNode.rightTreeNode has only one value
arg1.leftTreeNode.parentTreeNode has only one value
arg1.leftTreeNode.value has only one value
arg1.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.parentTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
return has only one value
return.leftTreeNode == null
return.rightTreeNode has only one value
return.rightTreeNode.leftTreeNode == null
return.rightTreeNode.rightTreeNode has only one value
return.rightTreeNode.value has only one value
return.parentTreeNode has only one value
return.parentTreeNode.leftTreeNode == null
return.parentTreeNode.parentTreeNode has only one value
return.parentTreeNode.value has only one value
return.value has only one value
===========================================================================
hugo.util.structure.BinaryTree.insert(java.lang.Comparable):::ENTER
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg0.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg0.getClass().getName()
arg0 != null
arg0.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree.insert(java.lang.Comparable):::EXIT
this.rootTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode.leftTreeNode == orig(this.rootTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode.parentTreeNode == orig(this.rootTreeNode)
this.rootTreeNode.rightTreeNode.parentTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode.rightTreeNode.parentTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rootTreeNode.rightTreeNode.value == orig(this.rootTreeNode.rightTreeNode.value)
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(this.rootTreeNode.value.getClass().getName())
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
this.rootTreeNode.parentTreeNode == orig(this.rootTreeNode.parentTreeNode)
this.rootTreeNode.value == orig(this.rootTreeNode.value)
this.rootTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
this.rootTreeNode has only one value
this.rootTreeNode != null
===========================================================================
hugo.util.structure.BinaryTree.insertAtNode(java.lang.Comparable, hugo.util.structure.BinaryTree$TreeNode, hugo.util.structure.BinaryTree$TreeNode):::ENTER
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg0.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg1.leftTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg1.rightTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg0.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg1.leftTreeNode.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg1.rightTreeNode.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
this.rootTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg0.getClass().getName() == arg1.leftTreeNode.value.getClass().getName()
arg0.getClass().getName() == arg1.rightTreeNode.value.getClass().getName()
arg0.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
arg0.getClass().getName() == arg1.value.getClass().getName()
arg0.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
arg0.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg0.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg0.getClass().getName() == arg2.value.getClass().getName()
arg1 == arg1.leftTreeNode.parentTreeNode
arg1 == arg1.rightTreeNode.parentTreeNode
arg1.leftTreeNode == arg2.rightTreeNode.leftTreeNode
arg1.leftTreeNode.parentTreeNode == arg1.rightTreeNode.parentTreeNode
arg1.leftTreeNode.parentTreeNode == arg1.parentTreeNode.rightTreeNode
arg1.leftTreeNode.parentTreeNode == arg2.rightTreeNode
arg1.leftTreeNode.value.getClass().getName() == arg1.rightTreeNode.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg1.parentTreeNode == arg2
arg1.parentTreeNode == arg2.leftTreeNode.parentTreeNode
arg1.parentTreeNode == arg2.rightTreeNode.parentTreeNode
arg1.parentTreeNode.leftTreeNode == arg2.leftTreeNode
arg1.parentTreeNode.rightTreeNode == arg2.rightTreeNode
arg1.parentTreeNode.parentTreeNode == arg2.parentTreeNode
arg1.parentTreeNode.value == arg2.value
arg1.parentTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg1.value.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
arg1.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg1.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg1.value.getClass().getName() == arg2.value.getClass().getName()
arg2 == arg2.leftTreeNode.parentTreeNode
arg2 == arg2.rightTreeNode.parentTreeNode
arg2.leftTreeNode.parentTreeNode == arg2.rightTreeNode.parentTreeNode
arg2.leftTreeNode.parentTreeNode == arg2.parentTreeNode.rightTreeNode
arg2.leftTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg2.leftTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg2.leftTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg2.rightTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg2.rightTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg2.parentTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg0 != null
arg0.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.leftTreeNode.leftTreeNode == null
arg1.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.rightTreeNode.parentTreeNode != null
arg1.rightTreeNode.value != null
arg1.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.parentTreeNode.value != null
arg1.parentTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.value != null
arg1.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg2.leftTreeNode.leftTreeNode == null
arg2.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg2.rightTreeNode.parentTreeNode != null
arg2.rightTreeNode.value != null
arg2.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg2.parentTreeNode.value != null
arg2.parentTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg2.value != null
arg2.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree.insertAtNode(java.lang.Comparable, hugo.util.structure.BinaryTree$TreeNode, hugo.util.structure.BinaryTree$TreeNode):::EXIT
this.rootTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode.leftTreeNode == orig(this.rootTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode.parentTreeNode == orig(this.rootTreeNode)
this.rootTreeNode.rightTreeNode.parentTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode.rightTreeNode.parentTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rootTreeNode.rightTreeNode.value == orig(this.rootTreeNode.rightTreeNode.value)
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg1.leftTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg1.rightTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(this.rootTreeNode.value.getClass().getName())
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(arg1.leftTreeNode.value.getClass().getName())
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(arg2.leftTreeNode.value.getClass().getName())
this.rootTreeNode.rightTreeNode.value.getClass().getName() == orig(arg2.rightTreeNode.value.getClass().getName())
this.rootTreeNode.parentTreeNode == orig(this.rootTreeNode.parentTreeNode)
this.rootTreeNode.value == orig(this.rootTreeNode.value)
this.rootTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
arg1.leftTreeNode == arg2.rightTreeNode.leftTreeNode
arg1.leftTreeNode.leftTreeNode == orig(arg1.leftTreeNode.leftTreeNode)
arg1.leftTreeNode.parentTreeNode == arg1.rightTreeNode.parentTreeNode
arg1.leftTreeNode.parentTreeNode == arg1.parentTreeNode.rightTreeNode
arg1.leftTreeNode.parentTreeNode == arg2.rightTreeNode
arg1.leftTreeNode.parentTreeNode == orig(arg1)
arg1.leftTreeNode.parentTreeNode == orig(arg1.leftTreeNode.parentTreeNode)
arg1.leftTreeNode.parentTreeNode == orig(arg1.rightTreeNode.parentTreeNode)
arg1.leftTreeNode.parentTreeNode == orig(arg2.rightTreeNode)
arg1.leftTreeNode.value == orig(arg1.leftTreeNode.value)
arg1.leftTreeNode.value.getClass().getName() == arg1.rightTreeNode.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg1.leftTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
arg1.leftTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
arg1.leftTreeNode.value.getClass().getName() == orig(arg1.leftTreeNode.value.getClass().getName())
arg1.leftTreeNode.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
arg1.leftTreeNode.value.getClass().getName() == orig(arg2.rightTreeNode.value.getClass().getName())
arg1.rightTreeNode.parentTreeNode == orig(arg1)
arg1.rightTreeNode.parentTreeNode == orig(arg1.leftTreeNode.parentTreeNode)
arg1.rightTreeNode.parentTreeNode == orig(arg1.rightTreeNode.parentTreeNode)
arg1.rightTreeNode.value == orig(arg1.rightTreeNode.value)
arg1.rightTreeNode.value.getClass().getName() == arg1.parentTreeNode.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg1.rightTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
arg1.rightTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
arg1.rightTreeNode.value.getClass().getName() == orig(arg1.leftTreeNode.value.getClass().getName())
arg1.rightTreeNode.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
arg1.rightTreeNode.value.getClass().getName() == orig(arg2.leftTreeNode.value.getClass().getName())
arg1.rightTreeNode.value.getClass().getName() == orig(arg2.rightTreeNode.value.getClass().getName())
arg1.parentTreeNode == arg2.leftTreeNode.parentTreeNode
arg1.parentTreeNode == arg2.rightTreeNode.parentTreeNode
arg1.parentTreeNode == orig(arg1.parentTreeNode)
arg1.parentTreeNode == orig(arg2)
arg1.parentTreeNode == orig(arg2.leftTreeNode.parentTreeNode)
arg1.parentTreeNode == orig(arg2.rightTreeNode.parentTreeNode)
arg1.parentTreeNode.leftTreeNode == arg2.leftTreeNode
arg1.parentTreeNode.leftTreeNode == orig(arg1.parentTreeNode.leftTreeNode)
arg1.parentTreeNode.leftTreeNode == orig(arg2.leftTreeNode)
arg1.parentTreeNode.rightTreeNode == arg2.rightTreeNode
arg1.parentTreeNode.rightTreeNode == orig(arg1.leftTreeNode.parentTreeNode)
arg1.parentTreeNode.rightTreeNode == orig(arg1.parentTreeNode.rightTreeNode)
arg1.parentTreeNode.rightTreeNode == orig(arg2.rightTreeNode)
arg1.parentTreeNode.parentTreeNode == arg2.parentTreeNode
arg1.parentTreeNode.parentTreeNode == orig(arg1.parentTreeNode.parentTreeNode)
arg1.parentTreeNode.value == arg2.value
arg1.parentTreeNode.value == orig(arg1.parentTreeNode.value)
arg1.parentTreeNode.value.getClass().getName() == arg1.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg1.parentTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
arg1.parentTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
arg1.parentTreeNode.value.getClass().getName() == orig(arg1.leftTreeNode.value.getClass().getName())
arg1.parentTreeNode.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
arg1.parentTreeNode.value.getClass().getName() == orig(arg1.parentTreeNode.value.getClass().getName())
arg1.parentTreeNode.value.getClass().getName() == orig(arg2.leftTreeNode.value.getClass().getName())
arg1.parentTreeNode.value.getClass().getName() == orig(arg2.rightTreeNode.value.getClass().getName())
arg1.value == orig(arg1.value)
arg1.value.getClass().getName() == arg2.leftTreeNode.value.getClass().getName()
arg1.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg1.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg1.value.getClass().getName() == arg2.value.getClass().getName()
arg1.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
arg1.value.getClass().getName() == orig(arg0.getClass().getName())
arg1.value.getClass().getName() == orig(arg1.leftTreeNode.value.getClass().getName())
arg1.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
arg1.value.getClass().getName() == orig(arg1.value.getClass().getName())
arg1.value.getClass().getName() == orig(arg2.leftTreeNode.value.getClass().getName())
arg1.value.getClass().getName() == orig(arg2.rightTreeNode.value.getClass().getName())
arg2.leftTreeNode.leftTreeNode == orig(arg2.leftTreeNode.leftTreeNode)
arg2.leftTreeNode.parentTreeNode == arg2.rightTreeNode.parentTreeNode
arg2.leftTreeNode.parentTreeNode == arg2.parentTreeNode.rightTreeNode
arg2.leftTreeNode.parentTreeNode == orig(arg2)
arg2.leftTreeNode.parentTreeNode == orig(arg2.leftTreeNode.parentTreeNode)
arg2.leftTreeNode.parentTreeNode == orig(arg2.rightTreeNode.parentTreeNode)
arg2.leftTreeNode.value == orig(arg2.leftTreeNode.value)
arg2.leftTreeNode.value.getClass().getName() == arg2.rightTreeNode.value.getClass().getName()
arg2.leftTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg2.leftTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg2.leftTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
arg2.leftTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
arg2.leftTreeNode.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
arg2.leftTreeNode.value.getClass().getName() == orig(arg2.leftTreeNode.value.getClass().getName())
arg2.leftTreeNode.value.getClass().getName() == orig(arg2.rightTreeNode.value.getClass().getName())
arg2.rightTreeNode == orig(arg1.leftTreeNode.parentTreeNode)
arg2.rightTreeNode.parentTreeNode == orig(arg2)
arg2.rightTreeNode.parentTreeNode == orig(arg2.leftTreeNode.parentTreeNode)
arg2.rightTreeNode.parentTreeNode == orig(arg2.rightTreeNode.parentTreeNode)
arg2.rightTreeNode.value == orig(arg2.rightTreeNode.value)
arg2.rightTreeNode.value.getClass().getName() == arg2.parentTreeNode.value.getClass().getName()
arg2.rightTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg2.rightTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
arg2.rightTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
arg2.rightTreeNode.value.getClass().getName() == orig(arg1.leftTreeNode.value.getClass().getName())
arg2.rightTreeNode.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
arg2.rightTreeNode.value.getClass().getName() == orig(arg2.leftTreeNode.value.getClass().getName())
arg2.rightTreeNode.value.getClass().getName() == orig(arg2.rightTreeNode.value.getClass().getName())
arg2.parentTreeNode == orig(arg2.parentTreeNode)
arg2.parentTreeNode.leftTreeNode == orig(arg2.parentTreeNode.leftTreeNode)
arg2.parentTreeNode.rightTreeNode == orig(arg2.leftTreeNode.parentTreeNode)
arg2.parentTreeNode.rightTreeNode == orig(arg2.parentTreeNode.rightTreeNode)
arg2.parentTreeNode.parentTreeNode == orig(arg2.parentTreeNode.parentTreeNode)
arg2.parentTreeNode.value == orig(arg2.parentTreeNode.value)
arg2.parentTreeNode.value.getClass().getName() == arg2.value.getClass().getName()
arg2.parentTreeNode.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
arg2.parentTreeNode.value.getClass().getName() == orig(arg0.getClass().getName())
arg2.parentTreeNode.value.getClass().getName() == orig(arg1.leftTreeNode.value.getClass().getName())
arg2.parentTreeNode.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
arg2.parentTreeNode.value.getClass().getName() == orig(arg2.leftTreeNode.value.getClass().getName())
arg2.parentTreeNode.value.getClass().getName() == orig(arg2.rightTreeNode.value.getClass().getName())
arg2.parentTreeNode.value.getClass().getName() == orig(arg2.parentTreeNode.value.getClass().getName())
arg2.value == orig(arg2.value)
arg2.value.getClass().getName() == orig(this.rootTreeNode.rightTreeNode.value.getClass().getName())
arg2.value.getClass().getName() == orig(arg0.getClass().getName())
arg2.value.getClass().getName() == orig(arg1.leftTreeNode.value.getClass().getName())
arg2.value.getClass().getName() == orig(arg1.rightTreeNode.value.getClass().getName())
arg2.value.getClass().getName() == orig(arg2.leftTreeNode.value.getClass().getName())
arg2.value.getClass().getName() == orig(arg2.rightTreeNode.value.getClass().getName())
arg2.value.getClass().getName() == orig(arg2.value.getClass().getName())
this.rootTreeNode has only one value
this.rootTreeNode != null
arg1.leftTreeNode.leftTreeNode == null
arg1.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.rightTreeNode.parentTreeNode != null
arg1.rightTreeNode.value != null
arg1.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.parentTreeNode.value != null
arg1.parentTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg1.value != null
arg1.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg2.leftTreeNode.leftTreeNode == null
arg2.leftTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg2.rightTreeNode.parentTreeNode != null
arg2.rightTreeNode.value != null
arg2.rightTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg2.parentTreeNode.value != null
arg2.parentTreeNode.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
arg2.value != null
arg2.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.BinaryTree.isLeaf(hugo.util.structure.BinaryTree$TreeNode):::ENTER
this.rootTreeNode.rightTreeNode.rightTreeNode == arg0.parentTreeNode.parentTreeNode
arg0 == arg0.rightTreeNode.parentTreeNode
arg0 == arg0.parentTreeNode.rightTreeNode
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
arg0 has only one value
arg0.leftTreeNode == null
arg0.rightTreeNode has only one value
arg0.rightTreeNode.leftTreeNode == null
arg0.rightTreeNode.rightTreeNode has only one value
arg0.rightTreeNode.value has only one value
arg0.parentTreeNode has only one value
arg0.parentTreeNode.leftTreeNode == null
arg0.parentTreeNode.value has only one value
arg0.value has only one value
===========================================================================
hugo.util.structure.BinaryTree.isLeaf(hugo.util.structure.BinaryTree$TreeNode):::EXIT
this.rootTreeNode == orig(this.rootTreeNode)
this.rootTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rootTreeNode.leftTreeNode == orig(this.rootTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.leftTreeNode == orig(this.rootTreeNode.rightTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode.rightTreeNode == arg0.parentTreeNode.parentTreeNode
this.rootTreeNode.rightTreeNode.value == orig(this.rootTreeNode.rightTreeNode.value)
this.rootTreeNode.parentTreeNode == orig(this.rootTreeNode.parentTreeNode)
this.rootTreeNode.value == orig(this.rootTreeNode.value)
arg0.leftTreeNode == orig(arg0.leftTreeNode)
arg0.rightTreeNode == orig(arg0.rightTreeNode)
arg0.rightTreeNode.leftTreeNode == orig(arg0.rightTreeNode.leftTreeNode)
arg0.rightTreeNode.rightTreeNode == orig(arg0.rightTreeNode.rightTreeNode)
arg0.rightTreeNode.parentTreeNode == orig(arg0)
arg0.rightTreeNode.value == orig(arg0.rightTreeNode.value)
arg0.parentTreeNode == orig(arg0.parentTreeNode)
arg0.parentTreeNode.leftTreeNode == orig(arg0.parentTreeNode.leftTreeNode)
arg0.parentTreeNode.rightTreeNode == orig(arg0)
arg0.parentTreeNode.parentTreeNode == orig(this.rootTreeNode.rightTreeNode.rightTreeNode)
arg0.parentTreeNode.parentTreeNode == orig(arg0.parentTreeNode.parentTreeNode)
arg0.parentTreeNode.value == orig(arg0.parentTreeNode.value)
arg0.value == orig(arg0.value)
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
arg0.leftTreeNode == null
arg0.rightTreeNode has only one value
arg0.rightTreeNode.leftTreeNode == null
arg0.rightTreeNode.rightTreeNode has only one value
arg0.rightTreeNode.value has only one value
arg0.parentTreeNode has only one value
arg0.parentTreeNode.leftTreeNode == null
arg0.parentTreeNode.parentTreeNode has only one value
arg0.parentTreeNode.value has only one value
arg0.value has only one value
arg0.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
return == false
===========================================================================
hugo.util.structure.BinaryTree.isLeaf(hugo.util.structure.BinaryTree$TreeNode):::EXIT;condition="not(return == true)"
===========================================================================
hugo.util.structure.BinaryTree.minNode(hugo.util.structure.BinaryTree$TreeNode):::ENTER
arg0 == arg0.rightTreeNode.parentTreeNode
arg0 == arg0.parentTreeNode.rightTreeNode
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
arg0 has only one value
arg0.leftTreeNode == null
arg0.rightTreeNode has only one value
arg0.rightTreeNode.leftTreeNode == null
arg0.rightTreeNode.rightTreeNode has only one value
arg0.rightTreeNode.value has only one value
arg0.parentTreeNode has only one value
arg0.parentTreeNode.leftTreeNode == null
arg0.parentTreeNode.parentTreeNode has only one value
arg0.parentTreeNode.value has only one value
arg0.value has only one value
===========================================================================
hugo.util.structure.BinaryTree.minNode(hugo.util.structure.BinaryTree$TreeNode):::EXIT
this.rootTreeNode == orig(this.rootTreeNode)
this.rootTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rootTreeNode.leftTreeNode == orig(this.rootTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.leftTreeNode == orig(this.rootTreeNode.rightTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.value == orig(this.rootTreeNode.rightTreeNode.value)
this.rootTreeNode.parentTreeNode == orig(this.rootTreeNode.parentTreeNode)
this.rootTreeNode.value == orig(this.rootTreeNode.value)
arg0.leftTreeNode == orig(arg0.leftTreeNode)
arg0.rightTreeNode == return.rightTreeNode
arg0.rightTreeNode == orig(arg0.rightTreeNode)
arg0.rightTreeNode.leftTreeNode == orig(arg0.rightTreeNode.leftTreeNode)
arg0.rightTreeNode.rightTreeNode == return.rightTreeNode.rightTreeNode
arg0.rightTreeNode.rightTreeNode == orig(arg0.rightTreeNode.rightTreeNode)
arg0.rightTreeNode.parentTreeNode == return
arg0.rightTreeNode.value == return.rightTreeNode.value
arg0.rightTreeNode.value == orig(arg0.rightTreeNode.value)
arg0.parentTreeNode == return.parentTreeNode
arg0.parentTreeNode == orig(arg0.parentTreeNode)
arg0.parentTreeNode.leftTreeNode == orig(arg0.parentTreeNode.leftTreeNode)
arg0.parentTreeNode.rightTreeNode == return
arg0.parentTreeNode.parentTreeNode == return.parentTreeNode.parentTreeNode
arg0.parentTreeNode.parentTreeNode == orig(arg0.parentTreeNode.parentTreeNode)
arg0.parentTreeNode.value == return.parentTreeNode.value
arg0.parentTreeNode.value == orig(arg0.parentTreeNode.value)
arg0.value == return.value
arg0.value == orig(arg0.value)
return == return.rightTreeNode.parentTreeNode
return == return.parentTreeNode.rightTreeNode
return == orig(arg0)
return == orig(arg0.rightTreeNode.parentTreeNode)
return == orig(arg0.parentTreeNode.rightTreeNode)
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
arg0.leftTreeNode == null
arg0.rightTreeNode has only one value
arg0.rightTreeNode.leftTreeNode == null
arg0.rightTreeNode.rightTreeNode has only one value
arg0.rightTreeNode.value has only one value
arg0.parentTreeNode has only one value
arg0.parentTreeNode.leftTreeNode == null
arg0.parentTreeNode.parentTreeNode has only one value
arg0.parentTreeNode.value has only one value
arg0.value has only one value
arg0.value.getClass().getName() == hugo.project.hospital.Hospital$Reception$PatientInfo.class
return has only one value
return.leftTreeNode == null
return.rightTreeNode.leftTreeNode == null
return.parentTreeNode.leftTreeNode == null
===========================================================================
hugo.util.structure.BinaryTree.remove(java.lang.Comparable):::ENTER
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
arg0 has only one value
===========================================================================
hugo.util.structure.BinaryTree.remove(java.lang.Comparable):::EXIT97
===========================================================================
hugo.util.structure.BinaryTree.remove(java.lang.Comparable):::EXIT
this.rootTreeNode == orig(this.rootTreeNode)
this.rootTreeNode == orig(this.rootTreeNode.rightTreeNode.parentTreeNode)
this.rootTreeNode == orig(hugo.util.structure.BinaryTree.this.rootTreeNode)
this.rootTreeNode.leftTreeNode == orig(this.rootTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.leftTreeNode == orig(this.rootTreeNode.rightTreeNode.leftTreeNode)
this.rootTreeNode.rightTreeNode.rightTreeNode == orig(this.rootTreeNode.rightTreeNode.rightTreeNode)
this.rootTreeNode.rightTreeNode.value == orig(this.rootTreeNode.rightTreeNode.value)
this.rootTreeNode.parentTreeNode == orig(this.rootTreeNode.parentTreeNode)
this.rootTreeNode.value == orig(this.rootTreeNode.value)
this.rootTreeNode has only one value
this.rootTreeNode.rightTreeNode has only one value
this.rootTreeNode.rightTreeNode.leftTreeNode has only one value
this.rootTreeNode.rightTreeNode.rightTreeNode has only one value
orig(arg0.getClass().getName()) == hugo.project.hospital.Hospital$Reception$PatientInfo.class
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable$BfsIterator:::OBJECT
this.startNode.label == hugo.util.structure.EdgeGraph$BfsIterable.this.fromE
this.startNode.label.getClass().getName() == hugo.util.structure.EdgeGraph$BfsIterable.this.fromE.getClass().getName()
this has only one value
this.startNode has only one value
this.startNode.label has only one value
this.startNode.label.getClass().getName() == hugo.project.hospital.Hospital$RadiologyDepartment.class
this.startNode.edges has only one value
this.startNode.edges.head has only one value
this.startNode.edges.size == 2
this.startNode.previousNode == null
hugo.util.structure.EdgeGraph.this.nodes has only one value
this.toDoQueue has only one value
this.toDoQueue.data has only one value
this.toDoQueue.data.size one of { 1, 2 }
hugo.util.structure.EdgeGraph$BfsIterable.this has only one value
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable$BfsIterator.BfsIterator(hugo.util.structure.EdgeGraph$BfsIterable, java.lang.Comparable):::ENTER
hugo.util.structure.EdgeGraph$BfsIterable.this.fromE == arg1
hugo.util.structure.EdgeGraph$BfsIterable.this.fromE.getClass().getName() == arg1.getClass().getName()
hugo.util.structure.EdgeGraph$BfsIterable.this has only one value
hugo.util.structure.EdgeGraph.this has only one value
hugo.util.structure.EdgeGraph.this.nodes has only one value
arg1 has only one value
arg1.getClass().getName() == hugo.project.hospital.Hospital$RadiologyDepartment.class
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable$BfsIterator.BfsIterator(hugo.util.structure.EdgeGraph$BfsIterable, java.lang.Comparable):::EXIT
this.startNode.label == orig(arg1)
this.startNode.label.getClass().getName() == orig(arg1.getClass().getName())
hugo.util.structure.EdgeGraph.this.nodes == orig(hugo.util.structure.EdgeGraph.this.nodes)
hugo.util.structure.EdgeGraph$BfsIterable.this == orig(hugo.util.structure.EdgeGraph$BfsIterable.this)
hugo.util.structure.EdgeGraph$BfsIterable.this.fromE == orig(arg1)
hugo.util.structure.EdgeGraph$BfsIterable.this.fromE.getClass().getName() == orig(arg1.getClass().getName())
this.startNode.visited == false
this.toDoQueue.data.head has only one value
this.toDoQueue.data.size == 1
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable$BfsIterator.hasNext():::ENTER
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable$BfsIterator.hasNext():::EXIT
this.startNode == orig(this.startNode)
this.startNode.label == orig(this.startNode.label)
this.startNode.label == orig(hugo.util.structure.EdgeGraph$BfsIterable.this.fromE)
this.startNode.label.getClass().getName() == orig(this.startNode.label.getClass().getName())
this.startNode.label.getClass().getName() == orig(hugo.util.structure.EdgeGraph$BfsIterable.this.fromE.getClass().getName())
this.startNode.edges == orig(this.startNode.edges)
this.startNode.edges.head == orig(this.startNode.edges.head)
this.startNode.edges.size == orig(this.startNode.edges.size)
this.startNode.visited == orig(this.startNode.visited)
this.startNode.previousNode == orig(this.startNode.previousNode)
hugo.util.structure.EdgeGraph.this.nodes == orig(hugo.util.structure.EdgeGraph.this.nodes)
this.toDoQueue == orig(this.toDoQueue)
this.toDoQueue.data == orig(this.toDoQueue.data)
this.toDoQueue.data.head == orig(this.toDoQueue.data.head)
this.toDoQueue.data.size == orig(this.toDoQueue.data.size)
hugo.util.structure.EdgeGraph$BfsIterable.this == orig(hugo.util.structure.EdgeGraph$BfsIterable.this)
return == true
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable$BfsIterator.hasNext():::EXIT;condition="return == true"
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable$BfsIterator.next():::ENTER
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable$BfsIterator.next():::EXIT
this.startNode == orig(this.startNode)
this.startNode.label == orig(this.startNode.label)
this.startNode.label == orig(hugo.util.structure.EdgeGraph$BfsIterable.this.fromE)
this.startNode.label.getClass().getName() == orig(this.startNode.label.getClass().getName())
this.startNode.label.getClass().getName() == orig(hugo.util.structure.EdgeGraph$BfsIterable.this.fromE.getClass().getName())
this.startNode.edges == orig(this.startNode.edges)
this.startNode.edges.head == orig(this.startNode.edges.head)
this.startNode.edges.size == orig(this.startNode.edges.size)
this.startNode.previousNode == orig(this.startNode.previousNode)
hugo.util.structure.EdgeGraph.this.nodes == orig(hugo.util.structure.EdgeGraph.this.nodes)
this.toDoQueue == orig(this.toDoQueue)
this.toDoQueue.data == orig(this.toDoQueue.data)
hugo.util.structure.EdgeGraph$BfsIterable.this == orig(hugo.util.structure.EdgeGraph$BfsIterable.this)
this.startNode.visited == true
this.toDoQueue.data.size == 2
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable:::OBJECT
this has only one value
this.fromE has only one value
this.fromE.getClass().getName() == hugo.project.hospital.Hospital$RadiologyDepartment.class
hugo.util.structure.EdgeGraph.this has only one value
hugo.util.structure.EdgeGraph.this.nodes has only one value
hugo.util.structure.EdgeGraph.this.nodes.head has only one value
hugo.util.structure.EdgeGraph.this.nodes.size == 6
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable.BfsIterable(hugo.util.structure.EdgeGraph, java.lang.Comparable):::ENTER
hugo.util.structure.EdgeGraph.this has only one value
hugo.util.structure.EdgeGraph.this.nodes has only one value
hugo.util.structure.EdgeGraph.this.nodes.head has only one value
hugo.util.structure.EdgeGraph.this.nodes.size == 6
arg1 has only one value
arg1.getClass().getName() == hugo.project.hospital.Hospital$RadiologyDepartment.class
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable.BfsIterable(hugo.util.structure.EdgeGraph, java.lang.Comparable):::EXIT
this.fromE == orig(arg1)
this.fromE.getClass().getName() == orig(arg1.getClass().getName())
hugo.util.structure.EdgeGraph.this == orig(hugo.util.structure.EdgeGraph.this)
hugo.util.structure.EdgeGraph.this.nodes == orig(hugo.util.structure.EdgeGraph.this.nodes)
hugo.util.structure.EdgeGraph.this.nodes.head == orig(hugo.util.structure.EdgeGraph.this.nodes.head)
hugo.util.structure.EdgeGraph.this.nodes.size == orig(hugo.util.structure.EdgeGraph.this.nodes.size)
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable.iterator():::ENTER
===========================================================================
hugo.util.structure.EdgeGraph$BfsIterable.iterator():::EXIT
this.fromE == orig(this.fromE)
this.fromE.getClass().getName() == orig(this.fromE.getClass().getName())
hugo.util.structure.EdgeGraph.this == orig(hugo.util.structure.EdgeGraph.this)
hugo.util.structure.EdgeGraph.this.nodes == orig(hugo.util.structure.EdgeGraph.this.nodes)
hugo.util.structure.EdgeGraph.this.nodes.head == orig(hugo.util.structure.EdgeGraph.this.nodes.head)
hugo.util.structure.EdgeGraph.this.nodes.size == orig(hugo.util.structure.EdgeGraph.this.nodes.size)
return has only one value
return.getClass().getName() == hugo.util.structure.EdgeGraph$BfsIterable$BfsIterator.class
===========================================================================
hugo.util.structure.EdgeGraph$Edge:::OBJECT
this.toNode != null
this.toNode.label != null
this.toNode.edges != null
this.toNode.edges.size >= 0
this.toNode.visited == false
this.toNode.previousNode == null
hugo.util.structure.EdgeGraph.this.nodes has only one value
hugo.util.structure.EdgeGraph.this.nodes != null
hugo.util.structure.EdgeGraph.this.nodes.head has only one value
hugo.util.structure.EdgeGraph.this.nodes.head != null
hugo.util.structure.EdgeGraph.this.nodes.size == 6
===========================================================================
hugo.util.structure.EdgeGraph$Edge.Edge(hugo.util.structure.EdgeGraph, hugo.util.structure.EdgeGraph$Node):::ENTER
hugo.util.structure.EdgeGraph.this has only one value
hugo.util.structure.EdgeGraph.this != null
hugo.util.structure.EdgeGraph.this.nodes has only one value
hugo.util.structure.EdgeGraph.this.nodes != null
hugo.util.structure.EdgeGraph.this.nodes.head has only one value
hugo.util.structure.EdgeGraph.this.nodes.head != null
hugo.util.structure.EdgeGraph.this.nodes.size == 6
arg1 != null
arg1.label != null
arg1.edges != null
arg1.edges.size >= 0
arg1.visited == false
arg1.previousNode == null
===========================================================================
hugo.util.structure.EdgeGraph$Edge.Edge(hugo.util.structure.EdgeGraph, hugo.util.structure.EdgeGraph$Node):::EXIT
this.toNode == orig(arg1)
this.toNode.label == arg1.label
this.toNode.label.getClass().getName() == arg1.label.getClass().getName()
this.toNode.edges == arg1.edges
this.toNode.edges.head == arg1.edges.head
this.toNode.edges.size == arg1.edges.size
this.toNode.visited == arg1.visited
hugo.util.structure.EdgeGraph.this.nodes == orig(hugo.util.structure.EdgeGraph.this.nodes)
hugo.util.structure.EdgeGraph.this.nodes.head == orig(hugo.util.structure.EdgeGraph.this.nodes.head)
hugo.util.structure.EdgeGraph.this.nodes.size == orig(hugo.util.structure.EdgeGraph.this.nodes.size)
arg1.label == orig(arg1.label)
arg1.label.getClass().getName() == orig(arg1.label.getClass().getName())
arg1.edges == orig(arg1.edges)
arg1.edges.head == orig(arg1.edges.head)
arg1.edges.size == orig(arg1.edges.size)
arg1.visited == orig(arg1.visited)
arg1.previousNode == orig(arg1.previousNode)
arg1.label != null
arg1.edges != null
arg1.edges.size >= 0
arg1.visited == false
arg1.previousNode == null
===========================================================================
hugo.util.structure.EdgeGraph$Node:::OBJECT
this.edges == hugo.util.structure.LinkedList.this
this.label != null
this.edges != null
this.edges.head.el1 != null
this.edges.head.el1.getClass().getName() == hugo.util.structure.EdgeGraph$Edge.class
this.edges.size >= 0
this.visited == false
this.previousNode == null
this.label.getClass().getName() != this.edges.head.el1.getClass().getName()
===========================================================================
hugo.util.structure.EdgeGraph$Node.Node(hugo.util.structure.EdgeGraph, java.lang.Comparable):::ENTER
hugo.util.structure.EdgeGraph.this has only one value
hugo.util.structure.EdgeGraph.this.nodes has only one value
===========================================================================
hugo.util.structure.EdgeGraph$Node.Node(hugo.util.structure.EdgeGraph, java.lang.Comparable):::EXIT
this.label == orig(arg1)
this.label.getClass().getName() == orig(arg1.getClass().getName())
hugo.util.structure.EdgeGraph.this.nodes.head == orig(hugo.util.structure.EdgeGraph.this.nodes.head)
hugo.util.structure.EdgeGraph.this.nodes.size == orig(hugo.util.structure.EdgeGraph.this.nodes.size)
this.edges.head == null
this.edges.size == 0
===========================================================================
hugo.util.structure.EdgeGraph$Node.addEdge(hugo.util.structure.EdgeGraph$Edge):::ENTER
this.edges.size one of { 0, 1, 2 }
hugo.util.structure.EdgeGraph.this.nodes.head has only one value
hugo.util.structure.EdgeGraph.this.nodes.head != null
hugo.util.structure.EdgeGraph.this.nodes.size == 6
arg0 != null
arg0.toNode != null
arg0.toNode.label != null
arg0.toNode.edges != null
arg0.toNode.visited == false
arg0.toNode.previousNode == null
this.label.getClass().getName() != arg0.toNode.label.getClass().getName()
===========================================================================
hugo.util.structure.EdgeGraph$Node.addEdge(hugo.util.structure.EdgeGraph$Edge):::EXIT
this.label == orig(this.label)
this.label.getClass().getName() == orig(this.label.getClass().getName())
this.edges == orig(this.edges)
this.edges == orig(hugo.util.structure.LinkedList.this)
this.edges.head.el1.getClass().getName() == orig(this.edges.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.visited == orig(this.visited)
this.previousNode == orig(this.previousNode)
hugo.util.structure.EdgeGraph.this.nodes.head == orig(hugo.util.structure.EdgeGraph.this.nodes.head)
hugo.util.structure.EdgeGraph.this.nodes.size == orig(hugo.util.structure.EdgeGraph.this.nodes.size)
arg0.toNode == orig(arg0.toNode)
arg0.toNode.label == orig(arg0.toNode.label)
arg0.toNode.label.getClass().getName() == orig(arg0.toNode.label.getClass().getName())
arg0.toNode.edges == orig(arg0.toNode.edges)
arg0.toNode.visited == orig(arg0.toNode.visited)
arg0.toNode.previousNode == orig(arg0.toNode.previousNode)
this.edges.head != null
this.edges.size one of { 1, 2, 3 }
hugo.util.structure.EdgeGraph.this.nodes.head has only one value
hugo.util.structure.EdgeGraph.this.nodes.head != null
hugo.util.structure.EdgeGraph.this.nodes.size == 6
arg0.toNode != null
arg0.toNode.label != null
arg0.toNode.edges != null
arg0.toNode.visited == false
arg0.toNode.previousNode == null
this.label.getClass().getName() != arg0.toNode.label.getClass().getName()
this.edges.head.el1.getClass().getName() != arg0.toNode.label.getClass().getName()
this.edges.size > orig(this.edges.size)
===========================================================================
hugo.util.structure.EdgeGraph:::OBJECT
this.nodes == hugo.util.structure.LinkedList.this
this has only one value
this.nodes has only one value
this.nodes != null
this.nodes.head.el1 != null
this.nodes.head.el1.getClass().getName() == hugo.util.structure.EdgeGraph$Node.class
hugo.util.structure.LinkedList.this has only one value
===========================================================================
hugo.util.structure.EdgeGraph.EdgeGraph():::EXIT
this.nodes.head == null
this.nodes.size == 0
===========================================================================
hugo.util.structure.EdgeGraph.addEdge(java.lang.Comparable, java.lang.Comparable):::ENTER
this.nodes.head has only one value
this.nodes.head != null
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.head.el2 != null
this.nodes.size == 6
arg0 != null
arg1 != null
this.nodes.head.el1.getClass().getName() != arg0.getClass().getName()
this.nodes.head.el1.getClass().getName() != arg1.getClass().getName()
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
hugo.util.structure.EdgeGraph.addEdge(java.lang.Comparable, java.lang.Comparable):::EXIT
this.nodes == orig(this.nodes)
this.nodes.head == orig(this.nodes.head)
this.nodes.head.el1 == orig(this.nodes.head.el1)
this.nodes.head.el1.getClass().getName() == orig(this.nodes.head.el1.getClass().getName())
this.nodes.head.el2 == orig(this.nodes.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.nodes.size == orig(this.nodes.size)
this.nodes.head has only one value
this.nodes.head != null
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.head.el2 != null
this.nodes.size == 6
this.nodes.head.el1.getClass().getName() != orig(arg0.getClass().getName())
this.nodes.head.el1.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
hugo.util.structure.EdgeGraph.addNode(java.lang.Comparable):::ENTER
===========================================================================
hugo.util.structure.EdgeGraph.addNode(java.lang.Comparable):::EXIT
this.nodes == orig(this.nodes)
this.nodes == orig(hugo.util.structure.LinkedList.this)
this.nodes.head.el1.getClass().getName() == orig(this.nodes.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.nodes.size - orig(this.nodes.size) - 1 == 0
===========================================================================
hugo.util.structure.EdgeGraph.bfsIteratFrom(java.lang.Comparable):::ENTER
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
arg0 has only one value
arg0.getClass().getName() == hugo.project.hospital.Hospital$RadiologyDepartment.class
===========================================================================
hugo.util.structure.EdgeGraph.bfsIteratFrom(java.lang.Comparable):::EXIT
this.nodes == orig(this.nodes)
this.nodes.head == orig(this.nodes.head)
this.nodes.head.el1 == orig(this.nodes.head.el1)
this.nodes.head.el1.getClass().getName() == orig(this.nodes.head.el1.getClass().getName())
this.nodes.head.el2 == orig(this.nodes.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.nodes.size == orig(this.nodes.size)
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
return has only one value
return.getClass().getName() == hugo.util.structure.EdgeGraph$BfsIterable.class
===========================================================================
hugo.util.structure.EdgeGraph.clearState():::ENTER
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
===========================================================================
hugo.util.structure.EdgeGraph.clearState():::EXIT
this.nodes == orig(this.nodes)
this.nodes.head == orig(this.nodes.head)
this.nodes.head.el1 == orig(this.nodes.head.el1)
this.nodes.head.el1.getClass().getName() == orig(this.nodes.head.el1.getClass().getName())
this.nodes.head.el2 == orig(this.nodes.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.nodes.size == orig(this.nodes.size)
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
===========================================================================
hugo.util.structure.EdgeGraph.findNode(java.lang.Comparable):::ENTER
this.nodes.head has only one value
this.nodes.head != null
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.head.el2 != null
this.nodes.size == 6
this.nodes.head.el1.getClass().getName() != arg0.getClass().getName()
===========================================================================
hugo.util.structure.EdgeGraph.findNode(java.lang.Comparable):::EXIT63
return != null
===========================================================================
hugo.util.structure.EdgeGraph.findNode(java.lang.Comparable):::EXIT65
return == null
orig(arg0) == null
===========================================================================
hugo.util.structure.EdgeGraph.findNode(java.lang.Comparable):::EXIT
this.nodes == hugo.util.structure.EdgeGraph.this.nodes
this.nodes == orig(this.nodes)
this.nodes.head == orig(this.nodes.head)
this.nodes.head.el1 == orig(this.nodes.head.el1)
this.nodes.head.el1.getClass().getName() == orig(this.nodes.head.el1.getClass().getName())
this.nodes.head.el2 == orig(this.nodes.head.el2)
hugo.util.structure.LinkedList.this == hugo.util.structure.EdgeGraph.this.nodes
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.nodes.size == orig(this.nodes.size)
return.label == orig(arg0)
return.label.getClass().getName() == orig(arg0.getClass().getName())
hugo.util.structure.EdgeGraph.this == orig(this)
(return != null)  <==>  (orig(arg0) != null)
(return != null)  ==>  (hugo.util.structure.EdgeGraph.this == orig(this))
(return != null)  ==>  (hugo.util.structure.EdgeGraph.this has only one value)
(return != null)  ==>  (hugo.util.structure.EdgeGraph.this.nodes != null)
(return != null)  ==>  (hugo.util.structure.EdgeGraph.this.nodes has only one value)
(return != null)  ==>  (hugo.util.structure.LinkedList.this == hugo.util.structure.EdgeGraph.this.nodes)
(return != null)  ==>  (return.edges != null)
(return != null)  ==>  (return.edges.size >= 0)
(return != null)  ==>  (return.label != null)
(return != null)  ==>  (return.label == orig(arg0))
(return != null)  ==>  (return.previousNode.edges has only one value)
(return != null)  ==>  (return.previousNode.label has only one value)
(return != null)  ==>  (return.previousNode.label.getClass().getName() == hugo.project.hospital.Hospital$RadiotherapyDepartment.class)
(return != null)  ==>  (return.previousNode.previousNode == null)
(return != null)  ==>  (this.nodes == hugo.util.structure.EdgeGraph.this.nodes)
(return != null)  ==>  (this.nodes.head.el1.getClass().getName() != return.label.getClass().getName())
(return == null)  <==>  (orig(arg0) == null)
this.nodes.head has only one value
this.nodes.head != null
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.head.el2 != null
this.nodes.size == 6
return.label != null
return.edges != null
return.edges.size >= 0
return.previousNode.label has only one value
return.previousNode.label.getClass().getName() == hugo.project.hospital.Hospital$RadiotherapyDepartment.class
return.previousNode.edges has only one value
return.previousNode.visited == true
return.previousNode.previousNode == null
hugo.util.structure.EdgeGraph.this has only one value
hugo.util.structure.EdgeGraph.this.nodes has only one value
hugo.util.structure.EdgeGraph.this.nodes != null
this.nodes.head.el1.getClass().getName() != return.label.getClass().getName()
===========================================================================
hugo.util.structure.EdgeGraph.findPath(java.lang.Comparable, java.lang.Comparable):::ENTER
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
===========================================================================
hugo.util.structure.EdgeGraph.findPath(java.lang.Comparable, java.lang.Comparable):::EXIT
this.nodes == orig(this.nodes)
this.nodes.head == orig(this.nodes.head)
this.nodes.head.el1 == orig(this.nodes.head.el1)
this.nodes.head.el1.getClass().getName() == orig(this.nodes.head.el1.getClass().getName())
this.nodes.head.el2 == orig(this.nodes.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.nodes.size == orig(this.nodes.size)
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
return.size one of { 2, 3 }
===========================================================================
hugo.util.structure.EdgeGraph.findPathAvoiding(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable):::ENTER
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
this.nodes.head.el1.getClass().getName() != arg0.getClass().getName()
this.nodes.head.el1.getClass().getName() != arg1.getClass().getName()
arg0.getClass().getName() != arg1.getClass().getName()
===========================================================================
hugo.util.structure.EdgeGraph.findPathAvoiding(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable):::EXIT112
orig(arg2.getClass().getName()) == hugo.project.hospital.Hospital$OncologyDepartment.class
===========================================================================
hugo.util.structure.EdgeGraph.findPathAvoiding(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable):::EXIT124
return == null
orig(arg0) has only one value
orig(arg0.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class
orig(arg1) has only one value
orig(arg1.getClass().getName()) == hugo.project.hospital.Hospital$RadiotherapyDepartment.class
orig(arg2) has only one value
orig(arg2.getClass().getName()) == hugo.project.hospital.Hospital$CardiologyDepartment.class
===========================================================================
hugo.util.structure.EdgeGraph.findPathAvoiding(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable):::EXIT
this.nodes == orig(this.nodes)
this.nodes.head == orig(this.nodes.head)
this.nodes.head.el1 == orig(this.nodes.head.el1)
this.nodes.head.el1.getClass().getName() == orig(this.nodes.head.el1.getClass().getName())
this.nodes.head.el2 == orig(this.nodes.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.nodes.size == orig(this.nodes.size)
(return == null)  <==>  (orig(arg2) has only one value)
(return == null)  <==>  (orig(arg2.getClass().getName()) == hugo.project.hospital.Hospital$CardiologyDepartment.class)
(return == null)  ==>  (orig(arg0) has only one value)
(return == null)  ==>  (orig(arg0.getClass().getName()) == hugo.project.hospital.Hospital$NeurologyDepartment.class)
(return == null)  ==>  (orig(arg1) has only one value)
(return == null)  ==>  (orig(arg1.getClass().getName()) == hugo.project.hospital.Hospital$RadiotherapyDepartment.class)
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
return.size one of { 2, 3 }
this.nodes.head.el1.getClass().getName() != return.head.el1.getClass().getName()
this.nodes.head.el1.getClass().getName() != orig(arg0.getClass().getName())
this.nodes.head.el1.getClass().getName() != orig(arg1.getClass().getName())
return.head.el1.getClass().getName() != orig(arg0.getClass().getName())
return.head.el1.getClass().getName() != orig(arg1.getClass().getName())
===========================================================================
hugo.util.structure.EdgeGraph.findPathVia(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable):::ENTER
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
arg0 has only one value
arg0.getClass().getName() == hugo.project.hospital.Hospital$NeurologyDepartment.class
arg1 has only one value
arg1.getClass().getName() == hugo.project.hospital.Hospital$PhysiotherapyDepartment.class
===========================================================================
hugo.util.structure.EdgeGraph.findPathVia(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable):::EXIT87
===========================================================================
hugo.util.structure.EdgeGraph.findPathVia(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable):::EXIT
this.nodes == orig(this.nodes)
this.nodes.head == orig(this.nodes.head)
this.nodes.head.el1 == orig(this.nodes.head.el1)
this.nodes.head.el1.getClass().getName() == orig(this.nodes.head.el1.getClass().getName())
this.nodes.head.el2 == orig(this.nodes.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.nodes.size == orig(this.nodes.size)
this.nodes.head has only one value
this.nodes.head.el1 has only one value
this.nodes.head.el2 has only one value
this.nodes.size == 6
return.head.el1 has only one value
return.head.el1.getClass().getName() == hugo.project.hospital.Hospital$CardiologyDepartment.class
return.size == 5
===========================================================================
hugo.util.structure.LinkedList$LinkedListIterator:::OBJECT
this.el.el1 != null
this.el.el2.el1 != null
hugo.util.structure.LinkedList.this.head != null
hugo.util.structure.LinkedList.this.size >= 1
hugo.util.structure.LinkedList.this.head.el1 != null
===========================================================================
hugo.util.structure.LinkedList$LinkedListIterator.LinkedListIterator(hugo.util.structure.LinkedList):::ENTER
hugo.util.structure.LinkedList.this != null
hugo.util.structure.LinkedList.this.head.el1 != null
hugo.util.structure.LinkedList.this.size >= 0
===========================================================================
hugo.util.structure.LinkedList$LinkedListIterator.LinkedListIterator(hugo.util.structure.LinkedList):::EXIT
this.el == hugo.util.structure.LinkedList.this.head
this.el == orig(hugo.util.structure.LinkedList.this.head)
this.el.el1 == hugo.util.structure.LinkedList.this.head.el1
this.el.el1 == orig(hugo.util.structure.LinkedList.this.head.el1)
this.el.el1.getClass().getName() == hugo.util.structure.LinkedList.this.head.el1.getClass().getName()
this.el.el1.getClass().getName() == orig(hugo.util.structure.LinkedList.this.head.el1.getClass().getName())
this.el.el2 == hugo.util.structure.LinkedList.this.head.el2
this.el.el2 == orig(hugo.util.structure.LinkedList.this.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
===========================================================================
hugo.util.structure.LinkedList$LinkedListIterator.hasNext():::ENTER
===========================================================================
hugo.util.structure.LinkedList$LinkedListIterator.hasNext():::EXIT
this.el == orig(this.el)
this.el.el1 == orig(this.el.el1)
this.el.el1.getClass().getName() == orig(this.el.el1.getClass().getName())
this.el.el2 == orig(this.el.el2)
this.el.el2.el1 == orig(this.el.el2.el1)
this.el.el2.el1.getClass().getName() == orig(this.el.el2.el1.getClass().getName())
this.el.el2.el2 == orig(this.el.el2.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
hugo.util.structure.LinkedList.this.head.el1 == orig(hugo.util.structure.LinkedList.this.head.el1)
hugo.util.structure.LinkedList.this.head.el1.getClass().getName() == orig(hugo.util.structure.LinkedList.this.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this.head.el2 == orig(hugo.util.structure.LinkedList.this.head.el2)
(this.el != null)  <==>  (return == true)
(this.el != null)  ==>  (hugo.util.structure.LinkedList.this.head != null)
(this.el != null)  ==>  (this.el.el1 != null)
(this.el != null)  ==>  (this.el.el2.el1 != null)
(this.el == null)  <==>  (return == false)
===========================================================================
hugo.util.structure.LinkedList$LinkedListIterator.hasNext():::EXIT;condition="return == true"
this.el != null
return == true
===========================================================================
hugo.util.structure.LinkedList$LinkedListIterator.hasNext():::EXIT;condition="not(return == true)"
this.el == null
return == false
===========================================================================
hugo.util.structure.LinkedList$LinkedListIterator.next():::ENTER
this.el != null
===========================================================================
hugo.util.structure.LinkedList$LinkedListIterator.next():::EXIT
this.el == orig(this.el.el2)
this.el.el1 == orig(this.el.el2.el1)
this.el.el1.getClass().getName() == orig(this.el.el2.el1.getClass().getName())
hugo.util.structure.LinkedList.this.head.el1 == orig(hugo.util.structure.LinkedList.this.head.el1)
hugo.util.structure.LinkedList.this.head.el1.getClass().getName() == orig(hugo.util.structure.LinkedList.this.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this.head.el2 == orig(hugo.util.structure.LinkedList.this.head.el2)
return == orig(this.el.el1)
return.getClass().getName() == orig(this.el.el1.getClass().getName())
return != null
hugo.util.structure.LinkedList.this.size <= orig(hugo.util.structure.LinkedList.this.size)
===========================================================================
hugo.util.structure.LinkedList$ListElement:::OBJECT
this.el1 != null
this.el2.el1 != null
this.el2.el2.el1 != null
hugo.util.structure.LinkedList.this.head != null
hugo.util.structure.LinkedList.this.size >= 1
hugo.util.structure.LinkedList.this.head.el1 != null
===========================================================================
hugo.util.structure.LinkedList$ListElement.ListElement(hugo.util.structure.LinkedList, java.lang.Comparable, hugo.util.structure.LinkedList$ListElement):::ENTER
hugo.util.structure.LinkedList.this.head.el1.getClass().getName() == arg2.el1.getClass().getName()
hugo.util.structure.LinkedList.this != null
hugo.util.structure.LinkedList.this.head.el1 != null
hugo.util.structure.LinkedList.this.size >= 0
arg1 != null
arg2.el1 != null
arg2.el2.el1 != null
===========================================================================
hugo.util.structure.LinkedList$ListElement.ListElement(hugo.util.structure.LinkedList, java.lang.Comparable, hugo.util.structure.LinkedList$ListElement):::EXIT
this.el1 == orig(arg1)
this.el1.getClass().getName() == orig(arg1.getClass().getName())
this.el2 == orig(arg2)
this.el2.el1 == arg2.el1
this.el2.el1.getClass().getName() == arg2.el1.getClass().getName()
this.el2.el2 == arg2.el2
this.el2.el2.el1 == arg2.el2.el1
this.el2.el2.el1.getClass().getName() == arg2.el2.el1.getClass().getName()
this.el2.el2.el2 == arg2.el2.el2
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
hugo.util.structure.LinkedList.this.head.el1 == orig(hugo.util.structure.LinkedList.this.head.el1)
hugo.util.structure.LinkedList.this.head.el1.getClass().getName() == orig(hugo.util.structure.LinkedList.this.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this.head.el2 == orig(hugo.util.structure.LinkedList.this.head.el2)
arg2.el1 == orig(arg2.el1)
arg2.el1.getClass().getName() == orig(hugo.util.structure.LinkedList.this.head.el1.getClass().getName())
arg2.el1.getClass().getName() == orig(arg2.el1.getClass().getName())
arg2.el2 == orig(arg2.el2)
arg2.el2.el1 == orig(arg2.el2.el1)
arg2.el2.el1.getClass().getName() == orig(arg2.el2.el1.getClass().getName())
arg2.el2.el2 == orig(arg2.el2.el2)
arg2.el1 != null
arg2.el2.el1 != null
===========================================================================
hugo.util.structure.LinkedList$ListElement.first():::ENTER
===========================================================================
hugo.util.structure.LinkedList$ListElement.first():::EXIT
this.el1 == return
this.el1.getClass().getName() == return.getClass().getName()
this.el2 == orig(this.el2)
this.el2.el1 == orig(this.el2.el1)
this.el2.el1.getClass().getName() == orig(this.el2.el1.getClass().getName())
this.el2.el2 == orig(this.el2.el2)
this.el2.el2.el1 == orig(this.el2.el2.el1)
this.el2.el2.el1.getClass().getName() == orig(this.el2.el2.el1.getClass().getName())
this.el2.el2.el2 == orig(this.el2.el2.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
hugo.util.structure.LinkedList.this.head.el1 == orig(hugo.util.structure.LinkedList.this.head.el1)
hugo.util.structure.LinkedList.this.head.el1.getClass().getName() == orig(hugo.util.structure.LinkedList.this.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this.head.el2 == orig(hugo.util.structure.LinkedList.this.head.el2)
return == orig(this.el1)
return.getClass().getName() == orig(this.el1.getClass().getName())
return != null
===========================================================================
hugo.util.structure.LinkedList$ListElement.rest():::ENTER
===========================================================================
hugo.util.structure.LinkedList$ListElement.rest():::EXIT
this.el1 == orig(this.el1)
this.el1.getClass().getName() == orig(this.el1.getClass().getName())
this.el2 == return
this.el2.el1 == return.el1
this.el2.el1.getClass().getName() == return.el1.getClass().getName()
this.el2.el2 == return.el2
this.el2.el2.el1 == return.el2.el1
this.el2.el2.el1.getClass().getName() == return.el2.el1.getClass().getName()
this.el2.el2.el2 == return.el2.el2
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
hugo.util.structure.LinkedList.this.head.el1 == orig(hugo.util.structure.LinkedList.this.head.el1)
hugo.util.structure.LinkedList.this.head.el1.getClass().getName() == orig(hugo.util.structure.LinkedList.this.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this.head.el2 == orig(hugo.util.structure.LinkedList.this.head.el2)
return == orig(this.el2)
return.el1 == orig(this.el2.el1)
return.el1.getClass().getName() == orig(this.el2.el1.getClass().getName())
return.el2 == orig(this.el2.el2)
return.el2.el1 == orig(this.el2.el2.el1)
return.el2.el1.getClass().getName() == orig(this.el2.el2.el1.getClass().getName())
return.el2.el2 == orig(this.el2.el2.el2)
return.el1 != null
return.el2.el1 != null
===========================================================================
hugo.util.structure.LinkedList$ListElement.setRest(hugo.util.structure.LinkedList$ListElement):::ENTER
this.el1.getClass().getName() == this.el2.el1.getClass().getName()
this.el1.getClass().getName() == hugo.util.structure.LinkedList.this.head.el1.getClass().getName()
this.el1.getClass().getName() == arg0.el1.getClass().getName()
this.el2 == arg0.el2
this.el2.el1 == arg0.el2.el1
this.el2.el1.getClass().getName() == arg0.el2.el1.getClass().getName()
this.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
this.el2.el1 has only one value
this.el2.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
this.el2.el2 == null
hugo.util.structure.LinkedList.this.head has only one value
hugo.util.structure.LinkedList.this.size one of { 3, 4 }
hugo.util.structure.LinkedList.this.head.el1 has only one value
hugo.util.structure.LinkedList.this.head.el2 has only one value
arg0.el2.el2 == null
===========================================================================
hugo.util.structure.LinkedList$ListElement.setRest(hugo.util.structure.LinkedList$ListElement):::EXIT
this.el1 == orig(this.el1)
this.el1.getClass().getName() == this.el2.el1.getClass().getName()
this.el1.getClass().getName() == hugo.util.structure.LinkedList.this.head.el1.getClass().getName()
this.el1.getClass().getName() == arg0.el1.getClass().getName()
this.el1.getClass().getName() == arg0.el2.el1.getClass().getName()
this.el1.getClass().getName() == orig(this.el1.getClass().getName())
this.el1.getClass().getName() == orig(hugo.util.structure.LinkedList.this.head.el1.getClass().getName())
this.el1.getClass().getName() == orig(arg0.el1.getClass().getName())
this.el2 == orig(arg0)
this.el2.el1 == arg0.el1
this.el2.el2 == arg0.el2
this.el2.el2.el1 == arg0.el2.el1
this.el2.el2.el1.getClass().getName() == arg0.el2.el1.getClass().getName()
hugo.util.structure.LinkedList.this.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
hugo.util.structure.LinkedList.this.head.el1 == orig(hugo.util.structure.LinkedList.this.head.el1)
hugo.util.structure.LinkedList.this.head.el2 == orig(hugo.util.structure.LinkedList.this.head.el2)
arg0.el1 == orig(arg0.el1)
arg0.el2 == orig(this.el2)
arg0.el2 == orig(arg0.el2)
arg0.el2.el1 == orig(this.el2.el1)
arg0.el2.el1 == orig(arg0.el2.el1)
arg0.el2.el1.getClass().getName() == orig(this.el2.el1.getClass().getName())
arg0.el2.el1.getClass().getName() == orig(arg0.el2.el1.getClass().getName())
arg0.el2.el2 == orig(arg0.el2.el2)
this.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
this.el2.el2.el2 == null
hugo.util.structure.LinkedList.this has only one value
hugo.util.structure.LinkedList.this.head has only one value
hugo.util.structure.LinkedList.this.size one of { 2, 3, 4 }
hugo.util.structure.LinkedList.this.head.el1 has only one value
hugo.util.structure.LinkedList.this.head.el2 has only one value
arg0.el2.el1 has only one value
arg0.el2.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
arg0.el2.el2 == null
===========================================================================
hugo.util.structure.LinkedList:::OBJECT
this.head == hugo.util.structure.LinkedList.this.head
hugo.util.structure.LinkedList.this.size == this.size
this.head.el1 != null
this.head.el2.el1 != null
hugo.util.structure.LinkedList.this.head != null
hugo.util.structure.LinkedList.this.size >= 1
this.size >= 0
===========================================================================
hugo.util.structure.LinkedList.LinkedList():::EXIT
this.head == null
this.size == 0
===========================================================================
hugo.util.structure.LinkedList.addFirst(java.lang.Comparable):::ENTER
this == hugo.util.structure.LinkedList.this
arg0 != null
===========================================================================
hugo.util.structure.LinkedList.addFirst(java.lang.Comparable):::EXIT
this.head.el1 == orig(arg0)
this.head.el1.getClass().getName() == orig(arg0.getClass().getName())
this.head.el2.el1 == orig(this.head.el1)
this.head.el2.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(this)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.head != null
this.size >= 1
this.size - orig(hugo.util.structure.LinkedList.this.size) - 1 == 0
this.size - orig(this.size) - 1 == 0
===========================================================================
hugo.util.structure.LinkedList.addLast(java.lang.Comparable):::ENTER
this == hugo.util.structure.LinkedList.this
arg0 != null
===========================================================================
hugo.util.structure.LinkedList.addLast(java.lang.Comparable):::EXIT59
this.head.el1 == orig(arg0)
this.head.el1.getClass().getName() == orig(arg0.getClass().getName())
this.head.el2 == null
this.size == 1
orig(this.head) == null
orig(this.size) == 0
===========================================================================
hugo.util.structure.LinkedList.addLast(java.lang.Comparable):::EXIT66
this.head == orig(this.head)
this.head.el2 != null
===========================================================================
hugo.util.structure.LinkedList.addLast(java.lang.Comparable):::EXIT
this.head == orig(hugo.util.structure.LinkedList.this.head)
this.head.el1 == orig(this.head.el1)
this.head.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(this)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
(this.head.el2 != null)  <==>  (orig(this.head) != null)
(this.head.el2 != null)  ==>  (hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this))
(this.head.el2 != null)  ==>  (hugo.util.structure.LinkedList.this == orig(this))
(this.head.el2 != null)  ==>  (orig(hugo.util.structure.LinkedList.this.head) != null)
(this.head.el2 != null)  ==>  (orig(hugo.util.structure.LinkedList.this.size) == orig(this.size))
(this.head.el2 != null)  ==>  (orig(this) == orig(hugo.util.structure.LinkedList.this))
(this.head.el2 != null)  ==>  (orig(this.head.el1) != null)
(this.head.el2 != null)  ==>  (this.head == orig(hugo.util.structure.LinkedList.this.head))
(this.head.el2 != null)  ==>  (this.head == orig(this.head))
(this.head.el2 != null)  ==>  (this.head.el1 == orig(this.head.el1))
(this.head.el2 != null)  ==>  (this.head.el1.getClass().getName() == orig(this.head.el1.getClass().getName()))
(this.head.el2 != null)  ==>  (this.head.el2.el1 != null)
(this.head.el2 != null)  ==>  (this.head.el2.el1 == orig(this.head.el2.el1))
(this.head.el2 != null)  ==>  (this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName()))
(this.head.el2 != null)  ==>  (this.size - orig(hugo.util.structure.LinkedList.this.size) - 1 == 0)
(this.head.el2 != null)  ==>  (this.size - orig(this.size) - 1 == 0)
(this.head.el2 == null)  <==>  (orig(this.head) == null)
(this.head.el2 == null)  <==>  (orig(this.size) == 0)
(this.head.el2 == null)  <==>  (this.size == 1)
(this.head.el2 == null)  ==>  (this.head.el1 == orig(arg0))
(this.head.el2 == null)  ==>  (this.head.el1.getClass().getName() == orig(arg0.getClass().getName()))
this.head != null
this.size >= 1
this.size - orig(hugo.util.structure.LinkedList.this.size) - 1 == 0
this.size - orig(this.size) - 1 == 0
===========================================================================
hugo.util.structure.LinkedList.attachToFrontOf(hugo.util.structure.LinkedList):::ENTER
this == hugo.util.structure.LinkedList.this
this.head.el1 has only one value
this.head.el1.getClass().getName() == hugo.project.hospital.Hospital$CardiologyDepartment.class
this.size one of { 2, 3 }
arg0.size one of { 2, 3 }
===========================================================================
hugo.util.structure.LinkedList.attachToFrontOf(hugo.util.structure.LinkedList):::EXIT
this.head == orig(this.head)
this.head == orig(hugo.util.structure.LinkedList.this.head)
this.head.el1 == orig(this.head.el1)
this.head.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head.el2 == orig(this.head.el2)
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(this)
arg0.head == orig(arg0.head)
arg0.head.el1 == orig(arg0.head.el1)
arg0.head.el1.getClass().getName() == orig(arg0.head.el1.getClass().getName())
arg0.head.el2 == orig(arg0.head.el2)
arg0.size == orig(arg0.size)
this.head.el1 has only one value
this.head.el1.getClass().getName() == hugo.project.hospital.Hospital$CardiologyDepartment.class
this.size == 5
arg0.size one of { 2, 3 }
===========================================================================
hugo.util.structure.LinkedList.get(int):::ENTER
this == hugo.util.structure.LinkedList.this
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
this.head != null
this.size one of { 1, 2, 3 }
arg0 one of { 0, 1, 2 }
this.size > arg0
===========================================================================
hugo.util.structure.LinkedList.get(int):::EXIT
this.head == orig(this.head)
this.head == orig(hugo.util.structure.LinkedList.this.head)
this.head.el1 == orig(this.head.el1)
this.head.el1.getClass().getName() == return.getClass().getName()
this.head.el2 == orig(this.head.el2)
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == return.getClass().getName()
this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
this.head.el2.el2 == orig(this.head.el2.el2)
hugo.util.structure.LinkedList.this == orig(this)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.size == orig(hugo.util.structure.LinkedList.this.size)
this.size == orig(this.size)
return.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head != null
this.size one of { 1, 2, 3 }
return != null
this.size > orig(arg0)
===========================================================================
hugo.util.structure.LinkedList.getFirst():::ENTER
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
this.head != null
this.head.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.head.el2.el1 has only one value
this.head.el2.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.head.el2.el2 == null
this.size one of { 1, 2 }
===========================================================================
hugo.util.structure.LinkedList.getFirst():::EXIT
this.head == orig(this.head)
this.head == orig(hugo.util.structure.LinkedList.this.head)
this.head.el1 == orig(this.head.el1)
this.head.el1.getClass().getName() == return.getClass().getName()
this.head.el2 == orig(this.head.el2)
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == return.getClass().getName()
this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
this.head.el2.el2 == orig(this.head.el2.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.size == orig(hugo.util.structure.LinkedList.this.size)
this.size == orig(this.size)
return.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head != null
this.head.el2.el1 has only one value
this.head.el2.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.head.el2.el2 == null
this.size one of { 1, 2 }
return != null
return.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
===========================================================================
hugo.util.structure.LinkedList.getLast():::ENTER
this == hugo.util.structure.LinkedList.this
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
this.head != null
this.size one of { 1, 2, 3 }
===========================================================================
hugo.util.structure.LinkedList.getLast():::EXIT145
===========================================================================
hugo.util.structure.LinkedList.getLast():::EXIT
this.head == orig(this.head)
this.head == orig(hugo.util.structure.LinkedList.this.head)
this.head.el1 == orig(this.head.el1)
this.head.el1.getClass().getName() == return.getClass().getName()
this.head.el2 == orig(this.head.el2)
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == return.getClass().getName()
this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
this.head.el2.el2 == orig(this.head.el2.el2)
hugo.util.structure.LinkedList.this == orig(this)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.size == orig(hugo.util.structure.LinkedList.this.size)
this.size == orig(this.size)
return.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head != null
this.size one of { 1, 2, 3 }
return != null
===========================================================================
hugo.util.structure.LinkedList.isEmpty():::ENTER
this == hugo.util.structure.LinkedList.this
===========================================================================
hugo.util.structure.LinkedList.isEmpty():::EXIT
this.head == orig(this.head)
this.head.el1 == orig(this.head.el1)
this.head.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head.el2 == orig(this.head.el2)
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
this.head.el2.el2 == orig(this.head.el2.el2)
hugo.util.structure.LinkedList.this == orig(this)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
this.size == orig(this.size)
(this.head != null)  <==>  (return == false)
(this.head != null)  ==>  (hugo.util.structure.LinkedList.this == orig(this))
(this.head != null)  ==>  (hugo.util.structure.LinkedList.this.head != null)
(this.head != null)  ==>  (hugo.util.structure.LinkedList.this.size == this.size)
(this.head != null)  ==>  (this.head == hugo.util.structure.LinkedList.this.head)
(this.head != null)  ==>  (this.head.el1 != null)
(this.head != null)  ==>  (this.head.el2.el1 != null)
(this.head == null)  <==>  (return == true)
(this.head == null)  <==>  (this.size == 0)
===========================================================================
hugo.util.structure.LinkedList.isEmpty():::EXIT;condition="return == true"
this.head == null
this.size == 0
return == true
===========================================================================
hugo.util.structure.LinkedList.isEmpty():::EXIT;condition="not(return == true)"
this.head == orig(hugo.util.structure.LinkedList.this.head)
this.size == orig(hugo.util.structure.LinkedList.this.size)
this.head != null
return == false
===========================================================================
hugo.util.structure.LinkedList.iterator():::ENTER
this == hugo.util.structure.LinkedList.this
===========================================================================
hugo.util.structure.LinkedList.iterator():::EXIT
this.head == orig(this.head)
this.head.el1 == orig(this.head.el1)
this.head.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head.el2 == orig(this.head.el2)
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
this.head.el2.el2 == orig(this.head.el2.el2)
hugo.util.structure.LinkedList.this == orig(this)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
this.size == orig(this.size)
return != null
return.getClass().getName() == hugo.util.structure.LinkedList$LinkedListIterator.class
this.head.el1.getClass().getName() != return.getClass().getName()
this.head.el2.el1.getClass().getName() != return.getClass().getName()
===========================================================================
hugo.util.structure.LinkedList.remove(java.lang.Comparable):::ENTER
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
this.head.el1.getClass().getName() == arg0.getClass().getName()
this has only one value
this.head has only one value
this.head.el1 has only one value
this.head.el1.getClass().getName() == hugo.project.hospital.Hospital$Patient.class
this.head.el2 has only one value
this.head.el2.el1 has only one value
this.head.el2.el2 == null
hugo.util.structure.LinkedList.this has only one value
this.size == 2
arg0 has only one value
===========================================================================
hugo.util.structure.LinkedList.remove(java.lang.Comparable):::EXIT98
===========================================================================
hugo.util.structure.LinkedList.remove(java.lang.Comparable):::EXIT
this.head.el1 == orig(this.head.el2.el1)
this.head.el1.getClass().getName() == orig(arg0.getClass().getName())
orig(this.head.el2.el1.getClass().getName()) == orig(arg0.getClass().getName())
this.head has only one value
this.head.el1 has only one value
this.head.el2 == null
this.size == 1
orig(arg0.getClass().getName()) == hugo.project.hospital.Hospital$Patient.class
===========================================================================
hugo.util.structure.LinkedList.removeFirst():::ENTER
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
this.head != null
this.head.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.head.el2.el1 has only one value
this.head.el2.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.head.el2.el2 == null
this.size one of { 1, 2 }
===========================================================================
hugo.util.structure.LinkedList.removeFirst():::EXIT
this.head.el1 == orig(this.head.el2.el1)
this.head.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
this.head.el1 has only one value
this.head.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.head.el2 == null
hugo.util.structure.LinkedList.this.size == 1
this.size one of { 0, 1 }
hugo.util.structure.LinkedList.this.size < orig(this.size)
this.size < orig(this.size)
===========================================================================
hugo.util.structure.LinkedList.removeLast():::ENTER
this == hugo.util.structure.LinkedList.this
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
this.head != null
this.size one of { 1, 2, 3 }
===========================================================================
hugo.util.structure.LinkedList.removeLast():::EXIT83
this.head == null
this.size == 0
orig(this.head.el2) == null
orig(this.size) == 1
===========================================================================
hugo.util.structure.LinkedList.removeLast():::EXIT90
this.head == orig(this.head)
this.head == orig(hugo.util.structure.LinkedList.this.head)
this.head != null
this.size one of { 1, 2 }
orig(this.head.el2) != null
orig(this.size) one of { 2, 3 }
===========================================================================
hugo.util.structure.LinkedList.removeLast():::EXIT
this.head.el1 == orig(this.head.el1)
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
this.head.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(this)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.head == orig(this.head)
this.head.el2.el1.getClass().getName() == hugo.util.structure.EdgeGraph$Node.class
this.head.el2.el2 == null
hugo.util.structure.LinkedList.this.size one of { 1, 2 }
this.size one of { 0, 1, 2 }
hugo.util.structure.LinkedList.this.size < orig(this.size)
this.size < orig(this.size)
===========================================================================
hugo.util.structure.LinkedList.size():::ENTER
this == hugo.util.structure.LinkedList.this
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
===========================================================================
hugo.util.structure.LinkedList.size():::EXIT
this.head == orig(this.head)
this.head.el1 == orig(this.head.el1)
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
this.head.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head.el2 == orig(this.head.el2)
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
this.head.el2.el2 == orig(this.head.el2.el2)
hugo.util.structure.LinkedList.this == orig(this)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.LinkedList.this.size == return
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
this.size == return
return == orig(this.size)
return >= 0
===========================================================================
hugo.util.structure.PriorityQueue$PriorityPair:::OBJECT
this.element != null
this.element.getClass().getName() == hugo.project.hospital.Hospital$Patient.class
this.priority != null
this.priority.getClass().getName() == java.lang.Integer.class
hugo.util.structure.PriorityQueue.this has only one value
hugo.util.structure.PriorityQueue.this.data has only one value
hugo.util.structure.PriorityQueue.this.data != null
this.element.getClass().getName() != this.priority.getClass().getName()
===========================================================================
hugo.util.structure.PriorityQueue$PriorityPair.PriorityPair(hugo.util.structure.PriorityQueue, java.lang.Comparable, java.lang.Comparable):::ENTER
hugo.util.structure.PriorityQueue.this has only one value
hugo.util.structure.PriorityQueue.this.data has only one value
arg1.getClass().getName() == hugo.project.hospital.Hospital$Patient.class
arg2.getClass().getName() == java.lang.Integer.class
===========================================================================
hugo.util.structure.PriorityQueue$PriorityPair.PriorityPair(hugo.util.structure.PriorityQueue, java.lang.Comparable, java.lang.Comparable):::EXIT
this.element == orig(arg1)
this.element.getClass().getName() == orig(arg1.getClass().getName())
this.priority == orig(arg2)
this.priority.getClass().getName() == orig(arg2.getClass().getName())
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
hugo.util.structure.PriorityQueue.this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this.data.head == orig(hugo.util.structure.PriorityQueue.this.data.head)
hugo.util.structure.PriorityQueue.this.data.size == orig(hugo.util.structure.PriorityQueue.this.data.size)
===========================================================================
hugo.util.structure.PriorityQueue$PriorityPair.compareTo(java.lang.Object):::ENTER
arg0.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
this.element.getClass().getName() != arg0.getClass().getName()
this.priority.getClass().getName() != arg0.getClass().getName()
===========================================================================
hugo.util.structure.PriorityQueue$PriorityPair.compareTo(java.lang.Object):::EXIT
this.element == orig(this.element)
this.element.getClass().getName() == orig(this.element.getClass().getName())
this.priority == orig(this.priority)
this.priority.getClass().getName() == orig(this.priority.getClass().getName())
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
hugo.util.structure.PriorityQueue.this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this.data.head == orig(hugo.util.structure.PriorityQueue.this.data.head)
hugo.util.structure.PriorityQueue.this.data.size == orig(hugo.util.structure.PriorityQueue.this.data.size)
return one of { -1, 0, 1 }
this.element.getClass().getName() != orig(arg0.getClass().getName())
this.priority.getClass().getName() != orig(arg0.getClass().getName())
===========================================================================
hugo.util.structure.PriorityQueue$PriorityQueueIterator:::OBJECT
this.element.el1.getClass().getName() == this.element.el2.el1.getClass().getName()
hugo.util.structure.LinkedList.this.head == hugo.util.structure.PriorityQueue.this.data.head
hugo.util.structure.LinkedList.this.size == hugo.util.structure.PriorityQueue.this.data.size
this.element.el1 != null
this.element.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
this.element.el2.el1 != null
this.element.el2.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
hugo.util.structure.LinkedList.this has only one value
hugo.util.structure.LinkedList.this.head has only one value
hugo.util.structure.LinkedList.this.head != null
hugo.util.structure.LinkedList.this.size one of { 4, 5 }
hugo.util.structure.PriorityQueue.this.data != null
hugo.util.structure.PriorityQueue.this.data.size one of { 0, 4, 5 }
===========================================================================
hugo.util.structure.PriorityQueue$PriorityQueueIterator.PriorityQueueIterator(hugo.util.structure.PriorityQueue):::ENTER
hugo.util.structure.PriorityQueue.this != null
hugo.util.structure.PriorityQueue.this.data != null
hugo.util.structure.PriorityQueue.this.data.size one of { 0, 4, 5 }
===========================================================================
hugo.util.structure.PriorityQueue$PriorityQueueIterator.PriorityQueueIterator(hugo.util.structure.PriorityQueue):::EXIT
this.element == hugo.util.structure.LinkedList.this.head
this.element == hugo.util.structure.PriorityQueue.this.data.head
this.element == orig(hugo.util.structure.PriorityQueue.this.data.head)
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
hugo.util.structure.PriorityQueue.this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this.data.size == orig(hugo.util.structure.PriorityQueue.this.data.size)
this.element.el1 has only one value
===========================================================================
hugo.util.structure.PriorityQueue$PriorityQueueIterator.hasNext():::ENTER
===========================================================================
hugo.util.structure.PriorityQueue$PriorityQueueIterator.hasNext():::EXIT
this.element == orig(this.element)
this.element.el1 == orig(this.element.el1)
this.element.el1.getClass().getName() == orig(this.element.el1.getClass().getName())
this.element.el2 == orig(this.element.el2)
this.element.el2.el1 == orig(this.element.el2.el1)
this.element.el2.el1.getClass().getName() == orig(this.element.el2.el1.getClass().getName())
this.element.el2.el2 == orig(this.element.el2.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.LinkedList.this.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.LinkedList.this.size == orig(hugo.util.structure.LinkedList.this.size)
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
hugo.util.structure.PriorityQueue.this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this.data.head == orig(hugo.util.structure.PriorityQueue.this.data.head)
hugo.util.structure.PriorityQueue.this.data.size == orig(hugo.util.structure.PriorityQueue.this.data.size)
(this.element == null)  <==>  (return == false)
(this.element == null)  ==>  (hugo.util.structure.PriorityQueue.this.data.size one of { 0, 4, 5 })
===========================================================================
hugo.util.structure.PriorityQueue$PriorityQueueIterator.hasNext():::EXIT;condition="return == true"
hugo.util.structure.PriorityQueue.this.data.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.PriorityQueue.this.data.size == orig(hugo.util.structure.LinkedList.this.size)
hugo.util.structure.PriorityQueue.this has only one value
hugo.util.structure.PriorityQueue.this.data has only one value
hugo.util.structure.PriorityQueue.this.data.head has only one value
hugo.util.structure.PriorityQueue.this.data.size one of { 4, 5 }
return == true
===========================================================================
hugo.util.structure.PriorityQueue$PriorityQueueIterator.hasNext():::EXIT;condition="not(return == true)"
this.element == null
return == false
===========================================================================
hugo.util.structure.PriorityQueue$PriorityQueueIterator.next():::ENTER
hugo.util.structure.PriorityQueue.this has only one value
hugo.util.structure.PriorityQueue.this.data has only one value
hugo.util.structure.PriorityQueue.this.data.head has only one value
hugo.util.structure.PriorityQueue.this.data.size one of { 4, 5 }
===========================================================================
hugo.util.structure.PriorityQueue$PriorityQueueIterator.next():::EXIT
this.element.el1.getClass().getName() == orig(this.element.el1.getClass().getName())
this.element.el1.getClass().getName() == orig(this.element.el2.el1.getClass().getName())
this.element.el2.el1.getClass().getName() == orig(this.element.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
hugo.util.structure.PriorityQueue.this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this.data.head == orig(hugo.util.structure.LinkedList.this.head)
hugo.util.structure.PriorityQueue.this.data.head == orig(hugo.util.structure.PriorityQueue.this.data.head)
hugo.util.structure.PriorityQueue.this.data.size == orig(hugo.util.structure.LinkedList.this.size)
hugo.util.structure.PriorityQueue.this.data.size == orig(hugo.util.structure.PriorityQueue.this.data.size)
hugo.util.structure.PriorityQueue.this has only one value
hugo.util.structure.PriorityQueue.this.data has only one value
hugo.util.structure.PriorityQueue.this.data.head has only one value
hugo.util.structure.PriorityQueue.this.data.size one of { 4, 5 }
return.getClass().getName() == hugo.project.hospital.Hospital$Patient.class
this.element.el1.getClass().getName() != return.getClass().getName()
this.element.el2.el1.getClass().getName() != return.getClass().getName()
return.getClass().getName() != orig(this.element.el1.getClass().getName())
===========================================================================
hugo.util.structure.PriorityQueue$SortedLinkedList:::OBJECT
hugo.util.structure.PriorityQueue.this.data.head == this.head
hugo.util.structure.PriorityQueue.this.data.head == hugo.util.structure.LinkedList.this.head
hugo.util.structure.PriorityQueue.this.data.size == hugo.util.structure.LinkedList.this.size
hugo.util.structure.PriorityQueue.this.data.size == this.size
this.head == hugo.util.structure.LinkedList.this.head
this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName()
hugo.util.structure.LinkedList.this.size == this.size
this.head.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
this.head.el2.el1 has only one value
this.head.el2.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
hugo.util.structure.LinkedList.this has only one value
this.size >= 0
===========================================================================
hugo.util.structure.PriorityQueue$SortedLinkedList.SortedLinkedList(hugo.util.structure.PriorityQueue):::ENTER
hugo.util.structure.PriorityQueue.this.data == null
===========================================================================
hugo.util.structure.PriorityQueue$SortedLinkedList.SortedLinkedList(hugo.util.structure.PriorityQueue):::EXIT
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
hugo.util.structure.PriorityQueue.this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this.data == null
this.head == null
this.size == 0
===========================================================================
hugo.util.structure.PriorityQueue$SortedLinkedList.addSorted(hugo.util.structure.PriorityQueue$PriorityPair):::ENTER
this == hugo.util.structure.PriorityQueue.this.data
this has only one value
hugo.util.structure.PriorityQueue.this has only one value
hugo.util.structure.PriorityQueue.this.data has only one value
arg0.element.getClass().getName() == hugo.project.hospital.Hospital$Patient.class
arg0.priority.getClass().getName() == java.lang.Integer.class
===========================================================================
hugo.util.structure.PriorityQueue$SortedLinkedList.addSorted(hugo.util.structure.PriorityQueue$PriorityPair):::EXIT45
this.head has only one value
this.head.el1 has only one value
this.head.el2 == null
this.size == 1
arg0.element has only one value
arg0.priority has only one value
orig(this.head) == null
orig(this.size) == 0
orig(arg0) has only one value
===========================================================================
hugo.util.structure.PriorityQueue$SortedLinkedList.addSorted(hugo.util.structure.PriorityQueue$PriorityPair):::EXIT57
this.head.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head has only one value
this.head.el1 has only one value
this.head.el2 has only one value
===========================================================================
hugo.util.structure.PriorityQueue$SortedLinkedList.addSorted(hugo.util.structure.PriorityQueue$PriorityPair):::EXIT
hugo.util.structure.PriorityQueue.this == orig(hugo.util.structure.PriorityQueue.this)
hugo.util.structure.PriorityQueue.this.data == orig(this)
hugo.util.structure.PriorityQueue.this.data == orig(hugo.util.structure.PriorityQueue.this.data)
this.head.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
this.head.el2.el1 == orig(this.head.el2.el1)
this.head.el2.el1.getClass().getName() == orig(this.head.el1.getClass().getName())
this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
arg0.element == orig(arg0.element)
arg0.element.getClass().getName() == orig(arg0.element.getClass().getName())
arg0.priority == orig(arg0.priority)
arg0.priority.getClass().getName() == orig(arg0.priority.getClass().getName())
(this.head.el2 == null)  <==>  (orig(this.head) == null)
(this.head.el2 == null)  <==>  (orig(this.size) == 0)
(this.head.el2 == null)  <==>  (this.size == 1)
(this.head.el2 == null)  ==>  (arg0.element has only one value)
(this.head.el2 == null)  ==>  (arg0.priority has only one value)
(this.head.el2 == null)  ==>  (orig(arg0) has only one value)
(this.head.el2 has only one value)  ==>  (hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this))
(this.head.el2 has only one value)  ==>  (hugo.util.structure.LinkedList.this has only one value)
(this.head.el2 has only one value)  ==>  (orig(hugo.util.structure.LinkedList.this) has only one value)
(this.head.el2 has only one value)  ==>  (orig(hugo.util.structure.LinkedList.this.size) == orig(this.size))
(this.head.el2 has only one value)  ==>  (orig(this.head) == orig(hugo.util.structure.LinkedList.this.head))
(this.head.el2 has only one value)  ==>  (orig(this.head.el2.el1) has only one value)
(this.head.el2 has only one value)  ==>  (orig(this.head.el2.el1.getClass().getName()) == hugo.util.structure.PriorityQueue$PriorityPair.class)
(this.head.el2 has only one value)  ==>  (this.head.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName()))
(this.head.el2 has only one value)  ==>  (this.head.el1.getClass().getName() == this.head.el2.el1.getClass().getName())
(this.head.el2 has only one value)  ==>  (this.head.el2.el1 == orig(this.head.el2.el1))
(this.head.el2 has only one value)  ==>  (this.head.el2.el1 has only one value)
(this.head.el2 has only one value)  ==>  (this.head.el2.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class)
(this.head.el2 has only one value)  ==>  (this.head.el2.el1.getClass().getName() == orig(this.head.el2.el1.getClass().getName()))
(this.head.el2 has only one value)  ==>  (this.size - orig(hugo.util.structure.LinkedList.this.size) - 1 == 0)
(this.head.el2 has only one value)  ==>  (this.size - orig(this.size) - 1 == 0)
hugo.util.structure.PriorityQueue.this has only one value
hugo.util.structure.PriorityQueue.this.data has only one value
arg0.element.getClass().getName() == hugo.project.hospital.Hospital$Patient.class
arg0.priority.getClass().getName() == java.lang.Integer.class
this.size - orig(hugo.util.structure.LinkedList.this.size) - 1 == 0
this.size - orig(this.size) - 1 == 0
===========================================================================
hugo.util.structure.PriorityQueue:::OBJECT
this == hugo.util.structure.PriorityQueue.this
this.data == hugo.util.structure.PriorityQueue.this.data
this.data != null
this.data.head.el1 != null
this.data.head.el1.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityPair.class
hugo.util.structure.LinkedList.this has only one value
this.data.size >= 0
===========================================================================
hugo.util.structure.PriorityQueue.PriorityQueue():::EXIT
this.data.head == null
this.data.size == 0
===========================================================================
hugo.util.structure.PriorityQueue.empty():::ENTER
this.data has only one value
hugo.util.structure.PriorityQueue.this has only one value
this.data.head has only one value
this.data.head.el1 has only one value
this.data.head.el2 has only one value
this.data.size == 5
===========================================================================
hugo.util.structure.PriorityQueue.empty():::EXIT
this.data == orig(this.data)
this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this == orig(this)
this.data.head == orig(this.data.head)
this.data.head.el1 == orig(this.data.head.el1)
this.data.head.el1.getClass().getName() == orig(this.data.head.el1.getClass().getName())
this.data.head.el2 == orig(this.data.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data.size == orig(this.data.size)
this.data has only one value
this.data.head has only one value
this.data.head.el1 has only one value
this.data.head.el2 has only one value
this.data.size == 5
return == false
orig(this) has only one value
===========================================================================
hugo.util.structure.PriorityQueue.empty():::EXIT;condition="not(return == true)"
===========================================================================
hugo.util.structure.PriorityQueue.iterator():::ENTER
this.data.head.el1 has only one value
this.data.size one of { 0, 4, 5 }
===========================================================================
hugo.util.structure.PriorityQueue.iterator():::EXIT
this.data == orig(this.data)
this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this == orig(this)
this.data.head == orig(this.data.head)
this.data.head.el1 == orig(this.data.head.el1)
this.data.head.el1.getClass().getName() == orig(this.data.head.el1.getClass().getName())
this.data.head.el2 == orig(this.data.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data.size == orig(this.data.size)
this.data.head.el1 has only one value
this.data.size one of { 0, 4, 5 }
return != null
return.getClass().getName() == hugo.util.structure.PriorityQueue$PriorityQueueIterator.class
===========================================================================
hugo.util.structure.PriorityQueue.push(java.lang.Comparable, int):::ENTER
this.data has only one value
hugo.util.structure.PriorityQueue.this has only one value
arg0.getClass().getName() == hugo.project.hospital.Hospital$Patient.class
arg1 one of { 0, 1, 3 }
===========================================================================
hugo.util.structure.PriorityQueue.push(java.lang.Comparable, int):::EXIT
this.data == orig(this.data)
this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this == orig(this)
this.data.head.el1.getClass().getName() == orig(this.data.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data has only one value
orig(this) has only one value
this.data.size - orig(this.data.size) - 1 == 0
===========================================================================
hugo.util.structure.PriorityQueue.remove(java.lang.Comparable):::ENTER
this.data has only one value
hugo.util.structure.PriorityQueue.this has only one value
this.data.head has only one value
this.data.head.el1 has only one value
this.data.head.el2 has only one value
this.data.size == 5
arg0 has only one value
arg0.getClass().getName() == hugo.project.hospital.Hospital$Patient.class
===========================================================================
hugo.util.structure.PriorityQueue.remove(java.lang.Comparable):::EXIT95
===========================================================================
hugo.util.structure.PriorityQueue.remove(java.lang.Comparable):::EXIT
this.data == orig(this.data)
this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this == orig(this)
this.data.head == orig(this.data.head)
this.data.head.el1 == orig(this.data.head.el1)
this.data.head.el1.getClass().getName() == orig(this.data.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data has only one value
this.data.head has only one value
this.data.head.el1 has only one value
this.data.head.el2 has only one value
this.data.size == 4
orig(this) has only one value
===========================================================================
hugo.util.structure.PriorityQueue.size():::ENTER
this.data.head.el1 has only one value
this.data.size one of { 0, 4, 5 }
===========================================================================
hugo.util.structure.PriorityQueue.size():::EXIT
this.data == orig(this.data)
this.data == orig(hugo.util.structure.PriorityQueue.this.data)
hugo.util.structure.PriorityQueue.this == orig(this)
this.data.head == orig(this.data.head)
this.data.head.el1 == orig(this.data.head.el1)
this.data.head.el1.getClass().getName() == orig(this.data.head.el1.getClass().getName())
this.data.head.el2 == orig(this.data.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data.size == return
return == orig(this.data.size)
this.data.head.el1 has only one value
return one of { 0, 4, 5 }
===========================================================================
hugo.util.structure.Queue:::OBJECT
this.data == hugo.util.structure.LinkedList.this
this.data != null
this.data.head.el1 != null
this.data.size >= 0
===========================================================================
hugo.util.structure.Queue.Queue():::EXIT
this.data.head == null
this.data.size == 0
===========================================================================
hugo.util.structure.Queue.empty():::ENTER
===========================================================================
hugo.util.structure.Queue.empty():::EXIT
this.data == orig(this.data)
this.data.head == orig(this.data.head)
this.data.head.el1 == orig(this.data.head.el1)
this.data.head.el1.getClass().getName() == orig(this.data.head.el1.getClass().getName())
this.data.head.el2 == orig(this.data.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data.size == orig(this.data.size)
(this.data.head != null)  <==>  (return == false)
(this.data.head != null)  <==>  (this.data.size one of { 1, 2, 3 })
(this.data.head != null)  ==>  (this.data == hugo.util.structure.LinkedList.this)
(this.data.head != null)  ==>  (this.data.head.el1 != null)
(this.data.head == null)  <==>  (return == true)
(this.data.head == null)  <==>  (this.data.size == 0)
(this.data.head == null)  ==>  (orig(this) has only one value)
(this.data.head == null)  ==>  (this.data has only one value)
===========================================================================
hugo.util.structure.Queue.empty():::EXIT;condition="return == true"
this.data has only one value
this.data.head == null
this.data.size == 0
return == true
orig(this) has only one value
===========================================================================
hugo.util.structure.Queue.empty():::EXIT;condition="not(return == true)"
this.data.head != null
this.data.size one of { 1, 2, 3 }
return == false
===========================================================================
hugo.util.structure.Queue.pop():::ENTER
this.data.head != null
this.data.size one of { 1, 2, 3 }
===========================================================================
hugo.util.structure.Queue.pop():::EXIT
this.data == orig(this.data)
this.data == orig(hugo.util.structure.LinkedList.this)
this.data.head.el1 == orig(this.data.head.el1)
this.data.head.el1.getClass().getName() == return.getClass().getName()
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
return.getClass().getName() == orig(this.data.head.el1.getClass().getName())
this.data.size one of { 0, 1, 2 }
return != null
this.data.size < orig(this.data.size)
===========================================================================
hugo.util.structure.Queue.push(java.lang.Comparable):::ENTER
this.data.head.el1.getClass().getName() == arg0.getClass().getName()
this.data.size one of { 0, 1, 2 }
arg0 != null
===========================================================================
hugo.util.structure.Queue.push(java.lang.Comparable):::EXIT
this.data == orig(this.data)
this.data == orig(hugo.util.structure.LinkedList.this)
this.data.head.el1 == orig(arg0)
this.data.head.el1.getClass().getName() == orig(arg0.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data.head != null
this.data.size one of { 1, 2, 3 }
this.data.size > orig(this.data.size)
===========================================================================
hugo.util.structure.Stack:::OBJECT
this.data != null
this.data.head.el1 != null
this.data.head.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.data.size one of { 0, 1, 2 }
===========================================================================
hugo.util.structure.Stack.Stack():::EXIT
this.data.head == null
this.data.size == 0
===========================================================================
hugo.util.structure.Stack.empty():::ENTER
===========================================================================
hugo.util.structure.Stack.empty():::EXIT
this.data == orig(this.data)
this.data.head == orig(this.data.head)
this.data.head.el1 == orig(this.data.head.el1)
this.data.head.el1.getClass().getName() == orig(this.data.head.el1.getClass().getName())
this.data.head.el2 == orig(this.data.head.el2)
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data.size == orig(this.data.size)
(this.data.head != null)  <==>  (return == false)
(this.data.head != null)  <==>  (this.data.size one of { 1, 2 })
(this.data.head != null)  ==>  (this.data.head.el1 != null)
(this.data.head != null)  ==>  (this.data.head.el1.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class)
(this.data.head == null)  <==>  (return == true)
(this.data.head == null)  <==>  (this.data.size == 0)
===========================================================================
hugo.util.structure.Stack.empty():::EXIT;condition="return == true"
this.data.head == null
this.data.size == 0
return == true
===========================================================================
hugo.util.structure.Stack.empty():::EXIT;condition="not(return == true)"
this.data.head != null
this.data.size one of { 1, 2 }
return == false
===========================================================================
hugo.util.structure.Stack.pop():::ENTER
this.data.head != null
this.data.size one of { 1, 2 }
===========================================================================
hugo.util.structure.Stack.pop():::EXIT
this.data == orig(this.data)
this.data.head.el1.getClass().getName() == orig(this.data.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data.head.el1 has only one value
this.data.head.el2 == null
this.data.size one of { 0, 1 }
return != null
return.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
this.data.size < orig(this.data.size)
===========================================================================
hugo.util.structure.Stack.push(java.lang.Comparable):::ENTER
this.data.head.el1 has only one value
this.data.head.el2 == null
this.data.size one of { 0, 1 }
arg0 != null
arg0.getClass().getName() == hugo.util.structure.BinaryTree$TreeNode.class
===========================================================================
hugo.util.structure.Stack.push(java.lang.Comparable):::EXIT
this.data == orig(this.data)
this.data.head.el1.getClass().getName() == orig(this.data.head.el1.getClass().getName())
hugo.util.structure.LinkedList.this == orig(hugo.util.structure.LinkedList.this)
this.data.head != null
this.data.size one of { 1, 2 }
this.data.size > orig(this.data.size)
Exiting Daikon.
