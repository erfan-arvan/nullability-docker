// Declarations for PlanningProblemTest
// Declarations written 2025-04-06T01:04:44.219392 by daikon.DynComp

decl-version 2.0
var-comparability implicit

ppt PlanningProblemTest:::CLASS
ppt-type class

ppt PlanningProblemTest:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type PlanningProblemTest
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt PlanningProblemTest.PlanningProblemTest():::ENTER
ppt-type enter

ppt PlanningProblemTest.PlanningProblemTest():::EXIT24
ppt-type subexit
variable this
  var-kind variable
  dec-type PlanningProblemTest
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt PlanningProblemTest.testHanoiTowers():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PlanningProblemTest
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt PlanningProblemTest.testHanoiTowers():::EXIT105
ppt-type subexit
variable this
  var-kind variable
  dec-type PlanningProblemTest
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt PlanningProblemTest.testSingleStep():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PlanningProblemTest
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt PlanningProblemTest.testSingleStep():::EXIT140
ppt-type subexit
variable this
  var-kind variable
  dec-type PlanningProblemTest
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt PlanningProblemTest.main(java.lang.String[]):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 3[5]
variable arg0[..].toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0[]
  flags synthetic to_string
  comparability 4[6]

ppt PlanningProblemTest.main(java.lang.String[]):::EXIT151
ppt-type subexit
variable arg0
  var-kind variable
  dec-type java.lang.String[]
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg0[..]
  var-kind array
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 3[5]
variable arg0[..].toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0[]
  flags synthetic to_string
  comparability 4[6]

ppt junit.framework.TestCase:::CLASS
ppt-type class

ppt junit.framework.TestCase:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.TestCase():::ENTER
ppt-type enter

ppt junit.framework.TestCase.TestCase():::EXIT89
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.TestCase(java.lang.String):::ENTER
ppt-type enter
variable name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args name
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.TestCase(java.lang.String):::EXIT96
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 6
variable name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args name
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.countTestCases():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.countTestCases():::EXIT102
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 5
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt junit.framework.TestCase.createResult():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.createResult():::EXIT111
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 13
variable return
  var-kind return
  dec-type junit.framework.TestResult
  rep-type hashcode
  comparability 2
variable return.fFailures
  var-kind field fFailures
  dec-type java.util.List
  rep-type hashcode
  comparability 5
variable return.fFailures[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 6[14]
variable return.fFailures[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.fFailures[]
  flags synthetic classname non_null
  comparability 1[15]
variable return.fFailures.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.fFailures
  flags synthetic classname non_null
  comparability 1
variable return.fErrors
  var-kind field fErrors
  dec-type java.util.List
  rep-type hashcode
  comparability 3
variable return.fErrors[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 4[16]
variable return.fErrors[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.fErrors[]
  flags synthetic classname non_null
  comparability 1[17]
variable return.fErrors.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.fErrors
  flags synthetic classname non_null
  comparability 1
variable return.fListeners
  var-kind field fListeners
  dec-type java.util.List
  rep-type hashcode
  comparability 7
variable return.fListeners[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 8[18]
variable return.fListeners[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.fListeners[]
  flags synthetic classname non_null
  comparability 1[19]
variable return.fListeners.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.fListeners
  flags synthetic classname non_null
  comparability 1
variable return.fRunTests
  var-kind field fRunTests
  dec-type int
  rep-type int
  comparability 9
variable return.fStop
  var-kind field fStop
  dec-type boolean
  rep-type boolean
  comparability 10

ppt junit.framework.TestCase.run():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.run():::EXIT123
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 13
variable return
  var-kind return
  dec-type junit.framework.TestResult
  rep-type hashcode
  comparability 2
variable return.fFailures
  var-kind field fFailures
  dec-type java.util.List
  rep-type hashcode
  comparability 5
variable return.fFailures[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 6[14]
variable return.fFailures[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.fFailures[]
  flags synthetic classname non_null
  comparability 1[15]
variable return.fFailures.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.fFailures
  flags synthetic classname non_null
  comparability 1
variable return.fErrors
  var-kind field fErrors
  dec-type java.util.List
  rep-type hashcode
  comparability 3
variable return.fErrors[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 4[16]
variable return.fErrors[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.fErrors[]
  flags synthetic classname non_null
  comparability 1[17]
variable return.fErrors.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.fErrors
  flags synthetic classname non_null
  comparability 1
variable return.fListeners
  var-kind field fListeners
  dec-type java.util.List
  rep-type hashcode
  comparability 7
variable return.fListeners[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 8[18]
variable return.fListeners[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.fListeners[]
  flags synthetic classname non_null
  comparability 1[19]
variable return.fListeners.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.fListeners
  flags synthetic classname non_null
  comparability 1
variable return.fRunTests
  var-kind field fRunTests
  dec-type int
  rep-type int
  comparability 9
variable return.fStop
  var-kind field fStop
  dec-type boolean
  rep-type boolean
  comparability 10

ppt junit.framework.TestCase.run(junit.framework.TestResult):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 13
variable result
  var-kind variable
  dec-type junit.framework.TestResult
  rep-type hashcode
  flags is_param
  comparability 2
variable result.fFailures
  var-kind field fFailures
  dec-type java.util.List
  rep-type hashcode
  comparability 5
variable result.fFailures[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 6[14]
variable result.fFailures[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args result.fFailures[]
  flags synthetic classname non_null
  comparability 1[15]
variable result.fFailures.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args result.fFailures
  flags synthetic classname non_null
  comparability 1
variable result.fErrors
  var-kind field fErrors
  dec-type java.util.List
  rep-type hashcode
  comparability 3
variable result.fErrors[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 4[16]
variable result.fErrors[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args result.fErrors[]
  flags synthetic classname non_null
  comparability 1[17]
variable result.fErrors.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args result.fErrors
  flags synthetic classname non_null
  comparability 1
variable result.fListeners
  var-kind field fListeners
  dec-type java.util.List
  rep-type hashcode
  comparability 7
variable result.fListeners[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 8[18]
variable result.fListeners[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args result.fListeners[]
  flags synthetic classname non_null
  comparability 1[19]
variable result.fListeners.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args result.fListeners
  flags synthetic classname non_null
  comparability 1
variable result.fRunTests
  var-kind field fRunTests
  dec-type int
  rep-type int
  comparability 9
variable result.fStop
  var-kind field fStop
  dec-type boolean
  rep-type boolean
  comparability 10

ppt junit.framework.TestCase.run(junit.framework.TestResult):::EXIT131
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 13
variable result
  var-kind variable
  dec-type junit.framework.TestResult
  rep-type hashcode
  flags is_param
  comparability 2
variable result.fFailures
  var-kind field fFailures
  dec-type java.util.List
  rep-type hashcode
  comparability 5
variable result.fFailures[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 6[14]
variable result.fFailures[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args result.fFailures[]
  flags synthetic classname non_null
  comparability 1[15]
variable result.fFailures.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args result.fFailures
  flags synthetic classname non_null
  comparability 1
variable result.fErrors
  var-kind field fErrors
  dec-type java.util.List
  rep-type hashcode
  comparability 3
variable result.fErrors[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 4[16]
variable result.fErrors[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args result.fErrors[]
  flags synthetic classname non_null
  comparability 1[17]
variable result.fErrors.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args result.fErrors
  flags synthetic classname non_null
  comparability 1
variable result.fListeners
  var-kind field fListeners
  dec-type java.util.List
  rep-type hashcode
  comparability 7
variable result.fListeners[..]
  var-kind array
  array 1
  dec-type java.util.List
  rep-type hashcode[]
  comparability 8[18]
variable result.fListeners[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args result.fListeners[]
  flags synthetic classname non_null
  comparability 1[19]
variable result.fListeners.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args result.fListeners
  flags synthetic classname non_null
  comparability 1
variable result.fRunTests
  var-kind field fRunTests
  dec-type int
  rep-type int
  comparability 9
variable result.fStop
  var-kind field fStop
  dec-type boolean
  rep-type boolean
  comparability 10

ppt junit.framework.TestCase.runBare():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.runBare():::EXIT153
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.runTest():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.runTest():::EXIT185
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.assertTrue(java.lang.String, boolean):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 4
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertTrue(java.lang.String, boolean):::EXIT193
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 4
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertTrue(boolean):::ENTER
ppt-type enter
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertTrue(boolean):::EXIT201
ppt-type subexit
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertFalse(java.lang.String, boolean):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 4
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertFalse(java.lang.String, boolean):::EXIT209
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 4
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertFalse(boolean):::ENTER
ppt-type enter
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertFalse(boolean):::EXIT217
ppt-type subexit
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.fail(java.lang.String):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.fail(java.lang.String):::EXIT224
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.fail():::ENTER
ppt-type enter

ppt junit.framework.TestCase.fail():::EXIT231
ppt-type subexit

ppt junit.framework.TestCase.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT239
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertEquals(java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertEquals(java.lang.Object, java.lang.Object):::EXIT247
ppt-type subexit
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String, java.lang.String):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 6
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 7
variable expected
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable expected.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args expected
  flags synthetic to_string
  comparability 5
variable actual
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args actual
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String, java.lang.String):::EXIT254
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 6
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 7
variable expected
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable expected.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args expected
  flags synthetic to_string
  comparability 5
variable actual
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args actual
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable expected.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args expected
  flags synthetic to_string
  comparability 5
variable actual
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args actual
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.assertEquals(java.lang.String, java.lang.String):::EXIT261
ppt-type subexit
variable expected
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable expected.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args expected
  flags synthetic to_string
  comparability 5
variable actual
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args actual
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.assertEquals(java.lang.String, double, double, double):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.TestCase.assertEquals(java.lang.String, double, double, double):::EXIT270
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.TestCase.assertEquals(double, double, double):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.TestCase.assertEquals(double, double, double):::EXIT278
ppt-type subexit
variable expected
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.TestCase.assertEquals(java.lang.String, float, float, float):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.TestCase.assertEquals(java.lang.String, float, float, float):::EXIT287
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.TestCase.assertEquals(float, float, float):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.TestCase.assertEquals(float, float, float):::EXIT295
ppt-type subexit
variable expected
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.TestCase.assertEquals(java.lang.String, long, long):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, long, long):::EXIT303
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(long, long):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(long, long):::EXIT310
ppt-type subexit
variable expected
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, boolean, boolean):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, boolean, boolean):::EXIT318
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(boolean, boolean):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(boolean, boolean):::EXIT325
ppt-type subexit
variable expected
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, byte, byte):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, byte, byte):::EXIT333
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(byte, byte):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(byte, byte):::EXIT340
ppt-type subexit
variable expected
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, char, char):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, char, char):::EXIT348
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(char, char):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(char, char):::EXIT355
ppt-type subexit
variable expected
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, short, short):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, short, short):::EXIT363
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(short, short):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(short, short):::EXIT370
ppt-type subexit
variable expected
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, int, int):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(java.lang.String, int, int):::EXIT378
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(int, int):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertEquals(int, int):::EXIT385
ppt-type subexit
variable expected
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.TestCase.assertNotNull(java.lang.Object):::ENTER
ppt-type enter
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNotNull(java.lang.Object):::EXIT392
ppt-type subexit
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNotNull(java.lang.String, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNotNull(java.lang.String, java.lang.Object):::EXIT400
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNull(java.lang.Object):::ENTER
ppt-type enter
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNull(java.lang.Object):::EXIT411
ppt-type subexit
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNull(java.lang.String, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNull(java.lang.String, java.lang.Object):::EXIT419
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT427
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertSame(java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertSame(java.lang.Object, java.lang.Object):::EXIT435
ppt-type subexit
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT444
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNotSame(java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.assertNotSame(java.lang.Object, java.lang.Object):::EXIT452
ppt-type subexit
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.failSame(java.lang.String):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.failSame(java.lang.String):::EXIT456
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.failNotSame(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.failNotSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT460
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT464
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.format(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.TestCase.format(java.lang.String, java.lang.Object, java.lang.Object):::EXIT467
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 7

ppt junit.framework.TestCase.setUp():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.setUp():::EXIT475
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.tearDown():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.tearDown():::EXIT482
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.getName():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 4

ppt junit.framework.TestCase.getName():::EXIT498
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 6
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.setName(java.lang.String):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 6
variable name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args name
  flags synthetic to_string
  comparability 3

ppt junit.framework.TestCase.setName(java.lang.String):::EXIT508
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.TestCase
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this
  flags synthetic classname non_null
  comparability 1
variable this.fName
  var-kind field fName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.fName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.fName
  flags synthetic to_string
  comparability 6
variable name
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable name.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args name
  flags synthetic to_string
  comparability 3

ppt junit.framework.Assert:::CLASS
ppt-type class

ppt junit.framework.Assert:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type junit.framework.Assert
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt junit.framework.Assert.Assert():::ENTER
ppt-type enter

ppt junit.framework.Assert.Assert():::EXIT16
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.Assert
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt junit.framework.Assert.assertTrue(java.lang.String, boolean):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 4
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertTrue(java.lang.String, boolean):::EXIT26
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 4
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertTrue(boolean):::ENTER
ppt-type enter
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertTrue(boolean):::EXIT34
ppt-type subexit
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertFalse(java.lang.String, boolean):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 4
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertFalse(java.lang.String, boolean):::EXIT42
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 4
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertFalse(boolean):::ENTER
ppt-type enter
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertFalse(boolean):::EXIT50
ppt-type subexit
variable condition
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.fail(java.lang.String):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3

ppt junit.framework.Assert.fail():::ENTER
ppt-type enter

ppt junit.framework.Assert.fail():::EXIT67
ppt-type subexit

ppt junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT75
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT78
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT81
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertEquals(java.lang.Object, java.lang.Object):::EXIT89
ppt-type subexit
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 6
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 7
variable expected
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable expected.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args expected
  flags synthetic to_string
  comparability 5
variable actual
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args actual
  flags synthetic to_string
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String):::EXIT96
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 6
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 7
variable expected
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable expected.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args expected
  flags synthetic to_string
  comparability 5
variable actual
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args actual
  flags synthetic to_string
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, java.lang.String, java.lang.String):::EXIT99
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 6
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 7
variable expected
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable expected.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args expected
  flags synthetic to_string
  comparability 5
variable actual
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args actual
  flags synthetic to_string
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, java.lang.String):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable expected.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args expected
  flags synthetic to_string
  comparability 5
variable actual
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args actual
  flags synthetic to_string
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, java.lang.String):::EXIT110
ppt-type subexit
variable expected
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable expected.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args expected
  flags synthetic to_string
  comparability 5
variable actual
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args actual
  flags synthetic to_string
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, double, double, double):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, double, double, double):::EXIT119
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, double, double, double):::EXIT124
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(double, double, double):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(double, double, double):::EXIT132
ppt-type subexit
variable expected
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, float, float, float):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, float, float, float):::EXIT141
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, float, float, float):::EXIT146
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 5
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 6
variable expected
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(float, float, float):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(float, float, float):::EXIT154
ppt-type subexit
variable expected
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 4
variable actual
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 2
variable delta
  var-kind variable
  dec-type float
  rep-type double
  flags is_param
  comparability 3

ppt junit.framework.Assert.assertEquals(java.lang.String, long, long):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, long, long):::EXIT162
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(long, long):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(long, long):::EXIT169
ppt-type subexit
variable expected
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type long
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, boolean, boolean):::EXIT177
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(boolean, boolean):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(boolean, boolean):::EXIT184
ppt-type subexit
variable expected
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, byte, byte):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, byte, byte):::EXIT192
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(byte, byte):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(byte, byte):::EXIT199
ppt-type subexit
variable expected
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type byte
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, char, char):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, char, char):::EXIT207
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(char, char):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(char, char):::EXIT214
ppt-type subexit
variable expected
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type char
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, short, short):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, short, short):::EXIT222
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(short, short):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(short, short):::EXIT229
ppt-type subexit
variable expected
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type short
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, int, int):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(java.lang.String, int, int):::EXIT237
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(int, int):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertEquals(int, int):::EXIT244
ppt-type subexit
variable expected
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable actual
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt junit.framework.Assert.assertNotNull(java.lang.Object):::ENTER
ppt-type enter
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNotNull(java.lang.Object):::EXIT251
ppt-type subexit
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNotNull(java.lang.String, java.lang.Object):::EXIT259
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNull(java.lang.Object):::ENTER
ppt-type enter
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNull(java.lang.Object):::EXIT272
ppt-type subexit
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNull(java.lang.String, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNull(java.lang.String, java.lang.Object):::EXIT280
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3
variable object
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable object.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args object
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT288
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT291
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertSame(java.lang.Object, java.lang.Object):::EXIT299
ppt-type subexit
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNotSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT310
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.assertNotSame(java.lang.Object, java.lang.Object):::EXIT318
ppt-type subexit
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.failSame(java.lang.String):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3

ppt junit.framework.Assert.failSame(java.lang.String):::EXIT323
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 3

ppt junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.failNotSame(java.lang.String, java.lang.Object, java.lang.Object):::EXIT328
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.failNotEquals(java.lang.String, java.lang.Object, java.lang.Object):::EXIT332
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object):::ENTER
ppt-type enter
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.format(java.lang.String, java.lang.Object, java.lang.Object):::EXIT339
ppt-type subexit
variable message
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 4
variable message.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args message
  flags synthetic to_string
  comparability 5
variable expected
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable expected.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args expected
  flags synthetic classname non_null
  comparability 1
variable actual
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable actual.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args actual
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 7

ppt junit.framework.Assert.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.Assert
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.Assert
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt junit.framework.Assert.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type junit.framework.Assert
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt junit.framework.Assert.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type junit.framework.Assert
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt cz.matfyz.sykora.planning.ActionList:::CLASS
ppt-type class

ppt cz.matfyz.sykora.planning.ActionList:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt cz.matfyz.sykora.planning.ActionList.ActionList():::ENTER
ppt-type enter

ppt cz.matfyz.sykora.planning.ActionList.ActionList():::EXIT30
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt cz.matfyz.sykora.planning.ActionList.getPreconditions():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt cz.matfyz.sykora.planning.ActionList.getPreconditions():::EXIT45
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 2
variable return.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable return.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[6]
variable return.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.predicates[]
  flags synthetic classname non_null
  comparability 1[7]

ppt cz.matfyz.sykora.planning.ActionList.getPureList():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param non_null
  comparability 2

ppt cz.matfyz.sykora.planning.ActionList.getPureList():::EXIT61
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 2

ppt cz.matfyz.sykora.planning.Action:::CLASS
ppt-type class
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.Action:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 5
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.Action.compareTo(cz.matfyz.sykora.planning.Action):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 16
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[19]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[21]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[23]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[25]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 15
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[27]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[29]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[31]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[33]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[34]

ppt cz.matfyz.sykora.planning.Action.compareTo(cz.matfyz.sykora.planning.Action):::EXIT78
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 17
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[20]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[22]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[24]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[26]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 15
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[28]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[30]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[32]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[34]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 16

ppt cz.matfyz.sykora.planning.Action.compareTo(cz.matfyz.sykora.planning.Action):::EXIT81
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 17
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[20]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[22]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[24]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[26]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 15
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[28]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[30]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[32]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[34]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 16

ppt cz.matfyz.sykora.planning.Action.compareTo(cz.matfyz.sykora.planning.Action):::EXIT84
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 17
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[20]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[22]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[24]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[26]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 15
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[28]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[30]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[32]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[34]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 16

ppt cz.matfyz.sykora.planning.Action.compareTo(cz.matfyz.sykora.planning.Action):::EXIT87
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 17
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[20]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[22]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[24]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[26]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 15
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[28]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[30]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[32]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[34]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 16

ppt cz.matfyz.sykora.planning.Action.compareTo(cz.matfyz.sykora.planning.Action):::EXIT88
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 17
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[20]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[22]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[24]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[26]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 15
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[28]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[30]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[32]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[34]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 16

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 5
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::EXIT100
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::EXIT103
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::EXIT105
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::EXIT108
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::EXIT110
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::EXIT113
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::EXIT115
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::EXIT118
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.Action.equals(java.lang.Object):::EXIT119
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.Action.findPossibleInstances(cz.matfyz.sykora.planning.graph.PredicateLayer, java.util.Set):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 13
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 19
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[23]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 21
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 22
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[25]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[27]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[29]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 10
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 6
variable arg0.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 3
variable arg0.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 5
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[31]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable arg1
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 9
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.Action.findPossibleInstances(cz.matfyz.sykora.planning.graph.PredicateLayer, java.util.Set):::EXIT134
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 13
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 19
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[23]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 21
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 22
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[25]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[27]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[29]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 10
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 6
variable arg0.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 3
variable arg0.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 5
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[31]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable arg1
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 9
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.Action.findPossibleInstances(cz.matfyz.sykora.planning.graph.PredicateLayer, java.util.Set, java.util.Map):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 12
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[21]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 19
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[23]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[25]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 15
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 16
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[27]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 5
variable arg0.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 3
variable arg0.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[29]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable arg1
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 7
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable arg2
  var-kind variable
  dec-type java.util.Map
  rep-type hashcode
  flags is_param
  comparability 8
variable arg2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg2
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.Action.findPossibleInstances(cz.matfyz.sykora.planning.graph.PredicateLayer, java.util.Set, java.util.Map):::EXIT150
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 13
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[22]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 20
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[24]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[26]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[28]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 10
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 6
variable arg0.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 3
variable arg0.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 5
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[30]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg1
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 8
variable arg1.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1
  flags synthetic classname non_null
  comparability 1
variable arg2
  var-kind variable
  dec-type java.util.Map
  rep-type hashcode
  flags is_param
  comparability 9
variable arg2.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg2
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.Action.findPossibleInstances(cz.matfyz.sykora.planning.graph.PredicateLayer, int, int, java.util.Set, java.util.Map):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 13
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[22]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 20
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[24]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[26]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[28]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 10
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 5
variable arg0.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 3
variable arg0.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[30]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 7
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 7
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 8
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type java.util.Map
  rep-type hashcode
  flags is_param
  comparability 9
variable arg4.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg4
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.Action.findPossibleInstances(cz.matfyz.sykora.planning.graph.PredicateLayer, int, int, java.util.Set, java.util.Map):::EXIT183
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 13
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[22]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 20
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[24]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[26]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[28]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 10
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 5
variable arg0.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 3
variable arg0.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[30]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 7
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 7
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 8
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type java.util.Map
  rep-type hashcode
  flags is_param
  comparability 9
variable arg4.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg4
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.Action.findPossibleInstances(cz.matfyz.sykora.planning.graph.PredicateLayer, int, int, java.util.Set, java.util.Map):::EXIT207
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 13
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[22]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 20
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[24]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[26]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[28]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 10
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 5
variable arg0.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 3
variable arg0.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[30]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 7
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 7
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 8
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type java.util.Map
  rep-type hashcode
  flags is_param
  comparability 9
variable arg4.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg4
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.Action.getActionName():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 5
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.Action.getActionName():::EXIT216
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 4

ppt cz.matfyz.sykora.planning.Action.getNegativeEffects():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 5
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.Action.getNegativeEffects():::EXIT228
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 8
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable return.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[23]
variable return.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.predicates[]
  flags synthetic classname non_null
  comparability 1[24]

ppt cz.matfyz.sykora.planning.Action.getPositiveEffects():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 5
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.Action.getPositiveEffects():::EXIT240
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 8
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable return.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[23]
variable return.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.predicates[]
  flags synthetic classname non_null
  comparability 1[24]

ppt cz.matfyz.sykora.planning.Action.getPreconditions():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 5
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.Action.getPreconditions():::EXIT252
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 8
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable return.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[23]
variable return.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.predicates[]
  flags synthetic classname non_null
  comparability 1[24]

ppt cz.matfyz.sykora.planning.Action.groundedClone():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 5
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.Action.groundedClone():::EXIT279
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 18
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 19
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 25
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 26
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[29]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 27
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[31]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 20
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[33]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 23
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[35]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 5
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[37]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 15
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 16
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 17[39]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[40]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[41]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[43]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[44]

ppt cz.matfyz.sykora.planning.Action.isGrounded():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 5
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[15]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[17]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[19]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[21]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.Action.isGrounded():::EXIT289
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt cz.matfyz.sykora.planning.Action.noOpAction(cz.matfyz.sykora.planning.predicate.Predicate):::ENTER
ppt-type enter
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 11
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg0.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[13]
variable arg0.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.parameters[]
  flags synthetic classname non_null
  comparability 1[14]
variable arg0.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[15]
variable arg0.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.parameters[].boundValue
  flags synthetic to_string
  comparability 6[16]
variable arg0.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[17]
variable arg0.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[18]
variable arg0.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg0.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.predicateName
  flags synthetic to_string
  comparability 10
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 12

ppt cz.matfyz.sykora.planning.Action.noOpAction(cz.matfyz.sykora.planning.predicate.Predicate):::EXIT365
ppt-type subexit
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 11
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg0.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[28]
variable arg0.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.parameters[]
  flags synthetic classname non_null
  comparability 1[29]
variable arg0.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[30]
variable arg0.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.parameters[].boundValue
  flags synthetic to_string
  comparability 6[31]
variable arg0.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[32]
variable arg0.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[33]
variable arg0.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg0.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.predicateName
  flags synthetic to_string
  comparability 10
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 12
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 13
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 14
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 15
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 22
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[34]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 25
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 26
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 27[36]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[37]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[38]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 19
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[40]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[41]

ppt cz.matfyz.sykora.planning.Action.parse(java.lang.String):::ENTER
ppt-type enter
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.Action.parse(java.lang.String):::EXIT380
ppt-type subexit
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 5
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 7
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[20]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[22]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[24]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 13[26]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]

ppt cz.matfyz.sykora.planning.Action.parse(java.lang.String):::EXIT385
ppt-type subexit
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 5
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 7
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[20]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[22]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[24]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 13[26]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]

ppt cz.matfyz.sykora.planning.Action.parse(java.lang.String):::EXIT390
ppt-type subexit
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 5
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 7
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[20]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[22]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[24]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 13[26]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]

ppt cz.matfyz.sykora.planning.Action.Action(java.lang.String, cz.matfyz.sykora.planning.predicate.PredicateSet, cz.matfyz.sykora.planning.predicate.PredicateSet, cz.matfyz.sykora.planning.predicate.PredicateSet):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[11]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[12]
variable arg2
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 7
variable arg2.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable arg2.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[13]
variable arg2.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg2.predicates[]
  flags synthetic classname non_null
  comparability 1[14]
variable arg3
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 9
variable arg3.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable arg3.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[15]
variable arg3.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg3.predicates[]
  flags synthetic classname non_null
  comparability 1[16]

ppt cz.matfyz.sykora.planning.Action.Action(java.lang.String, cz.matfyz.sykora.planning.predicate.PredicateSet, cz.matfyz.sykora.planning.predicate.PredicateSet, cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT409
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 12
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 13
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 4
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 11
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 4
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[24]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable arg2
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 7
variable arg2.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable arg2.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[26]
variable arg2.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg2.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable arg3
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 9
variable arg3.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable arg3.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[28]
variable arg3.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg3.predicates[]
  flags synthetic classname non_null
  comparability 1[29]

ppt cz.matfyz.sykora.planning.Action.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 6
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[16]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[18]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[19]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[20]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[22]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.Action.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.actionName
  flags synthetic to_string
  comparability 7
variable this.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[17]
variable this.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 15
variable this.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 16
variable this.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[19]
variable this.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[21]
variable this.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable this.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[23]
variable this.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.PredicateParser:::CLASS
ppt-type class
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.PredicateParser:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 7
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 8
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 10
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.getChar():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 7
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 8
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 10
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.getChar():::EXIT290
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 6

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.getChar():::EXIT294
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 6

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 7
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 8
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 10
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT313
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT323
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT331
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT340
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT342
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT344
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT346
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT350
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT353
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT358
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT361
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT377
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.nextToken():::EXIT380
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 6
variable return.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable return.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.tokenText
  flags synthetic to_string
  comparability 8
variable return.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parse():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 7
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 8
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 10
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parse():::EXIT398
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type java.lang.Object
  rep-type hashcode
  comparability 6
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parse():::EXIT415
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type java.lang.Object
  rep-type hashcode
  comparability 6
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parse():::EXIT418
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable return
  var-kind return
  dec-type java.lang.Object
  rep-type hashcode
  comparability 6
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parseAction():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 7
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 8
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 10
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parseAction():::EXIT436
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 22
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 23
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 24
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 25
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 26
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 3
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[28]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[29]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 27
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 7
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 9
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[30]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 19
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[32]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[34]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[36]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[37]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parseAction(java.util.Hashtable):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 3
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable arg0
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parseAction(java.util.Hashtable):::EXIT455
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 23
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 24
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 25
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 26
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 27
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 5[29]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 28
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable arg0
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 8
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 10
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[31]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 20
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[33]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 13[35]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parseAction(java.util.Hashtable):::EXIT462
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 23
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 24
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 25
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 26
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 27
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 5[29]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 28
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable arg0
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 8
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 10
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[31]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 20
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[33]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 13[35]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parseAction(java.lang.String, java.util.Hashtable):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 10
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 11
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 13
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 6[15]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 14
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parseAction(java.lang.String, java.util.Hashtable):::EXIT565
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 24
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 25
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 26
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 27
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 28
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 7[30]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[31]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 29
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 4
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 10
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 11
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[32]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 21
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 22
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 23[34]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[36]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[37]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 15
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 16
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 17[38]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 7
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 8
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 10
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate():::EXIT579
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 17
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 18
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 20
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 3
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[22]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 21
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 7
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 8
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 9[24]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[25]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 10[26]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 11[27]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 12[28]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 13[29]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 14
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 15
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate(boolean):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 3
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable arg0
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate(boolean):::EXIT594
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 18
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 19
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 21
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 5[23]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 22
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable arg0
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 8
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 9
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 10[25]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[26]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 11[27]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 12[28]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 13[29]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 14[30]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 15
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 16
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate(java.util.Hashtable, boolean):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 9
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 12
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 5[14]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[15]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 13
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable arg0
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate(java.util.Hashtable, boolean):::EXIT604
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 18
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 19
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 20
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 21
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 22
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 6[24]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 23
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg0
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 9
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 10
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 11[26]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[27]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 12[28]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 13[29]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 14[30]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 15[31]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 16
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 17
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate(java.util.Hashtable, boolean):::EXIT609
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 18
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 19
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 20
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 21
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 22
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 6[24]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 23
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg0
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 3
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 9
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 10
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 11[26]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[27]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 12[28]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 13[29]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 14[30]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 15[31]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 16
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 17
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate(java.lang.String, java.util.Hashtable, boolean):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 11
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 12
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 14
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 7[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 15
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 4
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate(java.lang.String, java.util.Hashtable, boolean):::EXIT643
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 20
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 21
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 22
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 23
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 8[25]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 24
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 10
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 4
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 11
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 12
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 13[27]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[28]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 14[29]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 15[30]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 16[31]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 17[32]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 18
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate(java.lang.String, java.util.Hashtable, boolean):::EXIT685
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 20
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 21
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 22
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 23
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 8[25]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 24
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 10
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 4
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 11
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 12
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 13[27]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[28]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 14[29]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 15[30]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 16[31]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 17[32]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 18
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.parsePredicate(java.lang.String, java.util.Hashtable, boolean):::EXIT692
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 20
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 21
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 22
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 23
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 8[25]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 24
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 10
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type java.util.Hashtable
  rep-type hashcode
  flags is_param
  comparability 4
variable arg2
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 5
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 11
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 12
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 13[27]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[28]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 14[29]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 15[30]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 16[31]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 17[32]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 18
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.pushChar(int):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 3
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.pushChar(int):::EXIT706
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 3
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.pushToken(cz.matfyz.sykora.planning.predicate.PredicateParser$Token):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 10
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 2
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 7[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.tokenText
  flags synthetic to_string
  comparability 4
variable arg0.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.pushToken(cz.matfyz.sykora.planning.predicate.PredicateParser$Token):::EXIT718
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 10
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 2
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 7[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.tokenText
  flags synthetic to_string
  comparability 4
variable arg0.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.skipWhiteSpace():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 7
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 8
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 10
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.skipWhiteSpace():::EXIT733
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 7
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 8
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 10
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.PredicateParser(java.io.Reader):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.io.Reader
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.PredicateParser(java.io.Reader):::EXIT743
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 2
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 8
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 10
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 3
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable arg0
  var-kind variable
  dec-type java.io.Reader
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.PredicateParser(java.lang.String):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.PredicateParser(java.lang.String):::EXIT753
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 9
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 12
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 5[14]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[15]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 13
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 7
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 6
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 9
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 12
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[14]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[15]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 13
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 6
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 7

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 8
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 9
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 11
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 6
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser
  rep-type hashcode
  flags is_param non_null
  comparability 8
variable this.inputReader
  var-kind field inputReader
  dec-type java.io.Reader
  rep-type hashcode
  comparability 9
variable this.inputReader.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.inputReader
  flags synthetic classname non_null
  comparability 1
variable this.pushed
  var-kind field pushed
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  comparability 10
variable this.pushed.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.pushed.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.pushed.tokenText
  flags synthetic to_string
  comparability 12
variable this.pushed.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[14]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[15]
variable this.pushedChar
  var-kind field pushedChar
  dec-type int
  rep-type int
  comparability 13
variable cz.matfyz.sykora.planning.predicate.PredicateParser.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 6
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 7

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type:::CLASS
ppt-type class
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[11]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[12]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[12]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[13]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.values():::ENTER
ppt-type enter
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[8]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[9]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.values():::EXIT149
ppt-type subexit
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[6]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[7]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  comparability 5
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable return[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[8]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.valueOf(java.lang.String):::ENTER
ppt-type enter
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 5[13]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[14]
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.valueOf(java.lang.String):::EXIT149
ppt-type subexit
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 5[14]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[15]
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 13

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.Type(java.lang.String, int):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.Type(java.lang.String, int):::EXIT149
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags is_param non_null
  comparability 14
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 11
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 13
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 12
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 6[15]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[16]
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable arg1
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token:::CLASS
ppt-type class

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 11
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 13
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[14]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[15]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.getTokenText():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 7
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[8]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[9]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.getTokenText():::EXIT202
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 8
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[9]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[10]
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 6

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.getTokenType():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 7
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[8]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[9]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.getTokenType():::EXIT211
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 7
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[8]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.Token(cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags is_param
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 3
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[5]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[6]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.Token(cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type):::EXIT231
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 7
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 3
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 4[8]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[9]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags is_param
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.Token(cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type, java.lang.String):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags is_param
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 6[7]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[8]
variable arg1
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1
  flags synthetic to_string
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.Token(cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type, java.lang.String):::EXIT255
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 7
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 8
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 6[9]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[10]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1
  flags synthetic to_string
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 12
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 14
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[15]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[16]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 11
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 13
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 14
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 15
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 11
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 12

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 12
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 14
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[15]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[16]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 11
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$Token.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token
  rep-type hashcode
  flags is_param non_null
  comparability 13
variable this.tokenText
  var-kind field tokenText
  dec-type java.lang.String
  rep-type hashcode
  comparability 14
variable this.tokenText.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.tokenText
  flags synthetic to_string
  comparability 15
variable this.tokenType
  var-kind field tokenType
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.IDENTIFIER
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 7
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.LEFT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 8
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.RIGHT_PARENTHESIS
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 10
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.COMMA
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.DOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.QUADDOT
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 9
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.ARROW
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type
  rep-type hashcode
  flags nomod
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type[]
  rep-type hashcode[]
  comparability 3[16]
variable cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.predicate.PredicateParser$Token$Type.$VALUES[]
  flags synthetic classname non_null
  comparability 1[17]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 11
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 12

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$1:::CLASS
ppt-type class
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[4]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$1:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$1
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[5]

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$1.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$1
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[6]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$1.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$1
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[7]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$1.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$1
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[6]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.PredicateParser$1.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateParser$1
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type
  var-kind variable
  dec-type int[]
  rep-type hashcode
  flags nomod
  comparability 2
variable cz.matfyz.sykora.planning.predicate.PredicateParser$1.$SwitchMap$cz$matfyz$sykora$planning$predicate$PredicateParser$Token$Type[..]
  var-kind array
  array 1
  dec-type int[]
  rep-type int[]
  comparability 3[7]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 4
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.ValueBinding:::CLASS
ppt-type class
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 3[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.addDistinctBinding(cz.matfyz.sykora.planning.predicate.ValueBinding):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 12
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 13
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[16]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 14
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 15[18]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[19]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.boundValue
  flags synthetic to_string
  comparability 4
variable arg0.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 5
variable arg0.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 6[20]
variable arg0.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[21]
variable arg0.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable arg0.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[22]
variable arg0.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[23]

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.addDistinctBinding(cz.matfyz.sykora.planning.predicate.ValueBinding):::EXIT76
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 12
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 13
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[16]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 14
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 15[18]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[19]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.boundValue
  flags synthetic to_string
  comparability 4
variable arg0.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 5
variable arg0.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 6[20]
variable arg0.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[21]
variable arg0.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable arg0.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[22]
variable arg0.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[23]

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.addDistinctBinding(cz.matfyz.sykora.planning.predicate.ValueBinding):::EXIT79
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 12
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 13
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[16]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 14
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 15[18]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[19]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.boundValue
  flags synthetic to_string
  comparability 4
variable arg0.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 5
variable arg0.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 6[20]
variable arg0.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[21]
variable arg0.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable arg0.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[22]
variable arg0.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[23]

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.addDistinctBinding(cz.matfyz.sykora.planning.predicate.ValueBinding):::EXIT81
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 12
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 13
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[16]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 14
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 15[18]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[19]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.boundValue
  flags synthetic to_string
  comparability 4
variable arg0.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 5
variable arg0.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 6[20]
variable arg0.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[21]
variable arg0.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable arg0.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[22]
variable arg0.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[23]

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.bind(java.lang.String):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 5[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.bind(java.lang.String):::EXIT102
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 7
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 6[11]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 9
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[13]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[14]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.bind(java.lang.String):::EXIT107
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 7
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 6[11]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 9
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[13]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[14]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.bind(java.lang.String):::EXIT113
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 7
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 6[11]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 9
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[13]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[14]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 5

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.bind(cz.matfyz.sykora.planning.predicate.ValueBinding):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 10
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 11
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[14]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[15]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 12
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 13[16]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[17]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.boundValue
  flags synthetic to_string
  comparability 4
variable arg0.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 5
variable arg0.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[18]
variable arg0.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[19]
variable arg0.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable arg0.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 7[20]
variable arg0.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[21]

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.bind(cz.matfyz.sykora.planning.predicate.ValueBinding):::EXIT132
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 11
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 12
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[15]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 13
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 14[17]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[18]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.boundValue
  flags synthetic to_string
  comparability 4
variable arg0.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 5
variable arg0.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[19]
variable arg0.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[20]
variable arg0.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable arg0.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 7[21]
variable arg0.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[22]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.bind(cz.matfyz.sykora.planning.predicate.ValueBinding):::EXIT134
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 11
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 12
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[15]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 13
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 14[17]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[18]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.boundValue
  flags synthetic to_string
  comparability 4
variable arg0.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 5
variable arg0.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[19]
variable arg0.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[20]
variable arg0.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable arg0.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 7[21]
variable arg0.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[22]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.bind(cz.matfyz.sykora.planning.predicate.ValueBinding):::EXIT140
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 11
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 12
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[15]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 13
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 14[17]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[18]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 8
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.boundValue
  flags synthetic to_string
  comparability 4
variable arg0.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 5
variable arg0.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[19]
variable arg0.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[20]
variable arg0.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable arg0.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 7[21]
variable arg0.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[22]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 9

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.clear():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 3[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.clear():::EXIT152
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 3[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.clear():::EXIT156
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 3[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.equals(java.lang.Object):::EXIT171
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.equals(java.lang.Object):::EXIT174
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.equals(java.lang.Object):::EXIT176
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.equals(java.lang.Object):::EXIT179
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.equals(java.lang.Object):::EXIT182
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 2[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.initialize():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 3[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.initialize():::EXIT193
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 3[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.getValue():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 3[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.getValue():::EXIT204
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 5[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 4

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.isBound():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 3[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.isBound():::EXIT214
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 4[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.setValue(java.lang.String):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 5[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.setValue(java.lang.String):::EXIT227
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 5[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.ValueBinding():::ENTER
ppt-type enter

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.ValueBinding():::EXIT235
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 5
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 6
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 3[9]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[10]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 8[11]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.ValueBinding(java.lang.String):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.ValueBinding(java.lang.String):::EXIT245
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 5[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 6
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 7
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 4[10]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[11]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 9[12]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[13]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.predicate.ValueBinding.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.boundValue
  var-kind field boundValue
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.boundValue.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.boundValue
  flags synthetic to_string
  comparability 7
variable this.dependentBindings
  var-kind field dependentBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 8
variable this.dependentBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 5[11]
variable this.dependentBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.dependentBindings[]
  flags synthetic classname non_null
  comparability 1[12]
variable this.distinctBindings
  var-kind field distinctBindings
  dec-type java.util.LinkedList
  rep-type hashcode
  comparability 9
variable this.distinctBindings[..]
  var-kind array
  array 1
  dec-type java.util.LinkedList
  rep-type hashcode[]
  comparability 10[13]
variable this.distinctBindings[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.distinctBindings[]
  flags synthetic classname non_null
  comparability 1[14]
variable cz.matfyz.sykora.planning.predicate.ValueBinding.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.PlanningProblem:::CLASS
ppt-type class
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.PlanningProblem:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.buildNextLayer():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.buildNextLayer():::EXIT276
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 30
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 33
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 34
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 31
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 32
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 49
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 50
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 51[58]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[59]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 52
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 35
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 36
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[60]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[61]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 40
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 39
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 43
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 45
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 44
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[62]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[63]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 48
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[64]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[65]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[66]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[67]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[68]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[69]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 57
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 55
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 56[70]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[71]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 53
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 54[72]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[73]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 16
variable return.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 17
variable return.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable return.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[74]
variable return.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.actions.actions[]
  flags synthetic classname non_null
  comparability 1[75]
variable return.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 21
variable return.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 20
variable return.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 24
variable return.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable return.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 25
variable return.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable return.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[76]
variable return.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[77]
variable return.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 29
variable return.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.support
  flags synthetic classname non_null
  comparability 1
variable return.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 22
variable return.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 23[78]
variable return.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.noGoods[]
  flags synthetic classname non_null
  comparability 1[79]

ppt cz.matfyz.sykora.planning.PlanningProblem.findSerialPlan():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.findSerialPlan():::EXIT289
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.findSerialPlan():::EXIT292
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.findPredicateAction(cz.matfyz.sykora.planning.PlanningProblem$BiLayer, cz.matfyz.sykora.planning.predicate.PredicateSet, int, java.util.Set, cz.matfyz.sykora.planning.ActionList, int):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 35
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 38
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 39
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 36
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 37
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[59]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[60]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 54
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 40
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 41
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[61]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[62]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 45
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 44
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 48
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 50
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 49
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 51
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 52[63]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[64]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 53
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[65]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[66]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 26
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 23
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 24
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 28
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 29
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 27
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 34
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[67]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[68]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[69]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[70]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 58
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 56
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 57[71]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[72]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 55
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[73]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[74]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 3
variable arg0.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg0.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[75]
variable arg0.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.actions.actions[]
  flags synthetic classname non_null
  comparability 1[76]
variable arg0.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 7
variable arg0.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 6
variable arg0.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 10
variable arg0.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 12
variable arg0.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 11
variable arg0.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[77]
variable arg0.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[78]
variable arg0.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 15
variable arg0.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.support
  flags synthetic classname non_null
  comparability 1
variable arg0.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable arg0.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[79]
variable arg0.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.noGoods[]
  flags synthetic classname non_null
  comparability 1[80]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 16
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[81]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[82]
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 19
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param
  comparability 20
variable arg5
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18

ppt cz.matfyz.sykora.planning.PlanningProblem.findPredicateAction(cz.matfyz.sykora.planning.PlanningProblem$BiLayer, cz.matfyz.sykora.planning.predicate.PredicateSet, int, java.util.Set, cz.matfyz.sykora.planning.ActionList, int):::EXIT327
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 35
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 38
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 39
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 36
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 37
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[59]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[60]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 54
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 40
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 41
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[61]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[62]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 45
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 44
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 48
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 50
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 49
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 51
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 52[63]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[64]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 53
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[65]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[66]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 26
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 23
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 24
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 28
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 29
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 27
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 34
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[67]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[68]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[69]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[70]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 58
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 56
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 57[71]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[72]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 55
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[73]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[74]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 3
variable arg0.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg0.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[75]
variable arg0.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.actions.actions[]
  flags synthetic classname non_null
  comparability 1[76]
variable arg0.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 7
variable arg0.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 6
variable arg0.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 10
variable arg0.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 12
variable arg0.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 11
variable arg0.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[77]
variable arg0.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[78]
variable arg0.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 15
variable arg0.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.support
  flags synthetic classname non_null
  comparability 1
variable arg0.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable arg0.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[79]
variable arg0.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.noGoods[]
  flags synthetic classname non_null
  comparability 1[80]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 16
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[81]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[82]
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 19
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param
  comparability 20
variable arg5
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 20

ppt cz.matfyz.sykora.planning.PlanningProblem.findPredicateAction(cz.matfyz.sykora.planning.PlanningProblem$BiLayer, cz.matfyz.sykora.planning.predicate.PredicateSet, int, java.util.Set, cz.matfyz.sykora.planning.ActionList, int):::EXIT332
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 35
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 38
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 39
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 36
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 37
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[59]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[60]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 54
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 40
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 41
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[61]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[62]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 45
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 44
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 48
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 50
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 49
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 51
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 52[63]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[64]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 53
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[65]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[66]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 26
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 23
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 24
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 28
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 29
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 27
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 34
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[67]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[68]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[69]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[70]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 58
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 56
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 57[71]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[72]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 55
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[73]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[74]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 3
variable arg0.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg0.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[75]
variable arg0.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.actions.actions[]
  flags synthetic classname non_null
  comparability 1[76]
variable arg0.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 7
variable arg0.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 6
variable arg0.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 10
variable arg0.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 12
variable arg0.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 11
variable arg0.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[77]
variable arg0.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[78]
variable arg0.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 15
variable arg0.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.support
  flags synthetic classname non_null
  comparability 1
variable arg0.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable arg0.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[79]
variable arg0.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.noGoods[]
  flags synthetic classname non_null
  comparability 1[80]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 16
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[81]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[82]
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 19
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param
  comparability 20
variable arg5
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 20

ppt cz.matfyz.sykora.planning.PlanningProblem.findPredicateAction(cz.matfyz.sykora.planning.PlanningProblem$BiLayer, cz.matfyz.sykora.planning.predicate.PredicateSet, int, java.util.Set, cz.matfyz.sykora.planning.ActionList, int):::EXIT334
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 35
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 38
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 39
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 36
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 37
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[59]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[60]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 54
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 40
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 41
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[61]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[62]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 45
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 44
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 48
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 50
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 49
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 51
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 52[63]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[64]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 53
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[65]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[66]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 26
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 23
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 24
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 28
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 29
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 27
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 34
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[67]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[68]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[69]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[70]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 58
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 56
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 57[71]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[72]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 55
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[73]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[74]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 3
variable arg0.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg0.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[75]
variable arg0.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.actions.actions[]
  flags synthetic classname non_null
  comparability 1[76]
variable arg0.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 7
variable arg0.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 6
variable arg0.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 10
variable arg0.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 12
variable arg0.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 11
variable arg0.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[77]
variable arg0.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[78]
variable arg0.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 15
variable arg0.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.support
  flags synthetic classname non_null
  comparability 1
variable arg0.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable arg0.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[79]
variable arg0.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.noGoods[]
  flags synthetic classname non_null
  comparability 1[80]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 16
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[81]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[82]
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 19
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param
  comparability 20
variable arg5
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 20

ppt cz.matfyz.sykora.planning.PlanningProblem.findPredicateAction(cz.matfyz.sykora.planning.PlanningProblem$BiLayer, cz.matfyz.sykora.planning.predicate.PredicateSet, int, java.util.Set, cz.matfyz.sykora.planning.ActionList, int):::EXIT358
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 35
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 38
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 39
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 36
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 37
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[59]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[60]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 54
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 40
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 41
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[61]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[62]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 45
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 44
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 48
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 50
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 49
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 51
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 52[63]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[64]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 53
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[65]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[66]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 26
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 23
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 24
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 28
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 29
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 27
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 34
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[67]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[68]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[69]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[70]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 58
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 56
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 57[71]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[72]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 55
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[73]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[74]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 3
variable arg0.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg0.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[75]
variable arg0.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.actions.actions[]
  flags synthetic classname non_null
  comparability 1[76]
variable arg0.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 7
variable arg0.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 6
variable arg0.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 10
variable arg0.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 12
variable arg0.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 11
variable arg0.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[77]
variable arg0.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[78]
variable arg0.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 15
variable arg0.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.support
  flags synthetic classname non_null
  comparability 1
variable arg0.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable arg0.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[79]
variable arg0.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.noGoods[]
  flags synthetic classname non_null
  comparability 1[80]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 16
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[81]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[82]
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 19
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param
  comparability 20
variable arg5
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 20

ppt cz.matfyz.sykora.planning.PlanningProblem.findPredicateAction(cz.matfyz.sykora.planning.PlanningProblem$BiLayer, cz.matfyz.sykora.planning.predicate.PredicateSet, int, java.util.Set, cz.matfyz.sykora.planning.ActionList, int):::EXIT364
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 35
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 38
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 39
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 36
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 37
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[59]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[60]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 54
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 40
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 41
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[61]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[62]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 45
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 44
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 48
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 50
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 49
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 51
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 52[63]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[64]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 53
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[65]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[66]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 26
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 23
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 24
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 28
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 29
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 27
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 34
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[67]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[68]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[69]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[70]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 58
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 56
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 57[71]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[72]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 55
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[73]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[74]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 3
variable arg0.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg0.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[75]
variable arg0.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.actions.actions[]
  flags synthetic classname non_null
  comparability 1[76]
variable arg0.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 7
variable arg0.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 6
variable arg0.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 10
variable arg0.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 12
variable arg0.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 11
variable arg0.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[77]
variable arg0.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[78]
variable arg0.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 15
variable arg0.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.support
  flags synthetic classname non_null
  comparability 1
variable arg0.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable arg0.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[79]
variable arg0.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.noGoods[]
  flags synthetic classname non_null
  comparability 1[80]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 16
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[81]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[82]
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 19
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param
  comparability 20
variable arg5
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 20

ppt cz.matfyz.sykora.planning.PlanningProblem.findPredicateAction(cz.matfyz.sykora.planning.PlanningProblem$BiLayer, cz.matfyz.sykora.planning.predicate.PredicateSet, int, java.util.Set, cz.matfyz.sykora.planning.ActionList, int):::EXIT367
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 35
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 38
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 39
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 36
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 37
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[59]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[60]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 54
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 40
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 41
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[61]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[62]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 45
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 44
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 48
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 50
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 49
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 51
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 52[63]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[64]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 53
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[65]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[66]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 26
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 23
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 24
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 28
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 29
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 27
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 34
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[67]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[68]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[69]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[70]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 58
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 56
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 57[71]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[72]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 55
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[73]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[74]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 3
variable arg0.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg0.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[75]
variable arg0.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.actions.actions[]
  flags synthetic classname non_null
  comparability 1[76]
variable arg0.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 7
variable arg0.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 6
variable arg0.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 10
variable arg0.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 12
variable arg0.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 11
variable arg0.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[77]
variable arg0.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[78]
variable arg0.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 15
variable arg0.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.support
  flags synthetic classname non_null
  comparability 1
variable arg0.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable arg0.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[79]
variable arg0.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.noGoods[]
  flags synthetic classname non_null
  comparability 1[80]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 16
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[81]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[82]
variable arg2
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable arg3
  var-kind variable
  dec-type java.util.Set
  rep-type hashcode
  flags is_param
  comparability 19
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1
variable arg4
  var-kind variable
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  flags is_param
  comparability 20
variable arg5
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 18
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 20

ppt cz.matfyz.sykora.planning.PlanningProblem.findSerialPlanActions(int, cz.matfyz.sykora.planning.predicate.PredicateSet):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 20
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 23
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 24
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 21
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 22
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 25
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 30
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 35
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 34
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 38
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 31
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 32[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 19
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[61]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[62]

ppt cz.matfyz.sykora.planning.PlanningProblem.findSerialPlanActions(int, cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT390
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 21
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 24
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 25
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 22
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 23
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[46]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 40
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[48]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 34
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 36
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 35
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[50]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 39
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[52]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 19
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[56]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 45
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 44[58]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[59]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[60]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[61]
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[62]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[63]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 20

ppt cz.matfyz.sykora.planning.PlanningProblem.findSerialPlanActions(int, cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT393
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 21
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 24
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 25
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 22
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 23
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[46]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 40
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[48]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 34
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 36
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 35
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[50]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 39
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[52]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 19
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[56]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 45
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 44[58]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[59]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[60]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[61]
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[62]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[63]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 20

ppt cz.matfyz.sykora.planning.PlanningProblem.findSerialPlanActions(int, cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT397
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 21
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 24
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 25
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 22
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 23
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 3
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[46]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 40
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[48]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 34
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 36
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 35
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[50]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 39
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[52]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 19
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[56]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 6
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 45
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 44[58]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[59]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[60]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[61]
variable arg0
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[62]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[63]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 20

ppt cz.matfyz.sykora.planning.PlanningProblem.getLastActionLayer():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.getLastActionLayer():::EXIT410
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 23
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 26
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 27
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 24
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 25
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 42
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 44[51]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[52]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 45
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[53]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[54]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 36
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 38
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 37
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[55]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[56]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 41
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 35[57]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[58]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[59]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[60]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[61]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[62]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 50
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 48
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 49[63]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[64]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[65]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[66]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 16
variable return.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable return.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[67]
variable return.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.actions[]
  flags synthetic classname non_null
  comparability 1[68]
variable return.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 22
variable return.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 19
variable return.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 20
variable return.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 21

ppt cz.matfyz.sykora.planning.PlanningProblem.getLastLayers():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.getLastLayers():::EXIT424
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 30
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 33
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 34
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 31
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 32
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 49
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 50
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[56]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 51
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 35
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 36
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[58]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[59]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 40
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 39
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 43
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 45
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 44
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 46
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 47[60]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[61]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 48
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[62]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[63]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[64]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[65]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[66]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[67]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 55
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 53
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 54[68]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[69]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 52
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[70]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[71]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 16
variable return.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 17
variable return.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable return.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[72]
variable return.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.actions.actions[]
  flags synthetic classname non_null
  comparability 1[73]
variable return.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 21
variable return.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 20
variable return.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 24
variable return.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable return.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 25
variable return.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable return.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[74]
variable return.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[75]
variable return.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 29
variable return.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.support
  flags synthetic classname non_null
  comparability 1
variable return.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 22
variable return.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 23[76]
variable return.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.noGoods[]
  flags synthetic classname non_null
  comparability 1[77]

ppt cz.matfyz.sykora.planning.PlanningProblem.getLastPredicateLayer():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.getLastPredicateLayer():::EXIT437
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 21
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 24
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 25
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 22
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 23
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 40
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[48]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 42
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[50]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 34
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 36
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 35
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[52]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[53]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 39
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[54]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[56]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[58]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[59]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 47
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 45
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 46[60]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[61]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 44[62]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[63]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 16
variable return.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 19
variable return.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 17
variable return.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 18
variable return.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 18
variable return.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable return.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[64]
variable return.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.predicates[]
  flags synthetic classname non_null
  comparability 1[65]

ppt cz.matfyz.sykora.planning.PlanningProblem.initialize():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.initialize():::EXIT449
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.initialize(java.lang.String):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 18
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 21
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 22
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 20
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 37
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 38
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 39[46]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 40
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[48]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 35[50]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 36
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[52]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[56]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 45
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 44[58]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[59]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[60]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[61]
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.PlanningProblem.initialize(java.lang.String):::EXIT464
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 18
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 21
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 22
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 20
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 37
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 38
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 39[46]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 40
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[48]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 35[50]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 36
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[52]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[56]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 4
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 45
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 44[58]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[59]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[60]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[61]
variable arg0
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0
  flags synthetic to_string
  comparability 3

ppt cz.matfyz.sykora.planning.PlanningProblem.initialize(java.io.Reader):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 13[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable arg0
  var-kind variable
  dec-type java.io.Reader
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.PlanningProblem.initialize(java.io.Reader):::EXIT526
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 13[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable arg0
  var-kind variable
  dec-type java.io.Reader
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.PlanningProblem.initialize(java.lang.Iterable, cz.matfyz.sykora.planning.predicate.PredicateSet, cz.matfyz.sykora.planning.predicate.PredicateSet):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 23
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 26
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 27
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 24
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 25
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 42
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[50]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[52]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[53]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 36
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 38
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 37
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[54]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[55]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 41
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 35[56]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[58]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[59]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[60]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[61]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 49
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 47
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 48[62]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[63]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 45
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 46[64]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[65]
variable arg0
  var-kind variable
  dec-type java.lang.Iterable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[66]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[67]
variable arg2
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 6
variable arg2.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable arg2.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[68]
variable arg2.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg2.predicates[]
  flags synthetic classname non_null
  comparability 1[69]

ppt cz.matfyz.sykora.planning.PlanningProblem.initialize(java.lang.Iterable, cz.matfyz.sykora.planning.predicate.PredicateSet, cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT552
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 23
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 26
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 27
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 24
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 25
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 42
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[50]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[52]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[53]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 36
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 38
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 37
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[54]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[55]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 41
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 35[56]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[58]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[59]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[60]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[61]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 9
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 49
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 47
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 48[62]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[63]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 45
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 46[64]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[65]
variable arg0
  var-kind variable
  dec-type java.lang.Iterable
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 3
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[66]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[67]
variable arg2
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 6
variable arg2.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable arg2.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[68]
variable arg2.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg2.predicates[]
  flags synthetic classname non_null
  comparability 1[69]

ppt cz.matfyz.sykora.planning.PlanningProblem.isGoalsFulfilled():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.isGoalsFulfilled():::EXIT568
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 16
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.singleStep():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.singleStep():::EXIT586
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.singleStep():::EXIT594
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.singleStep():::EXIT597
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.singleStep():::EXIT598
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.solve():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.solve():::EXIT617
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.solve():::EXIT630
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.solve():::EXIT636
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.ActionList
  rep-type hashcode
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.verifyGoals():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 20
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 17
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 18
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 35
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 38
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 21
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 29
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 43
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 39
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 40[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]

ppt cz.matfyz.sykora.planning.PlanningProblem.verifyGoals():::EXIT653
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 16

ppt cz.matfyz.sykora.planning.PlanningProblem.PlanningProblem(boolean):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt cz.matfyz.sykora.planning.PlanningProblem.PlanningProblem(boolean):::EXIT664
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[44]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[46]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[48]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[50]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 13[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 2
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[56]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[57]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[58]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[59]
variable arg0
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags is_param
  comparability 2

ppt cz.matfyz.sykora.planning.PlanningProblem.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 16
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.PlanningProblem.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 18
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 21
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 22
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 20
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 37
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 38
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 39[46]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 40
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[48]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 35[50]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 36
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[52]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[56]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 45
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 44[58]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[59]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[60]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[61]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 16
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 17

ppt cz.matfyz.sykora.planning.PlanningProblem.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 17
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 20
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 21
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 18
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 19
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 36
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[45]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 39
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 22
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[47]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[49]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[51]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 44
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 42
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 43[57]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[59]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 16
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.PlanningProblem.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param non_null
  comparability 18
variable this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 21
variable this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOAL_STRING
  flags synthetic to_string
  comparability 22
variable this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.GOALS_STRING
  flags synthetic to_string
  comparability 20
variable this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 37
variable this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 38
variable this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 39[46]
variable this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[47]
variable this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 40
variable this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 23
variable this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.fixedPoint.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.fixedPoint.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[48]
variable this.fixedPoint.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.actions.actions[]
  flags synthetic classname non_null
  comparability 1[49]
variable this.fixedPoint.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.fixedPoint.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.fixedPoint.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.fixedPoint.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.fixedPoint.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.fixedPoint.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 35[50]
variable this.fixedPoint.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 36
variable this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[52]
variable this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[56]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[57]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 45
variable this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 43
variable this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 44[58]
variable this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[59]
variable this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[60]
variable this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.layers[]
  flags synthetic classname non_null
  comparability 1[61]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 16
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 17

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer:::CLASS
ppt-type class

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[35]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[39]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.addNoGood(cz.matfyz.sykora.planning.predicate.PredicateSet):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 22
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 26
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[38]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 30
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 29
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 28
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 33
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 35
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 34
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 19
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 19
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[40]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[41]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 37
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 31
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 32[42]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[49]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[50]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[52]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[53]

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.addNoGood(cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT163
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 22
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 26
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[38]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 30
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 29
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 28
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 33
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 35
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 34
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 19
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 19
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[40]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[41]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 37
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 31
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 32[42]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[49]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[50]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[51]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[52]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[53]

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.getActions():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[35]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[39]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.getActions():::EXIT172
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[35]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[39]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable return.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable return.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[49]
variable return.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.actions[]
  flags synthetic classname non_null
  comparability 1[50]
variable return.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable return.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable return.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable return.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.getNoGoodSize():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[35]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[39]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.getNoGoodSize():::EXIT181
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[36]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[37]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[38]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[40]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[49]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 23

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.getPredicates():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[35]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[39]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.getPredicates():::EXIT191
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 27
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[35]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 31
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 30
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 29
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 29
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 23
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 25
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 24
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 26
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 32
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 33[39]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 23
variable return.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 25
variable return.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 24
variable return.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable return.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable return.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 26
variable return.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[49]
variable return.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.predicates[]
  flags synthetic classname non_null
  comparability 1[50]

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.getSupport():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[35]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[39]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.getSupport():::EXIT200
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[35]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[37]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 23
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[39]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable return
  var-kind return
  dec-type java.util.Map
  rep-type hashcode
  comparability 23
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.isNoGood(cz.matfyz.sykora.planning.predicate.PredicateSet):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 23
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[35]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 25
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 30
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 31
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 33
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[37]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 34
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 28
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 29[39]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 2
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[49]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[50]

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.isNoGood(cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT218
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[36]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[37]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[38]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[40]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 2
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[49]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[50]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 23

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.isNoGood(cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT221
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[36]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[37]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[38]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[40]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 2
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[49]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[50]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 23

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.isNoGood(cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT222
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[36]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[37]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[38]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[40]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 2
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 11
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[49]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 5
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable arg0.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[50]
variable arg0.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.predicates[]
  flags synthetic classname non_null
  comparability 1[51]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 23

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.BiLayer(cz.matfyz.sykora.planning.PlanningProblem, cz.matfyz.sykora.planning.predicate.PredicateSet):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable arg0.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.GOAL_STRING
  flags synthetic to_string
  comparability 6
variable arg0.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.GOALS_STRING
  flags synthetic to_string
  comparability 4
variable arg0.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable arg0.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable arg0.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[25]
variable arg0.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable arg0.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 16
variable arg0.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 7
variable arg0.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 8
variable arg0.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 11
variable arg0.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 12
variable arg0.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable arg0.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[27]
variable arg0.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[28]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 2
variable arg0.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 21
variable arg0.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable arg0.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[29]
variable arg0.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.possibleActions[]
  flags synthetic classname non_null
  comparability 1[30]
variable arg0.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg0.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[31]
variable arg0.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.layers[]
  flags synthetic classname non_null
  comparability 1[32]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 24
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 22
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[33]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[34]

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.BiLayer(cz.matfyz.sykora.planning.PlanningProblem, cz.matfyz.sykora.planning.predicate.PredicateSet):::EXIT240
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 34
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 35
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 36
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 37[47]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[48]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 39
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 38
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 37
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 37
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 42
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 44
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 43
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 15
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 15
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 45
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[49]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 46
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 40
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 41[51]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 2
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 26
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 25
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 33
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 27
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 28
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 32
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 21
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[57]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[58]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 34[59]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[60]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 24
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable arg0.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.GOAL_STRING
  flags synthetic to_string
  comparability 6
variable arg0.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.GOALS_STRING
  flags synthetic to_string
  comparability 4
variable arg0.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable arg0.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable arg0.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[61]
variable arg0.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[62]
variable arg0.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 16
variable arg0.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 7
variable arg0.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 8
variable arg0.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 11
variable arg0.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 12
variable arg0.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable arg0.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[63]
variable arg0.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[64]
variable arg0.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 21
variable arg0.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable arg0.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[65]
variable arg0.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.possibleActions[]
  flags synthetic classname non_null
  comparability 1[66]
variable arg0.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg0.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[67]
variable arg0.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.layers[]
  flags synthetic classname non_null
  comparability 1[68]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  flags is_param
  comparability 22
variable arg1.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable arg1.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[69]
variable arg1.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.predicates[]
  flags synthetic classname non_null
  comparability 1[70]

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.BiLayer(cz.matfyz.sykora.planning.PlanningProblem, cz.matfyz.sykora.planning.graph.ActionLayer, cz.matfyz.sykora.planning.graph.PredicateLayer, java.util.Map):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable arg0.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.GOAL_STRING
  flags synthetic to_string
  comparability 6
variable arg0.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.GOALS_STRING
  flags synthetic to_string
  comparability 4
variable arg0.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable arg0.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable arg0.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[33]
variable arg0.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable arg0.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 16
variable arg0.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 7
variable arg0.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 8
variable arg0.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 11
variable arg0.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 12
variable arg0.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable arg0.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[35]
variable arg0.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[36]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 2
variable arg0.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 21
variable arg0.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable arg0.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[37]
variable arg0.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.possibleActions[]
  flags synthetic classname non_null
  comparability 1[38]
variable arg0.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg0.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[39]
variable arg0.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.layers[]
  flags synthetic classname non_null
  comparability 1[40]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 32
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  flags is_param
  comparability 22
variable arg1.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable arg1.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[41]
variable arg1.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.actions[]
  flags synthetic classname non_null
  comparability 1[42]
variable arg1.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable arg1.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable arg1.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 24
variable arg1.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 24
variable arg2
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  flags is_param
  comparability 27
variable arg2.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 29
variable arg2.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 28
variable arg2.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 15
variable arg2.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 15
variable arg2.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable arg2.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[43]
variable arg2.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg2.predicates[]
  flags synthetic classname non_null
  comparability 1[44]
variable arg3
  var-kind variable
  dec-type java.util.Map
  rep-type hashcode
  flags is_param
  comparability 31
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.BiLayer(cz.matfyz.sykora.planning.PlanningProblem, cz.matfyz.sykora.planning.graph.ActionLayer, cz.matfyz.sykora.planning.graph.PredicateLayer, java.util.Map):::EXIT254
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 18
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 22
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[43]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[44]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 24
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 24
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 27
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 29
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 28
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 15
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 15
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[45]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 31
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 41
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 42[47]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 2
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 34
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 33
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[49]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 16
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 35
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 36
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 39
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 40
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 37
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 38[51]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[52]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 21
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[53]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[54]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[55]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[56]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 32
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable arg0.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.GOAL_STRING
  flags synthetic to_string
  comparability 6
variable arg0.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.GOALS_STRING
  flags synthetic to_string
  comparability 4
variable arg0.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable arg0.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable arg0.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[57]
variable arg0.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[58]
variable arg0.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 16
variable arg0.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 7
variable arg0.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 8
variable arg0.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 11
variable arg0.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 12
variable arg0.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable arg0.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[59]
variable arg0.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[60]
variable arg0.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 21
variable arg0.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable arg0.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[61]
variable arg0.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.possibleActions[]
  flags synthetic classname non_null
  comparability 1[62]
variable arg0.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg0.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[63]
variable arg0.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.layers[]
  flags synthetic classname non_null
  comparability 1[64]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  flags is_param
  comparability 22
variable arg1.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable arg1.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[65]
variable arg1.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.actions[]
  flags synthetic classname non_null
  comparability 1[66]
variable arg1.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 26
variable arg1.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 25
variable arg1.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 24
variable arg1.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 24
variable arg2
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  flags is_param
  comparability 27
variable arg2.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 29
variable arg2.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 28
variable arg2.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 15
variable arg2.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 15
variable arg2.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable arg2.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[67]
variable arg2.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg2.predicates[]
  flags synthetic classname non_null
  comparability 1[68]
variable arg3
  var-kind variable
  dec-type java.util.Map
  rep-type hashcode
  flags is_param
  comparability 31
variable arg3.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg3
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[36]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[37]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[38]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[40]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[49]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 23
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 25
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 26
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 27[37]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 29
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 27
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 32
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 34
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 33
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 35
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[39]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[40]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 36
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[41]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[49]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[50]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 23
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 24

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 24
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 25
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 26[36]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[37]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 26
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 31
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 33
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 32
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 34
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[38]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 35
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 29
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 30[40]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[41]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[49]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 23
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.PlanningProblem$BiLayer.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  flags is_param non_null
  comparability 19
variable this.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 25
variable this.actions.actions
  var-kind field actions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 26
variable this.actions.actions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 27[37]
variable this.actions.actions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.actions.actions[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.actions.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 29
variable this.actions.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  comparability 28
variable this.actions.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 27
variable this.actions.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 27
variable this.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 32
variable this.predicates.mutexes
  var-kind field mutexes
  dec-type java.util.TreeSet
  rep-type hashcode
  comparability 34
variable this.predicates.isMutexHelperPair
  var-kind field isMutexHelperPair
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  comparability 33
variable this.predicates.isMutexHelperPair.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.isMutexHelperPair.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 16
variable this.predicates.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 35
variable this.predicates.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[39]
variable this.predicates.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.predicates.predicates[]
  flags synthetic classname non_null
  comparability 1[40]
variable this.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 36
variable this.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.support
  flags synthetic classname non_null
  comparability 1
variable this.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 30
variable this.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 31[41]
variable this.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.noGoods[]
  flags synthetic classname non_null
  comparability 1[42]
variable cz.matfyz.sykora.planning.PlanningProblem.this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.PlanningProblem
  rep-type hashcode
  flags non_null
  comparability 3
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  var-kind field GOAL_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOAL_STRING
  flags synthetic to_string
  comparability 7
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  var-kind field GOALS_STRING
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.GOALS_STRING
  flags synthetic to_string
  comparability 5
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals
  var-kind field goals
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[43]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.goals.predicates[]
  flags synthetic classname non_null
  comparability 1[44]
variable cz.matfyz.sykora.planning.PlanningProblem.this.goalsFulfiled
  var-kind field goalsFulfiled
  dec-type boolean
  rep-type boolean
  comparability 17
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint
  var-kind field fixedPoint
  dec-type cz.matfyz.sykora.planning.PlanningProblem$BiLayer
  rep-type hashcode
  comparability 8
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.actions
  var-kind field actions
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer
  rep-type hashcode
  comparability 9
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.predicates
  var-kind field predicates
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer
  rep-type hashcode
  comparability 12
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  var-kind field support
  dec-type java.util.Map
  rep-type hashcode
  comparability 13
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.support
  flags synthetic classname non_null
  comparability 1
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods
  var-kind field noGoods
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[45]
variable cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.fixedPoint.noGoods[]
  flags synthetic classname non_null
  comparability 1[46]
variable cz.matfyz.sykora.planning.PlanningProblem.this.verboseOutput
  var-kind field verboseOutput
  dec-type boolean
  rep-type boolean
  comparability 22
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions
  var-kind field possibleActions
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[47]
variable cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.possibleActions[]
  flags synthetic classname non_null
  comparability 1[48]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers
  var-kind field layers
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 19[49]
variable cz.matfyz.sykora.planning.PlanningProblem.this.layers[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args cz.matfyz.sykora.planning.PlanningProblem.this.layers[]
  flags synthetic classname non_null
  comparability 1[50]
variable cz.matfyz.sykora.planning.PlanningProblem.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 23
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 24

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair:::CLASS
ppt-type class

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 5
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 6[15]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 7[17]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 8[18]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[19]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[20]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 12
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 5
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 6[21]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[22]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 7[23]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 13[24]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[25]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[26]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 14

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.compareTo(cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[19]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[21]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 15[22]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[23]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[24]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 16
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 14
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[25]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[27]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 17[28]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[29]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[30]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 18
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.first.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[31]
variable arg0.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[]
  flags synthetic classname non_null
  comparability 1[32]
variable arg0.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[33]
variable arg0.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[].boundValue
  flags synthetic to_string
  comparability 7[34]
variable arg0.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[35]
variable arg0.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[36]
variable arg0.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.predicateName
  flags synthetic to_string
  comparability 11
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.second.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[37]
variable arg0.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[]
  flags synthetic classname non_null
  comparability 1[38]
variable arg0.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[39]
variable arg0.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[].boundValue
  flags synthetic to_string
  comparability 12[40]
variable arg0.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[41]
variable arg0.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[42]
variable arg0.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.predicateName
  flags synthetic to_string
  comparability 13

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.compareTo(cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair):::EXIT72
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[20]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[22]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 16[23]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[24]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[25]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 17
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 14
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[26]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[28]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 18[29]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[30]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[31]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 19
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.first.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[32]
variable arg0.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[]
  flags synthetic classname non_null
  comparability 1[33]
variable arg0.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[34]
variable arg0.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[].boundValue
  flags synthetic to_string
  comparability 7[35]
variable arg0.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[36]
variable arg0.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[37]
variable arg0.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.predicateName
  flags synthetic to_string
  comparability 11
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.second.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[38]
variable arg0.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[]
  flags synthetic classname non_null
  comparability 1[39]
variable arg0.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[40]
variable arg0.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[].boundValue
  flags synthetic to_string
  comparability 12[41]
variable arg0.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[42]
variable arg0.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[43]
variable arg0.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.predicateName
  flags synthetic to_string
  comparability 13
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 15

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.compareTo(cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair):::EXIT73
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[20]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[21]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[22]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 16[23]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[24]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[25]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 17
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 14
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[26]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[28]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 18[29]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[30]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[31]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 19
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.first.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[32]
variable arg0.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[]
  flags synthetic classname non_null
  comparability 1[33]
variable arg0.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[34]
variable arg0.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[].boundValue
  flags synthetic to_string
  comparability 7[35]
variable arg0.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[36]
variable arg0.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[37]
variable arg0.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.predicateName
  flags synthetic to_string
  comparability 11
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.second.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[38]
variable arg0.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[]
  flags synthetic classname non_null
  comparability 1[39]
variable arg0.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[40]
variable arg0.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[].boundValue
  flags synthetic to_string
  comparability 12[41]
variable arg0.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[42]
variable arg0.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[43]
variable arg0.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.predicateName
  flags synthetic to_string
  comparability 13
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 15

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 5
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 6
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 7[16]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 8[18]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 9[19]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[20]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[21]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 13
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 5
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 6
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 7[22]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 8[24]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 14[25]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[26]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[27]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 15
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.equals(java.lang.Object):::EXIT88
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 6
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 7
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 8[17]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 9[19]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 10[20]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[21]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 12[22]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 14
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 6
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 7
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 8[23]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 9[25]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 15[26]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[27]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 12[28]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 16
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.equals(java.lang.Object):::EXIT89
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 6
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 7
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 8[17]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 9[19]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 10[20]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[21]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 12[22]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 14
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 3
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 6
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 7
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 8[23]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 9[25]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 15[26]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[27]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 12[28]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 16
variable arg0
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.getFirst():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 5
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 6[15]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 7[17]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 8[18]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[19]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[20]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 12
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 5
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 6[21]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[22]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 7[23]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 13[24]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[25]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[26]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 14

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.getFirst():::EXIT99
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 12
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[17]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[19]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 13[20]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[21]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[22]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 14
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[23]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[25]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 15[26]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[27]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[28]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 16
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[29]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[30]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[31]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 7[32]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[33]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[34]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 11

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.getSecond():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 5
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 6[15]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[16]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 7[17]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 8[18]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[19]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[20]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 12
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 4
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 5
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 6[21]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[22]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 7[23]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 13[24]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[25]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[26]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 11
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 14

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.getSecond():::EXIT109
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 12
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[17]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[19]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 13[20]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[21]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[22]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 14
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[23]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[25]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 15[26]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[27]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[28]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 16
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[29]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[30]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[31]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 7[32]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[33]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[34]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 11

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.reset(cz.matfyz.sykora.planning.predicate.Predicate, cz.matfyz.sykora.planning.predicate.Predicate):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 14
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 2
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[19]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[21]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 15[22]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[23]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[24]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 16
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 13
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 2
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[25]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[27]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 17[28]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[29]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[30]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 18
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg0.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[31]
variable arg0.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.parameters[]
  flags synthetic classname non_null
  comparability 1[32]
variable arg0.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[33]
variable arg0.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.parameters[].boundValue
  flags synthetic to_string
  comparability 6[34]
variable arg0.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[35]
variable arg0.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[36]
variable arg0.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg0.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.predicateName
  flags synthetic to_string
  comparability 10
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg1.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1.parameters
  flags synthetic classname non_null
  comparability 1
variable arg1.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[37]
variable arg1.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.parameters[]
  flags synthetic classname non_null
  comparability 1[38]
variable arg1.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[39]
variable arg1.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg1.parameters[].boundValue
  flags synthetic to_string
  comparability 11[40]
variable arg1.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[41]
variable arg1.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[42]
variable arg1.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg1.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1.predicateName
  flags synthetic to_string
  comparability 12

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.reset(cz.matfyz.sykora.planning.predicate.Predicate, cz.matfyz.sykora.planning.predicate.Predicate):::EXIT123
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 14
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 2
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[19]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[21]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 15[22]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[23]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[24]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 16
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 13
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 2
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[25]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[27]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 17[28]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[29]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[30]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 18
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg0.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[31]
variable arg0.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.parameters[]
  flags synthetic classname non_null
  comparability 1[32]
variable arg0.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[33]
variable arg0.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.parameters[].boundValue
  flags synthetic to_string
  comparability 6[34]
variable arg0.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[35]
variable arg0.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[36]
variable arg0.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg0.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.predicateName
  flags synthetic to_string
  comparability 10
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg1.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1.parameters
  flags synthetic classname non_null
  comparability 1
variable arg1.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[37]
variable arg1.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.parameters[]
  flags synthetic classname non_null
  comparability 1[38]
variable arg1.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[39]
variable arg1.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg1.parameters[].boundValue
  flags synthetic to_string
  comparability 11[40]
variable arg1.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[41]
variable arg1.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[42]
variable arg1.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg1.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1.predicateName
  flags synthetic to_string
  comparability 12

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.PredicatePair(cz.matfyz.sykora.planning.predicate.Predicate, cz.matfyz.sykora.planning.predicate.Predicate):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg0.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[14]
variable arg0.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.parameters[]
  flags synthetic classname non_null
  comparability 1[15]
variable arg0.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[16]
variable arg0.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.parameters[].boundValue
  flags synthetic to_string
  comparability 6[17]
variable arg0.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[18]
variable arg0.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[19]
variable arg0.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg0.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.predicateName
  flags synthetic to_string
  comparability 10
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 13
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg1.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1.parameters
  flags synthetic classname non_null
  comparability 1
variable arg1.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[20]
variable arg1.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.parameters[]
  flags synthetic classname non_null
  comparability 1[21]
variable arg1.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[22]
variable arg1.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg1.parameters[].boundValue
  flags synthetic to_string
  comparability 11[23]
variable arg1.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[24]
variable arg1.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[25]
variable arg1.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg1.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1.predicateName
  flags synthetic to_string
  comparability 12

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.PredicatePair(cz.matfyz.sykora.planning.predicate.Predicate, cz.matfyz.sykora.planning.predicate.Predicate):::EXIT144
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 14
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 2
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[19]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[20]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[21]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 15[22]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[23]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[24]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 16
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 13
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 2
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[25]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[27]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 17[28]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[29]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[30]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 18
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg0.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[31]
variable arg0.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.parameters[]
  flags synthetic classname non_null
  comparability 1[32]
variable arg0.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[33]
variable arg0.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.parameters[].boundValue
  flags synthetic to_string
  comparability 6[34]
variable arg0.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[35]
variable arg0.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[36]
variable arg0.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg0.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.predicateName
  flags synthetic to_string
  comparability 10
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 3
variable arg1.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg1.parameters
  flags synthetic classname non_null
  comparability 1
variable arg1.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 4[37]
variable arg1.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.parameters[]
  flags synthetic classname non_null
  comparability 1[38]
variable arg1.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 5[39]
variable arg1.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg1.parameters[].boundValue
  flags synthetic to_string
  comparability 11[40]
variable arg1.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 7[41]
variable arg1.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[42]
variable arg1.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 9
variable arg1.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1.predicateName
  flags synthetic to_string
  comparability 12

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.access$000(cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.first.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[22]
variable arg0.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[]
  flags synthetic classname non_null
  comparability 1[23]
variable arg0.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[24]
variable arg0.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[].boundValue
  flags synthetic to_string
  comparability 7[25]
variable arg0.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[26]
variable arg0.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[27]
variable arg0.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.predicateName
  flags synthetic to_string
  comparability 11
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 12
variable arg0.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 13
variable arg0.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.second.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 14[28]
variable arg0.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[]
  flags synthetic classname non_null
  comparability 1[29]
variable arg0.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 15[30]
variable arg0.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[].boundValue
  flags synthetic to_string
  comparability 16[31]
variable arg0.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 17[32]
variable arg0.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 18[33]
variable arg0.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable arg0.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.predicateName
  flags synthetic to_string
  comparability 20

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.access$000(cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair):::EXIT41
ppt-type subexit
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.first.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[31]
variable arg0.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[]
  flags synthetic classname non_null
  comparability 1[32]
variable arg0.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[33]
variable arg0.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[].boundValue
  flags synthetic to_string
  comparability 7[34]
variable arg0.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[35]
variable arg0.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[36]
variable arg0.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.predicateName
  flags synthetic to_string
  comparability 11
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 12
variable arg0.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 13
variable arg0.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.second.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 14[37]
variable arg0.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[]
  flags synthetic classname non_null
  comparability 1[38]
variable arg0.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 15[39]
variable arg0.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[].boundValue
  flags synthetic to_string
  comparability 16[40]
variable arg0.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 17[41]
variable arg0.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 18[42]
variable arg0.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable arg0.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.predicateName
  flags synthetic to_string
  comparability 20
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 22
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 23
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 24[43]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[44]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 25[45]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 26[46]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 27[47]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 28[48]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 29
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 30

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.access$100(cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.first.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[22]
variable arg0.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[]
  flags synthetic classname non_null
  comparability 1[23]
variable arg0.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[24]
variable arg0.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[].boundValue
  flags synthetic to_string
  comparability 7[25]
variable arg0.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[26]
variable arg0.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[27]
variable arg0.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.predicateName
  flags synthetic to_string
  comparability 11
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 12
variable arg0.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 13
variable arg0.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.second.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 14[28]
variable arg0.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[]
  flags synthetic classname non_null
  comparability 1[29]
variable arg0.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 15[30]
variable arg0.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[].boundValue
  flags synthetic to_string
  comparability 16[31]
variable arg0.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 17[32]
variable arg0.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 18[33]
variable arg0.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable arg0.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.predicateName
  flags synthetic to_string
  comparability 20

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.access$100(cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair):::EXIT41
ppt-type subexit
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 3
variable arg0.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 4
variable arg0.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.first.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 5[31]
variable arg0.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[]
  flags synthetic classname non_null
  comparability 1[32]
variable arg0.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 6[33]
variable arg0.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.first.parameters[].boundValue
  flags synthetic to_string
  comparability 7[34]
variable arg0.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 8[35]
variable arg0.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 9[36]
variable arg0.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 10
variable arg0.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.predicateName
  flags synthetic to_string
  comparability 11
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 21
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 12
variable arg0.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 13
variable arg0.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args arg0.second.parameters
  flags synthetic classname non_null
  comparability 1
variable arg0.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 14[37]
variable arg0.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[]
  flags synthetic classname non_null
  comparability 1[38]
variable arg0.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 15[39]
variable arg0.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args arg0.second.parameters[].boundValue
  flags synthetic to_string
  comparability 16[40]
variable arg0.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 17[41]
variable arg0.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 18[42]
variable arg0.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 19
variable arg0.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.predicateName
  flags synthetic to_string
  comparability 20
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 22
variable return.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 23
variable return.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return.parameters
  flags synthetic classname non_null
  comparability 1
variable return.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 24[43]
variable return.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.parameters[]
  flags synthetic classname non_null
  comparability 1[44]
variable return.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 25[45]
variable return.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args return.parameters[].boundValue
  flags synthetic to_string
  comparability 26[46]
variable return.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 27[47]
variable return.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 28[48]
variable return.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 29
variable return.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.predicateName
  flags synthetic to_string
  comparability 30

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 5
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 6
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 7[16]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[17]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 8[18]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 9[19]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[20]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[21]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 13
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 5
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 6
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 7[22]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 8[24]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 14[25]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 10[26]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[27]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 12
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 15
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.PredicateLayer$PredicatePair
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 6
variable this.first.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 7
variable this.first.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.first.parameters
  flags synthetic classname non_null
  comparability 1
variable this.first.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 8[17]
variable this.first.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.parameters[]
  flags synthetic classname non_null
  comparability 1[18]
variable this.first.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 9[19]
variable this.first.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.first.parameters[].boundValue
  flags synthetic to_string
  comparability 10[20]
variable this.first.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[21]
variable this.first.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 12[22]
variable this.first.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.first.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.predicateName
  flags synthetic to_string
  comparability 14
variable cz.matfyz.sykora.planning.predicate.Predicate.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.predicate.Predicate
  rep-type hashcode
  comparability 6
variable this.second.parameters
  var-kind field parameters
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode
  comparability 7
variable this.second.parameters.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args this.second.parameters
  flags synthetic classname non_null
  comparability 1
variable this.second.parameters[..]
  var-kind array
  array 1
  dec-type cz.matfyz.sykora.planning.predicate.ValueBinding[]
  rep-type hashcode[]
  comparability 8[23]
variable this.second.parameters[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.parameters[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.second.parameters[..].boundValue
  var-kind field boundValue
  array 1
  dec-type java.lang.String[]
  rep-type hashcode[]
  comparability 9[25]
variable this.second.parameters[..].boundValue.toString
  var-kind function toString()
  array 1
  dec-type java.lang.String[]
  rep-type java.lang.String[]
  function-args this.second.parameters[].boundValue
  flags synthetic to_string
  comparability 15[26]
variable this.second.parameters[..].dependentBindings
  var-kind field dependentBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 11[27]
variable this.second.parameters[..].distinctBindings
  var-kind field distinctBindings
  array 1
  dec-type java.util.LinkedList[]
  rep-type hashcode[]
  comparability 12[28]
variable this.second.predicateName
  var-kind field predicateName
  dec-type java.lang.String
  rep-type hashcode
  comparability 13
variable this.second.predicateName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.predicateName
  flags synthetic to_string
  comparability 16
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair:::CLASS
ppt-type class

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 4
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 6
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[21]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[23]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[25]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[27]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 4
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 17
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[29]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[31]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[33]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[35]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.compareTo(cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 13
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[25]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[27]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[29]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 16
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[31]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 12
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 21
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[33]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 22
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[35]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[37]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 16
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[39]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[40]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable arg0.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable arg0.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.actionName
  flags synthetic to_string
  comparability 5
variable arg0.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable arg0.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable arg0.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable arg0.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable arg0.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.actionName
  flags synthetic to_string
  comparability 10
variable arg0.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable arg0.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable arg0.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.compareTo(cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair):::EXIT64
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 14
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[26]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 19
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[28]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[30]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[32]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 12
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 22
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[34]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 23
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[36]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[37]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[38]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[40]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[41]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable arg0.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable arg0.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.actionName
  flags synthetic to_string
  comparability 5
variable arg0.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable arg0.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable arg0.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable arg0.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable arg0.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.actionName
  flags synthetic to_string
  comparability 10
variable arg0.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable arg0.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable arg0.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 13

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.compareTo(cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair):::EXIT65
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 14
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[26]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 19
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[28]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[30]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[32]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 12
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 22
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 18
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[34]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 23
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 24
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 25[36]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[37]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[38]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[39]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[40]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[41]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable arg0.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable arg0.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.first.actionName
  flags synthetic to_string
  comparability 5
variable arg0.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable arg0.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable arg0.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable arg0.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable arg0.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable arg0.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.second.actionName
  flags synthetic to_string
  comparability 10
variable arg0.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable arg0.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable arg0.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 13

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.getFirst():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 4
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 6
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[21]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[23]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[25]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[27]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 4
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 17
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[29]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[31]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[33]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[35]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.getFirst():::EXIT74
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 17
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[25]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[27]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[29]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[31]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 21
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[33]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 22
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[35]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[37]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[39]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[40]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 5
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[41]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[43]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[44]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[45]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[47]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[48]

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.getSecond():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 4
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 6
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[21]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[22]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 16[23]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[25]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[27]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 4
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 5
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 17
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[29]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[31]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 7
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[33]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[35]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.getSecond():::EXIT83
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 16
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 17
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[25]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 18
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 19
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 20[27]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[29]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[31]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 21
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[33]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 22
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[35]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[37]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[39]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[40]
variable return
  var-kind return
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 3
variable return.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 4
variable return.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return.actionName
  flags synthetic to_string
  comparability 5
variable return.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable return.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable return.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[41]
variable return.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable return.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable return.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable return.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 15[43]
variable return.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[44]
variable return.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 6
variable return.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable return.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[45]
variable return.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable return.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable return.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable return.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[47]
variable return.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[48]

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.reset(cz.matfyz.sykora.planning.Action, cz.matfyz.sykora.planning.Action):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 20
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 2
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 21
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[29]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 22
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[31]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[33]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[35]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 19
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 2
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 25
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[37]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 26
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[39]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[40]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[41]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[43]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[44]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[45]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[47]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[48]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[49]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[51]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[52]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg1.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1.actionName
  flags synthetic to_string
  comparability 15
variable arg1.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg1.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg1.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[53]
variable arg1.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[54]
variable arg1.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable arg1.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[55]
variable arg1.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[56]
variable arg1.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg1.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg1.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[57]
variable arg1.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[58]
variable arg1.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg1.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg1.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[59]
variable arg1.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[60]

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.reset(cz.matfyz.sykora.planning.Action, cz.matfyz.sykora.planning.Action):::EXIT97
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 20
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 2
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 21
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[29]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 22
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[31]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[33]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[35]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 19
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 2
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 25
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[37]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 26
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[39]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[40]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[41]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[43]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[44]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[45]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[47]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[48]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[49]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[51]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[52]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg1.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1.actionName
  flags synthetic to_string
  comparability 15
variable arg1.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg1.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg1.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[53]
variable arg1.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[54]
variable arg1.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable arg1.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[55]
variable arg1.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[56]
variable arg1.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg1.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg1.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[57]
variable arg1.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[58]
variable arg1.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg1.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg1.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[59]
variable arg1.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[60]

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.ActionPair(cz.matfyz.sykora.planning.Action, cz.matfyz.sykora.planning.Action):::ENTER
ppt-type enter
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[20]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[21]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[22]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[24]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[26]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 19
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg1.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1.actionName
  flags synthetic to_string
  comparability 15
variable arg1.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg1.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg1.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[28]
variable arg1.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable arg1.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable arg1.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[30]
variable arg1.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable arg1.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg1.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg1.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[32]
variable arg1.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable arg1.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg1.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg1.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[34]
variable arg1.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[35]

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.ActionPair(cz.matfyz.sykora.planning.Action, cz.matfyz.sykora.planning.Action):::EXIT117
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 20
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 2
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 21
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[29]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 22
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 23
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 24[31]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[33]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[35]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 19
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 2
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 25
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[37]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 26
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 27
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 28[39]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[40]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[41]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[42]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[43]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[44]
variable arg0
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg0.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg0.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg0.actionName
  flags synthetic to_string
  comparability 4
variable arg0.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg0.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg0.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[45]
variable arg0.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[46]
variable arg0.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable arg0.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable arg0.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 14[47]
variable arg0.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[48]
variable arg0.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg0.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg0.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[49]
variable arg0.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[50]
variable arg0.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg0.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg0.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[51]
variable arg0.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg0.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[52]
variable arg1
  var-kind variable
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  flags is_param
  comparability 2
variable arg1.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 3
variable arg1.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args arg1.actionName
  flags synthetic to_string
  comparability 15
variable arg1.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 10
variable arg1.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 11
variable arg1.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[53]
variable arg1.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[54]
variable arg1.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable arg1.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable arg1.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[55]
variable arg1.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[56]
variable arg1.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 5
variable arg1.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable arg1.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[57]
variable arg1.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[58]
variable arg1.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable arg1.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable arg1.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[59]
variable arg1.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args arg1.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[60]

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 5
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 7
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[22]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 15
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 16
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 17[24]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[26]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[28]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 5
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 18
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[30]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 19
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[32]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[34]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[36]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[37]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 6
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 8
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[23]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[25]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[27]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[29]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 6
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 19
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[31]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 20
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[33]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[35]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[37]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 5
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 7
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[22]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[23]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 15
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 16
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 17[24]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[25]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[26]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[27]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[28]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[29]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 5
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 6
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 18
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 13
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 14
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[30]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[31]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 19
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 20
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 21[32]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[33]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 8
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[34]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[35]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 11
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 12
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 10[36]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[37]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type cz.matfyz.sykora.planning.graph.ActionLayer$ActionPair
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.first
  var-kind field first
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 6
variable this.first.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.first.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.first.actionName
  flags synthetic to_string
  comparability 8
variable this.first.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.first.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.first.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[23]
variable this.first.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[24]
variable this.first.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 16
variable this.first.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 17
variable this.first.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 18[25]
variable this.first.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[26]
variable this.first.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.first.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.first.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[27]
variable this.first.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[28]
variable this.first.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.first.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.first.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[29]
variable this.first.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.first.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[30]
variable cz.matfyz.sykora.planning.Action.$assertionsDisabled
  var-kind variable
  dec-type boolean
  rep-type boolean
  flags nomod
  comparability 2
variable this.second
  var-kind field second
  dec-type cz.matfyz.sykora.planning.Action
  rep-type hashcode
  comparability 6
variable this.second.actionName
  var-kind field actionName
  dec-type java.lang.String
  rep-type hashcode
  comparability 7
variable this.second.actionName.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args this.second.actionName
  flags synthetic to_string
  comparability 19
variable this.second.preconditions
  var-kind field preconditions
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 14
variable this.second.preconditions.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 15
variable this.second.preconditions.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[31]
variable this.second.preconditions.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditions.predicates[]
  flags synthetic classname non_null
  comparability 1[32]
variable this.second.preconditionsFulfillers
  var-kind field preconditionsFulfillers
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 20
variable this.second.preconditionsFulfillers.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 21
variable this.second.preconditionsFulfillers.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 22[33]
variable this.second.preconditionsFulfillers.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.preconditionsFulfillers.predicates[]
  flags synthetic classname non_null
  comparability 1[34]
variable this.second.negativeEffects
  var-kind field negativeEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 9
variable this.second.negativeEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 10
variable this.second.negativeEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[35]
variable this.second.negativeEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.negativeEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[36]
variable this.second.positiveEffects
  var-kind field positiveEffects
  dec-type cz.matfyz.sykora.planning.predicate.PredicateSet
  rep-type hashcode
  comparability 12
variable this.second.positiveEffects.predicates
  var-kind field predicates
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 13
variable this.second.positiveEffects.predicates[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 11[37]
variable this.second.positiveEffects.predicates[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.second.positiveEffects.predicates[]
  flags synthetic classname non_null
  comparability 1[38]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 3
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 4

