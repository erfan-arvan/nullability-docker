Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 15 times.  Unmatched entries are ignored!
Unterminated calls:
  Tetris3d.main(java.lang.String[]) : 1 invocation
  Tetris3d.createGUI() : 1 invocation
  javax.media.opengl.awt.GLCanvas.GLCanvas() : 1 invocation
  javax.media.opengl.awt.GLCanvas.GLCanvas(javax.media.opengl.GLCapabilitiesImmutable) : 1 invocation
  javax.media.opengl.awt.GLCanvas.GLCanvas(javax.media.opengl.GLCapabilitiesImmutable, javax.media.opengl.GLCapabilitiesChooser, javax.media.opengl.GLContext, java.awt.GraphicsDevice) : 1 invocation
  com.jogamp.common.util.ReflectionUtil.getClass(java.lang.String, boolean, java.lang.ClassLoader) : 1 invocation
  com.jogamp.common.util.ReflectionUtil.getClassImpl(java.lang.String, boolean, java.lang.ClassLoader) : 1 invocation
  com.jogamp.common.os.Platform$1.run() : 1 invocation
  com.jogamp.common.os.Platform.loadGlueGenRTImpl() : 1 invocation
  com.jogamp.common.util.cache.TempJarCache.bootstrapNativeLib(java.lang.Class, java.lang.String, java.net.URL) : 1 invocation
  com.jogamp.common.util.JarUtil.getJarFile(java.net.URL) : 1 invocation
  com.jogamp.common.os.DynamicLibraryBundle$GlueJNILibLoader.loadLibrary(java.lang.String, boolean, java.lang.ClassLoader) : 1 invocation
  com.jogamp.common.jvm.JNILibLoaderBase.loadLibrary(java.lang.String, boolean, java.lang.ClassLoader) : 1 invocation
  com.jogamp.common.jvm.JNILibLoaderBase$DefaultAction.loadLibrary(java.lang.String, boolean, java.lang.ClassLoader) : 1 invocation
  com.jogamp.common.jvm.JNILibLoaderBase.loadLibraryInternal(java.lang.String, java.lang.ClassLoader) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
Tetris3d$1:::OBJECT
this has only one value
Tetris3d.this has only one value
Tetris3d.band == false
Tetris3d.this.appletMode == false
Tetris3d.this.camera has only one value
Tetris3d.this.camera.up has only one value
Tetris3d.this.camera.front has only one value
Tetris3d.this.camera.left has only one value
Tetris3d.this.camera.eyePosition has only one value
Tetris3d.this.camera.focalDistance == 10.0
Tetris3d.this.camera.projectionMode == 5
Tetris3d.this.camera.fov == 60.0
Tetris3d.this.camera.orthogonalZoom == 1.0
Tetris3d.this.camera.nearPlaneDistance == 0.05
Tetris3d.this.camera.farPlaneDistance == 100.0
Tetris3d.this.camera.name == null
Tetris3d.this.camera.viewportXSize == 320.0
Tetris3d.this.camera.viewportYSize == 320.0
Tetris3d.this.camera.dx == null
Tetris3d.this.camera.dy == null
Tetris3d.this.camera._dir has only one value
Tetris3d.this.camera.upWithScale has only one value
Tetris3d.this.camera.rightWithScale has only one value
Tetris3d.this.camera.normalizingTransformation has only one value
Tetris3d.this.qualitySpec has only one value
Tetris3d.this.qualitySpec.shadingType == 2
Tetris3d.this.qualitySpec.surfaces == true
Tetris3d.this.qualitySpec.wires == true
Tetris3d.this.qualitySpec.boundingVolume == false
Tetris3d.this.qualitySpec.selectionCorners == false
Tetris3d.this.qualitySpec.texture == true
Tetris3d.this.qualitySpec.bumpMap == false
Tetris3d.this.qualitySpec.points == true
Tetris3d.this.qualitySpec.normals == false
Tetris3d.this.qualitySpec.trianglesNormals == false
Tetris3d.this.qualitySpec.wireColor has only one value
Tetris3d.this.qualitySpec.lodHint == 0
Tetris3d.this.cameraController has only one value
Tetris3d.this.cameraController.getClass().getName() == vsdk.toolkit.gui.CameraControllerAquynza.class
Tetris3d.this.canvas == null
Tetris3d.this.light has only one value
vsdk.toolkit.environment.Light.lightNumber == 2
Tetris3d.this.light.tipo_de_luz == 2
Tetris3d.this.light.lvec has only one value
Tetris3d.this.light.ambient has only one value
Tetris3d.this.light.diffuse has only one value
Tetris3d.this.light.specular has only one value
Tetris3d.this.light.id == 0
Tetris3d.this.light.name == null
Tetris3d.this.light2 has only one value
Tetris3d.this.light2.tipo_de_luz == 0
Tetris3d.this.light2.lvec has only one value
Tetris3d.this.light2.ambient has only one value
Tetris3d.this.light2.diffuse has only one value
Tetris3d.this.light2.specular has only one value
Tetris3d.this.light2.id == 1
Tetris3d.this.light2.name == null
Tetris3d.this.testMaterial has only one value
Tetris3d.this.testMaterial.ambient has only one value
Tetris3d.this.testMaterial.diffuse has only one value
Tetris3d.this.testMaterial.specular has only one value
Tetris3d.this.testMaterial.emission has only one value
Tetris3d.this.testMaterial.doubleSided == false
Tetris3d.this.testMaterial.reflectionCoefficient == 0.0
Tetris3d.this.testMaterial.refractionCoefficient == 0.0
Tetris3d.this.testMaterial.name has only one value
Tetris3d.this.testMaterial.name.toString == "VSDK_default_material"
Tetris3d.this.testMaterial.opacity == 1.0
Tetris3d.this.testMaterial.phongExponent == 40.0
Tetris3d.this.numPoints == 0
Tetris3d.this.shape has only one value
Tetris3d.this.shape.getClass().getName() == model.shapes.TetrisT.class
model.shapes.Shape.yesMat has only one value
model.shapes.Shape.noMat has only one value
model.shapes.Shape.maybeMat has only one value
Tetris3d.this.shape.matrix has only one value
Tetris3d.this.shape.matrix.getClass().getName() == boolean[][][].class
Tetris3d.this.shape.matrix[] contains no nulls and has only one value, of length 3
Tetris3d.this.shape.color has only one value
Tetris3d.this.shape.desfX == 1
Tetris3d.this.shape.desfY == 1
Tetris3d.this.shape.level == 0
Tetris3d.this.model has only one value
model.Model.band == false
Tetris3d.this.model.height == 0
Tetris3d.this.model.matrix has only one value
Tetris3d.this.model.matrix.getClass().getName() == boolean[][][].class
Tetris3d.this.model.matrix[] contains no nulls and has only one value, of length 7
Tetris3d.this.timer == null
size(Tetris3d.this.shape.matrix[]) == 3
size(Tetris3d.this.model.matrix[]) == 7
===========================================================================
Tetris3d$1.(Tetris3d):::ENTER
Tetris3d.this has only one value
Tetris3d.band == false
Tetris3d.this.appletMode == false
Tetris3d.this.camera has only one value
Tetris3d.this.camera.up has only one value
Tetris3d.this.camera.front has only one value
Tetris3d.this.camera.left has only one value
Tetris3d.this.camera.eyePosition has only one value
Tetris3d.this.camera.focalDistance == 10.0
Tetris3d.this.camera.projectionMode == 5
Tetris3d.this.camera.fov == 60.0
Tetris3d.this.camera.orthogonalZoom == 1.0
Tetris3d.this.camera.nearPlaneDistance == 0.05
Tetris3d.this.camera.farPlaneDistance == 100.0
Tetris3d.this.camera.name == null
Tetris3d.this.camera.viewportXSize == 320.0
Tetris3d.this.camera.viewportYSize == 320.0
Tetris3d.this.camera.dx == null
Tetris3d.this.camera.dy == null
Tetris3d.this.camera._dir has only one value
Tetris3d.this.camera.upWithScale has only one value
Tetris3d.this.camera.rightWithScale has only one value
Tetris3d.this.camera.normalizingTransformation has only one value
Tetris3d.this.qualitySpec has only one value
Tetris3d.this.qualitySpec.shadingType == 2
Tetris3d.this.qualitySpec.surfaces == true
Tetris3d.this.qualitySpec.wires == true
Tetris3d.this.qualitySpec.boundingVolume == false
Tetris3d.this.qualitySpec.selectionCorners == false
Tetris3d.this.qualitySpec.texture == true
Tetris3d.this.qualitySpec.bumpMap == false
Tetris3d.this.qualitySpec.points == true
Tetris3d.this.qualitySpec.normals == false
Tetris3d.this.qualitySpec.trianglesNormals == false
Tetris3d.this.qualitySpec.wireColor has only one value
Tetris3d.this.qualitySpec.lodHint == 0
Tetris3d.this.cameraController has only one value
Tetris3d.this.cameraController.getClass().getName() == vsdk.toolkit.gui.CameraControllerAquynza.class
Tetris3d.this.canvas == null
Tetris3d.this.light has only one value
vsdk.toolkit.environment.Light.lightNumber == 2
Tetris3d.this.light.tipo_de_luz == 2
Tetris3d.this.light.lvec has only one value
Tetris3d.this.light.ambient has only one value
Tetris3d.this.light.diffuse has only one value
Tetris3d.this.light.specular has only one value
Tetris3d.this.light.id == 0
Tetris3d.this.light.name == null
Tetris3d.this.light2 has only one value
Tetris3d.this.light2.tipo_de_luz == 0
Tetris3d.this.light2.lvec has only one value
Tetris3d.this.light2.ambient has only one value
Tetris3d.this.light2.diffuse has only one value
Tetris3d.this.light2.specular has only one value
Tetris3d.this.light2.id == 1
Tetris3d.this.light2.name == null
Tetris3d.this.testMaterial has only one value
Tetris3d.this.testMaterial.ambient has only one value
Tetris3d.this.testMaterial.diffuse has only one value
Tetris3d.this.testMaterial.specular has only one value
Tetris3d.this.testMaterial.emission has only one value
Tetris3d.this.testMaterial.doubleSided == false
Tetris3d.this.testMaterial.reflectionCoefficient == 0.0
Tetris3d.this.testMaterial.refractionCoefficient == 0.0
Tetris3d.this.testMaterial.name has only one value
Tetris3d.this.testMaterial.name.toString == "VSDK_default_material"
Tetris3d.this.testMaterial.opacity == 1.0
Tetris3d.this.testMaterial.phongExponent == 40.0
Tetris3d.this.numPoints == 0
Tetris3d.this.shape has only one value
Tetris3d.this.shape.getClass().getName() == model.shapes.TetrisT.class
model.shapes.Shape.yesMat has only one value
model.shapes.Shape.noMat has only one value
model.shapes.Shape.maybeMat has only one value
Tetris3d.this.shape.matrix has only one value
Tetris3d.this.shape.matrix.getClass().getName() == boolean[][][].class
Tetris3d.this.shape.matrix[] contains no nulls and has only one value, of length 3
Tetris3d.this.shape.color has only one value
Tetris3d.this.shape.desfX == 1
Tetris3d.this.shape.desfY == 1
Tetris3d.this.shape.level == 0
Tetris3d.this.model has only one value
model.Model.band == false
Tetris3d.this.model.height == 0
Tetris3d.this.model.matrix has only one value
Tetris3d.this.model.matrix.getClass().getName() == boolean[][][].class
Tetris3d.this.model.matrix[] contains no nulls and has only one value, of length 7
Tetris3d.this.timer == null
size(Tetris3d.this.shape.matrix[]) == 3
size(Tetris3d.this.model.matrix[]) == 7
===========================================================================
Tetris3d$1.(Tetris3d):::EXIT
Tetris3d.this == orig(Tetris3d.this)
Tetris3d.band == orig(Tetris3d.band)
Tetris3d.this.appletMode == orig(Tetris3d.this.appletMode)
Tetris3d.this.camera == orig(Tetris3d.this.camera)
Tetris3d.this.camera.up == orig(Tetris3d.this.camera.up)
Tetris3d.this.camera.front == orig(Tetris3d.this.camera.front)
Tetris3d.this.camera.left == orig(Tetris3d.this.camera.left)
Tetris3d.this.camera.eyePosition == orig(Tetris3d.this.camera.eyePosition)
Tetris3d.this.camera.focalDistance == orig(Tetris3d.this.camera.focalDistance)
Tetris3d.this.camera.projectionMode == orig(Tetris3d.this.camera.projectionMode)
Tetris3d.this.camera.fov == orig(Tetris3d.this.camera.fov)
Tetris3d.this.camera.orthogonalZoom == orig(Tetris3d.this.camera.orthogonalZoom)
Tetris3d.this.camera.nearPlaneDistance == orig(Tetris3d.this.camera.nearPlaneDistance)
Tetris3d.this.camera.farPlaneDistance == orig(Tetris3d.this.camera.farPlaneDistance)
Tetris3d.this.camera.name == orig(Tetris3d.this.camera.name)
Tetris3d.this.camera.viewportXSize == orig(Tetris3d.this.camera.viewportXSize)
Tetris3d.this.camera.viewportYSize == orig(Tetris3d.this.camera.viewportYSize)
Tetris3d.this.camera.dx == orig(Tetris3d.this.camera.dx)
Tetris3d.this.camera.dy == orig(Tetris3d.this.camera.dy)
Tetris3d.this.camera._dir == orig(Tetris3d.this.camera._dir)
Tetris3d.this.camera.upWithScale == orig(Tetris3d.this.camera.upWithScale)
Tetris3d.this.camera.rightWithScale == orig(Tetris3d.this.camera.rightWithScale)
Tetris3d.this.camera.normalizingTransformation == orig(Tetris3d.this.camera.normalizingTransformation)
Tetris3d.this.qualitySpec == orig(Tetris3d.this.qualitySpec)
Tetris3d.this.qualitySpec.shadingType == orig(Tetris3d.this.qualitySpec.shadingType)
Tetris3d.this.qualitySpec.surfaces == orig(Tetris3d.this.qualitySpec.surfaces)
Tetris3d.this.qualitySpec.wires == orig(Tetris3d.this.qualitySpec.wires)
Tetris3d.this.qualitySpec.boundingVolume == orig(Tetris3d.this.qualitySpec.boundingVolume)
Tetris3d.this.qualitySpec.selectionCorners == orig(Tetris3d.this.qualitySpec.selectionCorners)
Tetris3d.this.qualitySpec.texture == orig(Tetris3d.this.qualitySpec.texture)
Tetris3d.this.qualitySpec.bumpMap == orig(Tetris3d.this.qualitySpec.bumpMap)
Tetris3d.this.qualitySpec.points == orig(Tetris3d.this.qualitySpec.points)
Tetris3d.this.qualitySpec.normals == orig(Tetris3d.this.qualitySpec.normals)
Tetris3d.this.qualitySpec.trianglesNormals == orig(Tetris3d.this.qualitySpec.trianglesNormals)
Tetris3d.this.qualitySpec.wireColor == orig(Tetris3d.this.qualitySpec.wireColor)
Tetris3d.this.qualitySpec.lodHint == orig(Tetris3d.this.qualitySpec.lodHint)
Tetris3d.this.cameraController == orig(Tetris3d.this.cameraController)
Tetris3d.this.cameraController.getClass().getName() == orig(Tetris3d.this.cameraController.getClass().getName())
Tetris3d.this.canvas == orig(Tetris3d.this.canvas)
Tetris3d.this.light == orig(Tetris3d.this.light)
vsdk.toolkit.environment.Light.lightNumber == orig(vsdk.toolkit.environment.Light.lightNumber)
Tetris3d.this.light.tipo_de_luz == orig(Tetris3d.this.light.tipo_de_luz)
Tetris3d.this.light.lvec == orig(Tetris3d.this.light.lvec)
Tetris3d.this.light.ambient == orig(Tetris3d.this.light.ambient)
Tetris3d.this.light.diffuse == orig(Tetris3d.this.light.diffuse)
Tetris3d.this.light.specular == orig(Tetris3d.this.light.specular)
Tetris3d.this.light.id == orig(Tetris3d.this.light.id)
Tetris3d.this.light.name == orig(Tetris3d.this.light.name)
Tetris3d.this.light2 == orig(Tetris3d.this.light2)
Tetris3d.this.light2.tipo_de_luz == orig(Tetris3d.this.light2.tipo_de_luz)
Tetris3d.this.light2.lvec == orig(Tetris3d.this.light2.lvec)
Tetris3d.this.light2.ambient == orig(Tetris3d.this.light2.ambient)
Tetris3d.this.light2.diffuse == orig(Tetris3d.this.light2.diffuse)
Tetris3d.this.light2.specular == orig(Tetris3d.this.light2.specular)
Tetris3d.this.light2.id == orig(Tetris3d.this.light2.id)
Tetris3d.this.light2.name == orig(Tetris3d.this.light2.name)
Tetris3d.this.testMaterial == orig(Tetris3d.this.testMaterial)
Tetris3d.this.testMaterial.ambient == orig(Tetris3d.this.testMaterial.ambient)
Tetris3d.this.testMaterial.diffuse == orig(Tetris3d.this.testMaterial.diffuse)
Tetris3d.this.testMaterial.specular == orig(Tetris3d.this.testMaterial.specular)
Tetris3d.this.testMaterial.emission == orig(Tetris3d.this.testMaterial.emission)
Tetris3d.this.testMaterial.doubleSided == orig(Tetris3d.this.testMaterial.doubleSided)
Tetris3d.this.testMaterial.reflectionCoefficient == orig(Tetris3d.this.testMaterial.reflectionCoefficient)
Tetris3d.this.testMaterial.refractionCoefficient == orig(Tetris3d.this.testMaterial.refractionCoefficient)
Tetris3d.this.testMaterial.name == orig(Tetris3d.this.testMaterial.name)
Tetris3d.this.testMaterial.name.toString == orig(Tetris3d.this.testMaterial.name.toString)
Tetris3d.this.testMaterial.opacity == orig(Tetris3d.this.testMaterial.opacity)
Tetris3d.this.testMaterial.phongExponent == orig(Tetris3d.this.testMaterial.phongExponent)
Tetris3d.this.numPoints == orig(Tetris3d.this.numPoints)
Tetris3d.this.shape == orig(Tetris3d.this.shape)
Tetris3d.this.shape.getClass().getName() == orig(Tetris3d.this.shape.getClass().getName())
model.shapes.Shape.yesMat == orig(model.shapes.Shape.yesMat)
model.shapes.Shape.noMat == orig(model.shapes.Shape.noMat)
model.shapes.Shape.maybeMat == orig(model.shapes.Shape.maybeMat)
Tetris3d.this.shape.matrix == orig(Tetris3d.this.shape.matrix)
Tetris3d.this.shape.matrix.getClass().getName() == orig(Tetris3d.this.shape.matrix.getClass().getName())
Tetris3d.this.shape.matrix[] == orig(Tetris3d.this.shape.matrix[])
Tetris3d.this.shape.color == orig(Tetris3d.this.shape.color)
Tetris3d.this.shape.desfX == orig(Tetris3d.this.shape.desfX)
Tetris3d.this.shape.desfY == orig(Tetris3d.this.shape.desfY)
Tetris3d.this.shape.level == orig(Tetris3d.this.shape.level)
Tetris3d.this.model == orig(Tetris3d.this.model)
model.Model.band == orig(model.Model.band)
Tetris3d.this.model.height == orig(Tetris3d.this.model.height)
Tetris3d.this.model.matrix == orig(Tetris3d.this.model.matrix)
Tetris3d.this.model.matrix.getClass().getName() == orig(Tetris3d.this.model.matrix.getClass().getName())
Tetris3d.this.model.matrix[] == orig(Tetris3d.this.model.matrix[])
Tetris3d.this.timer == orig(Tetris3d.this.timer)
===========================================================================
Tetris3d:::CLASS
Tetris3d.band == false
===========================================================================
Tetris3d:::OBJECT
this has only one value
this.appletMode == false
this.camera.up has only one value
this.camera.up.x == 0.0
this.camera.up.y == 0.0
this.camera.up.z == 1.0
this.camera.front has only one value
this.camera.front.x == 0.0
this.camera.front.y == 1.0
this.camera.front.z == 0.0
this.camera.left has only one value
this.camera.left.x == -1.0
this.camera.left.y == 0.0
this.camera.left.z == 0.0
this.camera.eyePosition has only one value
this.camera.eyePosition.x == 3.17
this.camera.eyePosition.y == -6.62
this.camera.eyePosition.z == -3.45
this.camera.focalDistance == 10.0
this.camera.projectionMode == 5
this.camera.fov == 60.0
this.camera.orthogonalZoom == 1.0
this.camera.nearPlaneDistance == 0.05
this.camera.farPlaneDistance == 100.0
this.camera.name == null
this.camera.viewportXSize == 320.0
this.camera.viewportYSize == 320.0
this.camera.dx == null
this.camera.dy == null
this.camera._dir has only one value
this.camera._dir.x == 0.0
this.camera._dir.y == 0.5
this.camera._dir.z == 0.0
this.camera.upWithScale has only one value
this.camera.upWithScale.x == 0.0
this.camera.upWithScale.y == 0.0
this.camera.upWithScale.z == 0.5773502691896257
this.camera.rightWithScale has only one value
this.camera.rightWithScale.x == 0.5773502691896257
this.camera.rightWithScale.y == 0.0
this.camera.rightWithScale.z == 0.0
this.camera.normalizingTransformation has only one value
this.camera.normalizingTransformation.M has only one value
this.camera.normalizingTransformation.M.getClass().getName() == double[][].class
this.camera.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
this.qualitySpec.shadingType == 2
this.qualitySpec.surfaces == true
this.qualitySpec.wires == true
this.qualitySpec.boundingVolume == false
this.qualitySpec.selectionCorners == false
this.qualitySpec.texture == true
this.qualitySpec.bumpMap == false
this.qualitySpec.points == true
this.qualitySpec.normals == false
this.qualitySpec.trianglesNormals == false
this.qualitySpec.wireColor has only one value
this.qualitySpec.wireColor.r == 1.0
this.qualitySpec.wireColor.g == 1.0
this.qualitySpec.wireColor.b == 1.0
this.qualitySpec.lodHint == 0
this.cameraController.getClass().getName() == vsdk.toolkit.gui.CameraControllerAquynza.class
this.canvas == null
vsdk.toolkit.environment.Light.lightNumber == 2
this.light.tipo_de_luz == 2
this.light.lvec has only one value
this.light.lvec.x == 3.0
this.light.lvec.y == -3.0
this.light.lvec.z == 3.0
this.light.ambient has only one value
this.light.ambient.r == 0.0
this.light.ambient.g == 0.0
this.light.ambient.b == 0.0
this.light.diffuse has only one value
this.light.diffuse.r == 1.0
this.light.diffuse.g == 1.0
this.light.diffuse.b == 1.0
this.light.specular has only one value
this.light.specular.r == 1.0
this.light.specular.g == 1.0
this.light.specular.b == 1.0
this.light.id == 0
this.light.name == null
this.light2.tipo_de_luz == 0
this.light2.lvec has only one value
this.light2.lvec.x == 0.0
this.light2.lvec.y == 0.0
this.light2.lvec.z == 0.0
this.light2.ambient has only one value
this.light2.ambient.r == 0.0
this.light2.ambient.g == 0.0
this.light2.ambient.b == 0.0
this.light2.diffuse has only one value
this.light2.diffuse.r == 1.0
this.light2.diffuse.g == 1.0
this.light2.diffuse.b == 1.0
this.light2.specular has only one value
this.light2.specular.r == 1.0
this.light2.specular.g == 1.0
this.light2.specular.b == 1.0
this.light2.id == 1
this.light2.name == null
this.testMaterial.ambient has only one value
this.testMaterial.ambient.r == 0.0
this.testMaterial.ambient.g == 0.0
this.testMaterial.ambient.b == 0.0
this.testMaterial.diffuse has only one value
this.testMaterial.diffuse.r == 0.0
this.testMaterial.diffuse.g == 1.0
this.testMaterial.diffuse.b == 1.0
this.testMaterial.specular has only one value
this.testMaterial.specular.r == 1.0
this.testMaterial.specular.g == 1.0
this.testMaterial.specular.b == 1.0
this.testMaterial.emission has only one value
this.testMaterial.emission.r == 0.0
this.testMaterial.emission.g == 0.0
this.testMaterial.emission.b == 0.0
this.testMaterial.doubleSided == false
this.testMaterial.reflectionCoefficient == 0.0
this.testMaterial.refractionCoefficient == 0.0
this.testMaterial.name has only one value
this.testMaterial.name.toString == "VSDK_default_material"
this.testMaterial.opacity == 1.0
this.testMaterial.phongExponent == 40.0
this.numPoints == 0
this.shape has only one value
this.shape.getClass().getName() == model.shapes.TetrisT.class
model.shapes.Shape.yesMat has only one value
model.shapes.Shape.yesMat.M has only one value
model.shapes.Shape.yesMat.M.getClass().getName() == double[][].class
model.shapes.Shape.yesMat.M[] contains no nulls and has only one value, of length 4
model.shapes.Shape.noMat has only one value
model.shapes.Shape.noMat.M has only one value
model.shapes.Shape.noMat.M.getClass().getName() == double[][].class
model.shapes.Shape.noMat.M[] contains no nulls and has only one value, of length 4
model.shapes.Shape.maybeMat has only one value
model.shapes.Shape.maybeMat.M has only one value
model.shapes.Shape.maybeMat.M.getClass().getName() == double[][].class
model.shapes.Shape.maybeMat.M[] contains no nulls and has only one value, of length 4
this.shape.matrix has only one value
this.shape.matrix.getClass().getName() == boolean[][][].class
this.shape.matrix[] contains no nulls and has only one value, of length 3
this.shape.color has only one value
this.shape.color.r == 0.0
this.shape.color.g == 1.0
this.shape.color.b == 1.0
this.shape.desfX == 1
this.shape.desfY == 1
this.shape.level == 0
this.model has only one value
model.Model.band == false
this.model.height == 0
this.model.matrix has only one value
this.model.matrix.getClass().getName() == boolean[][][].class
this.model.matrix[] contains no nulls and has only one value, of length 7
size(this.camera.normalizingTransformation.M[]) == 4
size(model.shapes.Shape.yesMat.M[]) == 4
size(model.shapes.Shape.noMat.M[]) == 4
size(model.shapes.Shape.maybeMat.M[]) == 4
size(this.shape.matrix[]) == 3
size(this.model.matrix[]) == 7
===========================================================================
Tetris3d.Tetris3d():::EXIT
this.camera == null
this.qualitySpec == null
this.cameraController == null
this.light == null
this.light2 == null
this.testMaterial == null
this.timer == null
===========================================================================
Tetris3d.createModel():::ENTER
this.camera == null
this.qualitySpec == null
this.cameraController == null
this.light == null
this.light2 == null
this.testMaterial == null
this.timer == null
===========================================================================
Tetris3d.createModel():::EXIT
Tetris3d.band == orig(Tetris3d.band)
this.appletMode == orig(this.appletMode)
this.canvas == orig(this.canvas)
this.numPoints == orig(this.numPoints)
this.shape == orig(this.shape)
this.shape.getClass().getName() == orig(this.shape.getClass().getName())
model.shapes.Shape.yesMat == orig(model.shapes.Shape.yesMat)
model.shapes.Shape.yesMat.M == orig(model.shapes.Shape.yesMat.M)
model.shapes.Shape.yesMat.M.getClass().getName() == orig(model.shapes.Shape.yesMat.M.getClass().getName())
model.shapes.Shape.yesMat.M[] == orig(model.shapes.Shape.yesMat.M[])
model.shapes.Shape.noMat == orig(model.shapes.Shape.noMat)
model.shapes.Shape.noMat.M == orig(model.shapes.Shape.noMat.M)
model.shapes.Shape.noMat.M.getClass().getName() == orig(model.shapes.Shape.noMat.M.getClass().getName())
model.shapes.Shape.noMat.M[] == orig(model.shapes.Shape.noMat.M[])
model.shapes.Shape.maybeMat == orig(model.shapes.Shape.maybeMat)
model.shapes.Shape.maybeMat.M == orig(model.shapes.Shape.maybeMat.M)
model.shapes.Shape.maybeMat.M.getClass().getName() == orig(model.shapes.Shape.maybeMat.M.getClass().getName())
model.shapes.Shape.maybeMat.M[] == orig(model.shapes.Shape.maybeMat.M[])
this.shape.matrix == orig(this.shape.matrix)
this.shape.matrix.getClass().getName() == orig(this.shape.matrix.getClass().getName())
this.shape.matrix[] == orig(this.shape.matrix[])
this.shape.color == orig(this.shape.color)
this.shape.color.r == orig(this.shape.color.r)
this.shape.color.g == orig(this.shape.color.g)
this.shape.color.b == orig(this.shape.color.b)
this.shape.desfX == orig(this.shape.desfX)
this.shape.desfY == orig(this.shape.desfY)
this.shape.level == orig(this.shape.level)
this.model == orig(this.model)
model.Model.band == orig(model.Model.band)
this.model.height == orig(this.model.height)
this.model.matrix == orig(this.model.matrix)
this.model.matrix.getClass().getName() == orig(this.model.matrix.getClass().getName())
this.model.matrix[] == orig(this.model.matrix[])
this.camera has only one value
this.qualitySpec has only one value
this.cameraController has only one value
this.light has only one value
this.light2 has only one value
this.testMaterial has only one value
this.timer has only one value
===========================================================================
com.jogamp.common.JogampRuntimeException:::OBJECT
this has only one value
===========================================================================
com.jogamp.common.JogampRuntimeException.JogampRuntimeException(java.lang.String, java.lang.Throwable):::ENTER
arg0 has only one value
arg0.toString == "android.os.Build$VERSION not available"
arg1 has only one value
===========================================================================
com.jogamp.common.JogampRuntimeException.JogampRuntimeException(java.lang.String, java.lang.Throwable):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "android.os.Build$VERSION not available"
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase$1:::OBJECT
this has only one value
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase$1.():::EXIT
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase$1.run():::ENTER
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase$1.run():::EXIT
return == null
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase$DefaultAction:::OBJECT
this has only one value
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase$DefaultAction.DefaultAction():::EXIT
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase:::CLASS
com.jogamp.common.jvm.JNILibLoaderBase.DEBUG == false
com.jogamp.common.jvm.JNILibLoaderBase.loaded has only one value
com.jogamp.common.jvm.JNILibLoaderBase.loaderAction has only one value
com.jogamp.common.jvm.JNILibLoaderBase.loaderAction.getClass().getName() == com.jogamp.common.jvm.JNILibLoaderBase$DefaultAction.class
com.jogamp.common.jvm.JNILibLoaderBase.customLoadLibraryMethod == null
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase.isLoaded(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase.isLoaded(java.lang.String):::EXIT
com.jogamp.common.jvm.JNILibLoaderBase.DEBUG == orig(com.jogamp.common.jvm.JNILibLoaderBase.DEBUG)
com.jogamp.common.jvm.JNILibLoaderBase.loaded == orig(com.jogamp.common.jvm.JNILibLoaderBase.loaded)
com.jogamp.common.jvm.JNILibLoaderBase.loaderAction == orig(com.jogamp.common.jvm.JNILibLoaderBase.loaderAction)
com.jogamp.common.jvm.JNILibLoaderBase.loaderAction.getClass().getName() == orig(com.jogamp.common.jvm.JNILibLoaderBase.loaderAction.getClass().getName())
com.jogamp.common.jvm.JNILibLoaderBase.customLoadLibraryMethod == orig(com.jogamp.common.jvm.JNILibLoaderBase.customLoadLibraryMethod)
arg0.toString == orig(arg0.toString)
arg0.toString == "gluegen-rt"
return == false
===========================================================================
com.jogamp.common.jvm.JNILibLoaderBase.isLoaded(java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
com.jogamp.common.nio.Buffers:::CLASS
===========================================================================
com.jogamp.common.nio.Buffers.nativeOrder(java.nio.ByteBuffer):::ENTER
arg0 has only one value
arg0.getClass().getName() == java.nio.DirectByteBuffer.class
===========================================================================
com.jogamp.common.nio.Buffers.nativeOrder(java.nio.ByteBuffer):::EXIT
return has only one value
return.getClass().getName() == java.nio.DirectByteBuffer.class
===========================================================================
com.jogamp.common.nio.Buffers.newDirectByteBuffer(int):::ENTER
arg0 == 4
===========================================================================
com.jogamp.common.nio.Buffers.newDirectByteBuffer(int):::EXIT
return has only one value
return.getClass().getName() == java.nio.DirectByteBuffer.class
===========================================================================
com.jogamp.common.os.NativeLibrary$3:::OBJECT
this has only one value
===========================================================================
com.jogamp.common.os.NativeLibrary$3.():::EXIT
===========================================================================
com.jogamp.common.os.NativeLibrary$3.run():::ENTER
===========================================================================
com.jogamp.common.os.NativeLibrary$3.run():::EXIT
return == null
===========================================================================
com.jogamp.common.os.NativeLibrary$4:::OBJECT
this has only one value
this.val$loader has only one value
this.val$loader.getClass().getName() == jdk.internal.loader.ClassLoaders$AppClassLoader.class
this.val$libName has only one value
this.val$libName.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.os.NativeLibrary$4.(java.lang.ClassLoader, java.lang.String):::ENTER
arg0 has only one value
arg0.getClass().getName() == jdk.internal.loader.ClassLoaders$AppClassLoader.class
arg1 has only one value
arg1.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.os.NativeLibrary$4.(java.lang.ClassLoader, java.lang.String):::EXIT
arg1.toString == orig(arg1.toString)
arg1.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.os.NativeLibrary$4.run():::ENTER
===========================================================================
com.jogamp.common.os.NativeLibrary$4.run():::EXIT
this.val$loader == orig(this.val$loader)
this.val$loader.getClass().getName() == orig(this.val$loader.getClass().getName())
this.val$libName == orig(this.val$libName)
this.val$libName.toString == orig(this.val$libName.toString)
return == null
===========================================================================
com.jogamp.common.os.NativeLibrary:::CLASS
com.jogamp.common.os.NativeLibrary.dynLink has only one value
com.jogamp.common.os.NativeLibrary.dynLink.getClass().getName() == jogamp.common.os.UnixDynamicLinkerImpl.class
com.jogamp.common.os.NativeLibrary.prefixes has only one value
com.jogamp.common.os.NativeLibrary.prefixes.getClass().getName() == java.lang.String[].class
com.jogamp.common.os.NativeLibrary.prefixes[] contains no nulls and has only one value, of length 1
com.jogamp.common.os.NativeLibrary.prefixes[] elements has only one value
com.jogamp.common.os.NativeLibrary.prefixes[].getClass().getName() == [java.lang.String]
com.jogamp.common.os.NativeLibrary.prefixes[].getClass().getName() elements == java.lang.String.class
com.jogamp.common.os.NativeLibrary.prefixes[].toString == [lib]
com.jogamp.common.os.NativeLibrary.prefixes[].toString elements == "lib"
com.jogamp.common.os.NativeLibrary.suffixes has only one value
com.jogamp.common.os.NativeLibrary.suffixes.getClass().getName() == java.lang.String[].class
com.jogamp.common.os.NativeLibrary.suffixes[] contains no nulls and has only one value, of length 1
com.jogamp.common.os.NativeLibrary.suffixes[] elements has only one value
com.jogamp.common.os.NativeLibrary.suffixes[].getClass().getName() == [java.lang.String]
com.jogamp.common.os.NativeLibrary.suffixes[].getClass().getName() elements == java.lang.String.class
com.jogamp.common.os.NativeLibrary.suffixes[].toString == [.so]
com.jogamp.common.os.NativeLibrary.suffixes[].toString elements == ".so"
size(com.jogamp.common.os.NativeLibrary.prefixes[]) == 1
size(com.jogamp.common.os.NativeLibrary.suffixes[]) == 1
===========================================================================
com.jogamp.common.os.NativeLibrary.findLibrary(java.lang.String, java.lang.ClassLoader):::ENTER
com.jogamp.common.os.NativeLibrary.initializedFindLibraryMethod == false
com.jogamp.common.os.NativeLibrary.findLibraryMethod == null
arg0 has only one value
arg0.toString == "gluegen-rt"
arg1 has only one value
arg1.getClass().getName() == jdk.internal.loader.ClassLoaders$AppClassLoader.class
===========================================================================
com.jogamp.common.os.NativeLibrary.findLibrary(java.lang.String, java.lang.ClassLoader):::EXIT
com.jogamp.common.os.NativeLibrary.dynLink == orig(com.jogamp.common.os.NativeLibrary.dynLink)
com.jogamp.common.os.NativeLibrary.dynLink.getClass().getName() == orig(com.jogamp.common.os.NativeLibrary.dynLink.getClass().getName())
com.jogamp.common.os.NativeLibrary.prefixes == orig(com.jogamp.common.os.NativeLibrary.prefixes)
com.jogamp.common.os.NativeLibrary.prefixes.getClass().getName() == orig(com.jogamp.common.os.NativeLibrary.prefixes.getClass().getName())
com.jogamp.common.os.NativeLibrary.prefixes[] == orig(com.jogamp.common.os.NativeLibrary.prefixes[])
com.jogamp.common.os.NativeLibrary.suffixes == orig(com.jogamp.common.os.NativeLibrary.suffixes)
com.jogamp.common.os.NativeLibrary.suffixes.getClass().getName() == orig(com.jogamp.common.os.NativeLibrary.suffixes.getClass().getName())
com.jogamp.common.os.NativeLibrary.suffixes[] == orig(com.jogamp.common.os.NativeLibrary.suffixes[])
arg0.toString == orig(arg0.toString)
com.jogamp.common.os.NativeLibrary.initializedFindLibraryMethod == true
com.jogamp.common.os.NativeLibrary.findLibraryMethod has only one value
arg0.toString == "gluegen-rt"
return == null
===========================================================================
com.jogamp.common.os.NativeLibrary.findLibraryImpl(java.lang.String, java.lang.ClassLoader):::ENTER
com.jogamp.common.os.NativeLibrary.initializedFindLibraryMethod == false
com.jogamp.common.os.NativeLibrary.findLibraryMethod == null
arg0 has only one value
arg0.toString == "gluegen-rt"
arg1 has only one value
arg1.getClass().getName() == jdk.internal.loader.ClassLoaders$AppClassLoader.class
===========================================================================
com.jogamp.common.os.NativeLibrary.findLibraryImpl(java.lang.String, java.lang.ClassLoader):::EXIT446
===========================================================================
com.jogamp.common.os.NativeLibrary.findLibraryImpl(java.lang.String, java.lang.ClassLoader):::EXIT
com.jogamp.common.os.NativeLibrary.dynLink == orig(com.jogamp.common.os.NativeLibrary.dynLink)
com.jogamp.common.os.NativeLibrary.dynLink.getClass().getName() == orig(com.jogamp.common.os.NativeLibrary.dynLink.getClass().getName())
com.jogamp.common.os.NativeLibrary.prefixes == orig(com.jogamp.common.os.NativeLibrary.prefixes)
com.jogamp.common.os.NativeLibrary.prefixes.getClass().getName() == orig(com.jogamp.common.os.NativeLibrary.prefixes.getClass().getName())
com.jogamp.common.os.NativeLibrary.prefixes[] == orig(com.jogamp.common.os.NativeLibrary.prefixes[])
com.jogamp.common.os.NativeLibrary.suffixes == orig(com.jogamp.common.os.NativeLibrary.suffixes)
com.jogamp.common.os.NativeLibrary.suffixes.getClass().getName() == orig(com.jogamp.common.os.NativeLibrary.suffixes.getClass().getName())
com.jogamp.common.os.NativeLibrary.suffixes[] == orig(com.jogamp.common.os.NativeLibrary.suffixes[])
arg0.toString == orig(arg0.toString)
com.jogamp.common.os.NativeLibrary.initializedFindLibraryMethod == true
com.jogamp.common.os.NativeLibrary.findLibraryMethod has only one value
arg0.toString == "gluegen-rt"
return == null
===========================================================================
com.jogamp.common.os.NativeLibrary.isValidNativeLibraryName(java.lang.String, boolean):::ENTER
com.jogamp.common.os.NativeLibrary.initializedFindLibraryMethod == false
com.jogamp.common.os.NativeLibrary.findLibraryMethod == null
arg0 has only one value
arg0.toString == "gluegen-rt"
arg1 == false
===========================================================================
com.jogamp.common.os.NativeLibrary.isValidNativeLibraryName(java.lang.String, boolean):::EXIT270
===========================================================================
com.jogamp.common.os.NativeLibrary.isValidNativeLibraryName(java.lang.String, boolean):::EXIT
com.jogamp.common.os.NativeLibrary.dynLink == orig(com.jogamp.common.os.NativeLibrary.dynLink)
com.jogamp.common.os.NativeLibrary.dynLink.getClass().getName() == orig(com.jogamp.common.os.NativeLibrary.dynLink.getClass().getName())
com.jogamp.common.os.NativeLibrary.prefixes == orig(com.jogamp.common.os.NativeLibrary.prefixes)
com.jogamp.common.os.NativeLibrary.prefixes.getClass().getName() == orig(com.jogamp.common.os.NativeLibrary.prefixes.getClass().getName())
com.jogamp.common.os.NativeLibrary.prefixes[] == orig(com.jogamp.common.os.NativeLibrary.prefixes[])
com.jogamp.common.os.NativeLibrary.suffixes == orig(com.jogamp.common.os.NativeLibrary.suffixes)
com.jogamp.common.os.NativeLibrary.suffixes.getClass().getName() == orig(com.jogamp.common.os.NativeLibrary.suffixes.getClass().getName())
com.jogamp.common.os.NativeLibrary.suffixes[] == orig(com.jogamp.common.os.NativeLibrary.suffixes[])
com.jogamp.common.os.NativeLibrary.initializedFindLibraryMethod == orig(com.jogamp.common.os.NativeLibrary.initializedFindLibraryMethod)
com.jogamp.common.os.NativeLibrary.findLibraryMethod == orig(com.jogamp.common.os.NativeLibrary.findLibraryMethod)
arg0.toString == orig(arg0.toString)
com.jogamp.common.os.NativeLibrary.initializedFindLibraryMethod == false
com.jogamp.common.os.NativeLibrary.findLibraryMethod == null
arg0.toString == "gluegen-rt"
return == null
===========================================================================
com.jogamp.common.os.Platform$1:::OBJECT
this has only one value
===========================================================================
com.jogamp.common.os.Platform$1.():::EXIT
===========================================================================
com.jogamp.common.os.Platform$ABIType:::OBJECT
this.id one of { 0, 1, 2 }
===========================================================================
com.jogamp.common.os.Platform$ABIType.ABIType(java.lang.String, int, int):::ENTER
arg0.toString one of { "EABI_GNU_ARMEL", "EABI_GNU_ARMHF", "GENERIC_ABI" }
arg1 one of { 0, 1, 2 }
arg2 one of { 0, 1, 2 }
===========================================================================
com.jogamp.common.os.Platform$ABIType.ABIType(java.lang.String, int, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "EABI_GNU_ARMEL", "EABI_GNU_ARMHF", "GENERIC_ABI" }
===========================================================================
com.jogamp.common.os.Platform$CPUFamily:::OBJECT
===========================================================================
com.jogamp.common.os.Platform$CPUFamily.CPUFamily(java.lang.String, int, int):::ENTER
===========================================================================
com.jogamp.common.os.Platform$CPUFamily.CPUFamily(java.lang.String, int, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
com.jogamp.common.os.Platform$CPUType:::CLASS
com.jogamp.common.os.Platform$CPUType.X86_32 has only one value
com.jogamp.common.os.Platform$CPUType.X86_64 has only one value
com.jogamp.common.os.Platform$CPUType.ARM has only one value
com.jogamp.common.os.Platform$CPUType.ARMv5 has only one value
com.jogamp.common.os.Platform$CPUType.ARMv6 has only one value
com.jogamp.common.os.Platform$CPUType.ARMv7 has only one value
com.jogamp.common.os.Platform$CPUType.PPC has only one value
com.jogamp.common.os.Platform$CPUType.SPARC_32 has only one value
com.jogamp.common.os.Platform$CPUType.SPARCV9_64 has only one value
com.jogamp.common.os.Platform$CPUType.IA64 has only one value
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0 has only one value
com.jogamp.common.os.Platform$CPUType.X86_32.id == 1
com.jogamp.common.os.Platform$CPUType.X86_32.family has only one value
com.jogamp.common.os.Platform$CPUType.$VALUES has only one value
com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$CPUType[].class
com.jogamp.common.os.Platform$CPUType.$VALUES[] contains no nulls and has only one value, of length 11
com.jogamp.common.os.Platform$CPUType.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType]
com.jogamp.common.os.Platform$CPUType.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.CPUType.class
com.jogamp.common.os.Platform$CPUType.$VALUES[].id == [1, 2, 0, 1, 2, 4, 0, 1, 2, 0, 1]
com.jogamp.common.os.Platform$CPUType.$VALUES[].id elements >= 0
com.jogamp.common.os.Platform$CPUType.$VALUES[].family contains no nulls and has only one value, of length 11
com.jogamp.common.os.Platform$CPUType.X86_64.id == 2
com.jogamp.common.os.Platform$CPUType.X86_64.family has only one value
com.jogamp.common.os.Platform$CPUType.ARM.id == 0
com.jogamp.common.os.Platform$CPUType.ARM.family has only one value
com.jogamp.common.os.Platform$CPUType.ARMv5.id == 1
com.jogamp.common.os.Platform$CPUType.ARMv5.family has only one value
com.jogamp.common.os.Platform$CPUType.ARMv6.id == 2
com.jogamp.common.os.Platform$CPUType.ARMv6.family has only one value
com.jogamp.common.os.Platform$CPUType.ARMv7.id == 4
com.jogamp.common.os.Platform$CPUType.ARMv7.family has only one value
com.jogamp.common.os.Platform$CPUType.PPC.id == 0
com.jogamp.common.os.Platform$CPUType.PPC.family has only one value
com.jogamp.common.os.Platform$CPUType.SPARC_32.id == 1
com.jogamp.common.os.Platform$CPUType.SPARC_32.family has only one value
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id == 2
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family has only one value
com.jogamp.common.os.Platform$CPUType.IA64.id == 0
com.jogamp.common.os.Platform$CPUType.IA64.family has only one value
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id == 1
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family has only one value
com.jogamp.common.os.Platform$CPUFamily.X86 has only one value
com.jogamp.common.os.Platform$CPUFamily.X86 != null
com.jogamp.common.os.Platform$CPUFamily.ARM has only one value
com.jogamp.common.os.Platform$CPUFamily.ARM != null
com.jogamp.common.os.Platform$CPUFamily.PPC has only one value
com.jogamp.common.os.Platform$CPUFamily.PPC != null
com.jogamp.common.os.Platform$CPUFamily.SPARC has only one value
com.jogamp.common.os.Platform$CPUFamily.SPARC != null
com.jogamp.common.os.Platform$CPUFamily.PA_RISC has only one value
com.jogamp.common.os.Platform$CPUFamily.PA_RISC != null
com.jogamp.common.os.Platform$CPUFamily.IA64 has only one value
com.jogamp.common.os.Platform$CPUFamily.IA64 != null
com.jogamp.common.os.Platform$CPUType.X86_32.family.id == 0
com.jogamp.common.os.Platform$CPUFamily.$VALUES has only one value
com.jogamp.common.os.Platform$CPUFamily.$VALUES != null
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$CPUFamily[].class
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] contains no nulls and has only one value, of length 6
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] elements != null
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily]
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.CPUFamily.class
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == [0, 65536, 131072, 196608, -65536, -61440]
com.jogamp.common.os.Platform$CPUType.X86_64.family.id == 0
com.jogamp.common.os.Platform$CPUType.ARM.family.id == 65536
com.jogamp.common.os.Platform$CPUType.ARMv5.family.id == 65536
com.jogamp.common.os.Platform$CPUType.ARMv6.family.id == 65536
com.jogamp.common.os.Platform$CPUType.ARMv7.family.id == 65536
com.jogamp.common.os.Platform$CPUType.PPC.family.id == 131072
com.jogamp.common.os.Platform$CPUType.SPARC_32.family.id == 196608
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family.id == 196608
com.jogamp.common.os.Platform$CPUType.IA64.family.id == -61440
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family.id == -65536
com.jogamp.common.os.Platform$CPUType.$VALUES[].family.id == [0, 0, 65536, 65536, 65536, 65536, 131072, 196608, 196608, -61440, -65536]
size(com.jogamp.common.os.Platform$CPUType.$VALUES[]) == 11
size(com.jogamp.common.os.Platform$CPUFamily.$VALUES[]) == 6
===========================================================================
com.jogamp.common.os.Platform$CPUType:::OBJECT
this.id >= 0
com.jogamp.common.os.Platform$CPUFamily.X86.id == 0
com.jogamp.common.os.Platform$CPUFamily.ARM.id == 65536
com.jogamp.common.os.Platform$CPUFamily.PPC.id == 131072
com.jogamp.common.os.Platform$CPUFamily.SPARC.id == 196608
com.jogamp.common.os.Platform$CPUFamily.PA_RISC.id == -65536
com.jogamp.common.os.Platform$CPUFamily.IA64.id == -61440
===========================================================================
com.jogamp.common.os.Platform$CPUType.CPUType(java.lang.String, int, com.jogamp.common.os.Platform$CPUFamily, int):::ENTER
com.jogamp.common.os.Platform$CPUFamily.X86 has only one value
com.jogamp.common.os.Platform$CPUFamily.ARM has only one value
com.jogamp.common.os.Platform$CPUFamily.PPC has only one value
com.jogamp.common.os.Platform$CPUFamily.SPARC has only one value
com.jogamp.common.os.Platform$CPUFamily.PA_RISC has only one value
com.jogamp.common.os.Platform$CPUFamily.IA64 has only one value
com.jogamp.common.os.Platform$CPUFamily.X86.id == 0
com.jogamp.common.os.Platform$CPUFamily.$VALUES has only one value
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$CPUFamily[].class
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] contains no nulls and has only one value, of length 6
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily]
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.CPUFamily.class
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == [0, 65536, 131072, 196608, -65536, -61440]
com.jogamp.common.os.Platform$CPUFamily.ARM.id == 65536
com.jogamp.common.os.Platform$CPUFamily.PPC.id == 131072
com.jogamp.common.os.Platform$CPUFamily.SPARC.id == 196608
com.jogamp.common.os.Platform$CPUFamily.PA_RISC.id == -65536
com.jogamp.common.os.Platform$CPUFamily.IA64.id == -61440
arg3 >= 0
size(com.jogamp.common.os.Platform$CPUFamily.$VALUES[]) == 6
===========================================================================
com.jogamp.common.os.Platform$CPUType.CPUType(java.lang.String, int, com.jogamp.common.os.Platform$CPUFamily, int):::EXIT
com.jogamp.common.os.Platform$CPUFamily.X86 == orig(com.jogamp.common.os.Platform$CPUFamily.X86)
com.jogamp.common.os.Platform$CPUFamily.ARM == orig(com.jogamp.common.os.Platform$CPUFamily.ARM)
com.jogamp.common.os.Platform$CPUFamily.PPC == orig(com.jogamp.common.os.Platform$CPUFamily.PPC)
com.jogamp.common.os.Platform$CPUFamily.SPARC == orig(com.jogamp.common.os.Platform$CPUFamily.SPARC)
com.jogamp.common.os.Platform$CPUFamily.PA_RISC == orig(com.jogamp.common.os.Platform$CPUFamily.PA_RISC)
com.jogamp.common.os.Platform$CPUFamily.IA64 == orig(com.jogamp.common.os.Platform$CPUFamily.IA64)
com.jogamp.common.os.Platform$CPUFamily.$VALUES == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES)
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[])
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id)
com.jogamp.common.os.Platform$CPUFamily.X86.id == orig(com.jogamp.common.os.Platform$CPUFamily.X86.id)
com.jogamp.common.os.Platform$CPUFamily.ARM.id == orig(com.jogamp.common.os.Platform$CPUFamily.ARM.id)
com.jogamp.common.os.Platform$CPUFamily.PPC.id == orig(com.jogamp.common.os.Platform$CPUFamily.PPC.id)
com.jogamp.common.os.Platform$CPUFamily.SPARC.id == orig(com.jogamp.common.os.Platform$CPUFamily.SPARC.id)
com.jogamp.common.os.Platform$CPUFamily.PA_RISC.id == orig(com.jogamp.common.os.Platform$CPUFamily.PA_RISC.id)
com.jogamp.common.os.Platform$CPUFamily.IA64.id == orig(com.jogamp.common.os.Platform$CPUFamily.IA64.id)
arg0.toString == orig(arg0.toString)
arg2.id == orig(arg2.id)
===========================================================================
com.jogamp.common.os.Platform$CPUType.values():::ENTER
===========================================================================
com.jogamp.common.os.Platform$CPUType.values():::EXIT
com.jogamp.common.os.Platform$CPUType.X86_32 == orig(com.jogamp.common.os.Platform$CPUType.X86_32)
com.jogamp.common.os.Platform$CPUType.X86_64 == orig(com.jogamp.common.os.Platform$CPUType.X86_64)
com.jogamp.common.os.Platform$CPUType.ARM == orig(com.jogamp.common.os.Platform$CPUType.ARM)
com.jogamp.common.os.Platform$CPUType.ARMv5 == orig(com.jogamp.common.os.Platform$CPUType.ARMv5)
com.jogamp.common.os.Platform$CPUType.ARMv6 == orig(com.jogamp.common.os.Platform$CPUType.ARMv6)
com.jogamp.common.os.Platform$CPUType.ARMv7 == orig(com.jogamp.common.os.Platform$CPUType.ARMv7)
com.jogamp.common.os.Platform$CPUType.PPC == orig(com.jogamp.common.os.Platform$CPUType.PPC)
com.jogamp.common.os.Platform$CPUType.SPARC_32 == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64 == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64)
com.jogamp.common.os.Platform$CPUType.IA64 == orig(com.jogamp.common.os.Platform$CPUType.IA64)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0 == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0)
com.jogamp.common.os.Platform$CPUType.X86_32.id == orig(com.jogamp.common.os.Platform$CPUType.X86_32.id)
com.jogamp.common.os.Platform$CPUType.X86_32.family == orig(com.jogamp.common.os.Platform$CPUType.X86_32.family)
com.jogamp.common.os.Platform$CPUType.$VALUES == orig(com.jogamp.common.os.Platform$CPUType.$VALUES)
com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUType.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[])
com.jogamp.common.os.Platform$CPUType.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].id)
com.jogamp.common.os.Platform$CPUType.$VALUES[].family == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].family)
com.jogamp.common.os.Platform$CPUType.X86_64.id == orig(com.jogamp.common.os.Platform$CPUType.X86_64.id)
com.jogamp.common.os.Platform$CPUType.X86_64.family == orig(com.jogamp.common.os.Platform$CPUType.X86_64.family)
com.jogamp.common.os.Platform$CPUType.ARM.id == orig(com.jogamp.common.os.Platform$CPUType.ARM.id)
com.jogamp.common.os.Platform$CPUType.ARM.family == orig(com.jogamp.common.os.Platform$CPUType.ARM.family)
com.jogamp.common.os.Platform$CPUType.ARMv5.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.id)
com.jogamp.common.os.Platform$CPUType.ARMv5.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.family)
com.jogamp.common.os.Platform$CPUType.ARMv6.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.id)
com.jogamp.common.os.Platform$CPUType.ARMv6.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.family)
com.jogamp.common.os.Platform$CPUType.ARMv7.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.id)
com.jogamp.common.os.Platform$CPUType.ARMv7.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.family)
com.jogamp.common.os.Platform$CPUType.PPC.id == orig(com.jogamp.common.os.Platform$CPUType.PPC.id)
com.jogamp.common.os.Platform$CPUType.PPC.family == orig(com.jogamp.common.os.Platform$CPUType.PPC.family)
com.jogamp.common.os.Platform$CPUType.SPARC_32.id == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.id)
com.jogamp.common.os.Platform$CPUType.SPARC_32.family == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.family)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family)
com.jogamp.common.os.Platform$CPUType.IA64.id == orig(com.jogamp.common.os.Platform$CPUType.IA64.id)
com.jogamp.common.os.Platform$CPUType.IA64.family == orig(com.jogamp.common.os.Platform$CPUType.IA64.family)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family)
com.jogamp.common.os.Platform$CPUFamily.X86 == orig(com.jogamp.common.os.Platform$CPUFamily.X86)
com.jogamp.common.os.Platform$CPUFamily.ARM == orig(com.jogamp.common.os.Platform$CPUFamily.ARM)
com.jogamp.common.os.Platform$CPUFamily.PPC == orig(com.jogamp.common.os.Platform$CPUFamily.PPC)
com.jogamp.common.os.Platform$CPUFamily.SPARC == orig(com.jogamp.common.os.Platform$CPUFamily.SPARC)
com.jogamp.common.os.Platform$CPUFamily.PA_RISC == orig(com.jogamp.common.os.Platform$CPUFamily.PA_RISC)
com.jogamp.common.os.Platform$CPUFamily.IA64 == orig(com.jogamp.common.os.Platform$CPUFamily.IA64)
com.jogamp.common.os.Platform$CPUType.X86_32.family.id == orig(com.jogamp.common.os.Platform$CPUType.X86_32.family.id)
com.jogamp.common.os.Platform$CPUFamily.$VALUES == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES)
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[])
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id)
com.jogamp.common.os.Platform$CPUType.X86_64.family.id == orig(com.jogamp.common.os.Platform$CPUType.X86_64.family.id)
com.jogamp.common.os.Platform$CPUType.ARM.family.id == orig(com.jogamp.common.os.Platform$CPUType.ARM.family.id)
com.jogamp.common.os.Platform$CPUType.ARMv5.family.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.family.id)
com.jogamp.common.os.Platform$CPUType.ARMv6.family.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.family.id)
com.jogamp.common.os.Platform$CPUType.ARMv7.family.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.family.id)
com.jogamp.common.os.Platform$CPUType.PPC.family.id == orig(com.jogamp.common.os.Platform$CPUType.PPC.family.id)
com.jogamp.common.os.Platform$CPUType.SPARC_32.family.id == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.family.id)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family.id == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family.id)
com.jogamp.common.os.Platform$CPUType.IA64.family.id == orig(com.jogamp.common.os.Platform$CPUType.IA64.family.id)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family.id == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family.id)
com.jogamp.common.os.Platform$CPUType.$VALUES[].family.id == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].family.id)
return has only one value
return.getClass().getName() == com.jogamp.common.os.Platform$CPUType[].class
return[] contains no nulls and has only one value, of length 11
return[].id == [1, 2, 0, 1, 2, 4, 0, 1, 2, 0, 1]
return[].id elements >= 0
return[].family contains no nulls and has only one value, of length 11
return[].family.id == [0, 0, 65536, 65536, 65536, 65536, 131072, 196608, 196608, -61440, -65536]
size(return[]) == 11
===========================================================================
com.jogamp.common.os.Platform$OSType:::CLASS
com.jogamp.common.os.Platform$OSType.LINUX has only one value
com.jogamp.common.os.Platform$OSType.FREEBSD has only one value
com.jogamp.common.os.Platform$OSType.ANDROID has only one value
com.jogamp.common.os.Platform$OSType.MACOS has only one value
com.jogamp.common.os.Platform$OSType.SUNOS has only one value
com.jogamp.common.os.Platform$OSType.HPUX has only one value
com.jogamp.common.os.Platform$OSType.WINDOWS has only one value
com.jogamp.common.os.Platform$OSType.OPENKODE has only one value
com.jogamp.common.os.Platform$OSType.LINUX.id == 0
com.jogamp.common.os.Platform$OSType.$VALUES has only one value
com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$OSType[].class
com.jogamp.common.os.Platform$OSType.$VALUES[] contains no nulls and has only one value, of length 8
com.jogamp.common.os.Platform$OSType.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType]
com.jogamp.common.os.Platform$OSType.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.OSType.class
com.jogamp.common.os.Platform$OSType.$VALUES[].id == [0, 1, 2, 3, 4, 5, 6, 7]
com.jogamp.common.os.Platform$OSType.$VALUES[].id elements >= 0
com.jogamp.common.os.Platform$OSType.FREEBSD.id == 1
com.jogamp.common.os.Platform$OSType.ANDROID.id == 2
com.jogamp.common.os.Platform$OSType.MACOS.id == 3
com.jogamp.common.os.Platform$OSType.SUNOS.id == 4
com.jogamp.common.os.Platform$OSType.HPUX.id == 5
com.jogamp.common.os.Platform$OSType.WINDOWS.id == 6
com.jogamp.common.os.Platform$OSType.OPENKODE.id == 7
size(com.jogamp.common.os.Platform$OSType.$VALUES[]) == 8
===========================================================================
com.jogamp.common.os.Platform$OSType:::OBJECT
===========================================================================
com.jogamp.common.os.Platform$OSType.OSType(java.lang.String, int, int):::ENTER
===========================================================================
com.jogamp.common.os.Platform$OSType.OSType(java.lang.String, int, int):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
com.jogamp.common.os.Platform$OSType.values():::ENTER
===========================================================================
com.jogamp.common.os.Platform$OSType.values():::EXIT
com.jogamp.common.os.Platform$OSType.LINUX == orig(com.jogamp.common.os.Platform$OSType.LINUX)
com.jogamp.common.os.Platform$OSType.FREEBSD == orig(com.jogamp.common.os.Platform$OSType.FREEBSD)
com.jogamp.common.os.Platform$OSType.ANDROID == orig(com.jogamp.common.os.Platform$OSType.ANDROID)
com.jogamp.common.os.Platform$OSType.MACOS == orig(com.jogamp.common.os.Platform$OSType.MACOS)
com.jogamp.common.os.Platform$OSType.SUNOS == orig(com.jogamp.common.os.Platform$OSType.SUNOS)
com.jogamp.common.os.Platform$OSType.HPUX == orig(com.jogamp.common.os.Platform$OSType.HPUX)
com.jogamp.common.os.Platform$OSType.WINDOWS == orig(com.jogamp.common.os.Platform$OSType.WINDOWS)
com.jogamp.common.os.Platform$OSType.OPENKODE == orig(com.jogamp.common.os.Platform$OSType.OPENKODE)
com.jogamp.common.os.Platform$OSType.LINUX.id == orig(com.jogamp.common.os.Platform$OSType.LINUX.id)
com.jogamp.common.os.Platform$OSType.$VALUES == orig(com.jogamp.common.os.Platform$OSType.$VALUES)
com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$OSType.$VALUES[] == orig(com.jogamp.common.os.Platform$OSType.$VALUES[])
com.jogamp.common.os.Platform$OSType.$VALUES[].id == orig(com.jogamp.common.os.Platform$OSType.$VALUES[].id)
com.jogamp.common.os.Platform$OSType.FREEBSD.id == orig(com.jogamp.common.os.Platform$OSType.FREEBSD.id)
com.jogamp.common.os.Platform$OSType.ANDROID.id == orig(com.jogamp.common.os.Platform$OSType.ANDROID.id)
com.jogamp.common.os.Platform$OSType.MACOS.id == orig(com.jogamp.common.os.Platform$OSType.MACOS.id)
com.jogamp.common.os.Platform$OSType.SUNOS.id == orig(com.jogamp.common.os.Platform$OSType.SUNOS.id)
com.jogamp.common.os.Platform$OSType.HPUX.id == orig(com.jogamp.common.os.Platform$OSType.HPUX.id)
com.jogamp.common.os.Platform$OSType.WINDOWS.id == orig(com.jogamp.common.os.Platform$OSType.WINDOWS.id)
com.jogamp.common.os.Platform$OSType.OPENKODE.id == orig(com.jogamp.common.os.Platform$OSType.OPENKODE.id)
return.getClass().getName() == com.jogamp.common.os.Platform$OSType[].class
return[] contains no nulls and has only one value, of length 8
return[].id == [0, 1, 2, 3, 4, 5, 6, 7]
return[].id elements >= 0
size(return[]) == 8
===========================================================================
com.jogamp.common.os.Platform:::CLASS
jogamp.common.os.PlatformPropsImpl.OS has only one value
jogamp.common.os.PlatformPropsImpl.OS.toString == "Linux"
jogamp.common.os.PlatformPropsImpl.OS_lower has only one value
jogamp.common.os.PlatformPropsImpl.OS_lower.toString == "linux"
jogamp.common.os.PlatformPropsImpl.OS_VERSION has only one value
jogamp.common.os.PlatformPropsImpl.OS_VERSION.toString == "6.8.0-52-generic"
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER has only one value
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val has only one value
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[] == [6, 8, 0]
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[] elements one of { 0, 6, 8 }
jogamp.common.os.PlatformPropsImpl.ARCH has only one value
jogamp.common.os.PlatformPropsImpl.ARCH.toString == "amd64"
jogamp.common.os.PlatformPropsImpl.ARCH_lower has only one value
jogamp.common.os.PlatformPropsImpl.ARCH_lower.toString == "amd64"
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR.toString == "Ubuntu"
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL.toString == "https://ubuntu.com/"
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION.toString == "11.0.26"
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[] == [11, 0, 26]
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[] elements one of { 0, 11, 26 }
jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME.toString == "OpenJDK 64-Bit Server VM"
jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME.toString == "OpenJDK Runtime Environment"
jogamp.common.os.PlatformPropsImpl.JAVA_SE == true
jogamp.common.os.PlatformPropsImpl.NEWLINE has only one value
jogamp.common.os.PlatformPropsImpl.NEWLINE.toString == "\n"
jogamp.common.os.PlatformPropsImpl.LITTLE_ENDIAN == true
jogamp.common.os.PlatformPropsImpl.CPU_ARCH has only one value
com.jogamp.common.os.Platform$CPUType.X86_32 has only one value
com.jogamp.common.os.Platform$CPUType.X86_64 has only one value
com.jogamp.common.os.Platform$CPUType.ARM has only one value
com.jogamp.common.os.Platform$CPUType.ARMv5 has only one value
com.jogamp.common.os.Platform$CPUType.ARMv6 has only one value
com.jogamp.common.os.Platform$CPUType.ARMv7 has only one value
com.jogamp.common.os.Platform$CPUType.PPC has only one value
com.jogamp.common.os.Platform$CPUType.SPARC_32 has only one value
com.jogamp.common.os.Platform$CPUType.SPARCV9_64 has only one value
com.jogamp.common.os.Platform$CPUType.IA64 has only one value
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0 has only one value
com.jogamp.common.os.Platform$CPUType.X86_32.id == 1
com.jogamp.common.os.Platform$CPUType.X86_32.family has only one value
com.jogamp.common.os.Platform$CPUType.$VALUES has only one value
com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$CPUType[].class
com.jogamp.common.os.Platform$CPUType.$VALUES[] contains no nulls and has only one value, of length 11
com.jogamp.common.os.Platform$CPUType.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType]
com.jogamp.common.os.Platform$CPUType.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.CPUType.class
com.jogamp.common.os.Platform$CPUType.$VALUES[].id == [1, 2, 0, 1, 2, 4, 0, 1, 2, 0, 1]
com.jogamp.common.os.Platform$CPUType.$VALUES[].id elements >= 0
com.jogamp.common.os.Platform$CPUType.$VALUES[].family contains no nulls and has only one value, of length 11
com.jogamp.common.os.Platform$CPUType.X86_64.id == 2
com.jogamp.common.os.Platform$CPUType.X86_64.family has only one value
com.jogamp.common.os.Platform$CPUType.ARM.id == 0
com.jogamp.common.os.Platform$CPUType.ARM.family has only one value
com.jogamp.common.os.Platform$CPUType.ARMv5.id == 1
com.jogamp.common.os.Platform$CPUType.ARMv5.family has only one value
com.jogamp.common.os.Platform$CPUType.ARMv6.id == 2
com.jogamp.common.os.Platform$CPUType.ARMv6.family has only one value
com.jogamp.common.os.Platform$CPUType.ARMv7.id == 4
com.jogamp.common.os.Platform$CPUType.ARMv7.family has only one value
com.jogamp.common.os.Platform$CPUType.PPC.id == 0
com.jogamp.common.os.Platform$CPUType.PPC.family has only one value
com.jogamp.common.os.Platform$CPUType.SPARC_32.id == 1
com.jogamp.common.os.Platform$CPUType.SPARC_32.family has only one value
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id == 2
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family has only one value
com.jogamp.common.os.Platform$CPUType.IA64.id == 0
com.jogamp.common.os.Platform$CPUType.IA64.family has only one value
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id == 1
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family has only one value
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.id == 2
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family has only one value
com.jogamp.common.os.Platform$CPUFamily.X86 has only one value
com.jogamp.common.os.Platform$CPUFamily.ARM has only one value
com.jogamp.common.os.Platform$CPUFamily.PPC has only one value
com.jogamp.common.os.Platform$CPUFamily.SPARC has only one value
com.jogamp.common.os.Platform$CPUFamily.PA_RISC has only one value
com.jogamp.common.os.Platform$CPUFamily.IA64 has only one value
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family.id == 0
com.jogamp.common.os.Platform$CPUFamily.$VALUES has only one value
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$CPUFamily[].class
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] contains no nulls and has only one value, of length 6
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily]
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.CPUFamily.class
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == [0, 65536, 131072, 196608, -65536, -61440]
jogamp.common.os.PlatformPropsImpl.ABI_TYPE has only one value
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI has only one value
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL has only one value
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF has only one value
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id == 0
com.jogamp.common.os.Platform$ABIType.$VALUES has only one value
com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$ABIType[].class
com.jogamp.common.os.Platform$ABIType.$VALUES[] contains no nulls and has only one value, of length 3
com.jogamp.common.os.Platform$ABIType.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.ABIType, com.jogamp.common.os.Platform.ABIType, com.jogamp.common.os.Platform.ABIType]
com.jogamp.common.os.Platform$ABIType.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.ABIType.class
com.jogamp.common.os.Platform$ABIType.$VALUES[].id == [0, 1, 2]
com.jogamp.common.os.Platform$ABIType.$VALUES[].id elements one of { 0, 1, 2 }
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id == 1
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id == 2
jogamp.common.os.PlatformPropsImpl.ABI_TYPE.id == 0
jogamp.common.os.PlatformPropsImpl.OS_TYPE has only one value
com.jogamp.common.os.Platform$OSType.LINUX has only one value
com.jogamp.common.os.Platform$OSType.FREEBSD has only one value
com.jogamp.common.os.Platform$OSType.ANDROID has only one value
com.jogamp.common.os.Platform$OSType.MACOS has only one value
com.jogamp.common.os.Platform$OSType.SUNOS has only one value
com.jogamp.common.os.Platform$OSType.HPUX has only one value
com.jogamp.common.os.Platform$OSType.WINDOWS has only one value
com.jogamp.common.os.Platform$OSType.OPENKODE has only one value
com.jogamp.common.os.Platform$OSType.LINUX.id == 0
com.jogamp.common.os.Platform$OSType.$VALUES has only one value
com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$OSType[].class
com.jogamp.common.os.Platform$OSType.$VALUES[] contains no nulls and has only one value, of length 8
com.jogamp.common.os.Platform$OSType.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType]
com.jogamp.common.os.Platform$OSType.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.OSType.class
com.jogamp.common.os.Platform$OSType.$VALUES[].id == [0, 1, 2, 3, 4, 5, 6, 7]
com.jogamp.common.os.Platform$OSType.FREEBSD.id == 1
com.jogamp.common.os.Platform$OSType.ANDROID.id == 2
com.jogamp.common.os.Platform$OSType.MACOS.id == 3
com.jogamp.common.os.Platform$OSType.SUNOS.id == 4
com.jogamp.common.os.Platform$OSType.HPUX.id == 5
com.jogamp.common.os.Platform$OSType.WINDOWS.id == 6
com.jogamp.common.os.Platform$OSType.OPENKODE.id == 7
jogamp.common.os.PlatformPropsImpl.OS_TYPE.id == 0
jogamp.common.os.PlatformPropsImpl.os_and_arch has only one value
jogamp.common.os.PlatformPropsImpl.os_and_arch.toString == "linux-amd64"
size(jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[]) == 3
size(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[]) == 3
size(com.jogamp.common.os.Platform$CPUType.$VALUES[]) == 11
size(com.jogamp.common.os.Platform$CPUFamily.$VALUES[]) == 6
size(com.jogamp.common.os.Platform$ABIType.$VALUES[]) == 3
size(com.jogamp.common.os.Platform$OSType.$VALUES[]) == 8
===========================================================================
com.jogamp.common.os.Platform.isRunningFromJarURL():::ENTER
===========================================================================
com.jogamp.common.os.Platform.isRunningFromJarURL():::EXIT
jogamp.common.os.PlatformPropsImpl.OS == orig(jogamp.common.os.PlatformPropsImpl.OS)
jogamp.common.os.PlatformPropsImpl.OS.toString == orig(jogamp.common.os.PlatformPropsImpl.OS.toString)
jogamp.common.os.PlatformPropsImpl.OS_lower == orig(jogamp.common.os.PlatformPropsImpl.OS_lower)
jogamp.common.os.PlatformPropsImpl.OS_lower.toString == orig(jogamp.common.os.PlatformPropsImpl.OS_lower.toString)
jogamp.common.os.PlatformPropsImpl.OS_VERSION == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION)
jogamp.common.os.PlatformPropsImpl.OS_VERSION.toString == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION.toString)
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER)
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val)
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[] == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[])
jogamp.common.os.PlatformPropsImpl.ARCH == orig(jogamp.common.os.PlatformPropsImpl.ARCH)
jogamp.common.os.PlatformPropsImpl.ARCH.toString == orig(jogamp.common.os.PlatformPropsImpl.ARCH.toString)
jogamp.common.os.PlatformPropsImpl.ARCH_lower == orig(jogamp.common.os.PlatformPropsImpl.ARCH_lower)
jogamp.common.os.PlatformPropsImpl.ARCH_lower.toString == orig(jogamp.common.os.PlatformPropsImpl.ARCH_lower.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR)
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL)
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[] == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[])
jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME)
jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME == orig(jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME)
jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_SE == orig(jogamp.common.os.PlatformPropsImpl.JAVA_SE)
jogamp.common.os.PlatformPropsImpl.NEWLINE == orig(jogamp.common.os.PlatformPropsImpl.NEWLINE)
jogamp.common.os.PlatformPropsImpl.NEWLINE.toString == orig(jogamp.common.os.PlatformPropsImpl.NEWLINE.toString)
jogamp.common.os.PlatformPropsImpl.LITTLE_ENDIAN == orig(jogamp.common.os.PlatformPropsImpl.LITTLE_ENDIAN)
jogamp.common.os.PlatformPropsImpl.CPU_ARCH == orig(jogamp.common.os.PlatformPropsImpl.CPU_ARCH)
com.jogamp.common.os.Platform$CPUType.X86_32 == orig(com.jogamp.common.os.Platform$CPUType.X86_32)
com.jogamp.common.os.Platform$CPUType.X86_64 == orig(com.jogamp.common.os.Platform$CPUType.X86_64)
com.jogamp.common.os.Platform$CPUType.ARM == orig(com.jogamp.common.os.Platform$CPUType.ARM)
com.jogamp.common.os.Platform$CPUType.ARMv5 == orig(com.jogamp.common.os.Platform$CPUType.ARMv5)
com.jogamp.common.os.Platform$CPUType.ARMv6 == orig(com.jogamp.common.os.Platform$CPUType.ARMv6)
com.jogamp.common.os.Platform$CPUType.ARMv7 == orig(com.jogamp.common.os.Platform$CPUType.ARMv7)
com.jogamp.common.os.Platform$CPUType.PPC == orig(com.jogamp.common.os.Platform$CPUType.PPC)
com.jogamp.common.os.Platform$CPUType.SPARC_32 == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64 == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64)
com.jogamp.common.os.Platform$CPUType.IA64 == orig(com.jogamp.common.os.Platform$CPUType.IA64)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0 == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0)
com.jogamp.common.os.Platform$CPUType.X86_32.id == orig(com.jogamp.common.os.Platform$CPUType.X86_32.id)
com.jogamp.common.os.Platform$CPUType.X86_32.family == orig(com.jogamp.common.os.Platform$CPUType.X86_32.family)
com.jogamp.common.os.Platform$CPUType.$VALUES == orig(com.jogamp.common.os.Platform$CPUType.$VALUES)
com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUType.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[])
com.jogamp.common.os.Platform$CPUType.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].id)
com.jogamp.common.os.Platform$CPUType.$VALUES[].family == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].family)
com.jogamp.common.os.Platform$CPUType.X86_64.id == orig(com.jogamp.common.os.Platform$CPUType.X86_64.id)
com.jogamp.common.os.Platform$CPUType.X86_64.family == orig(com.jogamp.common.os.Platform$CPUType.X86_64.family)
com.jogamp.common.os.Platform$CPUType.ARM.id == orig(com.jogamp.common.os.Platform$CPUType.ARM.id)
com.jogamp.common.os.Platform$CPUType.ARM.family == orig(com.jogamp.common.os.Platform$CPUType.ARM.family)
com.jogamp.common.os.Platform$CPUType.ARMv5.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.id)
com.jogamp.common.os.Platform$CPUType.ARMv5.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.family)
com.jogamp.common.os.Platform$CPUType.ARMv6.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.id)
com.jogamp.common.os.Platform$CPUType.ARMv6.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.family)
com.jogamp.common.os.Platform$CPUType.ARMv7.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.id)
com.jogamp.common.os.Platform$CPUType.ARMv7.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.family)
com.jogamp.common.os.Platform$CPUType.PPC.id == orig(com.jogamp.common.os.Platform$CPUType.PPC.id)
com.jogamp.common.os.Platform$CPUType.PPC.family == orig(com.jogamp.common.os.Platform$CPUType.PPC.family)
com.jogamp.common.os.Platform$CPUType.SPARC_32.id == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.id)
com.jogamp.common.os.Platform$CPUType.SPARC_32.family == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.family)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family)
com.jogamp.common.os.Platform$CPUType.IA64.id == orig(com.jogamp.common.os.Platform$CPUType.IA64.id)
com.jogamp.common.os.Platform$CPUType.IA64.family == orig(com.jogamp.common.os.Platform$CPUType.IA64.family)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family)
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.id == orig(jogamp.common.os.PlatformPropsImpl.CPU_ARCH.id)
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family == orig(jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family)
com.jogamp.common.os.Platform$CPUFamily.X86 == orig(com.jogamp.common.os.Platform$CPUFamily.X86)
com.jogamp.common.os.Platform$CPUFamily.ARM == orig(com.jogamp.common.os.Platform$CPUFamily.ARM)
com.jogamp.common.os.Platform$CPUFamily.PPC == orig(com.jogamp.common.os.Platform$CPUFamily.PPC)
com.jogamp.common.os.Platform$CPUFamily.SPARC == orig(com.jogamp.common.os.Platform$CPUFamily.SPARC)
com.jogamp.common.os.Platform$CPUFamily.PA_RISC == orig(com.jogamp.common.os.Platform$CPUFamily.PA_RISC)
com.jogamp.common.os.Platform$CPUFamily.IA64 == orig(com.jogamp.common.os.Platform$CPUFamily.IA64)
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family.id == orig(jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family.id)
com.jogamp.common.os.Platform$CPUFamily.$VALUES == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES)
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[])
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id)
jogamp.common.os.PlatformPropsImpl.ABI_TYPE == orig(jogamp.common.os.PlatformPropsImpl.ABI_TYPE)
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI == orig(com.jogamp.common.os.Platform$ABIType.GENERIC_ABI)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF)
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id == orig(com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id)
com.jogamp.common.os.Platform$ABIType.$VALUES == orig(com.jogamp.common.os.Platform$ABIType.$VALUES)
com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$ABIType.$VALUES[] == orig(com.jogamp.common.os.Platform$ABIType.$VALUES[])
com.jogamp.common.os.Platform$ABIType.$VALUES[].id == orig(com.jogamp.common.os.Platform$ABIType.$VALUES[].id)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id)
jogamp.common.os.PlatformPropsImpl.ABI_TYPE.id == orig(jogamp.common.os.PlatformPropsImpl.ABI_TYPE.id)
jogamp.common.os.PlatformPropsImpl.OS_TYPE == orig(jogamp.common.os.PlatformPropsImpl.OS_TYPE)
com.jogamp.common.os.Platform$OSType.LINUX == orig(com.jogamp.common.os.Platform$OSType.LINUX)
com.jogamp.common.os.Platform$OSType.FREEBSD == orig(com.jogamp.common.os.Platform$OSType.FREEBSD)
com.jogamp.common.os.Platform$OSType.ANDROID == orig(com.jogamp.common.os.Platform$OSType.ANDROID)
com.jogamp.common.os.Platform$OSType.MACOS == orig(com.jogamp.common.os.Platform$OSType.MACOS)
com.jogamp.common.os.Platform$OSType.SUNOS == orig(com.jogamp.common.os.Platform$OSType.SUNOS)
com.jogamp.common.os.Platform$OSType.HPUX == orig(com.jogamp.common.os.Platform$OSType.HPUX)
com.jogamp.common.os.Platform$OSType.WINDOWS == orig(com.jogamp.common.os.Platform$OSType.WINDOWS)
com.jogamp.common.os.Platform$OSType.OPENKODE == orig(com.jogamp.common.os.Platform$OSType.OPENKODE)
com.jogamp.common.os.Platform$OSType.LINUX.id == orig(com.jogamp.common.os.Platform$OSType.LINUX.id)
com.jogamp.common.os.Platform$OSType.$VALUES == orig(com.jogamp.common.os.Platform$OSType.$VALUES)
com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$OSType.$VALUES[] == orig(com.jogamp.common.os.Platform$OSType.$VALUES[])
com.jogamp.common.os.Platform$OSType.$VALUES[].id == orig(com.jogamp.common.os.Platform$OSType.$VALUES[].id)
com.jogamp.common.os.Platform$OSType.FREEBSD.id == orig(com.jogamp.common.os.Platform$OSType.FREEBSD.id)
com.jogamp.common.os.Platform$OSType.ANDROID.id == orig(com.jogamp.common.os.Platform$OSType.ANDROID.id)
com.jogamp.common.os.Platform$OSType.MACOS.id == orig(com.jogamp.common.os.Platform$OSType.MACOS.id)
com.jogamp.common.os.Platform$OSType.SUNOS.id == orig(com.jogamp.common.os.Platform$OSType.SUNOS.id)
com.jogamp.common.os.Platform$OSType.HPUX.id == orig(com.jogamp.common.os.Platform$OSType.HPUX.id)
com.jogamp.common.os.Platform$OSType.WINDOWS.id == orig(com.jogamp.common.os.Platform$OSType.WINDOWS.id)
com.jogamp.common.os.Platform$OSType.OPENKODE.id == orig(com.jogamp.common.os.Platform$OSType.OPENKODE.id)
jogamp.common.os.PlatformPropsImpl.OS_TYPE.id == orig(jogamp.common.os.PlatformPropsImpl.OS_TYPE.id)
jogamp.common.os.PlatformPropsImpl.os_and_arch == orig(jogamp.common.os.PlatformPropsImpl.os_and_arch)
jogamp.common.os.PlatformPropsImpl.os_and_arch.toString == orig(jogamp.common.os.PlatformPropsImpl.os_and_arch.toString)
return == true
===========================================================================
com.jogamp.common.os.Platform.isRunningFromJarURL():::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.IOUtil$1:::OBJECT
this has only one value
this.val$dir has only one value
this.val$create == true
this.val$executable == false
===========================================================================
com.jogamp.common.util.IOUtil$1.(java.io.File, boolean, boolean):::ENTER
arg0 has only one value
arg1 == true
arg2 == false
===========================================================================
com.jogamp.common.util.IOUtil$1.(java.io.File, boolean, boolean):::EXIT
===========================================================================
com.jogamp.common.util.IOUtil$1.run():::ENTER
===========================================================================
com.jogamp.common.util.IOUtil$1.run():::EXIT
this.val$dir == orig(this.val$dir)
this.val$create == orig(this.val$create)
this.val$executable == orig(this.val$executable)
return has only one value
===========================================================================
com.jogamp.common.util.IOUtil$2:::OBJECT
this has only one value
this.val$executable == true
===========================================================================
com.jogamp.common.util.IOUtil$2.(boolean):::ENTER
arg0 == true
===========================================================================
com.jogamp.common.util.IOUtil$2.(boolean):::EXIT
===========================================================================
com.jogamp.common.util.IOUtil$2.run():::ENTER
===========================================================================
com.jogamp.common.util.IOUtil$2.run():::EXIT
this.val$executable == orig(this.val$executable)
return has only one value
===========================================================================
com.jogamp.common.util.IOUtil:::CLASS
com.jogamp.common.util.IOUtil.DEBUG == false
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey has only one value
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey != null
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == "java.io.tmpdir"
com.jogamp.common.util.IOUtil.user_home_propkey has only one value
com.jogamp.common.util.IOUtil.user_home_propkey != null
com.jogamp.common.util.IOUtil.user_home_propkey.toString == "user.home"
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey has only one value
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey != null
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == "XDG_CACHE_HOME"
com.jogamp.common.util.IOUtil.tmpSubDir has only one value
com.jogamp.common.util.IOUtil.tmpSubDir != null
com.jogamp.common.util.IOUtil.tmpSubDir.toString == "jogamp"
===========================================================================
com.jogamp.common.util.IOUtil.cleanPathString(java.lang.String):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0 has only one value
arg0.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.util.IOUtil.cleanPathString(java.lang.String):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
arg0.toString == orig(arg0.toString)
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0.toString == "gluegen-rt"
return has only one value
return.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.util.IOUtil.getBasename(java.lang.String):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0 has only one value
arg0.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.util.IOUtil.getBasename(java.lang.String):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
arg0.toString == orig(arg0.toString)
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0.toString == "gluegen-rt"
return has only one value
return.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.util.IOUtil.getClassFileName(java.lang.String):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == false
arg0 has only one value
arg0.toString == "com.jogamp.common.os.Platform"
===========================================================================
com.jogamp.common.util.IOUtil.getClassFileName(java.lang.String):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
arg0.toString == orig(arg0.toString)
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == false
arg0.toString == "com.jogamp.common.os.Platform"
return has only one value
return.toString == "com/jogamp/common/os/Platform.class"
===========================================================================
com.jogamp.common.util.IOUtil.getClassURL(java.lang.String, java.lang.ClassLoader):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == false
arg0 has only one value
arg0.toString == "com.jogamp.common.os.Platform"
arg1 has only one value
arg1.getClass().getName() == jdk.internal.loader.ClassLoaders$AppClassLoader.class
===========================================================================
com.jogamp.common.util.IOUtil.getClassURL(java.lang.String, java.lang.ClassLoader):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
arg0.toString == orig(arg0.toString)
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == false
arg0.toString == "com.jogamp.common.os.Platform"
return has only one value
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasFreeDesktopXDG():::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasFreeDesktopXDG():::EXIT664
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasFreeDesktopXDG():::EXIT664;condition="return == true"
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasFreeDesktopXDG():::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
return == true
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasFreeDesktopXDG():::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasNoexecFS():::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasNoexecFS():::EXIT648
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasNoexecFS():::EXIT648;condition="return == true"
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasNoexecFS():::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
return == true
===========================================================================
com.jogamp.common.util.IOUtil.getOSHasNoexecFS():::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.IOUtil.getShellSuffix():::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
===========================================================================
com.jogamp.common.util.IOUtil.getShellSuffix():::EXIT637
===========================================================================
com.jogamp.common.util.IOUtil.getShellSuffix():::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
return has only one value
return.toString == ".sh"
===========================================================================
com.jogamp.common.util.IOUtil.getSubTempDir(java.io.File, java.lang.String, boolean):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0 has only one value
arg1 has only one value
arg1.toString == "jogamp"
arg2 == true
===========================================================================
com.jogamp.common.util.IOUtil.getSubTempDir(java.io.File, java.lang.String, boolean):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
arg1.toString == orig(arg1.toString)
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
arg1.toString == "jogamp"
return has only one value
===========================================================================
com.jogamp.common.util.IOUtil.getTempDir(boolean, java.security.AccessControlContext):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == false
arg0 == true
arg1 has only one value
===========================================================================
com.jogamp.common.util.IOUtil.getTempDir(boolean, java.security.AccessControlContext):::EXIT950
===========================================================================
com.jogamp.common.util.IOUtil.getTempDir(boolean, java.security.AccessControlContext):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
return has only one value
===========================================================================
com.jogamp.common.util.IOUtil.getTempDirImpl(boolean):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == false
arg0 == true
===========================================================================
com.jogamp.common.util.IOUtil.getTempDirImpl(boolean):::EXIT913
===========================================================================
com.jogamp.common.util.IOUtil.getTempDirImpl(boolean):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
return has only one value
===========================================================================
com.jogamp.common.util.IOUtil.isStringSet(java.lang.String):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0.toString one of { "/home/nima", "/tmp" }
===========================================================================
com.jogamp.common.util.IOUtil.isStringSet(java.lang.String):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
arg0.toString == orig(arg0.toString)
(return == false)  <==>  (orig(arg0) == null)
(return == true)  ==>  (arg0.toString one of { "/home/nima", "/tmp" })
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0.toString one of { "/home/nima", "/tmp" }
===========================================================================
com.jogamp.common.util.IOUtil.isStringSet(java.lang.String):::EXIT;condition="return == true"
return == true
===========================================================================
com.jogamp.common.util.IOUtil.isStringSet(java.lang.String):::EXIT;condition="not(return == true)"
return == false
orig(arg0) == null
===========================================================================
com.jogamp.common.util.IOUtil.slashify(java.lang.String, boolean, boolean):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0 has only one value
arg0.toString == "gluegen-rt"
arg1 == false
arg2 == false
===========================================================================
com.jogamp.common.util.IOUtil.slashify(java.lang.String, boolean, boolean):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
arg0.toString == orig(arg0.toString)
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0.toString == "gluegen-rt"
return has only one value
return.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.util.IOUtil.testDir(java.io.File, boolean, boolean, java.security.AccessControlContext):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
arg0 has only one value
arg1 == true
arg2 == false
arg3 has only one value
===========================================================================
com.jogamp.common.util.IOUtil.testDir(java.io.File, boolean, boolean, java.security.AccessControlContext):::EXIT786
===========================================================================
com.jogamp.common.util.IOUtil.testDir(java.io.File, boolean, boolean, java.security.AccessControlContext):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
com.jogamp.common.util.IOUtil.tempRootSet == true
return has only one value
===========================================================================
com.jogamp.common.util.IOUtil.testDirExec(java.io.File):::ENTER
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
===========================================================================
com.jogamp.common.util.IOUtil.testDirExec(java.io.File):::EXIT748
===========================================================================
com.jogamp.common.util.IOUtil.testDirExec(java.io.File):::EXIT748;condition="return == true"
===========================================================================
com.jogamp.common.util.IOUtil.testDirExec(java.io.File):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
com.jogamp.common.util.IOUtil.tempRootSet == true
return == true
===========================================================================
com.jogamp.common.util.IOUtil.testDirExec(java.io.File):::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.IOUtil.testDirImpl(java.io.File, boolean, boolean):::ENTER
com.jogamp.common.util.IOUtil.tempRootSet == true
arg1 == true
===========================================================================
com.jogamp.common.util.IOUtil.testDirImpl(java.io.File, boolean, boolean):::EXIT759
com.jogamp.common.util.IOUtil.tempRootExec == null
com.jogamp.common.util.IOUtil.tempRootNoexec == null
orig(arg2) == true
===========================================================================
com.jogamp.common.util.IOUtil.testDirImpl(java.io.File, boolean, boolean):::EXIT762
com.jogamp.common.util.IOUtil.tempRootExec has only one value
com.jogamp.common.util.IOUtil.tempRootNoexec has only one value
return has only one value
orig(arg0) has only one value
orig(arg2) == false
===========================================================================
com.jogamp.common.util.IOUtil.testDirImpl(java.io.File, boolean, boolean):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
com.jogamp.common.util.IOUtil.tempRootSet == true
===========================================================================
com.jogamp.common.util.IOUtil.testFile(java.io.File, boolean, boolean):::ENTER
com.jogamp.common.util.IOUtil.tempRootSet == true
arg1 == true
arg2 == true
===========================================================================
com.jogamp.common.util.IOUtil.testFile(java.io.File, boolean, boolean):::EXIT695
===========================================================================
com.jogamp.common.util.IOUtil.testFile(java.io.File, boolean, boolean):::EXIT695;condition="return == true"
===========================================================================
com.jogamp.common.util.IOUtil.testFile(java.io.File, boolean, boolean):::EXIT
com.jogamp.common.util.IOUtil.DEBUG == orig(com.jogamp.common.util.IOUtil.DEBUG)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey)
com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString == orig(com.jogamp.common.util.IOUtil.java_io_tmpdir_propkey.toString)
com.jogamp.common.util.IOUtil.user_home_propkey == orig(com.jogamp.common.util.IOUtil.user_home_propkey)
com.jogamp.common.util.IOUtil.user_home_propkey.toString == orig(com.jogamp.common.util.IOUtil.user_home_propkey.toString)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey)
com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString == orig(com.jogamp.common.util.IOUtil.XDG_CACHE_HOME_envkey.toString)
com.jogamp.common.util.IOUtil.tmpSubDir == orig(com.jogamp.common.util.IOUtil.tmpSubDir)
com.jogamp.common.util.IOUtil.tmpSubDir.toString == orig(com.jogamp.common.util.IOUtil.tmpSubDir.toString)
com.jogamp.common.util.IOUtil.tempRootExec == orig(com.jogamp.common.util.IOUtil.tempRootExec)
com.jogamp.common.util.IOUtil.tempRootNoexec == orig(com.jogamp.common.util.IOUtil.tempRootNoexec)
com.jogamp.common.util.IOUtil.tempRootSet == orig(com.jogamp.common.util.IOUtil.tempRootSet)
com.jogamp.common.util.IOUtil.tempRootSet == true
return == true
===========================================================================
com.jogamp.common.util.IOUtil.testFile(java.io.File, boolean, boolean):::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.JarUtil:::CLASS
com.jogamp.common.util.JarUtil.DEBUG == false
===========================================================================
com.jogamp.common.util.JarUtil.getJarBasename(java.net.URL):::ENTER
arg0 has only one value
===========================================================================
com.jogamp.common.util.JarUtil.getJarBasename(java.net.URL):::EXIT
com.jogamp.common.util.JarUtil.DEBUG == orig(com.jogamp.common.util.JarUtil.DEBUG)
return has only one value
return.toString == "url4aac7e6f55_simon0191_tetris3d_tgz-pJ8-Tetris3dJ8.jar"
===========================================================================
com.jogamp.common.util.JarUtil.getJarFileURL(java.net.URL, java.lang.String):::ENTER
arg0 has only one value
arg1 has only one value
arg1.toString == "url4aac7e6f55_simon0191_tetris3d_tgz-pJ8-Tetris3dJ8-natives-linux-amd64.jar"
===========================================================================
com.jogamp.common.util.JarUtil.getJarFileURL(java.net.URL, java.lang.String):::EXIT
com.jogamp.common.util.JarUtil.DEBUG == orig(com.jogamp.common.util.JarUtil.DEBUG)
arg1.toString == orig(arg1.toString)
arg1.toString == "url4aac7e6f55_simon0191_tetris3d_tgz-pJ8-Tetris3dJ8-natives-linux-amd64.jar"
return has only one value
===========================================================================
com.jogamp.common.util.JarUtil.getJarSubURL(java.net.URL):::ENTER
arg0 has only one value
===========================================================================
com.jogamp.common.util.JarUtil.getJarSubURL(java.net.URL):::EXIT
com.jogamp.common.util.JarUtil.DEBUG == orig(com.jogamp.common.util.JarUtil.DEBUG)
return has only one value
===========================================================================
com.jogamp.common.util.JarUtil.getJarURL(java.lang.String, java.lang.ClassLoader):::ENTER
arg0 has only one value
arg0.toString == "com.jogamp.common.os.Platform"
arg1 has only one value
arg1.getClass().getName() == jdk.internal.loader.ClassLoaders$AppClassLoader.class
===========================================================================
com.jogamp.common.util.JarUtil.getJarURL(java.lang.String, java.lang.ClassLoader):::EXIT
com.jogamp.common.util.JarUtil.DEBUG == orig(com.jogamp.common.util.JarUtil.DEBUG)
arg0.toString == orig(arg0.toString)
arg0.toString == "com.jogamp.common.os.Platform"
return has only one value
===========================================================================
com.jogamp.common.util.JarUtil.getURLDirname(java.net.URL):::ENTER
arg0 has only one value
===========================================================================
com.jogamp.common.util.JarUtil.getURLDirname(java.net.URL):::EXIT
com.jogamp.common.util.JarUtil.DEBUG == orig(com.jogamp.common.util.JarUtil.DEBUG)
return has only one value
===========================================================================
com.jogamp.common.util.PropertyAccess$2:::OBJECT
this.val$propertyKey != null
===========================================================================
com.jogamp.common.util.PropertyAccess$2.(java.lang.String):::ENTER
arg0 != null
===========================================================================
com.jogamp.common.util.PropertyAccess$2.(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
===========================================================================
com.jogamp.common.util.PropertyAccess$2.run():::ENTER
===========================================================================
com.jogamp.common.util.PropertyAccess$2.run():::EXIT
this.val$propertyKey == orig(this.val$propertyKey)
this.val$propertyKey.toString == orig(this.val$propertyKey.toString)
return == null
===========================================================================
com.jogamp.common.util.PropertyAccess:::CLASS
com.jogamp.common.util.PropertyAccess.jnlp_prefix has only one value
com.jogamp.common.util.PropertyAccess.jnlp_prefix != null
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == "jnlp."
com.jogamp.common.util.PropertyAccess.javaws_prefix has only one value
com.jogamp.common.util.PropertyAccess.javaws_prefix != null
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == "javaws."
com.jogamp.common.util.PropertyAccess.trustedPrefixes has only one value
com.jogamp.common.util.PropertyAccess.trustedPrefixes != null
===========================================================================
com.jogamp.common.util.PropertyAccess.addTrustedPrefix(java.lang.String, java.lang.Class):::ENTER
arg0.toString one of { "jogamp.", "jogl." }
===========================================================================
com.jogamp.common.util.PropertyAccess.addTrustedPrefix(java.lang.String, java.lang.Class):::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
arg0.toString one of { "jogamp.", "jogl." }
===========================================================================
com.jogamp.common.util.PropertyAccess.getBooleanProperty(java.lang.String, boolean, java.security.AccessControlContext):::ENTER
arg0 has only one value
arg0.toString == "sun.jnlp.applet.launcher"
arg1 == true
arg2 == null
===========================================================================
com.jogamp.common.util.PropertyAccess.getBooleanProperty(java.lang.String, boolean, java.security.AccessControlContext):::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
arg0.toString == "sun.jnlp.applet.launcher"
return == false
===========================================================================
com.jogamp.common.util.PropertyAccess.getBooleanProperty(java.lang.String, boolean, java.security.AccessControlContext):::EXIT;condition="not(return == true)"
===========================================================================
com.jogamp.common.util.PropertyAccess.getBooleanProperty(java.lang.String, boolean, java.security.AccessControlContext, boolean):::ENTER
arg0 has only one value
arg0.toString == "jogamp.gluegen.UseTempJarCache"
arg1 == true
arg2 == null
arg3 == true
===========================================================================
com.jogamp.common.util.PropertyAccess.getBooleanProperty(java.lang.String, boolean, java.security.AccessControlContext, boolean):::EXIT103
===========================================================================
com.jogamp.common.util.PropertyAccess.getBooleanProperty(java.lang.String, boolean, java.security.AccessControlContext, boolean):::EXIT103;condition="return == true"
===========================================================================
com.jogamp.common.util.PropertyAccess.getBooleanProperty(java.lang.String, boolean, java.security.AccessControlContext, boolean):::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
arg0.toString == "jogamp.gluegen.UseTempJarCache"
return == true
===========================================================================
com.jogamp.common.util.PropertyAccess.getBooleanProperty(java.lang.String, boolean, java.security.AccessControlContext, boolean):::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.PropertyAccess.getProperty(java.lang.String, boolean, java.security.AccessControlContext):::ENTER
arg0 != null
arg2 == null
===========================================================================
com.jogamp.common.util.PropertyAccess.getProperty(java.lang.String, boolean, java.security.AccessControlContext):::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
return.toString one of { "/home/nima", "/tmp" }
===========================================================================
com.jogamp.common.util.PropertyAccess.getTrustedPropKey(java.lang.String):::ENTER
arg0 != null
===========================================================================
com.jogamp.common.util.PropertyAccess.getTrustedPropKey(java.lang.String):::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
return == null
===========================================================================
com.jogamp.common.util.PropertyAccess.isPropertyDefined(java.lang.String, boolean, java.security.AccessControlContext):::ENTER
arg0 != null
arg1 == true
arg2 == null
===========================================================================
com.jogamp.common.util.PropertyAccess.isPropertyDefined(java.lang.String, boolean, java.security.AccessControlContext):::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
return == false
===========================================================================
com.jogamp.common.util.PropertyAccess.isPropertyDefined(java.lang.String, boolean, java.security.AccessControlContext):::EXIT;condition="not(return == true)"
===========================================================================
com.jogamp.common.util.PropertyAccess.isTrusted(java.lang.String):::ENTER
arg0 != null
===========================================================================
com.jogamp.common.util.PropertyAccess.isTrusted(java.lang.String):::EXIT62
(return == false)  ==>  (arg0.toString one of { "java.io.tmpdir", "sun.jnlp.applet.launcher", "user.home" })
===========================================================================
com.jogamp.common.util.PropertyAccess.isTrusted(java.lang.String):::EXIT62;condition="return == true"
===========================================================================
com.jogamp.common.util.PropertyAccess.isTrusted(java.lang.String):::EXIT62;condition="not(return == true)"
===========================================================================
com.jogamp.common.util.PropertyAccess.isTrusted(java.lang.String):::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
(return == false)  ==>  (arg0.toString one of { "java.io.tmpdir", "sun.jnlp.applet.launcher", "user.home" })
===========================================================================
com.jogamp.common.util.PropertyAccess.isTrusted(java.lang.String):::EXIT;condition="return == true"
return == true
===========================================================================
com.jogamp.common.util.PropertyAccess.isTrusted(java.lang.String):::EXIT;condition="not(return == true)"
arg0.toString one of { "java.io.tmpdir", "sun.jnlp.applet.launcher", "user.home" }
return == false
===========================================================================
com.jogamp.common.util.SecurityUtil$1:::OBJECT
this has only one value
===========================================================================
com.jogamp.common.util.SecurityUtil$1.():::EXIT
===========================================================================
com.jogamp.common.util.SecurityUtil$1.run():::ENTER
===========================================================================
com.jogamp.common.util.SecurityUtil$1.run():::EXIT
return has only one value
===========================================================================
com.jogamp.common.util.SecurityUtil$2:::OBJECT
this.val$clz != null
===========================================================================
com.jogamp.common.util.SecurityUtil$2.(java.lang.Class):::ENTER
===========================================================================
com.jogamp.common.util.SecurityUtil$2.(java.lang.Class):::EXIT
===========================================================================
com.jogamp.common.util.SecurityUtil$2.run():::ENTER
===========================================================================
com.jogamp.common.util.SecurityUtil$2.run():::EXIT
this.val$clz == orig(this.val$clz)
return has only one value
===========================================================================
com.jogamp.common.util.SecurityUtil:::CLASS
com.jogamp.common.util.SecurityUtil.localACC has only one value
com.jogamp.common.util.SecurityUtil.localACC != null
com.jogamp.common.util.SecurityUtil.localCerts == null
===========================================================================
com.jogamp.common.util.SecurityUtil.equals(java.security.cert.Certificate[], java.security.cert.Certificate[]):::ENTER
arg0 == null
arg1 == null
===========================================================================
com.jogamp.common.util.SecurityUtil.equals(java.security.cert.Certificate[], java.security.cert.Certificate[]):::EXIT61
===========================================================================
com.jogamp.common.util.SecurityUtil.equals(java.security.cert.Certificate[], java.security.cert.Certificate[]):::EXIT61;condition="return == true"
===========================================================================
com.jogamp.common.util.SecurityUtil.equals(java.security.cert.Certificate[], java.security.cert.Certificate[]):::EXIT
com.jogamp.common.util.SecurityUtil.localACC == orig(com.jogamp.common.util.SecurityUtil.localACC)
com.jogamp.common.util.SecurityUtil.localCerts == orig(com.jogamp.common.util.SecurityUtil.localCerts)
return == true
===========================================================================
com.jogamp.common.util.SecurityUtil.equals(java.security.cert.Certificate[], java.security.cert.Certificate[]):::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.SecurityUtil.equalsLocalCert(java.lang.Class):::ENTER
===========================================================================
com.jogamp.common.util.SecurityUtil.equalsLocalCert(java.lang.Class):::EXIT
com.jogamp.common.util.SecurityUtil.localACC == orig(com.jogamp.common.util.SecurityUtil.localACC)
com.jogamp.common.util.SecurityUtil.localCerts == orig(com.jogamp.common.util.SecurityUtil.localCerts)
return == true
===========================================================================
com.jogamp.common.util.SecurityUtil.equalsLocalCert(java.lang.Class):::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.SecurityUtil.equalsLocalCert(java.security.cert.Certificate[]):::ENTER
arg0 == null
===========================================================================
com.jogamp.common.util.SecurityUtil.equalsLocalCert(java.security.cert.Certificate[]):::EXIT
com.jogamp.common.util.SecurityUtil.localACC == orig(com.jogamp.common.util.SecurityUtil.localACC)
com.jogamp.common.util.SecurityUtil.localCerts == orig(com.jogamp.common.util.SecurityUtil.localCerts)
return == true
===========================================================================
com.jogamp.common.util.SecurityUtil.equalsLocalCert(java.security.cert.Certificate[]):::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.SecurityUtil.getCerts(java.lang.Class):::ENTER
===========================================================================
com.jogamp.common.util.SecurityUtil.getCerts(java.lang.Class):::EXIT
com.jogamp.common.util.SecurityUtil.localACC == orig(com.jogamp.common.util.SecurityUtil.localACC)
com.jogamp.common.util.SecurityUtil.localCerts == orig(com.jogamp.common.util.SecurityUtil.localCerts)
return == null
===========================================================================
com.jogamp.common.util.SecurityUtil.getCommonAccessControlContext(java.lang.Class):::ENTER
arg0 has only one value
===========================================================================
com.jogamp.common.util.SecurityUtil.getCommonAccessControlContext(java.lang.Class):::EXIT87
===========================================================================
com.jogamp.common.util.SecurityUtil.getCommonAccessControlContext(java.lang.Class):::EXIT
com.jogamp.common.util.SecurityUtil.localACC == orig(com.jogamp.common.util.SecurityUtil.localACC)
com.jogamp.common.util.SecurityUtil.localCerts == orig(com.jogamp.common.util.SecurityUtil.localCerts)
return has only one value
===========================================================================
com.jogamp.common.util.VersionNumber:::OBJECT
this.val[] one of { [6, 8, 0], [11, 0, 26] }
size(this.val[]) == 3
===========================================================================
com.jogamp.common.util.VersionNumber.VersionNumber(java.lang.String, java.lang.String):::ENTER
arg0.toString one of { "11.0.26", "6.8.0-52-generic" }
arg1 has only one value
arg1.toString == "."
===========================================================================
com.jogamp.common.util.VersionNumber.VersionNumber(java.lang.String, java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg1.toString == orig(arg1.toString)
arg0.toString one of { "11.0.26", "6.8.0-52-generic" }
arg1.toString == "."
===========================================================================
com.jogamp.common.util.cache.TempFileCache$1:::OBJECT
this has only one value
this.val$tmpOut has only one value
this.val$tmpLock has only one value
this.val$tmpLock.getClass().getName() == sun.nio.ch.FileLockImpl.class
this.val$lckOut has only one value
this.val$lckLock has only one value
this.val$lckLock.getClass().getName() == sun.nio.ch.FileLockImpl.class
===========================================================================
com.jogamp.common.util.cache.TempFileCache$1.(java.io.FileOutputStream, java.nio.channels.FileLock, java.io.FileOutputStream, java.nio.channels.FileLock):::ENTER
arg0 has only one value
arg1 has only one value
arg1.getClass().getName() == sun.nio.ch.FileLockImpl.class
arg2 has only one value
arg3 has only one value
arg3.getClass().getName() == sun.nio.ch.FileLockImpl.class
===========================================================================
com.jogamp.common.util.cache.TempFileCache$1.(java.io.FileOutputStream, java.nio.channels.FileLock, java.io.FileOutputStream, java.nio.channels.FileLock):::EXIT
===========================================================================
com.jogamp.common.util.cache.TempFileCache$2:::OBJECT
this has only one value
===========================================================================
com.jogamp.common.util.cache.TempFileCache$2.():::EXIT
===========================================================================
com.jogamp.common.util.cache.TempFileCache$2.run():::ENTER
===========================================================================
com.jogamp.common.util.cache.TempFileCache$2.run():::EXIT
===========================================================================
com.jogamp.common.util.cache.TempFileCache$3:::OBJECT
this has only one value
this.val$ourLockFile has only one value
this.val$ourLockFile != null
this.val$ourLockFile.toString == "jln2480358702761550011.lck"
===========================================================================
com.jogamp.common.util.cache.TempFileCache$3.(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "jln2480358702761550011.lck"
===========================================================================
com.jogamp.common.util.cache.TempFileCache$3.(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "jln2480358702761550011.lck"
===========================================================================
com.jogamp.common.util.cache.TempFileCache$3.accept(java.io.File, java.lang.String):::ENTER
arg0 has only one value
===========================================================================
com.jogamp.common.util.cache.TempFileCache$3.accept(java.io.File, java.lang.String):::EXIT
this.val$ourLockFile == orig(this.val$ourLockFile)
this.val$ourLockFile.toString == orig(this.val$ourLockFile.toString)
arg1.toString == orig(arg1.toString)
(return == true)  ==>  (arg1.toString == "jln1816952213759242899.lck")
(return == true)  ==>  (orig(arg1) has only one value)
===========================================================================
com.jogamp.common.util.cache.TempFileCache$3.accept(java.io.File, java.lang.String):::EXIT;condition="return == true"
arg1.toString == "jln1816952213759242899.lck"
return == true
orig(arg1) has only one value
===========================================================================
com.jogamp.common.util.cache.TempFileCache$3.accept(java.io.File, java.lang.String):::EXIT;condition="not(return == true)"
return == false
===========================================================================
com.jogamp.common.util.cache.TempFileCache:::OBJECT
this has only one value
this.initError == false
===========================================================================
com.jogamp.common.util.cache.TempFileCache.TempFileCache():::EXIT
this.individualTmpDir has only one value
===========================================================================
com.jogamp.common.util.cache.TempFileCache.createTmpDir():::ENTER
this.individualTmpDir == null
===========================================================================
com.jogamp.common.util.cache.TempFileCache.createTmpDir():::EXIT
this.initError == orig(this.initError)
this.individualTmpDir has only one value
===========================================================================
com.jogamp.common.util.cache.TempFileCache.initSingleton():::EXIT
return == true
===========================================================================
com.jogamp.common.util.cache.TempFileCache.initSingleton():::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.cache.TempFileCache.isValid():::ENTER
this.individualTmpDir has only one value
===========================================================================
com.jogamp.common.util.cache.TempFileCache.isValid():::EXIT
this.initError == orig(this.initError)
this.individualTmpDir == orig(this.individualTmpDir)
this.individualTmpDir has only one value
return == true
===========================================================================
com.jogamp.common.util.cache.TempFileCache.isValid():::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.cache.TempFileCache.removeAll(java.io.File):::ENTER
===========================================================================
com.jogamp.common.util.cache.TempFileCache.removeAll(java.io.File):::EXIT
===========================================================================
com.jogamp.common.util.cache.TempJarCache$LoadState:::OBJECT
===========================================================================
com.jogamp.common.util.cache.TempJarCache$LoadState.LoadState(java.lang.String, int):::ENTER
arg0.toString one of { "LOADED", "LOOKED_UP" }
arg1 one of { 0, 1 }
===========================================================================
com.jogamp.common.util.cache.TempJarCache$LoadState.LoadState(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "LOADED", "LOOKED_UP" }
===========================================================================
com.jogamp.common.util.cache.TempJarCache:::CLASS
com.jogamp.common.util.cache.TempJarCache.DEBUG == false
com.jogamp.common.util.cache.TempJarCache.nativeLibMap.getClass().getName() == java.util.HashMap.class
com.jogamp.common.util.cache.TempJarCache.nativeLibJars.getClass().getName() == java.util.HashMap.class
com.jogamp.common.util.cache.TempJarCache.classFileJars.getClass().getName() == java.util.HashMap.class
com.jogamp.common.util.cache.TempJarCache.resourceFileJars.getClass().getName() == java.util.HashMap.class
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.initError == false
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.individualTmpDir has only one value
com.jogamp.common.util.cache.TempJarCache.staticInitError == false
===========================================================================
com.jogamp.common.util.cache.TempJarCache.checkInitialized():::ENTER
com.jogamp.common.util.cache.TempJarCache.nativeLibMap has only one value
com.jogamp.common.util.cache.TempJarCache.nativeLibJars has only one value
com.jogamp.common.util.cache.TempJarCache.classFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.resourceFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.tmpFileCache has only one value
com.jogamp.common.util.cache.TempJarCache.isInit == true
===========================================================================
com.jogamp.common.util.cache.TempJarCache.checkInitialized():::EXIT
com.jogamp.common.util.cache.TempJarCache.DEBUG == orig(com.jogamp.common.util.cache.TempJarCache.DEBUG)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibMap)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibMap.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.nativeLibJars == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibJars)
com.jogamp.common.util.cache.TempJarCache.nativeLibJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.classFileJars == orig(com.jogamp.common.util.cache.TempJarCache.classFileJars)
com.jogamp.common.util.cache.TempJarCache.classFileJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.classFileJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.resourceFileJars == orig(com.jogamp.common.util.cache.TempJarCache.resourceFileJars)
com.jogamp.common.util.cache.TempJarCache.resourceFileJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.resourceFileJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.tmpFileCache == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache)
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.initError == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache.initError)
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.individualTmpDir == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache.individualTmpDir)
com.jogamp.common.util.cache.TempJarCache.staticInitError == orig(com.jogamp.common.util.cache.TempJarCache.staticInitError)
com.jogamp.common.util.cache.TempJarCache.isInit == orig(com.jogamp.common.util.cache.TempJarCache.isInit)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap has only one value
com.jogamp.common.util.cache.TempJarCache.nativeLibJars has only one value
com.jogamp.common.util.cache.TempJarCache.classFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.resourceFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.tmpFileCache has only one value
com.jogamp.common.util.cache.TempJarCache.isInit == true
===========================================================================
com.jogamp.common.util.cache.TempJarCache.findLibrary(java.lang.String):::ENTER
com.jogamp.common.util.cache.TempJarCache.nativeLibMap has only one value
com.jogamp.common.util.cache.TempJarCache.nativeLibJars has only one value
com.jogamp.common.util.cache.TempJarCache.classFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.resourceFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.tmpFileCache has only one value
com.jogamp.common.util.cache.TempJarCache.isInit == true
arg0 has only one value
arg0.toString == "gluegen-rt"
===========================================================================
com.jogamp.common.util.cache.TempJarCache.findLibrary(java.lang.String):::EXIT
com.jogamp.common.util.cache.TempJarCache.DEBUG == orig(com.jogamp.common.util.cache.TempJarCache.DEBUG)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibMap)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibMap.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.nativeLibJars == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibJars)
com.jogamp.common.util.cache.TempJarCache.nativeLibJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.classFileJars == orig(com.jogamp.common.util.cache.TempJarCache.classFileJars)
com.jogamp.common.util.cache.TempJarCache.classFileJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.classFileJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.resourceFileJars == orig(com.jogamp.common.util.cache.TempJarCache.resourceFileJars)
com.jogamp.common.util.cache.TempJarCache.resourceFileJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.resourceFileJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.tmpFileCache == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache)
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.initError == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache.initError)
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.individualTmpDir == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache.individualTmpDir)
com.jogamp.common.util.cache.TempJarCache.staticInitError == orig(com.jogamp.common.util.cache.TempJarCache.staticInitError)
com.jogamp.common.util.cache.TempJarCache.isInit == orig(com.jogamp.common.util.cache.TempJarCache.isInit)
arg0.toString == orig(arg0.toString)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap has only one value
com.jogamp.common.util.cache.TempJarCache.nativeLibJars has only one value
com.jogamp.common.util.cache.TempJarCache.classFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.resourceFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.tmpFileCache has only one value
com.jogamp.common.util.cache.TempJarCache.isInit == true
arg0.toString == "gluegen-rt"
return == null
===========================================================================
com.jogamp.common.util.cache.TempJarCache.initSingleton():::ENTER
com.jogamp.common.util.cache.TempJarCache.nativeLibMap == null
com.jogamp.common.util.cache.TempJarCache.nativeLibJars == null
com.jogamp.common.util.cache.TempJarCache.classFileJars == null
com.jogamp.common.util.cache.TempJarCache.resourceFileJars == null
com.jogamp.common.util.cache.TempJarCache.tmpFileCache == null
com.jogamp.common.util.cache.TempJarCache.isInit == false
===========================================================================
com.jogamp.common.util.cache.TempJarCache.initSingleton():::EXIT
com.jogamp.common.util.cache.TempJarCache.DEBUG == orig(com.jogamp.common.util.cache.TempJarCache.DEBUG)
com.jogamp.common.util.cache.TempJarCache.staticInitError == orig(com.jogamp.common.util.cache.TempJarCache.staticInitError)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap has only one value
com.jogamp.common.util.cache.TempJarCache.nativeLibJars has only one value
com.jogamp.common.util.cache.TempJarCache.classFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.resourceFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.tmpFileCache has only one value
com.jogamp.common.util.cache.TempJarCache.isInit == true
return == true
===========================================================================
com.jogamp.common.util.cache.TempJarCache.initSingleton():::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.cache.TempJarCache.isInitialized():::ENTER
com.jogamp.common.util.cache.TempJarCache.nativeLibMap has only one value
com.jogamp.common.util.cache.TempJarCache.nativeLibJars has only one value
com.jogamp.common.util.cache.TempJarCache.classFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.resourceFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.tmpFileCache has only one value
com.jogamp.common.util.cache.TempJarCache.isInit == true
===========================================================================
com.jogamp.common.util.cache.TempJarCache.isInitialized():::EXIT
com.jogamp.common.util.cache.TempJarCache.DEBUG == orig(com.jogamp.common.util.cache.TempJarCache.DEBUG)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibMap)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibMap.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.nativeLibJars == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibJars)
com.jogamp.common.util.cache.TempJarCache.nativeLibJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.classFileJars == orig(com.jogamp.common.util.cache.TempJarCache.classFileJars)
com.jogamp.common.util.cache.TempJarCache.classFileJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.classFileJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.resourceFileJars == orig(com.jogamp.common.util.cache.TempJarCache.resourceFileJars)
com.jogamp.common.util.cache.TempJarCache.resourceFileJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.resourceFileJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.tmpFileCache == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache)
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.initError == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache.initError)
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.individualTmpDir == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache.individualTmpDir)
com.jogamp.common.util.cache.TempJarCache.staticInitError == orig(com.jogamp.common.util.cache.TempJarCache.staticInitError)
com.jogamp.common.util.cache.TempJarCache.isInit == orig(com.jogamp.common.util.cache.TempJarCache.isInit)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap has only one value
com.jogamp.common.util.cache.TempJarCache.nativeLibJars has only one value
com.jogamp.common.util.cache.TempJarCache.classFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.resourceFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.tmpFileCache has only one value
com.jogamp.common.util.cache.TempJarCache.isInit == true
return == true
===========================================================================
com.jogamp.common.util.cache.TempJarCache.isInitialized():::EXIT;condition="return == true"
===========================================================================
com.jogamp.common.util.cache.TempJarCache.testLoadState(com.jogamp.common.util.cache.TempJarCache$LoadState, com.jogamp.common.util.cache.TempJarCache$LoadState):::ENTER
com.jogamp.common.util.cache.TempJarCache.nativeLibMap has only one value
com.jogamp.common.util.cache.TempJarCache.nativeLibJars has only one value
com.jogamp.common.util.cache.TempJarCache.classFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.resourceFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.tmpFileCache has only one value
com.jogamp.common.util.cache.TempJarCache.isInit == true
arg0 == null
com.jogamp.common.util.cache.TempJarCache$LoadState.LOOKED_UP has only one value
com.jogamp.common.util.cache.TempJarCache$LoadState.LOADED has only one value
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES has only one value
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES.getClass().getName() == com.jogamp.common.util.cache.TempJarCache$LoadState[].class
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[] contains no nulls and has only one value, of length 2
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[].getClass().getName() == [com.jogamp.common.util.cache.TempJarCache.LoadState, com.jogamp.common.util.cache.TempJarCache.LoadState]
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[].getClass().getName() elements == com.jogamp.common.util.cache.TempJarCache.LoadState.class
arg1 has only one value
size(com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[]) == 2
===========================================================================
com.jogamp.common.util.cache.TempJarCache.testLoadState(com.jogamp.common.util.cache.TempJarCache$LoadState, com.jogamp.common.util.cache.TempJarCache$LoadState):::EXIT72
===========================================================================
com.jogamp.common.util.cache.TempJarCache.testLoadState(com.jogamp.common.util.cache.TempJarCache$LoadState, com.jogamp.common.util.cache.TempJarCache$LoadState):::EXIT72;condition="not(return == true)"
===========================================================================
com.jogamp.common.util.cache.TempJarCache.testLoadState(com.jogamp.common.util.cache.TempJarCache$LoadState, com.jogamp.common.util.cache.TempJarCache$LoadState):::EXIT
com.jogamp.common.util.cache.TempJarCache.DEBUG == orig(com.jogamp.common.util.cache.TempJarCache.DEBUG)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibMap)
com.jogamp.common.util.cache.TempJarCache.nativeLibMap.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibMap.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.nativeLibJars == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibJars)
com.jogamp.common.util.cache.TempJarCache.nativeLibJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.nativeLibJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.classFileJars == orig(com.jogamp.common.util.cache.TempJarCache.classFileJars)
com.jogamp.common.util.cache.TempJarCache.classFileJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.classFileJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.resourceFileJars == orig(com.jogamp.common.util.cache.TempJarCache.resourceFileJars)
com.jogamp.common.util.cache.TempJarCache.resourceFileJars.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache.resourceFileJars.getClass().getName())
com.jogamp.common.util.cache.TempJarCache.tmpFileCache == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache)
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.initError == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache.initError)
com.jogamp.common.util.cache.TempJarCache.tmpFileCache.individualTmpDir == orig(com.jogamp.common.util.cache.TempJarCache.tmpFileCache.individualTmpDir)
com.jogamp.common.util.cache.TempJarCache.staticInitError == orig(com.jogamp.common.util.cache.TempJarCache.staticInitError)
com.jogamp.common.util.cache.TempJarCache.isInit == orig(com.jogamp.common.util.cache.TempJarCache.isInit)
com.jogamp.common.util.cache.TempJarCache$LoadState.LOOKED_UP == orig(com.jogamp.common.util.cache.TempJarCache$LoadState.LOOKED_UP)
com.jogamp.common.util.cache.TempJarCache$LoadState.LOADED == orig(com.jogamp.common.util.cache.TempJarCache$LoadState.LOADED)
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES == orig(com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES)
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES.getClass().getName() == orig(com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES.getClass().getName())
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[] == orig(com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[])
com.jogamp.common.util.cache.TempJarCache.nativeLibMap has only one value
com.jogamp.common.util.cache.TempJarCache.nativeLibJars has only one value
com.jogamp.common.util.cache.TempJarCache.classFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.resourceFileJars has only one value
com.jogamp.common.util.cache.TempJarCache.tmpFileCache has only one value
com.jogamp.common.util.cache.TempJarCache.isInit == true
com.jogamp.common.util.cache.TempJarCache$LoadState.LOOKED_UP has only one value
com.jogamp.common.util.cache.TempJarCache$LoadState.LOADED has only one value
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES has only one value
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES.getClass().getName() == com.jogamp.common.util.cache.TempJarCache$LoadState[].class
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[] contains no nulls and has only one value, of length 2
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[].getClass().getName() == [com.jogamp.common.util.cache.TempJarCache.LoadState, com.jogamp.common.util.cache.TempJarCache.LoadState]
com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[].getClass().getName() elements == com.jogamp.common.util.cache.TempJarCache.LoadState.class
return == false
size(com.jogamp.common.util.cache.TempJarCache$LoadState.$VALUES[]) == 2
===========================================================================
com.jogamp.common.util.cache.TempJarCache.testLoadState(com.jogamp.common.util.cache.TempJarCache$LoadState, com.jogamp.common.util.cache.TempJarCache$LoadState):::EXIT;condition="not(return == true)"
===========================================================================
com.jogamp.common.util.locks.LockFactory.createRecursiveLock():::EXIT
return has only one value
return.getClass().getName() == jogamp.common.util.locks.RecursiveLockImpl01Unfairish.class
===========================================================================
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol$WindowClosingAdapter:::OBJECT
this has only one value
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this has only one value
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.comp == null
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingOperation == null
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerSet == false
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerLock has only one value
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerLock.getClass().getName() == java.lang.Object.class
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.defaultCloseOperation has only one value
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.defaultCloseOperationSetByUser == false
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.windowClosingAdapter == null
===========================================================================
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol$WindowClosingAdapter.WindowClosingAdapter(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol):::ENTER
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this has only one value
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.comp == null
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingOperation == null
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerSet == false
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerLock has only one value
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerLock.getClass().getName() == java.lang.Object.class
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.defaultCloseOperation has only one value
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.defaultCloseOperationSetByUser == false
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.windowClosingAdapter == null
===========================================================================
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol$WindowClosingAdapter.WindowClosingAdapter(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol):::EXIT
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this == orig(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this)
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.comp == orig(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.comp)
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingOperation == orig(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingOperation)
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerSet == orig(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerSet)
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerLock == orig(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerLock)
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerLock.getClass().getName() == orig(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.closingListenerLock.getClass().getName())
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.defaultCloseOperation == orig(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.defaultCloseOperation)
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.defaultCloseOperationSetByUser == orig(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.defaultCloseOperationSetByUser)
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.windowClosingAdapter == orig(com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.this.windowClosingAdapter)
===========================================================================
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol:::OBJECT
this has only one value
this.comp has only one value
this.comp.getClass().getName() == javax.media.opengl.awt.GLCanvas.class
this.closingOperation has only one value
this.closingOperation.getClass().getName() == javax.media.opengl.awt.GLCanvas$1.class
this.closingListenerSet == false
this.closingListenerLock has only one value
this.closingListenerLock.getClass().getName() == java.lang.Object.class
this.defaultCloseOperation has only one value
this.defaultCloseOperationSetByUser == false
this.windowClosingAdapter has only one value
this.windowClosingAdapter.getClass().getName() == com.jogamp.nativewindow.awt.AWTWindowClosingProtocol$WindowClosingAdapter.class
===========================================================================
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.AWTWindowClosingProtocol(java.awt.Component, java.lang.Runnable):::ENTER
arg0 has only one value
arg0.getClass().getName() == javax.media.opengl.awt.GLCanvas.class
arg1 has only one value
arg1.getClass().getName() == javax.media.opengl.awt.GLCanvas$1.class
===========================================================================
com.jogamp.nativewindow.awt.AWTWindowClosingProtocol.AWTWindowClosingProtocol(java.awt.Component, java.lang.Runnable):::EXIT
===========================================================================
javax.media.nativewindow.WindowClosingProtocol$WindowClosingMode:::OBJECT
===========================================================================
javax.media.nativewindow.WindowClosingProtocol$WindowClosingMode.WindowClosingMode(java.lang.String, int):::ENTER
arg0.toString one of { "DISPOSE_ON_CLOSE", "DO_NOTHING_ON_CLOSE" }
arg1 one of { 0, 1 }
===========================================================================
javax.media.nativewindow.WindowClosingProtocol$WindowClosingMode.WindowClosingMode(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString one of { "DISPOSE_ON_CLOSE", "DO_NOTHING_ON_CLOSE" }
===========================================================================
javax.media.opengl.awt.GLCanvas$1:::OBJECT
this has only one value
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$1.(javax.media.opengl.awt.GLCanvas):::ENTER
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$1.(javax.media.opengl.awt.GLCanvas):::EXIT
javax.media.opengl.awt.GLCanvas.this == orig(javax.media.opengl.awt.GLCanvas.this)
===========================================================================
javax.media.opengl.awt.GLCanvas$2:::OBJECT
this has only one value
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$2.(javax.media.opengl.awt.GLCanvas):::ENTER
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$2.(javax.media.opengl.awt.GLCanvas):::EXIT
javax.media.opengl.awt.GLCanvas.this == orig(javax.media.opengl.awt.GLCanvas.this)
===========================================================================
javax.media.opengl.awt.GLCanvas$3:::OBJECT
this has only one value
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$3.(javax.media.opengl.awt.GLCanvas):::ENTER
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$3.(javax.media.opengl.awt.GLCanvas):::EXIT
javax.media.opengl.awt.GLCanvas.this == orig(javax.media.opengl.awt.GLCanvas.this)
===========================================================================
javax.media.opengl.awt.GLCanvas$4:::OBJECT
this has only one value
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$4.(javax.media.opengl.awt.GLCanvas):::ENTER
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$4.(javax.media.opengl.awt.GLCanvas):::EXIT
javax.media.opengl.awt.GLCanvas.this == orig(javax.media.opengl.awt.GLCanvas.this)
===========================================================================
javax.media.opengl.awt.GLCanvas$5:::OBJECT
this has only one value
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$5.(javax.media.opengl.awt.GLCanvas):::ENTER
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$5.(javax.media.opengl.awt.GLCanvas):::EXIT
javax.media.opengl.awt.GLCanvas.this == orig(javax.media.opengl.awt.GLCanvas.this)
===========================================================================
javax.media.opengl.awt.GLCanvas$6:::OBJECT
this has only one value
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$6.(javax.media.opengl.awt.GLCanvas):::ENTER
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$6.(javax.media.opengl.awt.GLCanvas):::EXIT
javax.media.opengl.awt.GLCanvas.this == orig(javax.media.opengl.awt.GLCanvas.this)
===========================================================================
javax.media.opengl.awt.GLCanvas$7:::OBJECT
this has only one value
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$7.(javax.media.opengl.awt.GLCanvas):::ENTER
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$7.(javax.media.opengl.awt.GLCanvas):::EXIT
javax.media.opengl.awt.GLCanvas.this == orig(javax.media.opengl.awt.GLCanvas.this)
===========================================================================
javax.media.opengl.awt.GLCanvas$8:::OBJECT
this has only one value
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$8.(javax.media.opengl.awt.GLCanvas):::ENTER
javax.media.opengl.awt.GLCanvas.this has only one value
===========================================================================
javax.media.opengl.awt.GLCanvas$8.(javax.media.opengl.awt.GLCanvas):::EXIT
javax.media.opengl.awt.GLCanvas.this == orig(javax.media.opengl.awt.GLCanvas.this)
===========================================================================
jogamp.common.Debug:::CLASS
jogamp.common.Debug.verbose == false
jogamp.common.Debug.debugAll == false
com.jogamp.common.util.PropertyAccess.jnlp_prefix has only one value
com.jogamp.common.util.PropertyAccess.jnlp_prefix != null
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == "jnlp."
com.jogamp.common.util.PropertyAccess.javaws_prefix has only one value
com.jogamp.common.util.PropertyAccess.javaws_prefix != null
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == "javaws."
com.jogamp.common.util.PropertyAccess.trustedPrefixes has only one value
com.jogamp.common.util.PropertyAccess.trustedPrefixes != null
===========================================================================
jogamp.common.Debug.debug(java.lang.String):::ENTER
===========================================================================
jogamp.common.Debug.debug(java.lang.String):::EXIT
jogamp.common.Debug.verbose == orig(jogamp.common.Debug.verbose)
jogamp.common.Debug.debugAll == orig(jogamp.common.Debug.debugAll)
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
return == false
===========================================================================
jogamp.common.Debug.debug(java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
jogamp.common.Debug.debugAll():::ENTER
===========================================================================
jogamp.common.Debug.debugAll():::EXIT
jogamp.common.Debug.verbose == orig(jogamp.common.Debug.verbose)
jogamp.common.Debug.debugAll == orig(jogamp.common.Debug.debugAll)
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
return == false
===========================================================================
jogamp.common.Debug.debugAll():::EXIT;condition="not(return == true)"
===========================================================================
jogamp.common.Debug.getBooleanProperty(java.lang.String, boolean):::ENTER
arg0 has only one value
arg0.toString == "sun.jnlp.applet.launcher"
arg1 == true
===========================================================================
jogamp.common.Debug.getBooleanProperty(java.lang.String, boolean):::EXIT
jogamp.common.Debug.verbose == orig(jogamp.common.Debug.verbose)
jogamp.common.Debug.debugAll == orig(jogamp.common.Debug.debugAll)
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
arg0.toString == "sun.jnlp.applet.launcher"
return == false
===========================================================================
jogamp.common.Debug.getBooleanProperty(java.lang.String, boolean):::EXIT;condition="not(return == true)"
===========================================================================
jogamp.common.Debug.getBooleanProperty(java.lang.String, boolean, boolean):::ENTER
arg0 has only one value
arg0.toString == "jogamp.gluegen.UseTempJarCache"
arg1 == true
arg2 == true
===========================================================================
jogamp.common.Debug.getBooleanProperty(java.lang.String, boolean, boolean):::EXIT
jogamp.common.Debug.verbose == orig(jogamp.common.Debug.verbose)
jogamp.common.Debug.debugAll == orig(jogamp.common.Debug.debugAll)
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
arg0.toString == "jogamp.gluegen.UseTempJarCache"
return == true
===========================================================================
jogamp.common.Debug.getBooleanProperty(java.lang.String, boolean, boolean):::EXIT;condition="return == true"
===========================================================================
jogamp.common.Debug.isPropertyDefined(java.lang.String, boolean):::ENTER
arg1 == true
===========================================================================
jogamp.common.Debug.isPropertyDefined(java.lang.String, boolean):::EXIT
jogamp.common.Debug.verbose == orig(jogamp.common.Debug.verbose)
jogamp.common.Debug.debugAll == orig(jogamp.common.Debug.debugAll)
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
return == false
===========================================================================
jogamp.common.Debug.isPropertyDefined(java.lang.String, boolean):::EXIT;condition="not(return == true)"
===========================================================================
jogamp.common.os.AndroidUtils:::CLASS
jogamp.common.os.AndroidUtils.androidGetPackageInfoVersionNameMethod == null
jogamp.common.os.AndroidUtils.androidGetPackageInfoVersionCodeMethod == null
jogamp.common.os.AndroidUtils.androidGetTempRootMethod == null
===========================================================================
jogamp.common.os.AndroidUtils.getTempRoot():::ENTER
===========================================================================
jogamp.common.os.AndroidUtils.getTempRoot():::EXIT90
===========================================================================
jogamp.common.os.AndroidUtils.getTempRoot():::EXIT
jogamp.common.os.AndroidUtils.androidGetPackageInfoVersionNameMethod == orig(jogamp.common.os.AndroidUtils.androidGetPackageInfoVersionNameMethod)
jogamp.common.os.AndroidUtils.androidGetPackageInfoVersionCodeMethod == orig(jogamp.common.os.AndroidUtils.androidGetPackageInfoVersionCodeMethod)
jogamp.common.os.AndroidUtils.androidGetTempRootMethod == orig(jogamp.common.os.AndroidUtils.androidGetTempRootMethod)
return == null
===========================================================================
jogamp.common.os.PlatformPropsImpl$1:::OBJECT
this has only one value
===========================================================================
jogamp.common.os.PlatformPropsImpl$1.():::EXIT
===========================================================================
jogamp.common.os.PlatformPropsImpl$1.run():::ENTER
===========================================================================
jogamp.common.os.PlatformPropsImpl$1.run():::EXIT
return has only one value
return.toString == "OpenJDK Runtime Environment"
===========================================================================
jogamp.common.os.PlatformPropsImpl:::CLASS
jogamp.common.os.PlatformPropsImpl.OS has only one value
jogamp.common.os.PlatformPropsImpl.OS.toString == "Linux"
jogamp.common.os.PlatformPropsImpl.OS_lower has only one value
jogamp.common.os.PlatformPropsImpl.OS_lower.toString == "linux"
jogamp.common.os.PlatformPropsImpl.OS_VERSION has only one value
jogamp.common.os.PlatformPropsImpl.OS_VERSION.toString == "6.8.0-52-generic"
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER has only one value
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val has only one value
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[] == [6, 8, 0]
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[] elements one of { 0, 6, 8 }
jogamp.common.os.PlatformPropsImpl.ARCH has only one value
jogamp.common.os.PlatformPropsImpl.ARCH.toString == "amd64"
jogamp.common.os.PlatformPropsImpl.ARCH_lower has only one value
jogamp.common.os.PlatformPropsImpl.ARCH_lower.toString == "amd64"
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR.toString == "Ubuntu"
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL.toString == "https://ubuntu.com/"
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION.toString == "11.0.26"
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[] == [11, 0, 26]
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[] elements one of { 0, 11, 26 }
jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME.toString == "OpenJDK 64-Bit Server VM"
jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME has only one value
jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME.toString == "OpenJDK Runtime Environment"
jogamp.common.os.PlatformPropsImpl.JAVA_SE == true
jogamp.common.os.PlatformPropsImpl.NEWLINE has only one value
jogamp.common.os.PlatformPropsImpl.NEWLINE.toString == "\n"
jogamp.common.os.PlatformPropsImpl.LITTLE_ENDIAN == true
jogamp.common.os.PlatformPropsImpl.CPU_ARCH has only one value
com.jogamp.common.os.Platform$CPUType.X86_32 has only one value
com.jogamp.common.os.Platform$CPUType.X86_64 has only one value
com.jogamp.common.os.Platform$CPUType.ARM has only one value
com.jogamp.common.os.Platform$CPUType.ARMv5 has only one value
com.jogamp.common.os.Platform$CPUType.ARMv6 has only one value
com.jogamp.common.os.Platform$CPUType.ARMv7 has only one value
com.jogamp.common.os.Platform$CPUType.PPC has only one value
com.jogamp.common.os.Platform$CPUType.SPARC_32 has only one value
com.jogamp.common.os.Platform$CPUType.SPARCV9_64 has only one value
com.jogamp.common.os.Platform$CPUType.IA64 has only one value
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0 has only one value
com.jogamp.common.os.Platform$CPUType.X86_32.id == 1
com.jogamp.common.os.Platform$CPUType.X86_32.family has only one value
com.jogamp.common.os.Platform$CPUType.$VALUES has only one value
com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$CPUType[].class
com.jogamp.common.os.Platform$CPUType.$VALUES[] contains no nulls and has only one value, of length 11
com.jogamp.common.os.Platform$CPUType.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType, com.jogamp.common.os.Platform.CPUType]
com.jogamp.common.os.Platform$CPUType.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.CPUType.class
com.jogamp.common.os.Platform$CPUType.$VALUES[].id == [1, 2, 0, 1, 2, 4, 0, 1, 2, 0, 1]
com.jogamp.common.os.Platform$CPUType.$VALUES[].id elements >= 0
com.jogamp.common.os.Platform$CPUType.$VALUES[].family contains no nulls and has only one value, of length 11
com.jogamp.common.os.Platform$CPUType.X86_64.id == 2
com.jogamp.common.os.Platform$CPUType.X86_64.family has only one value
com.jogamp.common.os.Platform$CPUType.ARM.id == 0
com.jogamp.common.os.Platform$CPUType.ARM.family has only one value
com.jogamp.common.os.Platform$CPUType.ARMv5.id == 1
com.jogamp.common.os.Platform$CPUType.ARMv5.family has only one value
com.jogamp.common.os.Platform$CPUType.ARMv6.id == 2
com.jogamp.common.os.Platform$CPUType.ARMv6.family has only one value
com.jogamp.common.os.Platform$CPUType.ARMv7.id == 4
com.jogamp.common.os.Platform$CPUType.ARMv7.family has only one value
com.jogamp.common.os.Platform$CPUType.PPC.id == 0
com.jogamp.common.os.Platform$CPUType.PPC.family has only one value
com.jogamp.common.os.Platform$CPUType.SPARC_32.id == 1
com.jogamp.common.os.Platform$CPUType.SPARC_32.family has only one value
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id == 2
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family has only one value
com.jogamp.common.os.Platform$CPUType.IA64.id == 0
com.jogamp.common.os.Platform$CPUType.IA64.family has only one value
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id == 1
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family has only one value
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.id == 2
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family has only one value
com.jogamp.common.os.Platform$CPUFamily.X86 has only one value
com.jogamp.common.os.Platform$CPUFamily.ARM has only one value
com.jogamp.common.os.Platform$CPUFamily.PPC has only one value
com.jogamp.common.os.Platform$CPUFamily.SPARC has only one value
com.jogamp.common.os.Platform$CPUFamily.PA_RISC has only one value
com.jogamp.common.os.Platform$CPUFamily.IA64 has only one value
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family.id == 0
com.jogamp.common.os.Platform$CPUFamily.$VALUES has only one value
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$CPUFamily[].class
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] contains no nulls and has only one value, of length 6
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily, com.jogamp.common.os.Platform.CPUFamily]
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.CPUFamily.class
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == [0, 65536, 131072, 196608, -65536, -61440]
jogamp.common.os.PlatformPropsImpl.ABI_TYPE has only one value
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI has only one value
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL has only one value
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF has only one value
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id == 0
com.jogamp.common.os.Platform$ABIType.$VALUES has only one value
com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$ABIType[].class
com.jogamp.common.os.Platform$ABIType.$VALUES[] contains no nulls and has only one value, of length 3
com.jogamp.common.os.Platform$ABIType.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.ABIType, com.jogamp.common.os.Platform.ABIType, com.jogamp.common.os.Platform.ABIType]
com.jogamp.common.os.Platform$ABIType.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.ABIType.class
com.jogamp.common.os.Platform$ABIType.$VALUES[].id == [0, 1, 2]
com.jogamp.common.os.Platform$ABIType.$VALUES[].id elements one of { 0, 1, 2 }
com.jogamp.common.os.Platform$ABIType.$VALUES[].id sorted by <
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id == 1
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id == 2
jogamp.common.os.PlatformPropsImpl.ABI_TYPE.id == 0
jogamp.common.os.PlatformPropsImpl.OS_TYPE has only one value
com.jogamp.common.os.Platform$OSType.LINUX has only one value
com.jogamp.common.os.Platform$OSType.FREEBSD has only one value
com.jogamp.common.os.Platform$OSType.ANDROID has only one value
com.jogamp.common.os.Platform$OSType.MACOS has only one value
com.jogamp.common.os.Platform$OSType.SUNOS has only one value
com.jogamp.common.os.Platform$OSType.HPUX has only one value
com.jogamp.common.os.Platform$OSType.WINDOWS has only one value
com.jogamp.common.os.Platform$OSType.OPENKODE has only one value
com.jogamp.common.os.Platform$OSType.LINUX.id == 0
com.jogamp.common.os.Platform$OSType.$VALUES has only one value
com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName() == com.jogamp.common.os.Platform$OSType[].class
com.jogamp.common.os.Platform$OSType.$VALUES[] contains no nulls and has only one value, of length 8
com.jogamp.common.os.Platform$OSType.$VALUES[].getClass().getName() == [com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType, com.jogamp.common.os.Platform.OSType]
com.jogamp.common.os.Platform$OSType.$VALUES[].getClass().getName() elements == com.jogamp.common.os.Platform.OSType.class
com.jogamp.common.os.Platform$OSType.$VALUES[].id == [0, 1, 2, 3, 4, 5, 6, 7]
com.jogamp.common.os.Platform$OSType.$VALUES[].id elements >= 0
com.jogamp.common.os.Platform$OSType.FREEBSD.id == 1
com.jogamp.common.os.Platform$OSType.ANDROID.id == 2
com.jogamp.common.os.Platform$OSType.MACOS.id == 3
com.jogamp.common.os.Platform$OSType.SUNOS.id == 4
com.jogamp.common.os.Platform$OSType.HPUX.id == 5
com.jogamp.common.os.Platform$OSType.WINDOWS.id == 6
com.jogamp.common.os.Platform$OSType.OPENKODE.id == 7
jogamp.common.os.PlatformPropsImpl.OS_TYPE.id == 0
jogamp.common.os.PlatformPropsImpl.os_and_arch has only one value
jogamp.common.os.PlatformPropsImpl.os_and_arch.toString == "linux-amd64"
size(jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[]) == 3
size(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[]) == 3
size(com.jogamp.common.os.Platform$CPUType.$VALUES[]) == 11
size(com.jogamp.common.os.Platform$CPUFamily.$VALUES[]) == 6
size(com.jogamp.common.os.Platform$ABIType.$VALUES[]) == 3
size(com.jogamp.common.os.Platform$OSType.$VALUES[]) == 8
===========================================================================
jogamp.common.os.PlatformPropsImpl.getCPUTypeImpl(java.lang.String):::ENTER
arg0 has only one value
arg0.toString == "amd64"
===========================================================================
jogamp.common.os.PlatformPropsImpl.getCPUTypeImpl(java.lang.String):::EXIT126
===========================================================================
jogamp.common.os.PlatformPropsImpl.getCPUTypeImpl(java.lang.String):::EXIT
arg0.toString == orig(arg0.toString)
arg0.toString == "amd64"
return has only one value
return.id == 2
return.family has only one value
return.family.id == 0
===========================================================================
jogamp.common.os.PlatformPropsImpl.getJavaRuntimeNameImpl():::EXIT
return has only one value
return.toString == "OpenJDK Runtime Environment"
===========================================================================
jogamp.common.os.PlatformPropsImpl.getOSAndArch(com.jogamp.common.os.Platform$OSType, com.jogamp.common.os.Platform$CPUType, com.jogamp.common.os.Platform$ABIType):::ENTER
arg0 has only one value
arg0.id == 0
arg1 has only one value
arg1.id == 2
arg1.family has only one value
arg1.family.id == 0
arg2 has only one value
arg2.id == 0
===========================================================================
jogamp.common.os.PlatformPropsImpl.getOSAndArch(com.jogamp.common.os.Platform$OSType, com.jogamp.common.os.Platform$CPUType, com.jogamp.common.os.Platform$ABIType):::EXIT
com.jogamp.common.os.Platform$CPUType.X86_32 == orig(com.jogamp.common.os.Platform$CPUType.X86_32)
com.jogamp.common.os.Platform$CPUType.X86_64 == orig(com.jogamp.common.os.Platform$CPUType.X86_64)
com.jogamp.common.os.Platform$CPUType.ARM == orig(com.jogamp.common.os.Platform$CPUType.ARM)
com.jogamp.common.os.Platform$CPUType.ARMv5 == orig(com.jogamp.common.os.Platform$CPUType.ARMv5)
com.jogamp.common.os.Platform$CPUType.ARMv6 == orig(com.jogamp.common.os.Platform$CPUType.ARMv6)
com.jogamp.common.os.Platform$CPUType.ARMv7 == orig(com.jogamp.common.os.Platform$CPUType.ARMv7)
com.jogamp.common.os.Platform$CPUType.PPC == orig(com.jogamp.common.os.Platform$CPUType.PPC)
com.jogamp.common.os.Platform$CPUType.SPARC_32 == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64 == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64)
com.jogamp.common.os.Platform$CPUType.IA64 == orig(com.jogamp.common.os.Platform$CPUType.IA64)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0 == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0)
com.jogamp.common.os.Platform$CPUType.X86_32.id == orig(com.jogamp.common.os.Platform$CPUType.X86_32.id)
com.jogamp.common.os.Platform$CPUType.X86_32.family == orig(com.jogamp.common.os.Platform$CPUType.X86_32.family)
com.jogamp.common.os.Platform$CPUType.$VALUES == orig(com.jogamp.common.os.Platform$CPUType.$VALUES)
com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUType.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[])
com.jogamp.common.os.Platform$CPUType.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].id)
com.jogamp.common.os.Platform$CPUType.$VALUES[].family == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].family)
com.jogamp.common.os.Platform$CPUType.X86_64.id == orig(com.jogamp.common.os.Platform$CPUType.X86_64.id)
com.jogamp.common.os.Platform$CPUType.X86_64.family == orig(com.jogamp.common.os.Platform$CPUType.X86_64.family)
com.jogamp.common.os.Platform$CPUType.ARM.id == orig(com.jogamp.common.os.Platform$CPUType.ARM.id)
com.jogamp.common.os.Platform$CPUType.ARM.family == orig(com.jogamp.common.os.Platform$CPUType.ARM.family)
com.jogamp.common.os.Platform$CPUType.ARMv5.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.id)
com.jogamp.common.os.Platform$CPUType.ARMv5.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.family)
com.jogamp.common.os.Platform$CPUType.ARMv6.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.id)
com.jogamp.common.os.Platform$CPUType.ARMv6.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.family)
com.jogamp.common.os.Platform$CPUType.ARMv7.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.id)
com.jogamp.common.os.Platform$CPUType.ARMv7.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.family)
com.jogamp.common.os.Platform$CPUType.PPC.id == orig(com.jogamp.common.os.Platform$CPUType.PPC.id)
com.jogamp.common.os.Platform$CPUType.PPC.family == orig(com.jogamp.common.os.Platform$CPUType.PPC.family)
com.jogamp.common.os.Platform$CPUType.SPARC_32.id == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.id)
com.jogamp.common.os.Platform$CPUType.SPARC_32.family == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.family)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family)
com.jogamp.common.os.Platform$CPUType.IA64.id == orig(com.jogamp.common.os.Platform$CPUType.IA64.id)
com.jogamp.common.os.Platform$CPUType.IA64.family == orig(com.jogamp.common.os.Platform$CPUType.IA64.family)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family)
com.jogamp.common.os.Platform$CPUFamily.X86 == orig(com.jogamp.common.os.Platform$CPUFamily.X86)
com.jogamp.common.os.Platform$CPUFamily.ARM == orig(com.jogamp.common.os.Platform$CPUFamily.ARM)
com.jogamp.common.os.Platform$CPUFamily.PPC == orig(com.jogamp.common.os.Platform$CPUFamily.PPC)
com.jogamp.common.os.Platform$CPUFamily.SPARC == orig(com.jogamp.common.os.Platform$CPUFamily.SPARC)
com.jogamp.common.os.Platform$CPUFamily.PA_RISC == orig(com.jogamp.common.os.Platform$CPUFamily.PA_RISC)
com.jogamp.common.os.Platform$CPUFamily.IA64 == orig(com.jogamp.common.os.Platform$CPUFamily.IA64)
com.jogamp.common.os.Platform$CPUFamily.$VALUES == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES)
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[])
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id)
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI == orig(com.jogamp.common.os.Platform$ABIType.GENERIC_ABI)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF)
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id == orig(com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id)
com.jogamp.common.os.Platform$ABIType.$VALUES == orig(com.jogamp.common.os.Platform$ABIType.$VALUES)
com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$ABIType.$VALUES[] == orig(com.jogamp.common.os.Platform$ABIType.$VALUES[])
com.jogamp.common.os.Platform$ABIType.$VALUES[].id == orig(com.jogamp.common.os.Platform$ABIType.$VALUES[].id)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id)
com.jogamp.common.os.Platform$OSType.LINUX == orig(com.jogamp.common.os.Platform$OSType.LINUX)
com.jogamp.common.os.Platform$OSType.FREEBSD == orig(com.jogamp.common.os.Platform$OSType.FREEBSD)
com.jogamp.common.os.Platform$OSType.ANDROID == orig(com.jogamp.common.os.Platform$OSType.ANDROID)
com.jogamp.common.os.Platform$OSType.MACOS == orig(com.jogamp.common.os.Platform$OSType.MACOS)
com.jogamp.common.os.Platform$OSType.SUNOS == orig(com.jogamp.common.os.Platform$OSType.SUNOS)
com.jogamp.common.os.Platform$OSType.HPUX == orig(com.jogamp.common.os.Platform$OSType.HPUX)
com.jogamp.common.os.Platform$OSType.WINDOWS == orig(com.jogamp.common.os.Platform$OSType.WINDOWS)
com.jogamp.common.os.Platform$OSType.OPENKODE == orig(com.jogamp.common.os.Platform$OSType.OPENKODE)
com.jogamp.common.os.Platform$OSType.LINUX.id == orig(com.jogamp.common.os.Platform$OSType.LINUX.id)
com.jogamp.common.os.Platform$OSType.$VALUES == orig(com.jogamp.common.os.Platform$OSType.$VALUES)
com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$OSType.$VALUES[] == orig(com.jogamp.common.os.Platform$OSType.$VALUES[])
com.jogamp.common.os.Platform$OSType.$VALUES[].id == orig(com.jogamp.common.os.Platform$OSType.$VALUES[].id)
com.jogamp.common.os.Platform$OSType.FREEBSD.id == orig(com.jogamp.common.os.Platform$OSType.FREEBSD.id)
com.jogamp.common.os.Platform$OSType.ANDROID.id == orig(com.jogamp.common.os.Platform$OSType.ANDROID.id)
com.jogamp.common.os.Platform$OSType.MACOS.id == orig(com.jogamp.common.os.Platform$OSType.MACOS.id)
com.jogamp.common.os.Platform$OSType.SUNOS.id == orig(com.jogamp.common.os.Platform$OSType.SUNOS.id)
com.jogamp.common.os.Platform$OSType.HPUX.id == orig(com.jogamp.common.os.Platform$OSType.HPUX.id)
com.jogamp.common.os.Platform$OSType.WINDOWS.id == orig(com.jogamp.common.os.Platform$OSType.WINDOWS.id)
com.jogamp.common.os.Platform$OSType.OPENKODE.id == orig(com.jogamp.common.os.Platform$OSType.OPENKODE.id)
arg0.id == orig(arg0.id)
arg1.id == orig(arg1.id)
arg1.family == orig(arg1.family)
arg1.family.id == orig(arg1.family.id)
arg2.id == orig(arg2.id)
arg0.id == 0
arg1.id == 2
arg1.family has only one value
arg1.family.id == 0
arg2.id == 0
return has only one value
return.toString == "linux-amd64"
===========================================================================
jogamp.common.os.PlatformPropsImpl.getOSTypeImpl():::ENTER
===========================================================================
jogamp.common.os.PlatformPropsImpl.getOSTypeImpl():::EXIT182
===========================================================================
jogamp.common.os.PlatformPropsImpl.getOSTypeImpl():::EXIT
com.jogamp.common.os.Platform$CPUType.X86_32 == orig(com.jogamp.common.os.Platform$CPUType.X86_32)
com.jogamp.common.os.Platform$CPUType.X86_64 == orig(com.jogamp.common.os.Platform$CPUType.X86_64)
com.jogamp.common.os.Platform$CPUType.ARM == orig(com.jogamp.common.os.Platform$CPUType.ARM)
com.jogamp.common.os.Platform$CPUType.ARMv5 == orig(com.jogamp.common.os.Platform$CPUType.ARMv5)
com.jogamp.common.os.Platform$CPUType.ARMv6 == orig(com.jogamp.common.os.Platform$CPUType.ARMv6)
com.jogamp.common.os.Platform$CPUType.ARMv7 == orig(com.jogamp.common.os.Platform$CPUType.ARMv7)
com.jogamp.common.os.Platform$CPUType.PPC == orig(com.jogamp.common.os.Platform$CPUType.PPC)
com.jogamp.common.os.Platform$CPUType.SPARC_32 == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64 == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64)
com.jogamp.common.os.Platform$CPUType.IA64 == orig(com.jogamp.common.os.Platform$CPUType.IA64)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0 == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0)
com.jogamp.common.os.Platform$CPUType.X86_32.id == orig(com.jogamp.common.os.Platform$CPUType.X86_32.id)
com.jogamp.common.os.Platform$CPUType.X86_32.family == orig(com.jogamp.common.os.Platform$CPUType.X86_32.family)
com.jogamp.common.os.Platform$CPUType.$VALUES == orig(com.jogamp.common.os.Platform$CPUType.$VALUES)
com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUType.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[])
com.jogamp.common.os.Platform$CPUType.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].id)
com.jogamp.common.os.Platform$CPUType.$VALUES[].family == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].family)
com.jogamp.common.os.Platform$CPUType.X86_64.id == orig(com.jogamp.common.os.Platform$CPUType.X86_64.id)
com.jogamp.common.os.Platform$CPUType.X86_64.family == orig(com.jogamp.common.os.Platform$CPUType.X86_64.family)
com.jogamp.common.os.Platform$CPUType.ARM.id == orig(com.jogamp.common.os.Platform$CPUType.ARM.id)
com.jogamp.common.os.Platform$CPUType.ARM.family == orig(com.jogamp.common.os.Platform$CPUType.ARM.family)
com.jogamp.common.os.Platform$CPUType.ARMv5.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.id)
com.jogamp.common.os.Platform$CPUType.ARMv5.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.family)
com.jogamp.common.os.Platform$CPUType.ARMv6.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.id)
com.jogamp.common.os.Platform$CPUType.ARMv6.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.family)
com.jogamp.common.os.Platform$CPUType.ARMv7.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.id)
com.jogamp.common.os.Platform$CPUType.ARMv7.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.family)
com.jogamp.common.os.Platform$CPUType.PPC.id == orig(com.jogamp.common.os.Platform$CPUType.PPC.id)
com.jogamp.common.os.Platform$CPUType.PPC.family == orig(com.jogamp.common.os.Platform$CPUType.PPC.family)
com.jogamp.common.os.Platform$CPUType.SPARC_32.id == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.id)
com.jogamp.common.os.Platform$CPUType.SPARC_32.family == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.family)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family)
com.jogamp.common.os.Platform$CPUType.IA64.id == orig(com.jogamp.common.os.Platform$CPUType.IA64.id)
com.jogamp.common.os.Platform$CPUType.IA64.family == orig(com.jogamp.common.os.Platform$CPUType.IA64.family)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family)
com.jogamp.common.os.Platform$CPUFamily.X86 == orig(com.jogamp.common.os.Platform$CPUFamily.X86)
com.jogamp.common.os.Platform$CPUFamily.ARM == orig(com.jogamp.common.os.Platform$CPUFamily.ARM)
com.jogamp.common.os.Platform$CPUFamily.PPC == orig(com.jogamp.common.os.Platform$CPUFamily.PPC)
com.jogamp.common.os.Platform$CPUFamily.SPARC == orig(com.jogamp.common.os.Platform$CPUFamily.SPARC)
com.jogamp.common.os.Platform$CPUFamily.PA_RISC == orig(com.jogamp.common.os.Platform$CPUFamily.PA_RISC)
com.jogamp.common.os.Platform$CPUFamily.IA64 == orig(com.jogamp.common.os.Platform$CPUFamily.IA64)
com.jogamp.common.os.Platform$CPUFamily.$VALUES == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES)
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[])
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id)
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI == orig(com.jogamp.common.os.Platform$ABIType.GENERIC_ABI)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF)
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id == orig(com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id)
com.jogamp.common.os.Platform$ABIType.$VALUES == orig(com.jogamp.common.os.Platform$ABIType.$VALUES)
com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$ABIType.$VALUES[] == orig(com.jogamp.common.os.Platform$ABIType.$VALUES[])
com.jogamp.common.os.Platform$ABIType.$VALUES[].id == orig(com.jogamp.common.os.Platform$ABIType.$VALUES[].id)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id)
return has only one value
return.id == 0
===========================================================================
jogamp.common.os.PlatformPropsImpl.guessABITypeImpl(com.jogamp.common.os.Platform$CPUType):::ENTER
arg0 has only one value
arg0.id == 2
arg0.family has only one value
arg0.family.id == 0
===========================================================================
jogamp.common.os.PlatformPropsImpl.guessABITypeImpl(com.jogamp.common.os.Platform$CPUType):::EXIT163
===========================================================================
jogamp.common.os.PlatformPropsImpl.guessABITypeImpl(com.jogamp.common.os.Platform$CPUType):::EXIT
com.jogamp.common.os.Platform$CPUType.X86_32 == orig(com.jogamp.common.os.Platform$CPUType.X86_32)
com.jogamp.common.os.Platform$CPUType.X86_64 == orig(com.jogamp.common.os.Platform$CPUType.X86_64)
com.jogamp.common.os.Platform$CPUType.ARM == orig(com.jogamp.common.os.Platform$CPUType.ARM)
com.jogamp.common.os.Platform$CPUType.ARMv5 == orig(com.jogamp.common.os.Platform$CPUType.ARMv5)
com.jogamp.common.os.Platform$CPUType.ARMv6 == orig(com.jogamp.common.os.Platform$CPUType.ARMv6)
com.jogamp.common.os.Platform$CPUType.ARMv7 == orig(com.jogamp.common.os.Platform$CPUType.ARMv7)
com.jogamp.common.os.Platform$CPUType.PPC == orig(com.jogamp.common.os.Platform$CPUType.PPC)
com.jogamp.common.os.Platform$CPUType.SPARC_32 == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64 == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64)
com.jogamp.common.os.Platform$CPUType.IA64 == orig(com.jogamp.common.os.Platform$CPUType.IA64)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0 == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0)
com.jogamp.common.os.Platform$CPUType.X86_32.id == orig(com.jogamp.common.os.Platform$CPUType.X86_32.id)
com.jogamp.common.os.Platform$CPUType.X86_32.family == orig(com.jogamp.common.os.Platform$CPUType.X86_32.family)
com.jogamp.common.os.Platform$CPUType.$VALUES == orig(com.jogamp.common.os.Platform$CPUType.$VALUES)
com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUType.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[])
com.jogamp.common.os.Platform$CPUType.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].id)
com.jogamp.common.os.Platform$CPUType.$VALUES[].family == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].family)
com.jogamp.common.os.Platform$CPUType.X86_64.id == orig(com.jogamp.common.os.Platform$CPUType.X86_64.id)
com.jogamp.common.os.Platform$CPUType.X86_64.family == orig(com.jogamp.common.os.Platform$CPUType.X86_64.family)
com.jogamp.common.os.Platform$CPUType.ARM.id == orig(com.jogamp.common.os.Platform$CPUType.ARM.id)
com.jogamp.common.os.Platform$CPUType.ARM.family == orig(com.jogamp.common.os.Platform$CPUType.ARM.family)
com.jogamp.common.os.Platform$CPUType.ARMv5.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.id)
com.jogamp.common.os.Platform$CPUType.ARMv5.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.family)
com.jogamp.common.os.Platform$CPUType.ARMv6.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.id)
com.jogamp.common.os.Platform$CPUType.ARMv6.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.family)
com.jogamp.common.os.Platform$CPUType.ARMv7.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.id)
com.jogamp.common.os.Platform$CPUType.ARMv7.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.family)
com.jogamp.common.os.Platform$CPUType.PPC.id == orig(com.jogamp.common.os.Platform$CPUType.PPC.id)
com.jogamp.common.os.Platform$CPUType.PPC.family == orig(com.jogamp.common.os.Platform$CPUType.PPC.family)
com.jogamp.common.os.Platform$CPUType.SPARC_32.id == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.id)
com.jogamp.common.os.Platform$CPUType.SPARC_32.family == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.family)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family)
com.jogamp.common.os.Platform$CPUType.IA64.id == orig(com.jogamp.common.os.Platform$CPUType.IA64.id)
com.jogamp.common.os.Platform$CPUType.IA64.family == orig(com.jogamp.common.os.Platform$CPUType.IA64.family)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family)
com.jogamp.common.os.Platform$CPUFamily.X86 == orig(com.jogamp.common.os.Platform$CPUFamily.X86)
com.jogamp.common.os.Platform$CPUFamily.ARM == orig(com.jogamp.common.os.Platform$CPUFamily.ARM)
com.jogamp.common.os.Platform$CPUFamily.PPC == orig(com.jogamp.common.os.Platform$CPUFamily.PPC)
com.jogamp.common.os.Platform$CPUFamily.SPARC == orig(com.jogamp.common.os.Platform$CPUFamily.SPARC)
com.jogamp.common.os.Platform$CPUFamily.PA_RISC == orig(com.jogamp.common.os.Platform$CPUFamily.PA_RISC)
com.jogamp.common.os.Platform$CPUFamily.IA64 == orig(com.jogamp.common.os.Platform$CPUFamily.IA64)
com.jogamp.common.os.Platform$CPUFamily.$VALUES == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES)
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[])
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id)
arg0.id == orig(arg0.id)
arg0.family == orig(arg0.family)
arg0.family.id == orig(arg0.family.id)
arg0.id == 2
arg0.family has only one value
arg0.family.id == 0
return has only one value
return.id == 0
===========================================================================
jogamp.common.os.PlatformPropsImpl.initIsJavaSE():::EXIT101
===========================================================================
jogamp.common.os.PlatformPropsImpl.initIsJavaSE():::EXIT101;condition="return == true"
===========================================================================
jogamp.common.os.PlatformPropsImpl.initIsJavaSE():::EXIT
return == true
===========================================================================
jogamp.common.os.PlatformPropsImpl.initIsJavaSE():::EXIT;condition="return == true"
===========================================================================
jogamp.common.os.PlatformPropsImpl.initSingleton():::ENTER
===========================================================================
jogamp.common.os.PlatformPropsImpl.initSingleton():::EXIT
jogamp.common.os.PlatformPropsImpl.OS == orig(jogamp.common.os.PlatformPropsImpl.OS)
jogamp.common.os.PlatformPropsImpl.OS.toString == orig(jogamp.common.os.PlatformPropsImpl.OS.toString)
jogamp.common.os.PlatformPropsImpl.OS_lower == orig(jogamp.common.os.PlatformPropsImpl.OS_lower)
jogamp.common.os.PlatformPropsImpl.OS_lower.toString == orig(jogamp.common.os.PlatformPropsImpl.OS_lower.toString)
jogamp.common.os.PlatformPropsImpl.OS_VERSION == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION)
jogamp.common.os.PlatformPropsImpl.OS_VERSION.toString == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION.toString)
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER)
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val)
jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[] == orig(jogamp.common.os.PlatformPropsImpl.OS_VERSION_NUMBER.val[])
jogamp.common.os.PlatformPropsImpl.ARCH == orig(jogamp.common.os.PlatformPropsImpl.ARCH)
jogamp.common.os.PlatformPropsImpl.ARCH.toString == orig(jogamp.common.os.PlatformPropsImpl.ARCH.toString)
jogamp.common.os.PlatformPropsImpl.ARCH_lower == orig(jogamp.common.os.PlatformPropsImpl.ARCH_lower)
jogamp.common.os.PlatformPropsImpl.ARCH_lower.toString == orig(jogamp.common.os.PlatformPropsImpl.ARCH_lower.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR)
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL)
jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VENDOR_URL.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val)
jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[] == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VERSION_NUMBER.val[])
jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME)
jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_VM_NAME.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME == orig(jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME)
jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME.toString == orig(jogamp.common.os.PlatformPropsImpl.JAVA_RUNTIME_NAME.toString)
jogamp.common.os.PlatformPropsImpl.JAVA_SE == orig(jogamp.common.os.PlatformPropsImpl.JAVA_SE)
jogamp.common.os.PlatformPropsImpl.NEWLINE == orig(jogamp.common.os.PlatformPropsImpl.NEWLINE)
jogamp.common.os.PlatformPropsImpl.NEWLINE.toString == orig(jogamp.common.os.PlatformPropsImpl.NEWLINE.toString)
jogamp.common.os.PlatformPropsImpl.LITTLE_ENDIAN == orig(jogamp.common.os.PlatformPropsImpl.LITTLE_ENDIAN)
jogamp.common.os.PlatformPropsImpl.CPU_ARCH == orig(jogamp.common.os.PlatformPropsImpl.CPU_ARCH)
com.jogamp.common.os.Platform$CPUType.X86_32 == orig(com.jogamp.common.os.Platform$CPUType.X86_32)
com.jogamp.common.os.Platform$CPUType.X86_64 == orig(com.jogamp.common.os.Platform$CPUType.X86_64)
com.jogamp.common.os.Platform$CPUType.ARM == orig(com.jogamp.common.os.Platform$CPUType.ARM)
com.jogamp.common.os.Platform$CPUType.ARMv5 == orig(com.jogamp.common.os.Platform$CPUType.ARMv5)
com.jogamp.common.os.Platform$CPUType.ARMv6 == orig(com.jogamp.common.os.Platform$CPUType.ARMv6)
com.jogamp.common.os.Platform$CPUType.ARMv7 == orig(com.jogamp.common.os.Platform$CPUType.ARMv7)
com.jogamp.common.os.Platform$CPUType.PPC == orig(com.jogamp.common.os.Platform$CPUType.PPC)
com.jogamp.common.os.Platform$CPUType.SPARC_32 == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64 == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64)
com.jogamp.common.os.Platform$CPUType.IA64 == orig(com.jogamp.common.os.Platform$CPUType.IA64)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0 == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0)
com.jogamp.common.os.Platform$CPUType.X86_32.id == orig(com.jogamp.common.os.Platform$CPUType.X86_32.id)
com.jogamp.common.os.Platform$CPUType.X86_32.family == orig(com.jogamp.common.os.Platform$CPUType.X86_32.family)
com.jogamp.common.os.Platform$CPUType.$VALUES == orig(com.jogamp.common.os.Platform$CPUType.$VALUES)
com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUType.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[])
com.jogamp.common.os.Platform$CPUType.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].id)
com.jogamp.common.os.Platform$CPUType.$VALUES[].family == orig(com.jogamp.common.os.Platform$CPUType.$VALUES[].family)
com.jogamp.common.os.Platform$CPUType.X86_64.id == orig(com.jogamp.common.os.Platform$CPUType.X86_64.id)
com.jogamp.common.os.Platform$CPUType.X86_64.family == orig(com.jogamp.common.os.Platform$CPUType.X86_64.family)
com.jogamp.common.os.Platform$CPUType.ARM.id == orig(com.jogamp.common.os.Platform$CPUType.ARM.id)
com.jogamp.common.os.Platform$CPUType.ARM.family == orig(com.jogamp.common.os.Platform$CPUType.ARM.family)
com.jogamp.common.os.Platform$CPUType.ARMv5.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.id)
com.jogamp.common.os.Platform$CPUType.ARMv5.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv5.family)
com.jogamp.common.os.Platform$CPUType.ARMv6.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.id)
com.jogamp.common.os.Platform$CPUType.ARMv6.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv6.family)
com.jogamp.common.os.Platform$CPUType.ARMv7.id == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.id)
com.jogamp.common.os.Platform$CPUType.ARMv7.family == orig(com.jogamp.common.os.Platform$CPUType.ARMv7.family)
com.jogamp.common.os.Platform$CPUType.PPC.id == orig(com.jogamp.common.os.Platform$CPUType.PPC.id)
com.jogamp.common.os.Platform$CPUType.PPC.family == orig(com.jogamp.common.os.Platform$CPUType.PPC.family)
com.jogamp.common.os.Platform$CPUType.SPARC_32.id == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.id)
com.jogamp.common.os.Platform$CPUType.SPARC_32.family == orig(com.jogamp.common.os.Platform$CPUType.SPARC_32.family)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.id)
com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family == orig(com.jogamp.common.os.Platform$CPUType.SPARCV9_64.family)
com.jogamp.common.os.Platform$CPUType.IA64.id == orig(com.jogamp.common.os.Platform$CPUType.IA64.id)
com.jogamp.common.os.Platform$CPUType.IA64.family == orig(com.jogamp.common.os.Platform$CPUType.IA64.family)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.id)
com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family == orig(com.jogamp.common.os.Platform$CPUType.PA_RISC2_0.family)
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.id == orig(jogamp.common.os.PlatformPropsImpl.CPU_ARCH.id)
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family == orig(jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family)
com.jogamp.common.os.Platform$CPUFamily.X86 == orig(com.jogamp.common.os.Platform$CPUFamily.X86)
com.jogamp.common.os.Platform$CPUFamily.ARM == orig(com.jogamp.common.os.Platform$CPUFamily.ARM)
com.jogamp.common.os.Platform$CPUFamily.PPC == orig(com.jogamp.common.os.Platform$CPUFamily.PPC)
com.jogamp.common.os.Platform$CPUFamily.SPARC == orig(com.jogamp.common.os.Platform$CPUFamily.SPARC)
com.jogamp.common.os.Platform$CPUFamily.PA_RISC == orig(com.jogamp.common.os.Platform$CPUFamily.PA_RISC)
com.jogamp.common.os.Platform$CPUFamily.IA64 == orig(com.jogamp.common.os.Platform$CPUFamily.IA64)
jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family.id == orig(jogamp.common.os.PlatformPropsImpl.CPU_ARCH.family.id)
com.jogamp.common.os.Platform$CPUFamily.$VALUES == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES)
com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$CPUFamily.$VALUES[] == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[])
com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id == orig(com.jogamp.common.os.Platform$CPUFamily.$VALUES[].id)
jogamp.common.os.PlatformPropsImpl.ABI_TYPE == orig(jogamp.common.os.PlatformPropsImpl.ABI_TYPE)
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI == orig(com.jogamp.common.os.Platform$ABIType.GENERIC_ABI)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF)
com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id == orig(com.jogamp.common.os.Platform$ABIType.GENERIC_ABI.id)
com.jogamp.common.os.Platform$ABIType.$VALUES == orig(com.jogamp.common.os.Platform$ABIType.$VALUES)
com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$ABIType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$ABIType.$VALUES[] == orig(com.jogamp.common.os.Platform$ABIType.$VALUES[])
com.jogamp.common.os.Platform$ABIType.$VALUES[].id == orig(com.jogamp.common.os.Platform$ABIType.$VALUES[].id)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMEL.id)
com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id == orig(com.jogamp.common.os.Platform$ABIType.EABI_GNU_ARMHF.id)
jogamp.common.os.PlatformPropsImpl.ABI_TYPE.id == orig(jogamp.common.os.PlatformPropsImpl.ABI_TYPE.id)
jogamp.common.os.PlatformPropsImpl.OS_TYPE == orig(jogamp.common.os.PlatformPropsImpl.OS_TYPE)
com.jogamp.common.os.Platform$OSType.LINUX == orig(com.jogamp.common.os.Platform$OSType.LINUX)
com.jogamp.common.os.Platform$OSType.FREEBSD == orig(com.jogamp.common.os.Platform$OSType.FREEBSD)
com.jogamp.common.os.Platform$OSType.ANDROID == orig(com.jogamp.common.os.Platform$OSType.ANDROID)
com.jogamp.common.os.Platform$OSType.MACOS == orig(com.jogamp.common.os.Platform$OSType.MACOS)
com.jogamp.common.os.Platform$OSType.SUNOS == orig(com.jogamp.common.os.Platform$OSType.SUNOS)
com.jogamp.common.os.Platform$OSType.HPUX == orig(com.jogamp.common.os.Platform$OSType.HPUX)
com.jogamp.common.os.Platform$OSType.WINDOWS == orig(com.jogamp.common.os.Platform$OSType.WINDOWS)
com.jogamp.common.os.Platform$OSType.OPENKODE == orig(com.jogamp.common.os.Platform$OSType.OPENKODE)
com.jogamp.common.os.Platform$OSType.LINUX.id == orig(com.jogamp.common.os.Platform$OSType.LINUX.id)
com.jogamp.common.os.Platform$OSType.$VALUES == orig(com.jogamp.common.os.Platform$OSType.$VALUES)
com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName() == orig(com.jogamp.common.os.Platform$OSType.$VALUES.getClass().getName())
com.jogamp.common.os.Platform$OSType.$VALUES[] == orig(com.jogamp.common.os.Platform$OSType.$VALUES[])
com.jogamp.common.os.Platform$OSType.$VALUES[].id == orig(com.jogamp.common.os.Platform$OSType.$VALUES[].id)
com.jogamp.common.os.Platform$OSType.FREEBSD.id == orig(com.jogamp.common.os.Platform$OSType.FREEBSD.id)
com.jogamp.common.os.Platform$OSType.ANDROID.id == orig(com.jogamp.common.os.Platform$OSType.ANDROID.id)
com.jogamp.common.os.Platform$OSType.MACOS.id == orig(com.jogamp.common.os.Platform$OSType.MACOS.id)
com.jogamp.common.os.Platform$OSType.SUNOS.id == orig(com.jogamp.common.os.Platform$OSType.SUNOS.id)
com.jogamp.common.os.Platform$OSType.HPUX.id == orig(com.jogamp.common.os.Platform$OSType.HPUX.id)
com.jogamp.common.os.Platform$OSType.WINDOWS.id == orig(com.jogamp.common.os.Platform$OSType.WINDOWS.id)
com.jogamp.common.os.Platform$OSType.OPENKODE.id == orig(com.jogamp.common.os.Platform$OSType.OPENKODE.id)
jogamp.common.os.PlatformPropsImpl.OS_TYPE.id == orig(jogamp.common.os.PlatformPropsImpl.OS_TYPE.id)
jogamp.common.os.PlatformPropsImpl.os_and_arch == orig(jogamp.common.os.PlatformPropsImpl.os_and_arch)
jogamp.common.os.PlatformPropsImpl.os_and_arch.toString == orig(jogamp.common.os.PlatformPropsImpl.os_and_arch.toString)
===========================================================================
jogamp.common.os.PlatformPropsImpl.queryIsLittleEndianImpl():::EXIT
return == true
===========================================================================
jogamp.common.os.PlatformPropsImpl.queryIsLittleEndianImpl():::EXIT;condition="return == true"
===========================================================================
jogamp.common.os.UnixDynamicLinkerImpl:::CLASS
===========================================================================
jogamp.common.os.UnixDynamicLinkerImpl:::OBJECT
this has only one value
===========================================================================
jogamp.common.os.UnixDynamicLinkerImpl.UnixDynamicLinkerImpl():::EXIT
===========================================================================
jogamp.common.util.locks.RecursiveLockImpl01Unfairish$SingleThreadSync:::OBJECT
this has only one value
this.holdCount == 0
this.lockedStack == null
this.qsz == 0
===========================================================================
jogamp.common.util.locks.RecursiveLockImpl01Unfairish$SingleThreadSync.SingleThreadSync():::EXIT
===========================================================================
jogamp.common.util.locks.RecursiveLockImpl01Unfairish:::OBJECT
this has only one value
this.sync has only one value
this.sync.getClass().getName() == jogamp.common.util.locks.RecursiveLockImpl01Unfairish$SingleThreadSync.class
===========================================================================
jogamp.common.util.locks.RecursiveLockImpl01Unfairish.RecursiveLockImpl01Unfairish():::EXIT
===========================================================================
jogamp.common.util.locks.RecursiveLockImpl01Unfairish.RecursiveLockImpl01Unfairish(jogamp.common.util.locks.RecursiveLockImpl01Unfairish$Sync):::ENTER
arg0 has only one value
arg0.getClass().getName() == jogamp.common.util.locks.RecursiveLockImpl01Unfairish$SingleThreadSync.class
===========================================================================
jogamp.common.util.locks.RecursiveLockImpl01Unfairish.RecursiveLockImpl01Unfairish(jogamp.common.util.locks.RecursiveLockImpl01Unfairish$Sync):::EXIT
===========================================================================
jogamp.opengl.Debug:::CLASS
com.jogamp.common.util.PropertyAccess.jnlp_prefix has only one value
com.jogamp.common.util.PropertyAccess.jnlp_prefix != null
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == "jnlp."
com.jogamp.common.util.PropertyAccess.javaws_prefix has only one value
com.jogamp.common.util.PropertyAccess.javaws_prefix != null
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == "javaws."
com.jogamp.common.util.PropertyAccess.trustedPrefixes has only one value
com.jogamp.common.util.PropertyAccess.trustedPrefixes != null
===========================================================================
jogamp.opengl.Debug.debug(java.lang.String):::ENTER
arg0.toString one of { "GLCanvas", "GLDrawable", "GLProfile" }
===========================================================================
jogamp.opengl.Debug.debug(java.lang.String):::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
arg0.toString one of { "GLCanvas", "GLDrawable", "GLProfile" }
return == false
===========================================================================
jogamp.opengl.Debug.debug(java.lang.String):::EXIT;condition="not(return == true)"
===========================================================================
jogamp.opengl.Debug.debugAll():::ENTER
===========================================================================
jogamp.opengl.Debug.debugAll():::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
return == false
===========================================================================
jogamp.opengl.Debug.debugAll():::EXIT;condition="not(return == true)"
===========================================================================
jogamp.opengl.Debug.isPropertyDefined(java.lang.String, boolean):::ENTER
arg1 == true
===========================================================================
jogamp.opengl.Debug.isPropertyDefined(java.lang.String, boolean):::EXIT
com.jogamp.common.util.PropertyAccess.jnlp_prefix == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix)
com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.jnlp_prefix.toString)
com.jogamp.common.util.PropertyAccess.javaws_prefix == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix)
com.jogamp.common.util.PropertyAccess.javaws_prefix.toString == orig(com.jogamp.common.util.PropertyAccess.javaws_prefix.toString)
com.jogamp.common.util.PropertyAccess.trustedPrefixes == orig(com.jogamp.common.util.PropertyAccess.trustedPrefixes)
arg0.toString == orig(arg0.toString)
return == false
===========================================================================
jogamp.opengl.Debug.isPropertyDefined(java.lang.String, boolean):::EXIT;condition="not(return == true)"
===========================================================================
jogamp.opengl.GLDrawableHelper$1:::OBJECT
this has only one value
===========================================================================
jogamp.opengl.GLDrawableHelper$1.():::EXIT
===========================================================================
jogamp.opengl.GLDrawableHelper:::CLASS
jogamp.opengl.GLDrawableHelper.PERF_STATS == false
jogamp.opengl.GLDrawableHelper.DEBUG == false
jogamp.opengl.GLDrawableHelper.nop has only one value
jogamp.opengl.GLDrawableHelper.nop.getClass().getName() == jogamp.opengl.GLDrawableHelper$1.class
jogamp.opengl.GLDrawableHelper.perThreadInitAction has only one value
===========================================================================
jogamp.opengl.GLDrawableHelper:::OBJECT
this has only one value
this.listenersLock has only one value
this.listenersLock.getClass().getName() == java.lang.Object.class
this.listeners has only one value
this.listeners[] == []
this.listeners[].getClass().getName() == []
this.listenersToBeInit has only one value
this.glRunnablesLock has only one value
this.glRunnablesLock.getClass().getName() == java.lang.Object.class
this.glRunnables has only one value
this.glRunnables[] == []
this.glRunnables[].getClass().getName() == []
this.skipContextReleaseThread == null
this.animatorCtrl == null
===========================================================================
jogamp.opengl.GLDrawableHelper.GLDrawableHelper():::EXIT
this.autoSwapBufferMode == true
===========================================================================
jogamp.opengl.GLDrawableHelper.reset():::ENTER
this.autoSwapBufferMode == false
===========================================================================
jogamp.opengl.GLDrawableHelper.reset():::EXIT
jogamp.opengl.GLDrawableHelper.PERF_STATS == orig(jogamp.opengl.GLDrawableHelper.PERF_STATS)
jogamp.opengl.GLDrawableHelper.DEBUG == orig(jogamp.opengl.GLDrawableHelper.DEBUG)
this.listenersLock == orig(this.listenersLock)
this.listenersLock.getClass().getName() == orig(this.listenersLock.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.listenersToBeInit == orig(this.listenersToBeInit)
this.glRunnablesLock == orig(this.glRunnablesLock)
this.glRunnablesLock.getClass().getName() == orig(this.glRunnablesLock.getClass().getName())
this.glRunnables == orig(this.glRunnables)
this.glRunnables[] == orig(this.glRunnables[])
this.skipContextReleaseThread == orig(this.skipContextReleaseThread)
this.animatorCtrl == orig(this.animatorCtrl)
jogamp.opengl.GLDrawableHelper.nop == orig(jogamp.opengl.GLDrawableHelper.nop)
jogamp.opengl.GLDrawableHelper.nop.getClass().getName() == orig(jogamp.opengl.GLDrawableHelper.nop.getClass().getName())
jogamp.opengl.GLDrawableHelper.perThreadInitAction == orig(jogamp.opengl.GLDrawableHelper.perThreadInitAction)
this.autoSwapBufferMode == true
===========================================================================
model.Model:::CLASS
model.Model.band == false
===========================================================================
model.Model:::OBJECT
this has only one value
this.height == 0
this.matrix.getClass().getName() == boolean[][][].class
this.matrix[] contains no nulls and has only one value, of length 7
size(this.matrix[]) == 7
===========================================================================
model.Model.Model():::EXIT
this.matrix has only one value
===========================================================================
model.Model.resetMatrix():::ENTER
this.matrix == null
===========================================================================
model.Model.resetMatrix():::EXIT
model.Model.band == orig(model.Model.band)
this.height == orig(this.height)
this.matrix has only one value
===========================================================================
model.shapes.Shape:::CLASS
model.shapes.Shape.yesMat has only one value
model.shapes.Shape.yesMat.M has only one value
model.shapes.Shape.yesMat.M.getClass().getName() == double[][].class
model.shapes.Shape.yesMat.M[] contains no nulls and has only one value, of length 4
model.shapes.Shape.noMat has only one value
model.shapes.Shape.noMat.M has only one value
model.shapes.Shape.noMat.M.getClass().getName() == double[][].class
model.shapes.Shape.noMat.M[] contains no nulls and has only one value, of length 4
model.shapes.Shape.maybeMat has only one value
model.shapes.Shape.maybeMat.M has only one value
model.shapes.Shape.maybeMat.M.getClass().getName() == double[][].class
model.shapes.Shape.maybeMat.M[] contains no nulls and has only one value, of length 4
size(model.shapes.Shape.yesMat.M[]) == 4
size(model.shapes.Shape.noMat.M[]) == 4
size(model.shapes.Shape.maybeMat.M[]) == 4
===========================================================================
model.shapes.Shape:::OBJECT
this has only one value
this.getClass().getName() == model.shapes.TetrisT.class
this.matrix.getClass().getName() == boolean[][][].class
this.matrix[] contains no nulls and has only one value, of length 3
this.color.r == 0.0
this.color.g == 1.0
this.color.b == 1.0
this.desfX == 1
this.desfY == 1
this.level == 0
size(this.matrix[]) == 3
===========================================================================
model.shapes.Shape.Shape():::EXIT
this.matrix == null
this.color == null
===========================================================================
model.shapes.Shape.getColor():::ENTER
this.matrix has only one value
this.color has only one value
===========================================================================
model.shapes.Shape.getColor():::EXIT
model.shapes.Shape.yesMat == orig(model.shapes.Shape.yesMat)
model.shapes.Shape.yesMat.M == orig(model.shapes.Shape.yesMat.M)
model.shapes.Shape.yesMat.M.getClass().getName() == orig(model.shapes.Shape.yesMat.M.getClass().getName())
model.shapes.Shape.yesMat.M[] == orig(model.shapes.Shape.yesMat.M[])
model.shapes.Shape.noMat == orig(model.shapes.Shape.noMat)
model.shapes.Shape.noMat.M == orig(model.shapes.Shape.noMat.M)
model.shapes.Shape.noMat.M.getClass().getName() == orig(model.shapes.Shape.noMat.M.getClass().getName())
model.shapes.Shape.noMat.M[] == orig(model.shapes.Shape.noMat.M[])
model.shapes.Shape.maybeMat == orig(model.shapes.Shape.maybeMat)
model.shapes.Shape.maybeMat.M == orig(model.shapes.Shape.maybeMat.M)
model.shapes.Shape.maybeMat.M.getClass().getName() == orig(model.shapes.Shape.maybeMat.M.getClass().getName())
model.shapes.Shape.maybeMat.M[] == orig(model.shapes.Shape.maybeMat.M[])
this.matrix == orig(this.matrix)
this.matrix.getClass().getName() == orig(this.matrix.getClass().getName())
this.matrix[] == orig(this.matrix[])
this.color == orig(this.color)
this.color.r == orig(this.color.r)
this.color.g == orig(this.color.g)
this.color.b == orig(this.color.b)
this.desfX == orig(this.desfX)
this.desfY == orig(this.desfY)
this.level == orig(this.level)
this.matrix has only one value
this.color has only one value
return has only one value
return.r == 0.0
return.g == 1.0
return.b == 1.0
===========================================================================
model.shapes.TetrisT:::CLASS
model.shapes.Shape.yesMat has only one value
model.shapes.Shape.yesMat.M has only one value
model.shapes.Shape.yesMat.M.getClass().getName() == double[][].class
model.shapes.Shape.yesMat.M[] contains no nulls and has only one value, of length 4
model.shapes.Shape.noMat has only one value
model.shapes.Shape.noMat.M has only one value
model.shapes.Shape.noMat.M.getClass().getName() == double[][].class
model.shapes.Shape.noMat.M[] contains no nulls and has only one value, of length 4
model.shapes.Shape.maybeMat has only one value
model.shapes.Shape.maybeMat.M has only one value
model.shapes.Shape.maybeMat.M.getClass().getName() == double[][].class
model.shapes.Shape.maybeMat.M[] contains no nulls and has only one value, of length 4
size(model.shapes.Shape.yesMat.M[]) == 4
size(model.shapes.Shape.noMat.M[]) == 4
size(model.shapes.Shape.maybeMat.M[]) == 4
===========================================================================
model.shapes.TetrisT:::OBJECT
this has only one value
this.matrix.getClass().getName() == boolean[][][].class
this.matrix[] contains no nulls and has only one value, of length 3
this.color has only one value
this.color.r == 0.0
this.color.g == 1.0
this.color.b == 1.0
this.desfX == 1
this.desfY == 1
this.level == 0
size(this.matrix[]) == 3
===========================================================================
model.shapes.TetrisT.TetrisT():::EXIT
this.matrix has only one value
===========================================================================
model.shapes.TetrisT.resetMatrix():::ENTER
this.matrix == null
===========================================================================
model.shapes.TetrisT.resetMatrix():::EXIT
model.shapes.Shape.yesMat == orig(model.shapes.Shape.yesMat)
model.shapes.Shape.yesMat.M == orig(model.shapes.Shape.yesMat.M)
model.shapes.Shape.yesMat.M.getClass().getName() == orig(model.shapes.Shape.yesMat.M.getClass().getName())
model.shapes.Shape.yesMat.M[] == orig(model.shapes.Shape.yesMat.M[])
model.shapes.Shape.noMat == orig(model.shapes.Shape.noMat)
model.shapes.Shape.noMat.M == orig(model.shapes.Shape.noMat.M)
model.shapes.Shape.noMat.M.getClass().getName() == orig(model.shapes.Shape.noMat.M.getClass().getName())
model.shapes.Shape.noMat.M[] == orig(model.shapes.Shape.noMat.M[])
model.shapes.Shape.maybeMat == orig(model.shapes.Shape.maybeMat)
model.shapes.Shape.maybeMat.M == orig(model.shapes.Shape.maybeMat.M)
model.shapes.Shape.maybeMat.M.getClass().getName() == orig(model.shapes.Shape.maybeMat.M.getClass().getName())
model.shapes.Shape.maybeMat.M[] == orig(model.shapes.Shape.maybeMat.M[])
this.color == orig(this.color)
this.color.r == orig(this.color.r)
this.color.g == orig(this.color.g)
this.color.b == orig(this.color.b)
this.desfX == orig(this.desfX)
this.desfY == orig(this.desfY)
this.level == orig(this.level)
this.matrix has only one value
===========================================================================
vsdk.toolkit.common.ColorRgb:::CLASS
===========================================================================
vsdk.toolkit.common.ColorRgb:::OBJECT
===========================================================================
vsdk.toolkit.common.ColorRgb.ColorRgb(double, double, double):::ENTER
===========================================================================
vsdk.toolkit.common.ColorRgb.ColorRgb(double, double, double):::EXIT
===========================================================================
vsdk.toolkit.common.ColorRgb.ColorRgb(vsdk.toolkit.common.ColorRgb):::ENTER
arg0.r one of { 0.0, 1.0 }
arg0.g one of { 0.0, 1.0 }
arg0.b one of { 0.0, 1.0 }
===========================================================================
vsdk.toolkit.common.ColorRgb.ColorRgb(vsdk.toolkit.common.ColorRgb):::EXIT
arg0.r == orig(arg0.r)
arg0.g == orig(arg0.g)
arg0.b == orig(arg0.b)
this.r one of { 0.0, 1.0 }
this.g one of { 0.0, 1.0 }
this.b one of { 0.0, 1.0 }
arg0.r one of { 0.0, 1.0 }
arg0.g one of { 0.0, 1.0 }
arg0.b one of { 0.0, 1.0 }
===========================================================================
vsdk.toolkit.common.Entity:::CLASS
===========================================================================
vsdk.toolkit.common.Entity:::OBJECT
===========================================================================
vsdk.toolkit.common.Entity.Entity():::EXIT
===========================================================================
vsdk.toolkit.common.FundamentalEntity:::CLASS
===========================================================================
vsdk.toolkit.common.FundamentalEntity:::OBJECT
===========================================================================
vsdk.toolkit.common.FundamentalEntity.FundamentalEntity():::EXIT
===========================================================================
vsdk.toolkit.common.RendererConfiguration:::CLASS
===========================================================================
vsdk.toolkit.common.RendererConfiguration:::OBJECT
this has only one value
this.shadingType == 2
this.surfaces == true
this.boundingVolume == false
this.selectionCorners == false
this.texture == true
this.bumpMap == false
this.normals == false
this.trianglesNormals == false
this.wireColor has only one value
this.wireColor.r == 1.0
this.wireColor.g == 1.0
this.wireColor.b == 1.0
this.lodHint == 0
===========================================================================
vsdk.toolkit.common.RendererConfiguration.RendererConfiguration():::EXIT
this.wires == false
this.points == false
===========================================================================
vsdk.toolkit.common.RendererConfiguration.setPoints(boolean):::ENTER
this.wires == true
this.points == false
arg0 == true
===========================================================================
vsdk.toolkit.common.RendererConfiguration.setPoints(boolean):::EXIT
this.shadingType == orig(this.shadingType)
this.surfaces == orig(this.surfaces)
this.wires == orig(this.wires)
this.boundingVolume == orig(this.boundingVolume)
this.selectionCorners == orig(this.selectionCorners)
this.texture == orig(this.texture)
this.bumpMap == orig(this.bumpMap)
this.normals == orig(this.normals)
this.trianglesNormals == orig(this.trianglesNormals)
this.wireColor == orig(this.wireColor)
this.wireColor.r == orig(this.wireColor.r)
this.wireColor.g == orig(this.wireColor.g)
this.wireColor.b == orig(this.wireColor.b)
this.lodHint == orig(this.lodHint)
this.wires == true
this.points == true
===========================================================================
vsdk.toolkit.common.RendererConfiguration.setSurfaces(boolean):::ENTER
this.wires == false
this.points == false
arg0 == true
===========================================================================
vsdk.toolkit.common.RendererConfiguration.setSurfaces(boolean):::EXIT
this.shadingType == orig(this.shadingType)
this.surfaces == orig(this.surfaces)
this.wires == orig(this.wires)
this.boundingVolume == orig(this.boundingVolume)
this.selectionCorners == orig(this.selectionCorners)
this.texture == orig(this.texture)
this.bumpMap == orig(this.bumpMap)
this.points == orig(this.points)
this.normals == orig(this.normals)
this.trianglesNormals == orig(this.trianglesNormals)
this.wireColor == orig(this.wireColor)
this.wireColor.r == orig(this.wireColor.r)
this.wireColor.g == orig(this.wireColor.g)
this.wireColor.b == orig(this.wireColor.b)
this.lodHint == orig(this.lodHint)
this.wires == false
this.points == false
===========================================================================
vsdk.toolkit.common.RendererConfiguration.setWires(boolean):::ENTER
this.wires == false
this.points == false
arg0 == true
===========================================================================
vsdk.toolkit.common.RendererConfiguration.setWires(boolean):::EXIT
this.shadingType == orig(this.shadingType)
this.surfaces == orig(this.surfaces)
this.boundingVolume == orig(this.boundingVolume)
this.selectionCorners == orig(this.selectionCorners)
this.texture == orig(this.texture)
this.bumpMap == orig(this.bumpMap)
this.points == orig(this.points)
this.normals == orig(this.normals)
this.trianglesNormals == orig(this.trianglesNormals)
this.wireColor == orig(this.wireColor)
this.wireColor.r == orig(this.wireColor.r)
this.wireColor.g == orig(this.wireColor.g)
this.wireColor.b == orig(this.wireColor.b)
this.lodHint == orig(this.lodHint)
this.wires == true
this.points == false
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4:::CLASS
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4:::OBJECT
this.M != null
this.M.getClass().getName() == double[][].class
this.M[] elements != null
size(this.M[]) == 4
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.Matrix4x4():::EXIT
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.axisRotation(double, double, double, double):::ENTER
arg0 one of { -1.5707963267948966, 0.0, 1.5707963267948966 }
arg1 one of { 0.0, 1.0 }
arg2 one of { -1.0, 0.0 }
arg3 one of { 0.0, 1.0 }
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.axisRotation(double, double, double, double):::EXIT389
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.axisRotation(double, double, double, double):::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.cofactors():::ENTER
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.cofactors():::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
return.M.getClass().getName() == double[][].class
size(return.M[]) == 4
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.determinant():::ENTER
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.determinant():::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
return one of { 1.2500000000000003E-4, 0.3333333333333333, 1.0 }
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.determinant3x3(double[]):::ENTER
arg0 != null
size(arg0[]) == 9
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.determinant3x3(double[]):::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
arg0[] == orig(arg0[])
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.eulerAnglesRotation(double, double, double):::ENTER
arg0 one of { 0.0, 1.5707963267948966 }
arg1 one of { -1.5707963267948966, 0.0, 1.5707963267948966 }
arg2 one of { 0.0, 1.5707963267948966 }
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.eulerAnglesRotation(double, double, double):::EXIT
this.M.getClass().getName() == orig(this.M.getClass().getName())
size(this.M[]) == orig(size(this.M[]))
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.fillMinor(double[], int, int):::ENTER
arg0 != null
arg1 >= 0
arg2 >= 0
size(arg0[]) == 9
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.fillMinor(double[], int, int):::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.identity():::ENTER
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.identity():::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.invert():::ENTER
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.invert():::EXIT
this.M.getClass().getName() == orig(this.M.getClass().getName())
size(this.M[]) == orig(size(this.M[]))
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.multiply(double):::ENTER
arg0 one of { 1.0, 3.0, 7999.999999999998 }
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.multiply(double):::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
return.M.getClass().getName() == double[][].class
size(return.M[]) == 4
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.multiply(vsdk.toolkit.common.linealAlgebra.Matrix4x4):::ENTER
arg0 != null
arg0.M != null
arg0.M.getClass().getName() == double[][].class
arg0.M[] elements != null
size(arg0.M[]) == 4
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.multiply(vsdk.toolkit.common.linealAlgebra.Matrix4x4):::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
arg0.M == orig(arg0.M)
arg0.M.getClass().getName() == orig(arg0.M.getClass().getName())
arg0.M[] == orig(arg0.M[])
arg0.M != null
arg0.M.getClass().getName() == double[][].class
arg0.M[] elements != null
return != null
return.M != null
return.M.getClass().getName() == double[][].class
return.M[] elements != null
size(arg0.M[]) == 4
size(return.M[]) == 4
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.scale(double, double, double):::ENTER
arg0 one of { 0.05, 0.5773502691896257 }
arg1 one of { 0.05, 0.5773502691896257 }
arg2 one of { 0.05, 1.0 }
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.scale(double, double, double):::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.translation(vsdk.toolkit.common.linealAlgebra.Vector3D):::ENTER
this has only one value
this.M has only one value
this.M[] contains no nulls and has only one value, of length 4
arg0 has only one value
arg0.x == 0.0
arg0.y == 4.95
arg0.z == -1.0
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.translation(vsdk.toolkit.common.linealAlgebra.Vector3D):::EXIT
this.M == orig(this.M)
this.M.getClass().getName() == orig(this.M.getClass().getName())
this.M[] == orig(this.M[])
arg0.x == orig(arg0.x)
arg0.y == orig(arg0.y)
arg0.z == orig(arg0.z)
this.M has only one value
this.M[] contains no nulls and has only one value, of length 4
arg0.x == 0.0
arg0.y == 4.95
arg0.z == -1.0
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.transpose():::ENTER
===========================================================================
vsdk.toolkit.common.linealAlgebra.Matrix4x4.transpose():::EXIT
this.M.getClass().getName() == orig(this.M.getClass().getName())
size(this.M[]) == orig(size(this.M[]))
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D:::CLASS
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D:::OBJECT
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.Vector3D():::EXIT
this.x == 0.0
this.y == 0.0
this.z == 0.0
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.Vector3D(double, double, double):::ENTER
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.Vector3D(double, double, double):::EXIT
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.add(vsdk.toolkit.common.linealAlgebra.Vector3D):::ENTER
this has only one value
this.x == 0.0
this.y == -5.0
this.z == 1.0
arg0 has only one value
arg0.x == 0.0
arg0.y == 0.05
arg0.z == 0.0
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.add(vsdk.toolkit.common.linealAlgebra.Vector3D):::EXIT
this.x == orig(this.x)
this.y == orig(this.y)
this.z == orig(this.z)
arg0.x == orig(arg0.x)
arg0.y == orig(arg0.y)
arg0.z == orig(arg0.z)
this.x == 0.0
this.y == -5.0
this.z == 1.0
arg0.x == 0.0
arg0.y == 0.05
arg0.z == 0.0
return has only one value
return.x == 0.0
return.y == -4.95
return.z == 1.0
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.clone(vsdk.toolkit.common.linealAlgebra.Vector3D):::ENTER
this has only one value
this.x == 0.0
this.y == -5.0
this.z == 1.0
arg0 has only one value
arg0.x == 3.17
arg0.y == -6.62
arg0.z == -3.45
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.clone(vsdk.toolkit.common.linealAlgebra.Vector3D):::EXIT
arg0.x == orig(arg0.x)
arg0.y == orig(arg0.y)
arg0.z == orig(arg0.z)
this.x == 3.17
this.y == -6.62
this.z == -3.45
arg0.x == 3.17
arg0.y == -6.62
arg0.z == -3.45
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.length():::ENTER
this.x one of { 0.0, 0.5773502691896257 }
this.y == 0.0
this.z one of { 0.0, 0.5773502691896257 }
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.length():::EXIT
this.x == orig(this.x)
this.y == orig(this.y)
this.z == orig(this.z)
this.x one of { 0.0, 0.5773502691896257 }
this.y == 0.0
this.z one of { 0.0, 0.5773502691896257 }
return == 0.5773502691896257
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.multiply(double):::ENTER
this.x one of { -1.0, 0.0 }
this.y one of { -4.95, 0.0, 1.0 }
this.z one of { 0.0, 1.0 }
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.multiply(double):::EXIT
this.x == orig(this.x)
this.y == orig(this.y)
this.z == orig(this.z)
this.x one of { -1.0, 0.0 }
this.y one of { -4.95, 0.0, 1.0 }
this.z one of { 0.0, 1.0 }
return.x one of { 0.0, 0.5773502691896257 }
return.z one of { -1.0, 0.0, 0.5773502691896257 }
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.normalize():::ENTER
this.x one of { -1.0, 0.0 }
this.y one of { 0.0, 1.0 }
this.z one of { 0.0, 1.0 }
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.normalize():::EXIT111
===========================================================================
vsdk.toolkit.common.linealAlgebra.Vector3D.normalize():::EXIT
this.x == orig(this.x)
this.y == orig(this.y)
this.z == orig(this.z)
this.x one of { -1.0, 0.0 }
this.y one of { 0.0, 1.0 }
this.z one of { 0.0, 1.0 }
===========================================================================
vsdk.toolkit.environment.Camera:::CLASS
===========================================================================
vsdk.toolkit.environment.Camera:::OBJECT
this has only one value
this.up has only one value
this.up.x == 0.0
this.up.y == 0.0
this.up.z == 1.0
this.front has only one value
this.front.x == 0.0
this.front.y == 1.0
this.front.z == 0.0
this.left has only one value
this.left.x == -1.0
this.left.y == 0.0
this.left.z == 0.0
this.eyePosition has only one value
this.eyePosition.x one of { 0.0, 3.17 }
this.eyePosition.y one of { -6.62, -5.0 }
this.eyePosition.z one of { -3.45, 1.0 }
this.focalDistance == 10.0
this.projectionMode == 5
this.fov == 60.0
this.orthogonalZoom == 1.0
this.nearPlaneDistance == 0.05
this.farPlaneDistance == 100.0
this.name == null
this.viewportXSize == 320.0
this.viewportYSize == 320.0
this.dx == null
this.dy == null
this._dir.x == 0.0
this._dir.y == 0.5
this._dir.z == 0.0
this.upWithScale.x == 0.0
this.upWithScale.y == 0.0
this.upWithScale.z == 0.5773502691896257
this.rightWithScale.x == 0.5773502691896257
this.rightWithScale.y == 0.0
this.rightWithScale.z == 0.0
this.normalizingTransformation.M.getClass().getName() == double[][].class
size(this.normalizingTransformation.M[]) == 4
===========================================================================
vsdk.toolkit.environment.Camera.Camera():::EXIT
this.eyePosition.x == 0.0
this.eyePosition.y == -5.0
this.eyePosition.z == 1.0
this._dir has only one value
this.upWithScale has only one value
this.rightWithScale has only one value
this.normalizingTransformation has only one value
this.normalizingTransformation.M has only one value
this.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
===========================================================================
vsdk.toolkit.environment.Camera.getRotation():::ENTER
this.eyePosition.x == 0.0
this.eyePosition.y == -5.0
this.eyePosition.z == 1.0
this._dir has only one value
this.upWithScale has only one value
this.rightWithScale has only one value
this.normalizingTransformation has only one value
this.normalizingTransformation.M has only one value
this.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
===========================================================================
vsdk.toolkit.environment.Camera.getRotation():::EXIT
this.up == orig(this.up)
this.up.x == orig(this.up.x)
this.up.y == orig(this.up.y)
this.up.z == orig(this.up.z)
this.front == orig(this.front)
this.front.x == orig(this.front.x)
this.front.y == orig(this.front.y)
this.front.z == orig(this.front.z)
this.left == orig(this.left)
this.left.x == orig(this.left.x)
this.left.y == orig(this.left.y)
this.left.z == orig(this.left.z)
this.eyePosition == orig(this.eyePosition)
this.eyePosition.x == orig(this.eyePosition.x)
this.eyePosition.y == orig(this.eyePosition.y)
this.eyePosition.z == orig(this.eyePosition.z)
this.focalDistance == orig(this.focalDistance)
this.projectionMode == orig(this.projectionMode)
this.fov == orig(this.fov)
this.orthogonalZoom == orig(this.orthogonalZoom)
this.nearPlaneDistance == orig(this.nearPlaneDistance)
this.farPlaneDistance == orig(this.farPlaneDistance)
this.name == orig(this.name)
this.viewportXSize == orig(this.viewportXSize)
this.viewportYSize == orig(this.viewportYSize)
this.dx == orig(this.dx)
this.dy == orig(this.dy)
this._dir == orig(this._dir)
this._dir.x == orig(this._dir.x)
this._dir.y == orig(this._dir.y)
this._dir.z == orig(this._dir.z)
this.upWithScale == orig(this.upWithScale)
this.upWithScale.x == orig(this.upWithScale.x)
this.upWithScale.y == orig(this.upWithScale.y)
this.upWithScale.z == orig(this.upWithScale.z)
this.rightWithScale == orig(this.rightWithScale)
this.rightWithScale.x == orig(this.rightWithScale.x)
this.rightWithScale.y == orig(this.rightWithScale.y)
this.rightWithScale.z == orig(this.rightWithScale.z)
this.normalizingTransformation == orig(this.normalizingTransformation)
this.normalizingTransformation.M == orig(this.normalizingTransformation.M)
this.normalizingTransformation.M.getClass().getName() == orig(this.normalizingTransformation.M.getClass().getName())
this.normalizingTransformation.M[] == orig(this.normalizingTransformation.M[])
this.eyePosition.x == 0.0
this.eyePosition.y == -5.0
this.eyePosition.z == 1.0
this._dir has only one value
this.upWithScale has only one value
this.rightWithScale has only one value
this.normalizingTransformation has only one value
this.normalizingTransformation.M has only one value
this.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
return has only one value
return.M has only one value
return.M.getClass().getName() == double[][].class
return.M[] contains no nulls and has only one value, of length 4
size(return.M[]) == 4
===========================================================================
vsdk.toolkit.environment.Camera.setPosition(vsdk.toolkit.common.linealAlgebra.Vector3D):::ENTER
this.eyePosition.x == 0.0
this.eyePosition.y == -5.0
this.eyePosition.z == 1.0
this._dir has only one value
this.upWithScale has only one value
this.rightWithScale has only one value
this.normalizingTransformation has only one value
this.normalizingTransformation.M has only one value
this.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
arg0 has only one value
arg0.x == 3.17
arg0.y == -6.62
arg0.z == -3.45
===========================================================================
vsdk.toolkit.environment.Camera.setPosition(vsdk.toolkit.common.linealAlgebra.Vector3D):::EXIT
this.up == orig(this.up)
this.up.x == orig(this.up.x)
this.up.y == orig(this.up.y)
this.up.z == orig(this.up.z)
this.front == orig(this.front)
this.front.x == orig(this.front.x)
this.front.y == orig(this.front.y)
this.front.z == orig(this.front.z)
this.left == orig(this.left)
this.left.x == orig(this.left.x)
this.left.y == orig(this.left.y)
this.left.z == orig(this.left.z)
this.eyePosition == orig(this.eyePosition)
this.focalDistance == orig(this.focalDistance)
this.projectionMode == orig(this.projectionMode)
this.fov == orig(this.fov)
this.orthogonalZoom == orig(this.orthogonalZoom)
this.nearPlaneDistance == orig(this.nearPlaneDistance)
this.farPlaneDistance == orig(this.farPlaneDistance)
this.name == orig(this.name)
this.viewportXSize == orig(this.viewportXSize)
this.viewportYSize == orig(this.viewportYSize)
this.dx == orig(this.dx)
this.dy == orig(this.dy)
this._dir == orig(this._dir)
this._dir.x == orig(this._dir.x)
this._dir.y == orig(this._dir.y)
this._dir.z == orig(this._dir.z)
this.upWithScale == orig(this.upWithScale)
this.upWithScale.x == orig(this.upWithScale.x)
this.upWithScale.y == orig(this.upWithScale.y)
this.upWithScale.z == orig(this.upWithScale.z)
this.rightWithScale == orig(this.rightWithScale)
this.rightWithScale.x == orig(this.rightWithScale.x)
this.rightWithScale.y == orig(this.rightWithScale.y)
this.rightWithScale.z == orig(this.rightWithScale.z)
this.normalizingTransformation == orig(this.normalizingTransformation)
this.normalizingTransformation.M == orig(this.normalizingTransformation.M)
this.normalizingTransformation.M.getClass().getName() == orig(this.normalizingTransformation.M.getClass().getName())
this.normalizingTransformation.M[] == orig(this.normalizingTransformation.M[])
arg0.x == orig(arg0.x)
arg0.y == orig(arg0.y)
arg0.z == orig(arg0.z)
this.eyePosition.x == 3.17
this.eyePosition.y == -6.62
this.eyePosition.z == -3.45
this._dir has only one value
this.upWithScale has only one value
this.rightWithScale has only one value
this.normalizingTransformation has only one value
this.normalizingTransformation.M has only one value
this.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
arg0.x == 3.17
arg0.y == -6.62
arg0.z == -3.45
===========================================================================
vsdk.toolkit.environment.Camera.updateVectors():::ENTER
this.eyePosition.x == 0.0
this.eyePosition.y == -5.0
this.eyePosition.z == 1.0
this._dir == null
this.upWithScale == null
this.rightWithScale == null
this.normalizingTransformation == null
===========================================================================
vsdk.toolkit.environment.Camera.updateVectors():::EXIT
this.up == orig(this.up)
this.up.x == orig(this.up.x)
this.up.y == orig(this.up.y)
this.up.z == orig(this.up.z)
this.front == orig(this.front)
this.front.x == orig(this.front.x)
this.front.y == orig(this.front.y)
this.front.z == orig(this.front.z)
this.left == orig(this.left)
this.left.x == orig(this.left.x)
this.left.y == orig(this.left.y)
this.left.z == orig(this.left.z)
this.eyePosition == orig(this.eyePosition)
this.eyePosition.x == orig(this.eyePosition.x)
this.eyePosition.y == orig(this.eyePosition.y)
this.eyePosition.z == orig(this.eyePosition.z)
this.focalDistance == orig(this.focalDistance)
this.projectionMode == orig(this.projectionMode)
this.fov == orig(this.fov)
this.orthogonalZoom == orig(this.orthogonalZoom)
this.nearPlaneDistance == orig(this.nearPlaneDistance)
this.farPlaneDistance == orig(this.farPlaneDistance)
this.name == orig(this.name)
this.viewportXSize == orig(this.viewportXSize)
this.viewportYSize == orig(this.viewportYSize)
this.dx == orig(this.dx)
this.dy == orig(this.dy)
this.eyePosition.x == 0.0
this.eyePosition.y == -5.0
this.eyePosition.z == 1.0
this._dir has only one value
this.upWithScale has only one value
this.rightWithScale has only one value
this.normalizingTransformation has only one value
this.normalizingTransformation.M has only one value
this.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
===========================================================================
vsdk.toolkit.environment.Light:::CLASS
vsdk.toolkit.environment.Light.lightNumber one of { 1, 2 }
===========================================================================
vsdk.toolkit.environment.Light:::OBJECT
this.tipo_de_luz one of { 0, 2 }
this.lvec.x one of { 0.0, 3.0 }
this.lvec.y one of { -3.0, 0.0 }
this.lvec.z one of { 0.0, 3.0 }
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse.r == 1.0
this.diffuse.g == 1.0
this.diffuse.b == 1.0
this.specular.r == 1.0
this.specular.g == 1.0
this.specular.b == 1.0
this.id one of { 0, 1 }
this.name == null
===========================================================================
vsdk.toolkit.environment.Light.Light(int, vsdk.toolkit.common.linealAlgebra.Vector3D, vsdk.toolkit.common.ColorRgb):::ENTER
arg0 one of { 0, 2 }
arg1.x one of { -3.0, 3.0 }
arg1.y one of { -3.0, 3.0 }
arg1.z one of { -3.0, 3.0 }
arg2.r == 1.0
arg2.g == 1.0
arg2.b == 1.0
===========================================================================
vsdk.toolkit.environment.Light.Light(int, vsdk.toolkit.common.linealAlgebra.Vector3D, vsdk.toolkit.common.ColorRgb):::EXIT
arg1.x == orig(arg1.x)
arg1.y == orig(arg1.y)
arg1.z == orig(arg1.z)
arg2.r == orig(arg2.r)
arg2.g == orig(arg2.g)
arg2.b == orig(arg2.b)
arg1.x one of { -3.0, 3.0 }
arg1.y one of { -3.0, 3.0 }
arg1.z one of { -3.0, 3.0 }
arg2.r == 1.0
arg2.g == 1.0
arg2.b == 1.0
===========================================================================
vsdk.toolkit.environment.Material:::CLASS
===========================================================================
vsdk.toolkit.environment.Material:::OBJECT
this has only one value
this.ambient.r one of { 0.0, 0.1 }
this.ambient.g one of { 0.0, 0.1 }
this.ambient.b one of { 0.0, 0.1 }
this.diffuse.r one of { 0.0, 0.9 }
this.diffuse.g one of { 0.5, 1.0 }
this.diffuse.b one of { 0.5, 1.0 }
this.specular.r == 1.0
this.specular.g == 1.0
this.specular.b == 1.0
this.emission has only one value
this.emission.r == 0.0
this.emission.g == 0.0
this.emission.b == 0.0
this.reflectionCoefficient == 0.0
this.refractionCoefficient == 0.0
this.name has only one value
this.name.toString == "VSDK_default_material"
this.opacity == 1.0
this.phongExponent one of { 40.0, 128.0 }
===========================================================================
vsdk.toolkit.environment.Material.Material():::EXIT
this.ambient has only one value
this.ambient.r == 0.1
this.ambient.g == 0.1
this.ambient.b == 0.1
this.diffuse has only one value
this.diffuse.r == 0.9
this.diffuse.g == 0.5
this.diffuse.b == 0.5
this.specular has only one value
this.doubleSided == true
this.phongExponent == 128.0
===========================================================================
vsdk.toolkit.environment.Material.setAmbient(vsdk.toolkit.common.ColorRgb):::ENTER
this.ambient has only one value
this.ambient.r == 0.1
this.ambient.g == 0.1
this.ambient.b == 0.1
this.diffuse has only one value
this.diffuse.r == 0.9
this.diffuse.g == 0.5
this.diffuse.b == 0.5
this.specular has only one value
this.doubleSided == true
this.phongExponent == 128.0
arg0 has only one value
arg0.r == 0.0
arg0.g == 0.0
arg0.b == 0.0
===========================================================================
vsdk.toolkit.environment.Material.setAmbient(vsdk.toolkit.common.ColorRgb):::EXIT
this.diffuse == orig(this.diffuse)
this.diffuse.r == orig(this.diffuse.r)
this.diffuse.g == orig(this.diffuse.g)
this.diffuse.b == orig(this.diffuse.b)
this.specular == orig(this.specular)
this.specular.r == orig(this.specular.r)
this.specular.g == orig(this.specular.g)
this.specular.b == orig(this.specular.b)
this.emission == orig(this.emission)
this.emission.r == orig(this.emission.r)
this.emission.g == orig(this.emission.g)
this.emission.b == orig(this.emission.b)
this.doubleSided == orig(this.doubleSided)
this.reflectionCoefficient == orig(this.reflectionCoefficient)
this.refractionCoefficient == orig(this.refractionCoefficient)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.opacity == orig(this.opacity)
this.phongExponent == orig(this.phongExponent)
arg0.r == orig(arg0.r)
arg0.g == orig(arg0.g)
arg0.b == orig(arg0.b)
this.ambient has only one value
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse has only one value
this.diffuse.r == 0.9
this.diffuse.g == 0.5
this.diffuse.b == 0.5
this.specular has only one value
this.doubleSided == true
this.phongExponent == 128.0
arg0.r == 0.0
arg0.g == 0.0
arg0.b == 0.0
===========================================================================
vsdk.toolkit.environment.Material.setDiffuse(vsdk.toolkit.common.ColorRgb):::ENTER
this.ambient has only one value
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse has only one value
this.diffuse.r == 0.9
this.diffuse.g == 0.5
this.diffuse.b == 0.5
this.specular has only one value
this.doubleSided == true
this.phongExponent == 128.0
arg0 has only one value
arg0.r == 0.0
arg0.g == 1.0
arg0.b == 1.0
===========================================================================
vsdk.toolkit.environment.Material.setDiffuse(vsdk.toolkit.common.ColorRgb):::EXIT
this.ambient == orig(this.ambient)
this.ambient.r == orig(this.ambient.r)
this.ambient.g == orig(this.ambient.g)
this.ambient.b == orig(this.ambient.b)
this.specular == orig(this.specular)
this.specular.r == orig(this.specular.r)
this.specular.g == orig(this.specular.g)
this.specular.b == orig(this.specular.b)
this.emission == orig(this.emission)
this.emission.r == orig(this.emission.r)
this.emission.g == orig(this.emission.g)
this.emission.b == orig(this.emission.b)
this.doubleSided == orig(this.doubleSided)
this.reflectionCoefficient == orig(this.reflectionCoefficient)
this.refractionCoefficient == orig(this.refractionCoefficient)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.opacity == orig(this.opacity)
this.phongExponent == orig(this.phongExponent)
arg0.r == orig(arg0.r)
arg0.g == orig(arg0.g)
arg0.b == orig(arg0.b)
this.ambient has only one value
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse has only one value
this.diffuse.r == 0.0
this.diffuse.g == 1.0
this.diffuse.b == 1.0
this.specular has only one value
this.doubleSided == true
this.phongExponent == 128.0
arg0.r == 0.0
arg0.g == 1.0
arg0.b == 1.0
===========================================================================
vsdk.toolkit.environment.Material.setDoubleSided(boolean):::ENTER
this.ambient has only one value
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse has only one value
this.diffuse.r == 0.0
this.diffuse.g == 1.0
this.diffuse.b == 1.0
this.specular has only one value
this.doubleSided == true
this.phongExponent == 128.0
arg0 == false
===========================================================================
vsdk.toolkit.environment.Material.setDoubleSided(boolean):::EXIT
this.ambient == orig(this.ambient)
this.ambient.r == orig(this.ambient.r)
this.ambient.g == orig(this.ambient.g)
this.ambient.b == orig(this.ambient.b)
this.diffuse == orig(this.diffuse)
this.diffuse.r == orig(this.diffuse.r)
this.diffuse.g == orig(this.diffuse.g)
this.diffuse.b == orig(this.diffuse.b)
this.specular == orig(this.specular)
this.specular.r == orig(this.specular.r)
this.specular.g == orig(this.specular.g)
this.specular.b == orig(this.specular.b)
this.emission == orig(this.emission)
this.emission.r == orig(this.emission.r)
this.emission.g == orig(this.emission.g)
this.emission.b == orig(this.emission.b)
this.reflectionCoefficient == orig(this.reflectionCoefficient)
this.refractionCoefficient == orig(this.refractionCoefficient)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.opacity == orig(this.opacity)
this.phongExponent == orig(this.phongExponent)
this.ambient has only one value
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse has only one value
this.diffuse.r == 0.0
this.diffuse.g == 1.0
this.diffuse.b == 1.0
this.specular has only one value
this.doubleSided == false
this.phongExponent == 128.0
===========================================================================
vsdk.toolkit.environment.Material.setPhongExponent(double):::ENTER
this.ambient has only one value
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse has only one value
this.diffuse.r == 0.0
this.diffuse.g == 1.0
this.diffuse.b == 1.0
this.specular has only one value
this.doubleSided == false
this.phongExponent == 128.0
arg0 == 40.0
===========================================================================
vsdk.toolkit.environment.Material.setPhongExponent(double):::EXIT
this.ambient == orig(this.ambient)
this.ambient.r == orig(this.ambient.r)
this.ambient.g == orig(this.ambient.g)
this.ambient.b == orig(this.ambient.b)
this.diffuse == orig(this.diffuse)
this.diffuse.r == orig(this.diffuse.r)
this.diffuse.g == orig(this.diffuse.g)
this.diffuse.b == orig(this.diffuse.b)
this.specular == orig(this.specular)
this.specular.r == orig(this.specular.r)
this.specular.g == orig(this.specular.g)
this.specular.b == orig(this.specular.b)
this.emission == orig(this.emission)
this.emission.r == orig(this.emission.r)
this.emission.g == orig(this.emission.g)
this.emission.b == orig(this.emission.b)
this.doubleSided == orig(this.doubleSided)
this.reflectionCoefficient == orig(this.reflectionCoefficient)
this.refractionCoefficient == orig(this.refractionCoefficient)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.opacity == orig(this.opacity)
this.ambient has only one value
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse has only one value
this.diffuse.r == 0.0
this.diffuse.g == 1.0
this.diffuse.b == 1.0
this.specular has only one value
this.doubleSided == false
this.phongExponent == 40.0
===========================================================================
vsdk.toolkit.environment.Material.setSpecular(vsdk.toolkit.common.ColorRgb):::ENTER
this.ambient has only one value
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse has only one value
this.diffuse.r == 0.0
this.diffuse.g == 1.0
this.diffuse.b == 1.0
this.specular has only one value
this.doubleSided == true
this.phongExponent == 128.0
arg0 has only one value
arg0.r == 1.0
arg0.g == 1.0
arg0.b == 1.0
===========================================================================
vsdk.toolkit.environment.Material.setSpecular(vsdk.toolkit.common.ColorRgb):::EXIT
this.ambient == orig(this.ambient)
this.ambient.r == orig(this.ambient.r)
this.ambient.g == orig(this.ambient.g)
this.ambient.b == orig(this.ambient.b)
this.diffuse == orig(this.diffuse)
this.diffuse.r == orig(this.diffuse.r)
this.diffuse.g == orig(this.diffuse.g)
this.diffuse.b == orig(this.diffuse.b)
this.specular.r == orig(this.specular.r)
this.specular.g == orig(this.specular.g)
this.specular.b == orig(this.specular.b)
this.emission == orig(this.emission)
this.emission.r == orig(this.emission.r)
this.emission.g == orig(this.emission.g)
this.emission.b == orig(this.emission.b)
this.doubleSided == orig(this.doubleSided)
this.reflectionCoefficient == orig(this.reflectionCoefficient)
this.refractionCoefficient == orig(this.refractionCoefficient)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.opacity == orig(this.opacity)
this.phongExponent == orig(this.phongExponent)
arg0.r == orig(arg0.r)
arg0.g == orig(arg0.g)
arg0.b == orig(arg0.b)
this.ambient has only one value
this.ambient.r == 0.0
this.ambient.g == 0.0
this.ambient.b == 0.0
this.diffuse has only one value
this.diffuse.r == 0.0
this.diffuse.g == 1.0
this.diffuse.b == 1.0
this.specular has only one value
this.doubleSided == true
this.phongExponent == 128.0
arg0.r == 1.0
arg0.g == 1.0
arg0.b == 1.0
===========================================================================
vsdk.toolkit.gui.CameraController:::OBJECT
this has only one value
this.getClass().getName() == vsdk.toolkit.gui.CameraControllerAquynza.class
===========================================================================
vsdk.toolkit.gui.CameraController.CameraController():::EXIT
===========================================================================
vsdk.toolkit.gui.CameraControllerAquynza:::OBJECT
this has only one value
this.camera has only one value
this.camera.up has only one value
this.camera.up.x == 0.0
this.camera.up.y == 0.0
this.camera.up.z == 1.0
this.camera.front has only one value
this.camera.front.x == 0.0
this.camera.front.y == 1.0
this.camera.front.z == 0.0
this.camera.left has only one value
this.camera.left.x == -1.0
this.camera.left.y == 0.0
this.camera.left.z == 0.0
this.camera.eyePosition has only one value
this.camera.eyePosition.x == 3.17
this.camera.eyePosition.y == -6.62
this.camera.eyePosition.z == -3.45
this.camera.focalDistance == 10.0
this.camera.projectionMode == 5
this.camera.fov == 60.0
this.camera.orthogonalZoom == 1.0
this.camera.nearPlaneDistance == 0.05
this.camera.farPlaneDistance == 100.0
this.camera.name == null
this.camera.viewportXSize == 320.0
this.camera.viewportYSize == 320.0
this.camera.dx == null
this.camera.dy == null
this.camera._dir has only one value
this.camera._dir.x == 0.0
this.camera._dir.y == 0.5
this.camera._dir.z == 0.0
this.camera.upWithScale has only one value
this.camera.upWithScale.x == 0.0
this.camera.upWithScale.y == 0.0
this.camera.upWithScale.z == 0.5773502691896257
this.camera.rightWithScale has only one value
this.camera.rightWithScale.x == 0.5773502691896257
this.camera.rightWithScale.y == 0.0
this.camera.rightWithScale.z == 0.0
this.camera.normalizingTransformation has only one value
this.camera.normalizingTransformation.M has only one value
this.camera.normalizingTransformation.M.getClass().getName() == double[][].class
this.camera.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
this.oldMouseX == 0
this.oldMouseY == 0
this.deltaMov == 0.25
size(this.camera.normalizingTransformation.M[]) == 4
===========================================================================
vsdk.toolkit.gui.CameraControllerAquynza.CameraControllerAquynza(vsdk.toolkit.environment.Camera):::ENTER
arg0 has only one value
arg0.up has only one value
arg0.up.x == 0.0
arg0.up.y == 0.0
arg0.up.z == 1.0
arg0.front has only one value
arg0.front.x == 0.0
arg0.front.y == 1.0
arg0.front.z == 0.0
arg0.left has only one value
arg0.left.x == -1.0
arg0.left.y == 0.0
arg0.left.z == 0.0
arg0.eyePosition has only one value
arg0.eyePosition.x == 3.17
arg0.eyePosition.y == -6.62
arg0.eyePosition.z == -3.45
arg0.focalDistance == 10.0
arg0.projectionMode == 5
arg0.fov == 60.0
arg0.orthogonalZoom == 1.0
arg0.nearPlaneDistance == 0.05
arg0.farPlaneDistance == 100.0
arg0.name == null
arg0.viewportXSize == 320.0
arg0.viewportYSize == 320.0
arg0.dx == null
arg0.dy == null
arg0._dir has only one value
arg0._dir.x == 0.0
arg0._dir.y == 0.5
arg0._dir.z == 0.0
arg0.upWithScale has only one value
arg0.upWithScale.x == 0.0
arg0.upWithScale.y == 0.0
arg0.upWithScale.z == 0.5773502691896257
arg0.rightWithScale has only one value
arg0.rightWithScale.x == 0.5773502691896257
arg0.rightWithScale.y == 0.0
arg0.rightWithScale.z == 0.0
arg0.normalizingTransformation has only one value
arg0.normalizingTransformation.M has only one value
arg0.normalizingTransformation.M.getClass().getName() == double[][].class
arg0.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
size(arg0.normalizingTransformation.M[]) == 4
===========================================================================
vsdk.toolkit.gui.CameraControllerAquynza.CameraControllerAquynza(vsdk.toolkit.environment.Camera):::EXIT
arg0.up == orig(arg0.up)
arg0.up.x == orig(arg0.up.x)
arg0.up.y == orig(arg0.up.y)
arg0.up.z == orig(arg0.up.z)
arg0.front == orig(arg0.front)
arg0.front.x == orig(arg0.front.x)
arg0.front.y == orig(arg0.front.y)
arg0.front.z == orig(arg0.front.z)
arg0.left == orig(arg0.left)
arg0.left.x == orig(arg0.left.x)
arg0.left.y == orig(arg0.left.y)
arg0.left.z == orig(arg0.left.z)
arg0.eyePosition == orig(arg0.eyePosition)
arg0.eyePosition.x == orig(arg0.eyePosition.x)
arg0.eyePosition.y == orig(arg0.eyePosition.y)
arg0.eyePosition.z == orig(arg0.eyePosition.z)
arg0.focalDistance == orig(arg0.focalDistance)
arg0.projectionMode == orig(arg0.projectionMode)
arg0.fov == orig(arg0.fov)
arg0.orthogonalZoom == orig(arg0.orthogonalZoom)
arg0.nearPlaneDistance == orig(arg0.nearPlaneDistance)
arg0.farPlaneDistance == orig(arg0.farPlaneDistance)
arg0.name == orig(arg0.name)
arg0.viewportXSize == orig(arg0.viewportXSize)
arg0.viewportYSize == orig(arg0.viewportYSize)
arg0.dx == orig(arg0.dx)
arg0.dy == orig(arg0.dy)
arg0._dir == orig(arg0._dir)
arg0._dir.x == orig(arg0._dir.x)
arg0._dir.y == orig(arg0._dir.y)
arg0._dir.z == orig(arg0._dir.z)
arg0.upWithScale == orig(arg0.upWithScale)
arg0.upWithScale.x == orig(arg0.upWithScale.x)
arg0.upWithScale.y == orig(arg0.upWithScale.y)
arg0.upWithScale.z == orig(arg0.upWithScale.z)
arg0.rightWithScale == orig(arg0.rightWithScale)
arg0.rightWithScale.x == orig(arg0.rightWithScale.x)
arg0.rightWithScale.y == orig(arg0.rightWithScale.y)
arg0.rightWithScale.z == orig(arg0.rightWithScale.z)
arg0.normalizingTransformation == orig(arg0.normalizingTransformation)
arg0.normalizingTransformation.M == orig(arg0.normalizingTransformation.M)
arg0.normalizingTransformation.M.getClass().getName() == orig(arg0.normalizingTransformation.M.getClass().getName())
arg0.normalizingTransformation.M[] == orig(arg0.normalizingTransformation.M[])
arg0.up has only one value
arg0.up.x == 0.0
arg0.up.y == 0.0
arg0.up.z == 1.0
arg0.front has only one value
arg0.front.x == 0.0
arg0.front.y == 1.0
arg0.front.z == 0.0
arg0.left has only one value
arg0.left.x == -1.0
arg0.left.y == 0.0
arg0.left.z == 0.0
arg0.eyePosition has only one value
arg0.eyePosition.x == 3.17
arg0.eyePosition.y == -6.62
arg0.eyePosition.z == -3.45
arg0.focalDistance == 10.0
arg0.projectionMode == 5
arg0.fov == 60.0
arg0.orthogonalZoom == 1.0
arg0.nearPlaneDistance == 0.05
arg0.farPlaneDistance == 100.0
arg0.name == null
arg0.viewportXSize == 320.0
arg0.viewportYSize == 320.0
arg0.dx == null
arg0.dy == null
arg0._dir has only one value
arg0._dir.x == 0.0
arg0._dir.y == 0.5
arg0._dir.z == 0.0
arg0.upWithScale has only one value
arg0.upWithScale.x == 0.0
arg0.upWithScale.y == 0.0
arg0.upWithScale.z == 0.5773502691896257
arg0.rightWithScale has only one value
arg0.rightWithScale.x == 0.5773502691896257
arg0.rightWithScale.y == 0.0
arg0.rightWithScale.z == 0.0
arg0.normalizingTransformation has only one value
arg0.normalizingTransformation.M has only one value
arg0.normalizingTransformation.M.getClass().getName() == double[][].class
arg0.normalizingTransformation.M[] contains no nulls and has only one value, of length 4
size(arg0.normalizingTransformation.M[]) == 4
===========================================================================
vsdk.toolkit.gui.Controller:::OBJECT
this has only one value
this.getClass().getName() == vsdk.toolkit.gui.CameraControllerAquynza.class
===========================================================================
vsdk.toolkit.gui.Controller.Controller():::EXIT
===========================================================================
vsdk.toolkit.gui.PresentationElement:::OBJECT
this has only one value
this.getClass().getName() == vsdk.toolkit.gui.CameraControllerAquynza.class
===========================================================================
vsdk.toolkit.gui.PresentationElement.PresentationElement():::EXIT
===========================================================================
vsdk.toolkit.render.jogl.JoglRenderer:::CLASS
vsdk.toolkit.render.jogl.JoglRenderer.nvidiaCgErrorReported == false
vsdk.toolkit.render.jogl.JoglRenderer.nvidiaCgAvailable == false
vsdk.toolkit.render.jogl.JoglRenderer.nvidiaGpuVertexProfile == -1
vsdk.toolkit.render.jogl.JoglRenderer.nvidiaGpuPixelProfile == -1
vsdk.toolkit.render.jogl.JoglRenderer.renderingWithNvidiaGpuFlag == false
===========================================================================
vsdk.toolkit.render.jogl.JoglRenderer.verifyOpenGLAvailability():::ENTER
===========================================================================
vsdk.toolkit.render.jogl.JoglRenderer.verifyOpenGLAvailability():::EXIT
vsdk.toolkit.render.jogl.JoglRenderer.nvidiaCgErrorReported == orig(vsdk.toolkit.render.jogl.JoglRenderer.nvidiaCgErrorReported)
vsdk.toolkit.render.jogl.JoglRenderer.nvidiaCgAvailable == orig(vsdk.toolkit.render.jogl.JoglRenderer.nvidiaCgAvailable)
vsdk.toolkit.render.jogl.JoglRenderer.nvidiaGpuVertexProfile == orig(vsdk.toolkit.render.jogl.JoglRenderer.nvidiaGpuVertexProfile)
vsdk.toolkit.render.jogl.JoglRenderer.nvidiaGpuPixelProfile == orig(vsdk.toolkit.render.jogl.JoglRenderer.nvidiaGpuPixelProfile)
vsdk.toolkit.render.jogl.JoglRenderer.renderingWithNvidiaGpuFlag == orig(vsdk.toolkit.render.jogl.JoglRenderer.renderingWithNvidiaGpuFlag)
return == true
===========================================================================
vsdk.toolkit.render.jogl.JoglRenderer.verifyOpenGLAvailability():::EXIT;condition="return == true"
Exiting Daikon.
