Daikon version 5.8.20, released May 14, 2024; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:

No return from procedure observed 7 times.  Unmatched entries are ignored!
Unterminated calls:
  org.gantt.generator.mrcpsp.Run.main(java.lang.String[]) : 1 invocation
  org.gantt.generator.mrcpsp.IsolatedGantt.generateDiagram() : 1 invocation
  org.swiftgantt.GanttChart.GanttChart() : 1 invocation
  org.swiftgantt.TimeScaleView.TimeScaleView(org.swiftgantt.GanttChart) : 1 invocation
  org.swiftgantt.TimeScaleView.initialize() : 1 invocation
  org.swiftgantt.ui.TimeScaleUI.installUI(javax.swing.JComponent) : 1 invocation
  org.swiftgantt.ui.BaseUI.installUI(javax.swing.JComponent) : 1 invocation
End of report for procedures not returned from.  Unmatched entries are ignored!

===========================================================================
org.apache.log4j.Category:::OBJECT
this.name != null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.OFF != null
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.FATAL != null
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.ERROR != null
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.WARN != null
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.INFO != null
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.DEBUG != null
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.TRACE != null
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.ALL != null
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr != null
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.FATAL != null
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.ERROR != null
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.WARN != null
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.INFO != null
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.DEBUG != null
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr != null
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr != null
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr != null
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr != null
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr != null
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr != null
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr != null
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
this.level.level == 10000
this.level.levelStr has only one value
this.level.levelStr.toString == "DEBUG"
this.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr != null
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr != null
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr != null
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr != null
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr != null
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.parent.name != null
this.parent.name.toString one of { "org.swiftgantt.ui", "root" }
this.parent.level.level == 10000
this.parent.level.levelStr has only one value
this.parent.level.levelStr != null
this.parent.level.levelStr.toString == "DEBUG"
this.parent.level.syslogEquivalent == 7
this.parent.parent.name has only one value
this.parent.parent.name.toString == "root"
this.parent.parent.level has only one value
this.parent.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN != null
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
this.parent.parent.resourceBundle == null
this.parent.parent.repository has only one value
this.parent.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.parent.parent.aai == null
this.parent.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
org.apache.log4j.Category.class$org$apache$log4j$Category != null
this.parent.resourceBundle == null
this.parent.repository has only one value
this.parent.repository != null
this.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.parent.aai == null
this.resourceBundle == null
this.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.aai == null
===========================================================================
org.apache.log4j.Category.Category(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.Category.Category(java.lang.String):::EXIT
name.toString == orig(name.toString)
this.level == null
this.parent == null
this.repository == null
this.additive == true
===========================================================================
org.apache.log4j.Category.callAppenders(org.apache.log4j.spi.LoggingEvent):::ENTER
this.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.level == null
this.repository has only one value
this.additive == true
org.apache.log4j.spi.LoggingEvent.startTime == 1743924747710L
event.fqnOfCategoryClass has only one value
event.fqnOfCategoryClass.toString == "org.apache.log4j.Category"
event.logger.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
event.logger.level == null
event.logger.resourceBundle == null
event.logger.repository has only one value
event.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
event.logger.aai == null
event.logger.additive == true
event.categoryName.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
event.level.level one of { 10000, 20000 }
event.level.levelStr.toString one of { "DEBUG", "INFO" }
event.level.syslogEquivalent one of { 6, 7 }
event.ndc == null
event.mdcCopy == null
event.ndcLookupRequired == true
event.mdcCopyLookupRequired == true
event.message.getClass().getName() == java.lang.String.class
event.renderedMessage == null
event.threadName == null
event.throwableInfo == null
event.timeStamp one of { 1743924747710L, 1743924747718L }
event.locationInfo == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY has only one value
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName() == java.lang.Integer[].class
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] elements == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() elements == null
org.apache.log4j.spi.LoggingEvent.TO_LEVEL has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString == "toLevel"
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName() == java.lang.Class[].class
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] contains no nulls and has only one value, of length 1
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] elements has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() == [java.lang.Class]
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() elements == java.lang.Class.class
org.apache.log4j.spi.LoggingEvent.methodCache has only one value
org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level == null
size(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[]) == 1
size(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[]) == 1
===========================================================================
org.apache.log4j.Category.callAppenders(org.apache.log4j.spi.LoggingEvent):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
this.parent.parent.name == orig(this.parent.parent.name)
this.parent.parent.name.toString == orig(this.parent.parent.name.toString)
this.parent.parent.level == orig(this.parent.parent.level)
this.parent.parent.parent == orig(this.parent.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
this.parent.parent.resourceBundle == orig(this.parent.parent.resourceBundle)
this.parent.parent.repository == orig(this.parent.parent.repository)
this.parent.parent.repository.getClass().getName() == orig(this.parent.parent.repository.getClass().getName())
this.parent.parent.aai == orig(this.parent.parent.aai)
this.parent.parent.additive == orig(this.parent.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
org.apache.log4j.spi.LoggingEvent.startTime == orig(org.apache.log4j.spi.LoggingEvent.startTime)
event.fqnOfCategoryClass == orig(event.fqnOfCategoryClass)
event.fqnOfCategoryClass.toString == orig(event.fqnOfCategoryClass.toString)
event.logger == orig(event.logger)
event.logger.name == orig(event.logger.name)
event.logger.name.toString == orig(event.logger.name.toString)
event.logger.level == orig(event.logger.level)
event.logger.parent == orig(event.logger.parent)
event.logger.resourceBundle == orig(event.logger.resourceBundle)
event.logger.repository == orig(event.logger.repository)
event.logger.repository.getClass().getName() == orig(event.logger.repository.getClass().getName())
event.logger.aai == orig(event.logger.aai)
event.logger.additive == orig(event.logger.additive)
event.categoryName == orig(event.categoryName)
event.categoryName.toString == orig(event.categoryName.toString)
event.level == orig(event.level)
event.level.level == orig(event.level.level)
event.level.levelStr == orig(event.level.levelStr)
event.level.levelStr.toString == orig(event.level.levelStr.toString)
event.level.syslogEquivalent == orig(event.level.syslogEquivalent)
event.ndc == orig(event.ndc)
event.mdcCopy == orig(event.mdcCopy)
event.ndcLookupRequired == orig(event.ndcLookupRequired)
event.mdcCopyLookupRequired == orig(event.mdcCopyLookupRequired)
event.message == orig(event.message)
event.message.getClass().getName() == orig(event.message.getClass().getName())
event.renderedMessage == orig(event.renderedMessage)
event.threadName == orig(event.threadName)
event.throwableInfo == orig(event.throwableInfo)
event.timeStamp == orig(event.timeStamp)
event.locationInfo == orig(event.locationInfo)
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY == orig(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY)
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName() == orig(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName())
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] == orig(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[])
org.apache.log4j.spi.LoggingEvent.TO_LEVEL == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL)
org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString)
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS)
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName() == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName())
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] == orig(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[])
org.apache.log4j.spi.LoggingEvent.methodCache == orig(org.apache.log4j.spi.LoggingEvent.methodCache)
org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level == orig(org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level)
this.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.level == null
this.repository has only one value
this.additive == true
org.apache.log4j.spi.LoggingEvent.startTime == 1743924747710L
event.fqnOfCategoryClass has only one value
event.fqnOfCategoryClass.toString == "org.apache.log4j.Category"
event.logger.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
event.logger.level == null
event.logger.resourceBundle == null
event.logger.repository has only one value
event.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
event.logger.aai == null
event.logger.additive == true
event.categoryName.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
event.level.level one of { 10000, 20000 }
event.level.levelStr.toString one of { "DEBUG", "INFO" }
event.level.syslogEquivalent one of { 6, 7 }
event.ndc == null
event.mdcCopy == null
event.ndcLookupRequired == true
event.mdcCopyLookupRequired == true
event.message.getClass().getName() == java.lang.String.class
event.renderedMessage == null
event.threadName == null
event.throwableInfo == null
event.timeStamp one of { 1743924747710L, 1743924747718L }
event.locationInfo == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY has only one value
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName() == java.lang.Integer[].class
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] elements == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() elements == null
org.apache.log4j.spi.LoggingEvent.TO_LEVEL has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString == "toLevel"
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName() == java.lang.Class[].class
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] contains no nulls and has only one value, of length 1
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] elements has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() == [java.lang.Class]
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() elements == java.lang.Class.class
org.apache.log4j.spi.LoggingEvent.methodCache has only one value
org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level == null
size(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[]) == 1
size(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[]) == 1
===========================================================================
org.apache.log4j.Category.class$(java.lang.String):::ENTER
x0 has only one value
x0.toString == "org.apache.log4j.Category"
===========================================================================
org.apache.log4j.Category.class$(java.lang.String):::EXIT
x0.toString == orig(x0.toString)
x0.toString == "org.apache.log4j.Category"
return has only one value
===========================================================================
org.apache.log4j.Category.debug(java.lang.Object):::ENTER
this has only one value
this.name has only one value
this.name.toString == "org.swiftgantt.ui.TimeScaleUI"
this.level == null
this.parent has only one value
this.parent.name has only one value
this.parent.name.toString == "org.swiftgantt.ui"
this.parent.level == null
this.parent.parent has only one value
this.parent.additive == false
this.repository has only one value
this.additive == true
message has only one value
message.getClass().getName() == java.lang.String.class
===========================================================================
org.apache.log4j.Category.debug(java.lang.Object):::EXIT262
===========================================================================
org.apache.log4j.Category.debug(java.lang.Object):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.parent == orig(this.parent.parent)
this.parent.parent.name == orig(this.parent.parent.name)
this.parent.parent.name.toString == orig(this.parent.parent.name.toString)
this.parent.parent.level == orig(this.parent.parent.level)
this.parent.parent.parent == orig(this.parent.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
this.parent.parent.resourceBundle == orig(this.parent.parent.resourceBundle)
this.parent.parent.repository == orig(this.parent.parent.repository)
this.parent.parent.repository.getClass().getName() == orig(this.parent.parent.repository.getClass().getName())
this.parent.parent.aai == orig(this.parent.parent.aai)
this.parent.parent.additive == orig(this.parent.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.name has only one value
this.name.toString == "org.swiftgantt.ui.TimeScaleUI"
this.level == null
this.parent has only one value
this.parent.name has only one value
this.parent.name.toString == "org.swiftgantt.ui"
this.parent.level == null
this.parent.parent has only one value
this.parent.additive == false
this.repository has only one value
this.additive == true
===========================================================================
org.apache.log4j.Category.forcedLog(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable):::ENTER
this.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.level == null
this.repository has only one value
this.additive == true
fqcn has only one value
fqcn.toString == "org.apache.log4j.Category"
level.level one of { 10000, 20000 }
level.levelStr.toString one of { "DEBUG", "INFO" }
level.syslogEquivalent one of { 6, 7 }
message.getClass().getName() == java.lang.String.class
t == null
===========================================================================
org.apache.log4j.Category.forcedLog(java.lang.String, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
this.parent.parent.name == orig(this.parent.parent.name)
this.parent.parent.name.toString == orig(this.parent.parent.name.toString)
this.parent.parent.level == orig(this.parent.parent.level)
this.parent.parent.parent == orig(this.parent.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
this.parent.parent.resourceBundle == orig(this.parent.parent.resourceBundle)
this.parent.parent.repository == orig(this.parent.parent.repository)
this.parent.parent.repository.getClass().getName() == orig(this.parent.parent.repository.getClass().getName())
this.parent.parent.aai == orig(this.parent.parent.aai)
this.parent.parent.additive == orig(this.parent.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
fqcn.toString == orig(fqcn.toString)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
this.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.level == null
this.repository has only one value
this.additive == true
fqcn.toString == "org.apache.log4j.Category"
level.level one of { 10000, 20000 }
level.levelStr.toString one of { "DEBUG", "INFO" }
level.syslogEquivalent one of { 6, 7 }
===========================================================================
org.apache.log4j.Category.getEffectiveLevel():::ENTER
this.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.level == null
this.repository has only one value
this.additive == true
===========================================================================
org.apache.log4j.Category.getEffectiveLevel():::EXIT444
===========================================================================
org.apache.log4j.Category.getEffectiveLevel():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
this.parent.parent.name == orig(this.parent.parent.name)
this.parent.parent.name.toString == orig(this.parent.parent.name.toString)
this.parent.parent.level == orig(this.parent.parent.level)
this.parent.parent.parent == orig(this.parent.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
this.parent.parent.resourceBundle == orig(this.parent.parent.resourceBundle)
this.parent.parent.repository == orig(this.parent.parent.repository)
this.parent.parent.repository.getClass().getName() == orig(this.parent.parent.repository.getClass().getName())
this.parent.parent.aai == orig(this.parent.parent.aai)
this.parent.parent.additive == orig(this.parent.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.level == null
this.repository has only one value
this.additive == true
return has only one value
return.level == 10000
return.levelStr has only one value
return.levelStr.toString == "DEBUG"
return.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Category.getName():::ENTER
this.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.level == null
this.repository has only one value
this.additive == true
===========================================================================
org.apache.log4j.Category.getName():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
this.parent.parent.name == orig(this.parent.parent.name)
this.parent.parent.name.toString == orig(this.parent.parent.name.toString)
this.parent.parent.level == orig(this.parent.parent.level)
this.parent.parent.parent == orig(this.parent.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
this.parent.parent.resourceBundle == orig(this.parent.parent.resourceBundle)
this.parent.parent.repository == orig(this.parent.parent.repository)
this.parent.parent.repository.getClass().getName() == orig(this.parent.parent.repository.getClass().getName())
this.parent.parent.aai == orig(this.parent.parent.aai)
this.parent.parent.additive == orig(this.parent.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.level == null
this.repository has only one value
this.additive == true
return.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
===========================================================================
org.apache.log4j.Category.info(java.lang.Object):::ENTER
this has only one value
this.name has only one value
this.name.toString == "org.swiftgantt.TimeScaleView"
this.level == null
this.parent has only one value
this.parent.name has only one value
this.parent.name.toString == "root"
this.parent.level has only one value
this.parent.parent == null
this.parent.additive == true
this.repository has only one value
this.additive == true
message has only one value
message.getClass().getName() == java.lang.String.class
===========================================================================
org.apache.log4j.Category.info(java.lang.Object):::EXIT667
===========================================================================
org.apache.log4j.Category.info(java.lang.Object):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.name has only one value
this.name.toString == "org.swiftgantt.TimeScaleView"
this.level == null
this.parent has only one value
this.parent.name has only one value
this.parent.name.toString == "root"
this.parent.level has only one value
this.parent.parent == null
this.parent.additive == true
this.repository has only one value
this.additive == true
===========================================================================
org.apache.log4j.Category.setAdditivity(boolean):::ENTER
this has only one value
this.name has only one value
this.name.toString == "org.swiftgantt.ui"
this.level == null
this.parent has only one value
this.parent.name has only one value
this.parent.name.toString == "root"
this.parent.level has only one value
this.parent.parent == null
this.parent.additive == true
this.repository has only one value
this.additive == true
additive == false
===========================================================================
org.apache.log4j.Category.setAdditivity(boolean):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
this.parent.name == orig(this.parent.name)
this.parent.name.toString == orig(this.parent.name.toString)
this.parent.level == orig(this.parent.level)
this.parent.level.level == orig(this.parent.level.level)
this.parent.level.levelStr == orig(this.parent.level.levelStr)
this.parent.level.levelStr.toString == orig(this.parent.level.levelStr.toString)
this.parent.level.syslogEquivalent == orig(this.parent.level.syslogEquivalent)
this.parent.parent == orig(this.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.parent.resourceBundle == orig(this.parent.resourceBundle)
this.parent.repository == orig(this.parent.repository)
this.parent.repository.getClass().getName() == orig(this.parent.repository.getClass().getName())
this.parent.aai == orig(this.parent.aai)
this.parent.additive == orig(this.parent.additive)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
this.aai == orig(this.aai)
this.name has only one value
this.name.toString == "org.swiftgantt.ui"
this.level == null
this.parent has only one value
this.parent.name has only one value
this.parent.name.toString == "root"
this.parent.level has only one value
this.parent.parent == null
this.parent.additive == true
this.repository has only one value
this.additive == false
===========================================================================
org.apache.log4j.Category.setHierarchy(org.apache.log4j.spi.LoggerRepository):::ENTER
this.parent == null
this.repository == null
this.additive == true
repository has only one value
repository.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.Category.setHierarchy(org.apache.log4j.spi.LoggerRepository):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.level == orig(this.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.level.level == orig(this.level.level)
this.level.levelStr == orig(this.level.levelStr)
this.level.levelStr.toString == orig(this.level.levelStr.toString)
this.level.syslogEquivalent == orig(this.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.resourceBundle == orig(this.resourceBundle)
this.aai == orig(this.aai)
this.additive == orig(this.additive)
this.parent == null
this.repository has only one value
this.additive == true
===========================================================================
org.apache.log4j.CategoryKey:::CLASS
===========================================================================
org.apache.log4j.CategoryKey:::OBJECT
this.name != null
===========================================================================
org.apache.log4j.CategoryKey.CategoryKey(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.CategoryKey.CategoryKey(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.apache.log4j.CategoryKey.class$(java.lang.String):::ENTER
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == null
x0 has only one value
x0.toString == "org.apache.log4j.CategoryKey"
===========================================================================
org.apache.log4j.CategoryKey.class$(java.lang.String):::EXIT
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == orig(org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey)
x0.toString == orig(x0.toString)
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == null
x0.toString == "org.apache.log4j.CategoryKey"
return has only one value
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::ENTER
this.name.toString one of { "org", "org.swiftgantt", "org.swiftgantt.ui" }
this.hashCache one of { 110308, 291715063, 583321451 }
rArg.getClass().getName() == org.apache.log4j.CategoryKey.class
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::EXIT48
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::EXIT48;condition="return == true"
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hashCache == orig(this.hashCache)
this.name.toString one of { "org", "org.swiftgantt", "org.swiftgantt.ui" }
this.hashCache one of { 110308, 291715063, 583321451 }
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey has only one value
return == true
===========================================================================
org.apache.log4j.CategoryKey.equals(java.lang.Object):::EXIT;condition="return == true"
===========================================================================
org.apache.log4j.CategoryKey.hashCode():::ENTER
===========================================================================
org.apache.log4j.CategoryKey.hashCode():::EXIT
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
this.hashCache == orig(this.hashCache)
org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey == orig(org.apache.log4j.CategoryKey.class$org$apache$log4j$CategoryKey)
===========================================================================
org.apache.log4j.DefaultCategoryFactory:::OBJECT
this has only one value
===========================================================================
org.apache.log4j.DefaultCategoryFactory.DefaultCategoryFactory():::EXIT
===========================================================================
org.apache.log4j.DefaultCategoryFactory.makeNewLoggerInstance(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.DefaultCategoryFactory.makeNewLoggerInstance(java.lang.String):::EXIT
name.toString == orig(name.toString)
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
return.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
return.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
return.resourceBundle == null
return.repository == null
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Hierarchy:::OBJECT
this has only one value
this.defaultFactory.getClass().getName() == org.apache.log4j.DefaultCategoryFactory.class
this.listeners has only one value
this.listeners != null
this.listeners[] == []
this.listeners[].getClass().getName() == []
this.ht has only one value
this.ht != null
this.root has only one value
this.root != null
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN != null
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
org.apache.log4j.Logger.class$org$apache$log4j$Logger != null
this.root.name has only one value
this.root.name != null
this.root.name.toString == "root"
this.root.level has only one value
this.root.level != null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.OFF != null
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.FATAL != null
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.ERROR != null
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.WARN != null
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.INFO != null
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.DEBUG != null
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.TRACE != null
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.ALL != null
org.apache.log4j.Level.class$org$apache$log4j$Level == null
this.root.level.level == 10000
this.root.level.levelStr has only one value
this.root.level.levelStr != null
this.root.level.levelStr.toString == "DEBUG"
this.root.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.FATAL != null
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.ERROR != null
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.WARN != null
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.INFO != null
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.DEBUG != null
this.root.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN != null
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
org.apache.log4j.Category.class$org$apache$log4j$Category != null
this.root.resourceBundle == null
this.root.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.root.aai == null
this.root.additive == true
this.rendererMap.map has only one value
this.rendererMap.map != null
org.apache.log4j.or.RendererMap.defaultRenderer has only one value
org.apache.log4j.or.RendererMap.defaultRenderer != null
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == org.apache.log4j.or.DefaultRenderer.class
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == null
this.thresholdInt one of { -2147483648, 0 }
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr != null
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr != null
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr != null
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr != null
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr != null
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr != null
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr != null
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr != null
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
this.threshold.level == -2147483648
this.threshold.levelStr has only one value
this.threshold.levelStr != null
this.threshold.levelStr.toString == "ALL"
this.threshold.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr != null
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr != null
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr != null
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr != null
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr != null
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.emittedNoResourceBundleWarning == false
===========================================================================
org.apache.log4j.Hierarchy.Hierarchy(org.apache.log4j.Logger):::ENTER
root has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
root.name has only one value
root.name.toString == "root"
root.level has only one value
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
root.level.level == 10000
root.level.levelStr has only one value
root.level.levelStr.toString == "DEBUG"
root.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
root.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
root.resourceBundle == null
root.repository == null
root.aai == null
root.additive == true
===========================================================================
org.apache.log4j.Hierarchy.Hierarchy(org.apache.log4j.Logger):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
root.name == orig(root.name)
root.name.toString == orig(root.name.toString)
root.level == orig(root.level)
root.level.level == orig(root.level.level)
root.level.levelStr == orig(root.level.levelStr)
root.level.levelStr.toString == orig(root.level.levelStr.toString)
root.level.syslogEquivalent == orig(root.level.syslogEquivalent)
root.parent == orig(root.parent)
root.resourceBundle == orig(root.resourceBundle)
root.aai == orig(root.aai)
root.additive == orig(root.additive)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
this.emittedNoAppenderWarning == false
root.name has only one value
root.name.toString == "root"
root.level has only one value
root.level.level == 10000
root.level.levelStr has only one value
root.level.levelStr.toString == "DEBUG"
root.level.syslogEquivalent == 7
root.parent == null
root.resourceBundle == null
root.repository has only one value
root.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
root.aai == null
root.additive == true
===========================================================================
org.apache.log4j.Hierarchy.emitNoAppenderWarning(org.apache.log4j.Category):::ENTER
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
cat.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
cat.level == null
cat.parent.name.toString one of { "org.swiftgantt.ui", "root" }
cat.parent.resourceBundle == null
cat.parent.repository has only one value
cat.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.parent.aai == null
cat.resourceBundle == null
cat.repository has only one value
cat.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.aai == null
cat.additive == true
===========================================================================
org.apache.log4j.Hierarchy.emitNoAppenderWarning(org.apache.log4j.Category):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.level == orig(this.threshold.level)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
cat.name == orig(cat.name)
cat.name.toString == orig(cat.name.toString)
cat.level == orig(cat.level)
cat.parent == orig(cat.parent)
cat.parent.name == orig(cat.parent.name)
cat.parent.name.toString == orig(cat.parent.name.toString)
cat.parent.level == orig(cat.parent.level)
cat.parent.parent == orig(cat.parent.parent)
cat.parent.resourceBundle == orig(cat.parent.resourceBundle)
cat.parent.repository == orig(cat.parent.repository)
cat.parent.repository.getClass().getName() == orig(cat.parent.repository.getClass().getName())
cat.parent.aai == orig(cat.parent.aai)
cat.parent.additive == orig(cat.parent.additive)
cat.resourceBundle == orig(cat.resourceBundle)
cat.repository == orig(cat.repository)
cat.repository.getClass().getName() == orig(cat.repository.getClass().getName())
cat.aai == orig(cat.aai)
cat.additive == orig(cat.additive)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
this.emittedNoAppenderWarning == true
cat.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
cat.level == null
cat.parent.name.toString one of { "org.swiftgantt.ui", "root" }
cat.parent.resourceBundle == null
cat.parent.repository has only one value
cat.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.parent.aai == null
cat.resourceBundle == null
cat.repository has only one value
cat.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.aai == null
cat.additive == true
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String):::ENTER
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.level == orig(this.threshold.level)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
name.toString == orig(name.toString)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
return.level == null
return.parent.name.toString one of { "org.swiftgantt.ui", "root" }
return.parent.resourceBundle == null
return.parent.repository has only one value
return.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.parent.aai == null
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory):::ENTER
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
factory has only one value
factory.getClass().getName() == org.apache.log4j.DefaultCategoryFactory.class
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory):::EXIT275
===========================================================================
org.apache.log4j.Hierarchy.getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.level == orig(this.threshold.level)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
name.toString == orig(name.toString)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
return.level == null
return.parent.name.toString one of { "org.swiftgantt.ui", "root" }
return.parent.resourceBundle == null
return.parent.repository has only one value
return.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.parent.aai == null
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.Hierarchy.isDisabled(int):::ENTER
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
level one of { 10000, 20000 }
===========================================================================
org.apache.log4j.Hierarchy.isDisabled(int):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.level == orig(this.threshold.level)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
return == false
===========================================================================
org.apache.log4j.Hierarchy.isDisabled(int):::EXIT;condition="not(return == true)"
===========================================================================
org.apache.log4j.Hierarchy.setThreshold(org.apache.log4j.Level):::ENTER
this.defaultFactory == null
this.root.repository == null
this.rendererMap == null
this.thresholdInt == 0
this.threshold == null
this.emittedNoAppenderWarning == false
l has only one value
l.level == -2147483648
l.levelStr has only one value
l.levelStr.toString == "ALL"
l.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Hierarchy.setThreshold(org.apache.log4j.Level):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
l.level == orig(l.level)
l.levelStr == orig(l.levelStr)
l.levelStr.toString == orig(l.levelStr.toString)
l.syslogEquivalent == orig(l.syslogEquivalent)
this.defaultFactory == null
this.root.repository == null
this.rendererMap == null
this.thresholdInt == -2147483648
this.threshold has only one value
this.emittedNoAppenderWarning == false
l.level == -2147483648
l.levelStr has only one value
l.levelStr.toString == "ALL"
l.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Hierarchy.updateParents(org.apache.log4j.Logger):::ENTER
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
cat.level == null
cat.parent == null
cat.resourceBundle == null
cat.repository has only one value
cat.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.aai == null
cat.additive == true
===========================================================================
org.apache.log4j.Hierarchy.updateParents(org.apache.log4j.Logger):::EXIT
this.defaultFactory == orig(this.defaultFactory)
this.defaultFactory.getClass().getName() == orig(this.defaultFactory.getClass().getName())
this.listeners == orig(this.listeners)
this.listeners[] == orig(this.listeners[])
this.ht == orig(this.ht)
this.root == orig(this.root)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.root.name == orig(this.root.name)
this.root.name.toString == orig(this.root.name.toString)
this.root.level == orig(this.root.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
this.root.level.level == orig(this.root.level.level)
this.root.level.levelStr == orig(this.root.level.levelStr)
this.root.level.levelStr.toString == orig(this.root.level.levelStr.toString)
this.root.level.syslogEquivalent == orig(this.root.level.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.root.parent == orig(this.root.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.root.resourceBundle == orig(this.root.resourceBundle)
this.root.repository == orig(this.root.repository)
this.root.repository.getClass().getName() == orig(this.root.repository.getClass().getName())
this.root.aai == orig(this.root.aai)
this.root.additive == orig(this.root.additive)
this.rendererMap == orig(this.rendererMap)
this.rendererMap.map == orig(this.rendererMap.map)
org.apache.log4j.or.RendererMap.defaultRenderer == orig(org.apache.log4j.or.RendererMap.defaultRenderer)
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == orig(org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName())
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == orig(org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer)
this.thresholdInt == orig(this.thresholdInt)
this.threshold == orig(this.threshold)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
this.threshold.level == orig(this.threshold.level)
this.threshold.levelStr == orig(this.threshold.levelStr)
this.threshold.levelStr.toString == orig(this.threshold.levelStr.toString)
this.threshold.syslogEquivalent == orig(this.threshold.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.emittedNoAppenderWarning == orig(this.emittedNoAppenderWarning)
this.emittedNoResourceBundleWarning == orig(this.emittedNoResourceBundleWarning)
cat.name == orig(cat.name)
cat.name.toString == orig(cat.name.toString)
cat.level == orig(cat.level)
cat.resourceBundle == orig(cat.resourceBundle)
cat.repository == orig(cat.repository)
cat.repository.getClass().getName() == orig(cat.repository.getClass().getName())
cat.aai == orig(cat.aai)
cat.additive == orig(cat.additive)
this.defaultFactory has only one value
this.root.repository has only one value
this.rendererMap has only one value
this.thresholdInt == -2147483648
this.threshold has only one value
cat.level == null
cat.parent.name.toString one of { "org.swiftgantt.ui", "root" }
cat.parent.resourceBundle == null
cat.parent.repository has only one value
cat.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.parent.aai == null
cat.resourceBundle == null
cat.repository has only one value
cat.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
cat.aai == null
cat.additive == true
===========================================================================
org.apache.log4j.Level:::CLASS
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Level:::OBJECT
this.levelStr != null
this.syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Level.Level(int, java.lang.String, int):::ENTER
levelStr != null
syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Level.Level(int, java.lang.String, int):::EXIT
levelStr.toString == orig(levelStr.toString)
===========================================================================
org.apache.log4j.LogManager:::CLASS
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE has only one value
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE != null
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString == "log4j.properties"
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE has only one value
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE != null
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString == "log4j.xml"
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY has only one value
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY != null
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString == "log4j.configuration"
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY has only one value
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY != null
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString == "log4j.configuratorClass"
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY has only one value
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY != null
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString == "log4j.defaultInitOverride"
org.apache.log4j.LogManager.guard == null
org.apache.log4j.LogManager.repositorySelector has only one value
org.apache.log4j.LogManager.repositorySelector != null
org.apache.log4j.LogManager.repositorySelector.getClass().getName() == org.apache.log4j.spi.DefaultRepositorySelector.class
===========================================================================
org.apache.log4j.LogManager.getLogger(java.lang.Class):::ENTER
===========================================================================
org.apache.log4j.LogManager.getLogger(java.lang.Class):::EXIT
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString)
org.apache.log4j.LogManager.guard == orig(org.apache.log4j.LogManager.guard)
org.apache.log4j.LogManager.repositorySelector == orig(org.apache.log4j.LogManager.repositorySelector)
org.apache.log4j.LogManager.repositorySelector.getClass().getName() == orig(org.apache.log4j.LogManager.repositorySelector.getClass().getName())
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
return.name.toString one of { "org.swiftgantt.GanttChart", "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
return.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
return.parent.name.toString one of { "org.swiftgantt.ui", "root" }
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
return.parent.resourceBundle == null
return.parent.repository has only one value
return.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.parent.aai == null
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.LogManager.getLogger(java.lang.String):::ENTER
name has only one value
name.toString == "org.swiftgantt.ui"
===========================================================================
org.apache.log4j.LogManager.getLogger(java.lang.String):::EXIT
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString)
org.apache.log4j.LogManager.guard == orig(org.apache.log4j.LogManager.guard)
org.apache.log4j.LogManager.repositorySelector == orig(org.apache.log4j.LogManager.repositorySelector)
org.apache.log4j.LogManager.repositorySelector.getClass().getName() == orig(org.apache.log4j.LogManager.repositorySelector.getClass().getName())
name.toString == orig(name.toString)
name.toString == "org.swiftgantt.ui"
return has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
return.name has only one value
return.name.toString == "org.swiftgantt.ui"
return.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
return.parent has only one value
return.parent.name has only one value
return.parent.name.toString == "root"
return.parent.level has only one value
return.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
return.parent.resourceBundle == null
return.parent.repository has only one value
return.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.parent.aai == null
return.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
return.resourceBundle == null
return.repository has only one value
return.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.aai == null
return.additive == true
===========================================================================
org.apache.log4j.LogManager.getLoggerRepository():::ENTER
===========================================================================
org.apache.log4j.LogManager.getLoggerRepository():::EXIT
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE)
org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString == orig(org.apache.log4j.LogManager.DEFAULT_XML_CONFIGURATION_FILE.toString)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY)
org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_CONFIGURATION_KEY.toString)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY)
org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString == orig(org.apache.log4j.LogManager.CONFIGURATOR_CLASS_KEY.toString)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY)
org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString == orig(org.apache.log4j.LogManager.DEFAULT_INIT_OVERRIDE_KEY.toString)
org.apache.log4j.LogManager.guard == orig(org.apache.log4j.LogManager.guard)
org.apache.log4j.LogManager.repositorySelector == orig(org.apache.log4j.LogManager.repositorySelector)
org.apache.log4j.LogManager.repositorySelector.getClass().getName() == orig(org.apache.log4j.LogManager.repositorySelector.getClass().getName())
return has only one value
return.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.Logger:::CLASS
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
===========================================================================
org.apache.log4j.Logger:::OBJECT
this.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.resourceBundle == null
this.repository == null
this.aai == null
this.additive == true
===========================================================================
org.apache.log4j.Logger.Logger(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.Logger.Logger(java.lang.String):::EXIT
name.toString == orig(name.toString)
===========================================================================
org.apache.log4j.Logger.class$(java.lang.String):::ENTER
x0 has only one value
x0.toString == "org.apache.log4j.Logger"
===========================================================================
org.apache.log4j.Logger.class$(java.lang.String):::EXIT
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
x0.toString == orig(x0.toString)
x0.toString == "org.apache.log4j.Logger"
return has only one value
===========================================================================
org.apache.log4j.Priority:::CLASS
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.FATAL != null
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr != null
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.ERROR != null
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.WARN != null
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.INFO != null
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Priority.DEBUG != null
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr != null
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr != null
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr != null
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr != null
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Priority:::OBJECT
this.levelStr != null
this.syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Priority.Priority(int, java.lang.String, int):::ENTER
levelStr != null
syslogEquivalent >= 0
===========================================================================
org.apache.log4j.Priority.Priority(int, java.lang.String, int):::EXIT
levelStr.toString == orig(levelStr.toString)
===========================================================================
org.apache.log4j.Priority.isGreaterOrEqual(org.apache.log4j.Priority):::ENTER
this.level one of { 10000, 20000 }
this.levelStr.toString one of { "DEBUG", "INFO" }
this.syslogEquivalent one of { 6, 7 }
r has only one value
r.level == 10000
r.levelStr has only one value
r.levelStr.toString == "DEBUG"
r.syslogEquivalent == 7
===========================================================================
org.apache.log4j.Priority.isGreaterOrEqual(org.apache.log4j.Priority):::EXIT
this.level == orig(this.level)
this.levelStr == orig(this.levelStr)
this.levelStr.toString == orig(this.levelStr.toString)
this.syslogEquivalent == orig(this.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
r.level == orig(r.level)
r.levelStr == orig(r.levelStr)
r.levelStr.toString == orig(r.levelStr.toString)
r.syslogEquivalent == orig(r.syslogEquivalent)
this.level one of { 10000, 20000 }
this.levelStr.toString one of { "DEBUG", "INFO" }
this.syslogEquivalent one of { 6, 7 }
r.level == 10000
r.levelStr has only one value
r.levelStr.toString == "DEBUG"
r.syslogEquivalent == 7
return == true
===========================================================================
org.apache.log4j.Priority.isGreaterOrEqual(org.apache.log4j.Priority):::EXIT;condition="return == true"
===========================================================================
org.apache.log4j.ProvisionNode:::CLASS
===========================================================================
org.apache.log4j.ProvisionNode:::OBJECT
===========================================================================
org.apache.log4j.ProvisionNode.ProvisionNode(org.apache.log4j.Logger):::ENTER
logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
logger.name has only one value
logger.name.toString == "org.swiftgantt.GanttChart"
logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
logger.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
===========================================================================
org.apache.log4j.ProvisionNode.ProvisionNode(org.apache.log4j.Logger):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
logger.name == orig(logger.name)
logger.name.toString == orig(logger.name.toString)
logger.level == orig(logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
logger.parent == orig(logger.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
logger.resourceBundle == orig(logger.resourceBundle)
logger.repository == orig(logger.repository)
logger.repository.getClass().getName() == orig(logger.repository.getClass().getName())
logger.aai == orig(logger.aai)
logger.additive == orig(logger.additive)
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
logger.name has only one value
logger.name.toString == "org.swiftgantt.GanttChart"
logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
logger.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
===========================================================================
org.apache.log4j.helpers.Loader.class$(java.lang.String):::ENTER
x0.toString one of { "java.lang.Thread", "org.apache.log4j.helpers.Loader" }
===========================================================================
org.apache.log4j.helpers.Loader.class$(java.lang.String):::EXIT
x0.toString == orig(x0.toString)
x0.toString one of { "java.lang.Thread", "org.apache.log4j.helpers.Loader" }
===========================================================================
org.apache.log4j.helpers.Loader.getResource(java.lang.String):::ENTER
resource.toString one of { "log4j.properties", "log4j.xml" }
===========================================================================
org.apache.log4j.helpers.Loader.getResource(java.lang.String):::EXIT125
===========================================================================
org.apache.log4j.helpers.Loader.getResource(java.lang.String):::EXIT
resource.toString == orig(resource.toString)
resource.toString one of { "log4j.properties", "log4j.xml" }
return == null
===========================================================================
org.apache.log4j.helpers.Loader.getTCL():::EXIT155
===========================================================================
org.apache.log4j.helpers.Loader.getTCL():::EXIT
return has only one value
return.getClass().getName() == jdk.internal.loader.ClassLoaders$AppClassLoader.class
===========================================================================
org.apache.log4j.helpers.LogLog.debug(java.lang.String):::ENTER
===========================================================================
org.apache.log4j.helpers.LogLog.debug(java.lang.String):::EXIT
msg.toString == orig(msg.toString)
===========================================================================
org.apache.log4j.helpers.LogLog.warn(java.lang.String):::ENTER
msg.toString one of { "No appenders could be found for logger (org.swiftgantt.TimeScaleView).", "Please initialize the log4j system properly." }
===========================================================================
org.apache.log4j.helpers.LogLog.warn(java.lang.String):::EXIT172
===========================================================================
org.apache.log4j.helpers.LogLog.warn(java.lang.String):::EXIT
msg.toString == orig(msg.toString)
msg.toString one of { "No appenders could be found for logger (org.swiftgantt.TimeScaleView).", "Please initialize the log4j system properly." }
===========================================================================
org.apache.log4j.helpers.OptionConverter:::CLASS
org.apache.log4j.helpers.OptionConverter.DELIM_START has only one value
org.apache.log4j.helpers.OptionConverter.DELIM_START != null
org.apache.log4j.helpers.OptionConverter.DELIM_START.toString == "${"
org.apache.log4j.helpers.OptionConverter.DELIM_STOP == 125
org.apache.log4j.helpers.OptionConverter.DELIM_START_LEN == 2
org.apache.log4j.helpers.OptionConverter.DELIM_STOP_LEN == 1
org.apache.log4j.helpers.OptionConverter.class$java$lang$String == null
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$Level == null
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$spi$Configurator == null
===========================================================================
org.apache.log4j.helpers.OptionConverter.getSystemProperty(java.lang.String, java.lang.String):::ENTER
def == null
===========================================================================
org.apache.log4j.helpers.OptionConverter.getSystemProperty(java.lang.String, java.lang.String):::EXIT101
===========================================================================
org.apache.log4j.helpers.OptionConverter.getSystemProperty(java.lang.String, java.lang.String):::EXIT
org.apache.log4j.helpers.OptionConverter.DELIM_START == orig(org.apache.log4j.helpers.OptionConverter.DELIM_START)
org.apache.log4j.helpers.OptionConverter.DELIM_START.toString == orig(org.apache.log4j.helpers.OptionConverter.DELIM_START.toString)
org.apache.log4j.helpers.OptionConverter.DELIM_STOP == orig(org.apache.log4j.helpers.OptionConverter.DELIM_STOP)
org.apache.log4j.helpers.OptionConverter.DELIM_START_LEN == orig(org.apache.log4j.helpers.OptionConverter.DELIM_START_LEN)
org.apache.log4j.helpers.OptionConverter.DELIM_STOP_LEN == orig(org.apache.log4j.helpers.OptionConverter.DELIM_STOP_LEN)
org.apache.log4j.helpers.OptionConverter.class$java$lang$String == orig(org.apache.log4j.helpers.OptionConverter.class$java$lang$String)
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$Level == orig(org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$Level)
org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$spi$Configurator == orig(org.apache.log4j.helpers.OptionConverter.class$org$apache$log4j$spi$Configurator)
key.toString == orig(key.toString)
return.toString == "11.0.26"
===========================================================================
org.apache.log4j.or.DefaultRenderer:::OBJECT
this has only one value
===========================================================================
org.apache.log4j.or.DefaultRenderer.DefaultRenderer():::EXIT
===========================================================================
org.apache.log4j.or.RendererMap:::CLASS
org.apache.log4j.or.RendererMap.defaultRenderer has only one value
org.apache.log4j.or.RendererMap.defaultRenderer.getClass().getName() == org.apache.log4j.or.DefaultRenderer.class
org.apache.log4j.or.RendererMap.class$org$apache$log4j$or$ObjectRenderer == null
===========================================================================
org.apache.log4j.or.RendererMap:::OBJECT
this has only one value
this.map has only one value
===========================================================================
org.apache.log4j.or.RendererMap.RendererMap():::EXIT
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector:::OBJECT
this has only one value
this.repository has only one value
this.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.DefaultRepositorySelector(org.apache.log4j.spi.LoggerRepository):::ENTER
repository has only one value
repository.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.DefaultRepositorySelector(org.apache.log4j.spi.LoggerRepository):::EXIT
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.getLoggerRepository():::ENTER
===========================================================================
org.apache.log4j.spi.DefaultRepositorySelector.getLoggerRepository():::EXIT
this.repository == orig(this.repository)
this.repository.getClass().getName() == orig(this.repository.getClass().getName())
return has only one value
return.getClass().getName() == org.apache.log4j.Hierarchy.class
===========================================================================
org.apache.log4j.spi.LoggingEvent:::CLASS
org.apache.log4j.spi.LoggingEvent.startTime == 1743924747710L
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY has only one value
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY.getClass().getName() == java.lang.Integer[].class
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[] elements == null
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() == [null]
org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[].getClass().getName() elements == null
org.apache.log4j.spi.LoggingEvent.TO_LEVEL has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL.toString == "toLevel"
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS.getClass().getName() == java.lang.Class[].class
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] contains no nulls and has only one value, of length 1
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[] elements has only one value
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() == [java.lang.Class]
org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[].getClass().getName() elements == java.lang.Class.class
org.apache.log4j.spi.LoggingEvent.methodCache has only one value
org.apache.log4j.spi.LoggingEvent.class$org$apache$log4j$Level == null
size(org.apache.log4j.spi.LoggingEvent.PARAM_ARRAY[]) == 1
size(org.apache.log4j.spi.LoggingEvent.TO_LEVEL_PARAMS[]) == 1
===========================================================================
org.apache.log4j.spi.LoggingEvent:::OBJECT
this.fqnOfCategoryClass has only one value
this.fqnOfCategoryClass.toString == "org.apache.log4j.Category"
this.logger.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
this.logger.parent.name.toString one of { "org.swiftgantt.ui", "root" }
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
this.logger.parent.resourceBundle == null
this.logger.parent.repository has only one value
this.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.parent.aai == null
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.logger.resourceBundle == null
this.logger.repository has only one value
this.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.aai == null
this.logger.additive == true
this.categoryName.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
this.level.level one of { 10000, 20000 }
this.level.levelStr.toString one of { "DEBUG", "INFO" }
this.level.syslogEquivalent one of { 6, 7 }
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.ndc == null
this.mdcCopy == null
this.ndcLookupRequired == true
this.mdcCopyLookupRequired == true
this.message.getClass().getName() == java.lang.String.class
this.renderedMessage == null
this.threadName == null
this.throwableInfo == null
this.timeStamp one of { 1743924747710L, 1743924747718L }
this.locationInfo == null
===========================================================================
org.apache.log4j.spi.LoggingEvent.LoggingEvent(java.lang.String, org.apache.log4j.Category, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable):::ENTER
fqnOfCategoryClass has only one value
fqnOfCategoryClass.toString == "org.apache.log4j.Category"
logger.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
logger.parent.name.toString one of { "org.swiftgantt.ui", "root" }
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
logger.parent.resourceBundle == null
logger.parent.repository has only one value
logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.parent.aai == null
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
level.level one of { 10000, 20000 }
level.levelStr.toString one of { "DEBUG", "INFO" }
level.syslogEquivalent one of { 6, 7 }
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
message.getClass().getName() == java.lang.String.class
throwable == null
===========================================================================
org.apache.log4j.spi.LoggingEvent.LoggingEvent(java.lang.String, org.apache.log4j.Category, org.apache.log4j.Priority, java.lang.Object, java.lang.Throwable):::EXIT
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
fqnOfCategoryClass.toString == orig(fqnOfCategoryClass.toString)
logger.name == orig(logger.name)
logger.name.toString == orig(logger.name.toString)
logger.level == orig(logger.level)
logger.parent == orig(logger.parent)
logger.parent.name == orig(logger.parent.name)
logger.parent.name.toString == orig(logger.parent.name.toString)
logger.parent.level == orig(logger.parent.level)
logger.parent.parent == orig(logger.parent.parent)
logger.parent.resourceBundle == orig(logger.parent.resourceBundle)
logger.parent.repository == orig(logger.parent.repository)
logger.parent.repository.getClass().getName() == orig(logger.parent.repository.getClass().getName())
logger.parent.aai == orig(logger.parent.aai)
logger.parent.additive == orig(logger.parent.additive)
logger.resourceBundle == orig(logger.resourceBundle)
logger.repository == orig(logger.repository)
logger.repository.getClass().getName() == orig(logger.repository.getClass().getName())
logger.aai == orig(logger.aai)
logger.additive == orig(logger.additive)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
fqnOfCategoryClass.toString == "org.apache.log4j.Category"
logger.name.toString one of { "org.swiftgantt.TimeScaleView", "org.swiftgantt.ui.TimeScaleUI" }
logger.level == null
logger.parent.name.toString one of { "org.swiftgantt.ui", "root" }
logger.parent.resourceBundle == null
logger.parent.repository has only one value
logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.parent.aai == null
logger.resourceBundle == null
logger.repository has only one value
logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
logger.aai == null
logger.additive == true
level.level one of { 10000, 20000 }
level.levelStr.toString one of { "DEBUG", "INFO" }
level.syslogEquivalent one of { 6, 7 }
===========================================================================
org.apache.log4j.spi.RootLogger:::CLASS
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
===========================================================================
org.apache.log4j.spi.RootLogger:::OBJECT
this has only one value
this.name has only one value
this.name.toString == "root"
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
this.level.level == 10000
this.level.levelStr has only one value
this.level.levelStr.toString == "DEBUG"
this.level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
this.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.resourceBundle == null
this.repository == null
this.aai == null
this.additive == true
===========================================================================
org.apache.log4j.spi.RootLogger.RootLogger(org.apache.log4j.Level):::ENTER
level has only one value
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Level.OFF.level == 2147483647
org.apache.log4j.Level.OFF.levelStr has only one value
org.apache.log4j.Level.OFF.levelStr.toString == "OFF"
org.apache.log4j.Level.OFF.syslogEquivalent == 0
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
org.apache.log4j.Level.FATAL.level == 50000
org.apache.log4j.Level.FATAL.levelStr has only one value
org.apache.log4j.Level.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Level.FATAL.syslogEquivalent == 0
org.apache.log4j.Level.ERROR.level == 40000
org.apache.log4j.Level.ERROR.levelStr has only one value
org.apache.log4j.Level.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Level.ERROR.syslogEquivalent == 3
org.apache.log4j.Level.WARN.level == 30000
org.apache.log4j.Level.WARN.levelStr has only one value
org.apache.log4j.Level.WARN.levelStr.toString == "WARN"
org.apache.log4j.Level.WARN.syslogEquivalent == 4
org.apache.log4j.Level.INFO.level == 20000
org.apache.log4j.Level.INFO.levelStr has only one value
org.apache.log4j.Level.INFO.levelStr.toString == "INFO"
org.apache.log4j.Level.INFO.syslogEquivalent == 6
org.apache.log4j.Level.DEBUG.level == 10000
org.apache.log4j.Level.DEBUG.levelStr has only one value
org.apache.log4j.Level.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Level.DEBUG.syslogEquivalent == 7
org.apache.log4j.Level.TRACE.level == 5000
org.apache.log4j.Level.TRACE.levelStr has only one value
org.apache.log4j.Level.TRACE.levelStr.toString == "TRACE"
org.apache.log4j.Level.TRACE.syslogEquivalent == 7
org.apache.log4j.Level.ALL.level == -2147483648
org.apache.log4j.Level.ALL.levelStr has only one value
org.apache.log4j.Level.ALL.levelStr.toString == "ALL"
org.apache.log4j.Level.ALL.syslogEquivalent == 7
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
org.apache.log4j.Priority.FATAL.level == 50000
org.apache.log4j.Priority.FATAL.levelStr has only one value
org.apache.log4j.Priority.FATAL.levelStr.toString == "FATAL"
org.apache.log4j.Priority.FATAL.syslogEquivalent == 0
org.apache.log4j.Priority.ERROR.level == 40000
org.apache.log4j.Priority.ERROR.levelStr has only one value
org.apache.log4j.Priority.ERROR.levelStr.toString == "ERROR"
org.apache.log4j.Priority.ERROR.syslogEquivalent == 3
org.apache.log4j.Priority.WARN.level == 30000
org.apache.log4j.Priority.WARN.levelStr has only one value
org.apache.log4j.Priority.WARN.levelStr.toString == "WARN"
org.apache.log4j.Priority.WARN.syslogEquivalent == 4
org.apache.log4j.Priority.INFO.level == 20000
org.apache.log4j.Priority.INFO.levelStr has only one value
org.apache.log4j.Priority.INFO.levelStr.toString == "INFO"
org.apache.log4j.Priority.INFO.syslogEquivalent == 6
org.apache.log4j.Priority.DEBUG.level == 10000
org.apache.log4j.Priority.DEBUG.levelStr has only one value
org.apache.log4j.Priority.DEBUG.levelStr.toString == "DEBUG"
org.apache.log4j.Priority.DEBUG.syslogEquivalent == 7
===========================================================================
org.apache.log4j.spi.RootLogger.RootLogger(org.apache.log4j.Level):::EXIT
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
this.level has only one value
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
===========================================================================
org.apache.log4j.spi.RootLogger.setLevel(org.apache.log4j.Level):::ENTER
this.level == null
level has only one value
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
===========================================================================
org.apache.log4j.spi.RootLogger.setLevel(org.apache.log4j.Level):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.name == orig(this.name)
this.name.toString == orig(this.name.toString)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Level.OFF.level == orig(org.apache.log4j.Level.OFF.level)
org.apache.log4j.Level.OFF.levelStr == orig(org.apache.log4j.Level.OFF.levelStr)
org.apache.log4j.Level.OFF.levelStr.toString == orig(org.apache.log4j.Level.OFF.levelStr.toString)
org.apache.log4j.Level.OFF.syslogEquivalent == orig(org.apache.log4j.Level.OFF.syslogEquivalent)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
org.apache.log4j.Level.FATAL.level == orig(org.apache.log4j.Level.FATAL.level)
org.apache.log4j.Level.FATAL.levelStr == orig(org.apache.log4j.Level.FATAL.levelStr)
org.apache.log4j.Level.FATAL.levelStr.toString == orig(org.apache.log4j.Level.FATAL.levelStr.toString)
org.apache.log4j.Level.FATAL.syslogEquivalent == orig(org.apache.log4j.Level.FATAL.syslogEquivalent)
org.apache.log4j.Level.ERROR.level == orig(org.apache.log4j.Level.ERROR.level)
org.apache.log4j.Level.ERROR.levelStr == orig(org.apache.log4j.Level.ERROR.levelStr)
org.apache.log4j.Level.ERROR.levelStr.toString == orig(org.apache.log4j.Level.ERROR.levelStr.toString)
org.apache.log4j.Level.ERROR.syslogEquivalent == orig(org.apache.log4j.Level.ERROR.syslogEquivalent)
org.apache.log4j.Level.WARN.level == orig(org.apache.log4j.Level.WARN.level)
org.apache.log4j.Level.WARN.levelStr == orig(org.apache.log4j.Level.WARN.levelStr)
org.apache.log4j.Level.WARN.levelStr.toString == orig(org.apache.log4j.Level.WARN.levelStr.toString)
org.apache.log4j.Level.WARN.syslogEquivalent == orig(org.apache.log4j.Level.WARN.syslogEquivalent)
org.apache.log4j.Level.INFO.level == orig(org.apache.log4j.Level.INFO.level)
org.apache.log4j.Level.INFO.levelStr == orig(org.apache.log4j.Level.INFO.levelStr)
org.apache.log4j.Level.INFO.levelStr.toString == orig(org.apache.log4j.Level.INFO.levelStr.toString)
org.apache.log4j.Level.INFO.syslogEquivalent == orig(org.apache.log4j.Level.INFO.syslogEquivalent)
org.apache.log4j.Level.DEBUG.level == orig(org.apache.log4j.Level.DEBUG.level)
org.apache.log4j.Level.DEBUG.levelStr == orig(org.apache.log4j.Level.DEBUG.levelStr)
org.apache.log4j.Level.DEBUG.levelStr.toString == orig(org.apache.log4j.Level.DEBUG.levelStr.toString)
org.apache.log4j.Level.DEBUG.syslogEquivalent == orig(org.apache.log4j.Level.DEBUG.syslogEquivalent)
org.apache.log4j.Level.TRACE.level == orig(org.apache.log4j.Level.TRACE.level)
org.apache.log4j.Level.TRACE.levelStr == orig(org.apache.log4j.Level.TRACE.levelStr)
org.apache.log4j.Level.TRACE.levelStr.toString == orig(org.apache.log4j.Level.TRACE.levelStr.toString)
org.apache.log4j.Level.TRACE.syslogEquivalent == orig(org.apache.log4j.Level.TRACE.syslogEquivalent)
org.apache.log4j.Level.ALL.level == orig(org.apache.log4j.Level.ALL.level)
org.apache.log4j.Level.ALL.levelStr == orig(org.apache.log4j.Level.ALL.levelStr)
org.apache.log4j.Level.ALL.levelStr.toString == orig(org.apache.log4j.Level.ALL.levelStr.toString)
org.apache.log4j.Level.ALL.syslogEquivalent == orig(org.apache.log4j.Level.ALL.syslogEquivalent)
org.apache.log4j.Priority.FATAL.level == orig(org.apache.log4j.Priority.FATAL.level)
org.apache.log4j.Priority.FATAL.levelStr == orig(org.apache.log4j.Priority.FATAL.levelStr)
org.apache.log4j.Priority.FATAL.levelStr.toString == orig(org.apache.log4j.Priority.FATAL.levelStr.toString)
org.apache.log4j.Priority.FATAL.syslogEquivalent == orig(org.apache.log4j.Priority.FATAL.syslogEquivalent)
org.apache.log4j.Priority.ERROR.level == orig(org.apache.log4j.Priority.ERROR.level)
org.apache.log4j.Priority.ERROR.levelStr == orig(org.apache.log4j.Priority.ERROR.levelStr)
org.apache.log4j.Priority.ERROR.levelStr.toString == orig(org.apache.log4j.Priority.ERROR.levelStr.toString)
org.apache.log4j.Priority.ERROR.syslogEquivalent == orig(org.apache.log4j.Priority.ERROR.syslogEquivalent)
org.apache.log4j.Priority.WARN.level == orig(org.apache.log4j.Priority.WARN.level)
org.apache.log4j.Priority.WARN.levelStr == orig(org.apache.log4j.Priority.WARN.levelStr)
org.apache.log4j.Priority.WARN.levelStr.toString == orig(org.apache.log4j.Priority.WARN.levelStr.toString)
org.apache.log4j.Priority.WARN.syslogEquivalent == orig(org.apache.log4j.Priority.WARN.syslogEquivalent)
org.apache.log4j.Priority.INFO.level == orig(org.apache.log4j.Priority.INFO.level)
org.apache.log4j.Priority.INFO.levelStr == orig(org.apache.log4j.Priority.INFO.levelStr)
org.apache.log4j.Priority.INFO.levelStr.toString == orig(org.apache.log4j.Priority.INFO.levelStr.toString)
org.apache.log4j.Priority.INFO.syslogEquivalent == orig(org.apache.log4j.Priority.INFO.syslogEquivalent)
org.apache.log4j.Priority.DEBUG.level == orig(org.apache.log4j.Priority.DEBUG.level)
org.apache.log4j.Priority.DEBUG.levelStr == orig(org.apache.log4j.Priority.DEBUG.levelStr)
org.apache.log4j.Priority.DEBUG.levelStr.toString == orig(org.apache.log4j.Priority.DEBUG.levelStr.toString)
org.apache.log4j.Priority.DEBUG.syslogEquivalent == orig(org.apache.log4j.Priority.DEBUG.syslogEquivalent)
this.parent == orig(this.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.resourceBundle == orig(this.resourceBundle)
this.repository == orig(this.repository)
this.aai == orig(this.aai)
this.additive == orig(this.additive)
level.level == orig(level.level)
level.levelStr == orig(level.levelStr)
level.levelStr.toString == orig(level.levelStr.toString)
level.syslogEquivalent == orig(level.syslogEquivalent)
this.level has only one value
level.level == 10000
level.levelStr has only one value
level.levelStr.toString == "DEBUG"
level.syslogEquivalent == 7
===========================================================================
org.gantt.generator.mrcpsp.IsolatedGantt:::CLASS
org.gantt.generator.mrcpsp.IsolatedGantt.fileName == null
===========================================================================
org.gantt.generator.mrcpsp.IsolatedGantt:::OBJECT
this has only one value
this.tasks == null
this.filePath.toString == "gantt/testTime.png"
===========================================================================
org.gantt.generator.mrcpsp.IsolatedGantt.IsolatedGantt():::EXIT
this.filePath == null
===========================================================================
org.gantt.generator.mrcpsp.IsolatedGantt.getFileNameWithoutExtension(java.lang.String):::ENTER
this.filePath == arg0
this.filePath has only one value
arg0.toString == "gantt/testTime.png"
===========================================================================
org.gantt.generator.mrcpsp.IsolatedGantt.getFileNameWithoutExtension(java.lang.String):::EXIT
this.tasks == orig(this.tasks)
this.filePath == orig(this.filePath)
this.filePath == orig(arg0)
this.filePath.toString == orig(this.filePath.toString)
org.gantt.generator.mrcpsp.IsolatedGantt.fileName == orig(org.gantt.generator.mrcpsp.IsolatedGantt.fileName)
arg0.toString == orig(arg0.toString)
this.filePath has only one value
arg0.toString == "gantt/testTime.png"
return has only one value
return.toString == "testTime"
===========================================================================
org.swiftgantt.BaseView:::CLASS
===========================================================================
org.swiftgantt.BaseView:::OBJECT
this has only one value
this.getClass().getName() == org.swiftgantt.TimeScaleView.class
this.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
this.logger.name has only one value
this.logger.name.toString == "org.swiftgantt.TimeScaleView"
this.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
this.logger.parent has only one value
this.logger.parent.name has only one value
this.logger.parent.name.toString == "root"
this.logger.parent.level has only one value
this.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
this.logger.parent.resourceBundle == null
this.logger.parent.repository has only one value
this.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.parent.aai == null
this.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.logger.resourceBundle == null
this.logger.repository has only one value
this.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.aai == null
this.logger.additive == true
this.ganttChart has only one value
org.swiftgantt.GanttChart.config has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == [2, 6]
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] elements one of { 2, 6 }
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY has only one value
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == [9, 16]
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.ganttChartBackColor has only one value
org.swiftgantt.GanttChart.config.workingTimeBackColor has only one value
org.swiftgantt.GanttChart.config.restoutTimeBackColor has only one value
org.swiftgantt.GanttChart.config.currentTimeBackColor has only one value
org.swiftgantt.GanttChart.config.kickoffTimeBackColor has only one value
org.swiftgantt.GanttChart.config.deadlineBackColor has only one value
org.swiftgantt.GanttChart.config.taskTreeViewBackColor has only one value
org.swiftgantt.GanttChart.config.taskGroupBarBackColor has only one value
org.swiftgantt.GanttChart.config.taskBarBackColor has only one value
org.swiftgantt.GanttChart.config.progressBarBackColor has only one value
org.swiftgantt.GanttChart.config.selectionColor has only one value
org.swiftgantt.GanttChart.config.timeUnitWidth == 24
org.swiftgantt.GanttChart.config.ganttChartRowHeight == 24
org.swiftgantt.GanttChart.config.taskBarHeight == 16
org.swiftgantt.GanttChart.config.progressBarHeight == 8
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == 2
org.swiftgantt.GanttChart.config.blankStepsToDeadline == 10
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == true
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek has only one value
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == [2, 6]
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] elements one of { 2, 6 }
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay has only one value
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == [9, 16]
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == true
org.swiftgantt.GanttChart.config.fillInvalidArea == false
org.swiftgantt.GanttChart.config.propChangeEvent == null
org.swiftgantt.GanttChart.config.listenerList has only one value
this.ganttChart.layoutSuspendCount == 0
this.ganttChart.logger has only one value
this.ganttChart.logger.name has only one value
this.ganttChart.logger.name.toString == "org.swiftgantt.GanttChart"
this.ganttChart.logger.level == null
this.ganttChart.logger.parent has only one value
this.ganttChart.logger.resourceBundle == null
this.ganttChart.logger.repository has only one value
this.ganttChart.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.ganttChart.logger.aai == null
this.ganttChart.logger.additive == true
this.ganttChart.timeUnit has only one value
org.swiftgantt.ui.TimeUnit.Hour has only one value
org.swiftgantt.ui.TimeUnit.AllDay has only one value
org.swiftgantt.ui.TimeUnit.Day has only one value
org.swiftgantt.ui.TimeUnit.Week has only one value
org.swiftgantt.ui.TimeUnit.Month has only one value
org.swiftgantt.ui.TimeUnit.Year has only one value
org.swiftgantt.ui.TimeUnit.defaultUnit has only one value
org.swiftgantt.ui.TimeUnit.$VALUES has only one value
org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName() == org.swiftgantt.ui.TimeUnit[].class
org.swiftgantt.ui.TimeUnit.$VALUES[] contains no nulls and has only one value, of length 6
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() == [org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit]
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() elements == org.swiftgantt.ui.TimeUnit.class
this.ganttChart.model == null
this.ganttChart.showTreeView == true
this.ganttChart.ganttChartView == null
this.ganttChart.timeScaleView == null
this.ganttChart.taskTreeView == null
this.ganttChart.treeViewScrollBar == null
this.ganttChart.logoView == null
this.ganttChart.totalSteps == 0
this.ganttChart.totalScheduleSteps == 0
this.ganttChart.tasksCount == 0
this.config has only one value
this.config.ganttChartBackColor has only one value
this.config.workingTimeBackColor has only one value
this.config.restoutTimeBackColor has only one value
this.config.currentTimeBackColor has only one value
this.config.kickoffTimeBackColor has only one value
this.config.deadlineBackColor has only one value
this.config.taskTreeViewBackColor has only one value
this.config.taskGroupBarBackColor has only one value
this.config.taskBarBackColor has only one value
this.config.progressBarBackColor has only one value
this.config.selectionColor has only one value
this.config.timeUnitWidth == 24
this.config.ganttChartRowHeight == 24
this.config.taskBarHeight == 16
this.config.progressBarHeight == 8
this.config.blankStepsToKickoffTime == 2
this.config.blankStepsToDeadline == 10
this.config.showTaskInfoBehindTaskBar == true
this.config.workingDaysSpanOfWeek has only one value
this.config.workingDaysSpanOfWeek[] == [2, 6]
this.config.workingDaysSpanOfWeek[] elements one of { 2, 6 }
this.config.workingHoursSpanOfDay has only one value
this.config.workingHoursSpanOfDay[] == [9, 16]
this.config.workingHoursSpanOfDay[] elements one of { 9, 16 }
this.config.allowAccurateTaskBar == true
this.config.fillInvalidArea == false
this.config.propChangeEvent == null
this.config.listenerList has only one value
this.totalSteps == 0
this.totalScheduleSteps == 0
this.x == 0
this.y == 0
size(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[]) == 2
size(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[]) == 2
size(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[]) == 2
size(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[]) == 2
size(org.swiftgantt.ui.TimeUnit.$VALUES[]) == 6
size(this.config.workingDaysSpanOfWeek[]) == 2
size(this.config.workingHoursSpanOfDay[]) == 2
===========================================================================
org.swiftgantt.BaseView.BaseView(org.swiftgantt.GanttChart):::ENTER
arg0 has only one value
org.swiftgantt.GanttChart.config has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == [2, 6]
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] elements one of { 2, 6 }
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY has only one value
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == [9, 16]
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.ganttChartBackColor has only one value
org.swiftgantt.GanttChart.config.workingTimeBackColor has only one value
org.swiftgantt.GanttChart.config.restoutTimeBackColor has only one value
org.swiftgantt.GanttChart.config.currentTimeBackColor has only one value
org.swiftgantt.GanttChart.config.kickoffTimeBackColor has only one value
org.swiftgantt.GanttChart.config.deadlineBackColor has only one value
org.swiftgantt.GanttChart.config.taskTreeViewBackColor has only one value
org.swiftgantt.GanttChart.config.taskGroupBarBackColor has only one value
org.swiftgantt.GanttChart.config.taskBarBackColor has only one value
org.swiftgantt.GanttChart.config.progressBarBackColor has only one value
org.swiftgantt.GanttChart.config.selectionColor has only one value
org.swiftgantt.GanttChart.config.timeUnitWidth == 24
org.swiftgantt.GanttChart.config.ganttChartRowHeight == 24
org.swiftgantt.GanttChart.config.taskBarHeight == 16
org.swiftgantt.GanttChart.config.progressBarHeight == 8
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == 2
org.swiftgantt.GanttChart.config.blankStepsToDeadline == 10
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == true
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek has only one value
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == [2, 6]
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] elements one of { 2, 6 }
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay has only one value
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == [9, 16]
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == true
org.swiftgantt.GanttChart.config.fillInvalidArea == false
org.swiftgantt.GanttChart.config.propChangeEvent == null
org.swiftgantt.GanttChart.config.listenerList has only one value
arg0.layoutSuspendCount == 0
arg0.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
arg0.logger.name has only one value
arg0.logger.name.toString == "org.swiftgantt.GanttChart"
arg0.logger.level == null
arg0.logger.parent has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
arg0.logger.resourceBundle == null
arg0.logger.repository has only one value
arg0.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
arg0.logger.aai == null
arg0.logger.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
arg0.timeUnit has only one value
org.swiftgantt.ui.TimeUnit.Hour has only one value
org.swiftgantt.ui.TimeUnit.AllDay has only one value
org.swiftgantt.ui.TimeUnit.Day has only one value
org.swiftgantt.ui.TimeUnit.Week has only one value
org.swiftgantt.ui.TimeUnit.Month has only one value
org.swiftgantt.ui.TimeUnit.Year has only one value
org.swiftgantt.ui.TimeUnit.defaultUnit has only one value
org.swiftgantt.ui.TimeUnit.$VALUES has only one value
org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName() == org.swiftgantt.ui.TimeUnit[].class
org.swiftgantt.ui.TimeUnit.$VALUES[] contains no nulls and has only one value, of length 6
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() == [org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit]
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() elements == org.swiftgantt.ui.TimeUnit.class
arg0.model == null
arg0.showTreeView == true
arg0.ganttChartView == null
arg0.timeScaleView == null
arg0.taskTreeView == null
arg0.treeViewScrollBar == null
arg0.logoView == null
arg0.totalSteps == 0
arg0.totalScheduleSteps == 0
arg0.tasksCount == 0
size(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[]) == 2
size(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[]) == 2
size(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[]) == 2
size(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[]) == 2
size(org.swiftgantt.ui.TimeUnit.$VALUES[]) == 6
===========================================================================
org.swiftgantt.BaseView.BaseView(org.swiftgantt.GanttChart):::EXIT
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
org.swiftgantt.GanttChart.config == orig(org.swiftgantt.GanttChart.config)
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK == orig(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK)
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == orig(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[])
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY == orig(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY)
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == orig(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[])
org.swiftgantt.GanttChart.config.ganttChartBackColor == orig(org.swiftgantt.GanttChart.config.ganttChartBackColor)
org.swiftgantt.GanttChart.config.workingTimeBackColor == orig(org.swiftgantt.GanttChart.config.workingTimeBackColor)
org.swiftgantt.GanttChart.config.restoutTimeBackColor == orig(org.swiftgantt.GanttChart.config.restoutTimeBackColor)
org.swiftgantt.GanttChart.config.currentTimeBackColor == orig(org.swiftgantt.GanttChart.config.currentTimeBackColor)
org.swiftgantt.GanttChart.config.kickoffTimeBackColor == orig(org.swiftgantt.GanttChart.config.kickoffTimeBackColor)
org.swiftgantt.GanttChart.config.deadlineBackColor == orig(org.swiftgantt.GanttChart.config.deadlineBackColor)
org.swiftgantt.GanttChart.config.taskTreeViewBackColor == orig(org.swiftgantt.GanttChart.config.taskTreeViewBackColor)
org.swiftgantt.GanttChart.config.taskGroupBarBackColor == orig(org.swiftgantt.GanttChart.config.taskGroupBarBackColor)
org.swiftgantt.GanttChart.config.taskBarBackColor == orig(org.swiftgantt.GanttChart.config.taskBarBackColor)
org.swiftgantt.GanttChart.config.progressBarBackColor == orig(org.swiftgantt.GanttChart.config.progressBarBackColor)
org.swiftgantt.GanttChart.config.selectionColor == orig(org.swiftgantt.GanttChart.config.selectionColor)
org.swiftgantt.GanttChart.config.timeUnitWidth == orig(org.swiftgantt.GanttChart.config.timeUnitWidth)
org.swiftgantt.GanttChart.config.ganttChartRowHeight == orig(org.swiftgantt.GanttChart.config.ganttChartRowHeight)
org.swiftgantt.GanttChart.config.taskBarHeight == orig(org.swiftgantt.GanttChart.config.taskBarHeight)
org.swiftgantt.GanttChart.config.progressBarHeight == orig(org.swiftgantt.GanttChart.config.progressBarHeight)
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == orig(org.swiftgantt.GanttChart.config.blankStepsToKickoffTime)
org.swiftgantt.GanttChart.config.blankStepsToDeadline == orig(org.swiftgantt.GanttChart.config.blankStepsToDeadline)
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == orig(org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar)
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek == orig(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek)
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == orig(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[])
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay == orig(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay)
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == orig(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[])
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == orig(org.swiftgantt.GanttChart.config.allowAccurateTaskBar)
org.swiftgantt.GanttChart.config.fillInvalidArea == orig(org.swiftgantt.GanttChart.config.fillInvalidArea)
org.swiftgantt.GanttChart.config.propChangeEvent == orig(org.swiftgantt.GanttChart.config.propChangeEvent)
org.swiftgantt.GanttChart.config.listenerList == orig(org.swiftgantt.GanttChart.config.listenerList)
org.swiftgantt.ui.TimeUnit.Hour == orig(org.swiftgantt.ui.TimeUnit.Hour)
org.swiftgantt.ui.TimeUnit.AllDay == orig(org.swiftgantt.ui.TimeUnit.AllDay)
org.swiftgantt.ui.TimeUnit.Day == orig(org.swiftgantt.ui.TimeUnit.Day)
org.swiftgantt.ui.TimeUnit.Week == orig(org.swiftgantt.ui.TimeUnit.Week)
org.swiftgantt.ui.TimeUnit.Month == orig(org.swiftgantt.ui.TimeUnit.Month)
org.swiftgantt.ui.TimeUnit.Year == orig(org.swiftgantt.ui.TimeUnit.Year)
org.swiftgantt.ui.TimeUnit.defaultUnit == orig(org.swiftgantt.ui.TimeUnit.defaultUnit)
org.swiftgantt.ui.TimeUnit.$VALUES == orig(org.swiftgantt.ui.TimeUnit.$VALUES)
org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName() == orig(org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName())
org.swiftgantt.ui.TimeUnit.$VALUES[] == orig(org.swiftgantt.ui.TimeUnit.$VALUES[])
arg0.layoutSuspendCount == orig(arg0.layoutSuspendCount)
arg0.logger == orig(arg0.logger)
arg0.logger.name == orig(arg0.logger.name)
arg0.logger.name.toString == orig(arg0.logger.name.toString)
arg0.logger.level == orig(arg0.logger.level)
arg0.logger.parent == orig(arg0.logger.parent)
arg0.logger.resourceBundle == orig(arg0.logger.resourceBundle)
arg0.logger.repository == orig(arg0.logger.repository)
arg0.logger.repository.getClass().getName() == orig(arg0.logger.repository.getClass().getName())
arg0.logger.aai == orig(arg0.logger.aai)
arg0.logger.additive == orig(arg0.logger.additive)
arg0.timeUnit == orig(arg0.timeUnit)
arg0.model == orig(arg0.model)
arg0.showTreeView == orig(arg0.showTreeView)
arg0.ganttChartView == orig(arg0.ganttChartView)
arg0.timeScaleView == orig(arg0.timeScaleView)
arg0.taskTreeView == orig(arg0.taskTreeView)
arg0.treeViewScrollBar == orig(arg0.treeViewScrollBar)
arg0.logoView == orig(arg0.logoView)
arg0.totalSteps == orig(arg0.totalSteps)
arg0.totalScheduleSteps == orig(arg0.totalScheduleSteps)
arg0.tasksCount == orig(arg0.tasksCount)
arg0.layoutSuspendCount == 0
arg0.logger has only one value
arg0.logger.name has only one value
arg0.logger.name.toString == "org.swiftgantt.GanttChart"
arg0.logger.level == null
arg0.logger.parent has only one value
arg0.logger.resourceBundle == null
arg0.logger.repository has only one value
arg0.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
arg0.logger.aai == null
arg0.logger.additive == true
arg0.timeUnit has only one value
arg0.model == null
arg0.showTreeView == true
arg0.ganttChartView == null
arg0.timeScaleView == null
arg0.taskTreeView == null
arg0.treeViewScrollBar == null
arg0.logoView == null
arg0.totalSteps == 0
arg0.totalScheduleSteps == 0
arg0.tasksCount == 0
===========================================================================
org.swiftgantt.BaseView.getGanttChart():::ENTER
===========================================================================
org.swiftgantt.BaseView.getGanttChart():::EXIT
this.logger == orig(this.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.logger.name == orig(this.logger.name)
this.logger.name.toString == orig(this.logger.name.toString)
this.logger.level == orig(this.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.logger.parent == orig(this.logger.parent)
this.logger.parent.name == orig(this.logger.parent.name)
this.logger.parent.name.toString == orig(this.logger.parent.name.toString)
this.logger.parent.level == orig(this.logger.parent.level)
this.logger.parent.parent == orig(this.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
this.logger.parent.resourceBundle == orig(this.logger.parent.resourceBundle)
this.logger.parent.repository == orig(this.logger.parent.repository)
this.logger.parent.repository.getClass().getName() == orig(this.logger.parent.repository.getClass().getName())
this.logger.parent.aai == orig(this.logger.parent.aai)
this.logger.parent.additive == orig(this.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.logger.resourceBundle == orig(this.logger.resourceBundle)
this.logger.repository == orig(this.logger.repository)
this.logger.repository.getClass().getName() == orig(this.logger.repository.getClass().getName())
this.logger.aai == orig(this.logger.aai)
this.logger.additive == orig(this.logger.additive)
this.ganttChart == orig(this.ganttChart)
org.swiftgantt.GanttChart.config == orig(org.swiftgantt.GanttChart.config)
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK == orig(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK)
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == orig(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[])
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY == orig(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY)
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == orig(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[])
org.swiftgantt.GanttChart.config.ganttChartBackColor == orig(org.swiftgantt.GanttChart.config.ganttChartBackColor)
org.swiftgantt.GanttChart.config.workingTimeBackColor == orig(org.swiftgantt.GanttChart.config.workingTimeBackColor)
org.swiftgantt.GanttChart.config.restoutTimeBackColor == orig(org.swiftgantt.GanttChart.config.restoutTimeBackColor)
org.swiftgantt.GanttChart.config.currentTimeBackColor == orig(org.swiftgantt.GanttChart.config.currentTimeBackColor)
org.swiftgantt.GanttChart.config.kickoffTimeBackColor == orig(org.swiftgantt.GanttChart.config.kickoffTimeBackColor)
org.swiftgantt.GanttChart.config.deadlineBackColor == orig(org.swiftgantt.GanttChart.config.deadlineBackColor)
org.swiftgantt.GanttChart.config.taskTreeViewBackColor == orig(org.swiftgantt.GanttChart.config.taskTreeViewBackColor)
org.swiftgantt.GanttChart.config.taskGroupBarBackColor == orig(org.swiftgantt.GanttChart.config.taskGroupBarBackColor)
org.swiftgantt.GanttChart.config.taskBarBackColor == orig(org.swiftgantt.GanttChart.config.taskBarBackColor)
org.swiftgantt.GanttChart.config.progressBarBackColor == orig(org.swiftgantt.GanttChart.config.progressBarBackColor)
org.swiftgantt.GanttChart.config.selectionColor == orig(org.swiftgantt.GanttChart.config.selectionColor)
org.swiftgantt.GanttChart.config.timeUnitWidth == orig(org.swiftgantt.GanttChart.config.timeUnitWidth)
org.swiftgantt.GanttChart.config.ganttChartRowHeight == orig(org.swiftgantt.GanttChart.config.ganttChartRowHeight)
org.swiftgantt.GanttChart.config.taskBarHeight == orig(org.swiftgantt.GanttChart.config.taskBarHeight)
org.swiftgantt.GanttChart.config.progressBarHeight == orig(org.swiftgantt.GanttChart.config.progressBarHeight)
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == orig(org.swiftgantt.GanttChart.config.blankStepsToKickoffTime)
org.swiftgantt.GanttChart.config.blankStepsToDeadline == orig(org.swiftgantt.GanttChart.config.blankStepsToDeadline)
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == orig(org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar)
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek == orig(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek)
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == orig(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[])
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay == orig(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay)
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == orig(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[])
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == orig(org.swiftgantt.GanttChart.config.allowAccurateTaskBar)
org.swiftgantt.GanttChart.config.fillInvalidArea == orig(org.swiftgantt.GanttChart.config.fillInvalidArea)
org.swiftgantt.GanttChart.config.propChangeEvent == orig(org.swiftgantt.GanttChart.config.propChangeEvent)
org.swiftgantt.GanttChart.config.listenerList == orig(org.swiftgantt.GanttChart.config.listenerList)
this.ganttChart.layoutSuspendCount == orig(this.ganttChart.layoutSuspendCount)
this.ganttChart.logger == orig(this.ganttChart.logger)
this.ganttChart.logger.name == orig(this.ganttChart.logger.name)
this.ganttChart.logger.name.toString == orig(this.ganttChart.logger.name.toString)
this.ganttChart.logger.level == orig(this.ganttChart.logger.level)
this.ganttChart.logger.parent == orig(this.ganttChart.logger.parent)
this.ganttChart.logger.resourceBundle == orig(this.ganttChart.logger.resourceBundle)
this.ganttChart.logger.repository == orig(this.ganttChart.logger.repository)
this.ganttChart.logger.repository.getClass().getName() == orig(this.ganttChart.logger.repository.getClass().getName())
this.ganttChart.logger.aai == orig(this.ganttChart.logger.aai)
this.ganttChart.logger.additive == orig(this.ganttChart.logger.additive)
this.ganttChart.timeUnit == orig(this.ganttChart.timeUnit)
org.swiftgantt.ui.TimeUnit.Hour == orig(org.swiftgantt.ui.TimeUnit.Hour)
org.swiftgantt.ui.TimeUnit.AllDay == orig(org.swiftgantt.ui.TimeUnit.AllDay)
org.swiftgantt.ui.TimeUnit.Day == orig(org.swiftgantt.ui.TimeUnit.Day)
org.swiftgantt.ui.TimeUnit.Week == orig(org.swiftgantt.ui.TimeUnit.Week)
org.swiftgantt.ui.TimeUnit.Month == orig(org.swiftgantt.ui.TimeUnit.Month)
org.swiftgantt.ui.TimeUnit.Year == orig(org.swiftgantt.ui.TimeUnit.Year)
org.swiftgantt.ui.TimeUnit.defaultUnit == orig(org.swiftgantt.ui.TimeUnit.defaultUnit)
org.swiftgantt.ui.TimeUnit.$VALUES == orig(org.swiftgantt.ui.TimeUnit.$VALUES)
org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName() == orig(org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName())
org.swiftgantt.ui.TimeUnit.$VALUES[] == orig(org.swiftgantt.ui.TimeUnit.$VALUES[])
this.ganttChart.model == orig(this.ganttChart.model)
this.ganttChart.showTreeView == orig(this.ganttChart.showTreeView)
this.ganttChart.ganttChartView == orig(this.ganttChart.ganttChartView)
this.ganttChart.timeScaleView == orig(this.ganttChart.timeScaleView)
this.ganttChart.taskTreeView == orig(this.ganttChart.taskTreeView)
this.ganttChart.treeViewScrollBar == orig(this.ganttChart.treeViewScrollBar)
this.ganttChart.logoView == orig(this.ganttChart.logoView)
this.ganttChart.totalSteps == orig(this.ganttChart.totalSteps)
this.ganttChart.totalScheduleSteps == orig(this.ganttChart.totalScheduleSteps)
this.ganttChart.tasksCount == orig(this.ganttChart.tasksCount)
this.config == orig(this.config)
this.config.ganttChartBackColor == orig(this.config.ganttChartBackColor)
this.config.workingTimeBackColor == orig(this.config.workingTimeBackColor)
this.config.restoutTimeBackColor == orig(this.config.restoutTimeBackColor)
this.config.currentTimeBackColor == orig(this.config.currentTimeBackColor)
this.config.kickoffTimeBackColor == orig(this.config.kickoffTimeBackColor)
this.config.deadlineBackColor == orig(this.config.deadlineBackColor)
this.config.taskTreeViewBackColor == orig(this.config.taskTreeViewBackColor)
this.config.taskGroupBarBackColor == orig(this.config.taskGroupBarBackColor)
this.config.taskBarBackColor == orig(this.config.taskBarBackColor)
this.config.progressBarBackColor == orig(this.config.progressBarBackColor)
this.config.selectionColor == orig(this.config.selectionColor)
this.config.timeUnitWidth == orig(this.config.timeUnitWidth)
this.config.ganttChartRowHeight == orig(this.config.ganttChartRowHeight)
this.config.taskBarHeight == orig(this.config.taskBarHeight)
this.config.progressBarHeight == orig(this.config.progressBarHeight)
this.config.blankStepsToKickoffTime == orig(this.config.blankStepsToKickoffTime)
this.config.blankStepsToDeadline == orig(this.config.blankStepsToDeadline)
this.config.showTaskInfoBehindTaskBar == orig(this.config.showTaskInfoBehindTaskBar)
this.config.workingDaysSpanOfWeek == orig(this.config.workingDaysSpanOfWeek)
this.config.workingDaysSpanOfWeek[] == orig(this.config.workingDaysSpanOfWeek[])
this.config.workingHoursSpanOfDay == orig(this.config.workingHoursSpanOfDay)
this.config.workingHoursSpanOfDay[] == orig(this.config.workingHoursSpanOfDay[])
this.config.allowAccurateTaskBar == orig(this.config.allowAccurateTaskBar)
this.config.fillInvalidArea == orig(this.config.fillInvalidArea)
this.config.propChangeEvent == orig(this.config.propChangeEvent)
this.config.listenerList == orig(this.config.listenerList)
this.totalSteps == orig(this.totalSteps)
this.totalScheduleSteps == orig(this.totalScheduleSteps)
this.x == orig(this.x)
this.y == orig(this.y)
return has only one value
return.layoutSuspendCount == 0
return.logger has only one value
return.logger.name has only one value
return.logger.name.toString == "org.swiftgantt.GanttChart"
return.logger.level == null
return.logger.parent has only one value
return.logger.resourceBundle == null
return.logger.repository has only one value
return.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
return.logger.aai == null
return.logger.additive == true
return.timeUnit has only one value
return.model == null
return.showTreeView == true
return.ganttChartView == null
return.timeScaleView == null
return.taskTreeView == null
return.treeViewScrollBar == null
return.logoView == null
return.totalSteps == 0
return.totalScheduleSteps == 0
return.tasksCount == 0
===========================================================================
org.swiftgantt.Config:::CLASS
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == [2, 6]
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] elements one of { 2, 6 }
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY has only one value
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == [9, 16]
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] elements one of { 9, 16 }
size(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[]) == 2
size(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[]) == 2
===========================================================================
org.swiftgantt.Config:::OBJECT
this has only one value
this.ganttChartBackColor has only one value
this.workingTimeBackColor has only one value
this.restoutTimeBackColor has only one value
this.currentTimeBackColor has only one value
this.kickoffTimeBackColor has only one value
this.deadlineBackColor has only one value
this.taskTreeViewBackColor has only one value
this.taskGroupBarBackColor has only one value
this.taskBarBackColor has only one value
this.progressBarBackColor has only one value
this.selectionColor has only one value
this.timeUnitWidth == 24
this.ganttChartRowHeight == 24
this.taskBarHeight == 16
this.progressBarHeight == 8
this.blankStepsToKickoffTime == 2
this.blankStepsToDeadline == 10
this.showTaskInfoBehindTaskBar == true
this.workingDaysSpanOfWeek has only one value
this.workingDaysSpanOfWeek[] == [2, 6]
this.workingDaysSpanOfWeek[] elements one of { 2, 6 }
this.workingHoursSpanOfDay has only one value
this.workingHoursSpanOfDay[] == [9, 16]
this.workingHoursSpanOfDay[] elements one of { 9, 16 }
this.allowAccurateTaskBar == true
this.fillInvalidArea == false
this.propChangeEvent == null
this.listenerList has only one value
size(this.workingDaysSpanOfWeek[]) == 2
size(this.workingHoursSpanOfDay[]) == 2
===========================================================================
org.swiftgantt.Config.Config():::EXIT
===========================================================================
org.swiftgantt.GanttChart:::CLASS
org.swiftgantt.GanttChart.config has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == [2, 6]
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] elements one of { 2, 6 }
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY has only one value
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == [9, 16]
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.ganttChartBackColor has only one value
org.swiftgantt.GanttChart.config.workingTimeBackColor has only one value
org.swiftgantt.GanttChart.config.restoutTimeBackColor has only one value
org.swiftgantt.GanttChart.config.currentTimeBackColor has only one value
org.swiftgantt.GanttChart.config.kickoffTimeBackColor has only one value
org.swiftgantt.GanttChart.config.deadlineBackColor has only one value
org.swiftgantt.GanttChart.config.taskTreeViewBackColor has only one value
org.swiftgantt.GanttChart.config.taskGroupBarBackColor has only one value
org.swiftgantt.GanttChart.config.taskBarBackColor has only one value
org.swiftgantt.GanttChart.config.progressBarBackColor has only one value
org.swiftgantt.GanttChart.config.selectionColor has only one value
org.swiftgantt.GanttChart.config.timeUnitWidth == 24
org.swiftgantt.GanttChart.config.ganttChartRowHeight == 24
org.swiftgantt.GanttChart.config.taskBarHeight == 16
org.swiftgantt.GanttChart.config.progressBarHeight == 8
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == 2
org.swiftgantt.GanttChart.config.blankStepsToDeadline == 10
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == true
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek has only one value
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == [2, 6]
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] elements one of { 2, 6 }
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay has only one value
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == [9, 16]
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == true
org.swiftgantt.GanttChart.config.fillInvalidArea == false
org.swiftgantt.GanttChart.config.propChangeEvent == null
org.swiftgantt.GanttChart.config.listenerList has only one value
size(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[]) == 2
size(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[]) == 2
size(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[]) == 2
size(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[]) == 2
===========================================================================
org.swiftgantt.GanttChart:::OBJECT
this has only one value
this.layoutSuspendCount == 0
this.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
this.logger.name has only one value
this.logger.name.toString == "org.swiftgantt.GanttChart"
this.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
this.logger.parent has only one value
this.logger.parent.name has only one value
this.logger.parent.name.toString == "root"
this.logger.parent.level has only one value
this.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
this.logger.parent.resourceBundle == null
this.logger.parent.repository has only one value
this.logger.parent.aai == null
this.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.logger.resourceBundle == null
this.logger.repository has only one value
this.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.aai == null
this.logger.additive == true
this.timeUnit has only one value
org.swiftgantt.ui.TimeUnit.Hour has only one value
org.swiftgantt.ui.TimeUnit.AllDay has only one value
org.swiftgantt.ui.TimeUnit.Day has only one value
org.swiftgantt.ui.TimeUnit.Week has only one value
org.swiftgantt.ui.TimeUnit.Month has only one value
org.swiftgantt.ui.TimeUnit.Year has only one value
org.swiftgantt.ui.TimeUnit.defaultUnit has only one value
org.swiftgantt.ui.TimeUnit.$VALUES has only one value
org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName() == org.swiftgantt.ui.TimeUnit[].class
org.swiftgantt.ui.TimeUnit.$VALUES[] contains no nulls and has only one value, of length 6
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() == [org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit]
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() elements == org.swiftgantt.ui.TimeUnit.class
this.model == null
this.showTreeView == true
this.ganttChartView == null
this.timeScaleView == null
this.taskTreeView == null
this.treeViewScrollBar == null
this.logoView == null
this.totalSteps == 0
this.totalScheduleSteps == 0
this.tasksCount == 0
size(org.swiftgantt.ui.TimeUnit.$VALUES[]) == 6
===========================================================================
org.swiftgantt.GanttChart.getConfig():::ENTER
===========================================================================
org.swiftgantt.GanttChart.getConfig():::EXIT
org.swiftgantt.GanttChart.config == orig(org.swiftgantt.GanttChart.config)
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK == orig(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK)
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == orig(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[])
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY == orig(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY)
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == orig(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[])
org.swiftgantt.GanttChart.config.ganttChartBackColor == orig(org.swiftgantt.GanttChart.config.ganttChartBackColor)
org.swiftgantt.GanttChart.config.workingTimeBackColor == orig(org.swiftgantt.GanttChart.config.workingTimeBackColor)
org.swiftgantt.GanttChart.config.restoutTimeBackColor == orig(org.swiftgantt.GanttChart.config.restoutTimeBackColor)
org.swiftgantt.GanttChart.config.currentTimeBackColor == orig(org.swiftgantt.GanttChart.config.currentTimeBackColor)
org.swiftgantt.GanttChart.config.kickoffTimeBackColor == orig(org.swiftgantt.GanttChart.config.kickoffTimeBackColor)
org.swiftgantt.GanttChart.config.deadlineBackColor == orig(org.swiftgantt.GanttChart.config.deadlineBackColor)
org.swiftgantt.GanttChart.config.taskTreeViewBackColor == orig(org.swiftgantt.GanttChart.config.taskTreeViewBackColor)
org.swiftgantt.GanttChart.config.taskGroupBarBackColor == orig(org.swiftgantt.GanttChart.config.taskGroupBarBackColor)
org.swiftgantt.GanttChart.config.taskBarBackColor == orig(org.swiftgantt.GanttChart.config.taskBarBackColor)
org.swiftgantt.GanttChart.config.progressBarBackColor == orig(org.swiftgantt.GanttChart.config.progressBarBackColor)
org.swiftgantt.GanttChart.config.selectionColor == orig(org.swiftgantt.GanttChart.config.selectionColor)
org.swiftgantt.GanttChart.config.timeUnitWidth == orig(org.swiftgantt.GanttChart.config.timeUnitWidth)
org.swiftgantt.GanttChart.config.ganttChartRowHeight == orig(org.swiftgantt.GanttChart.config.ganttChartRowHeight)
org.swiftgantt.GanttChart.config.taskBarHeight == orig(org.swiftgantt.GanttChart.config.taskBarHeight)
org.swiftgantt.GanttChart.config.progressBarHeight == orig(org.swiftgantt.GanttChart.config.progressBarHeight)
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == orig(org.swiftgantt.GanttChart.config.blankStepsToKickoffTime)
org.swiftgantt.GanttChart.config.blankStepsToDeadline == orig(org.swiftgantt.GanttChart.config.blankStepsToDeadline)
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == orig(org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar)
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek == orig(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek)
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == orig(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[])
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay == orig(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay)
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == orig(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[])
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == orig(org.swiftgantt.GanttChart.config.allowAccurateTaskBar)
org.swiftgantt.GanttChart.config.fillInvalidArea == orig(org.swiftgantt.GanttChart.config.fillInvalidArea)
org.swiftgantt.GanttChart.config.propChangeEvent == orig(org.swiftgantt.GanttChart.config.propChangeEvent)
org.swiftgantt.GanttChart.config.listenerList == orig(org.swiftgantt.GanttChart.config.listenerList)
this.layoutSuspendCount == orig(this.layoutSuspendCount)
this.logger == orig(this.logger)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
this.logger.name == orig(this.logger.name)
this.logger.name.toString == orig(this.logger.name.toString)
this.logger.level == orig(this.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.logger.parent == orig(this.logger.parent)
this.logger.parent.name == orig(this.logger.parent.name)
this.logger.parent.name.toString == orig(this.logger.parent.name.toString)
this.logger.parent.level == orig(this.logger.parent.level)
this.logger.parent.parent == orig(this.logger.parent.parent)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
this.logger.parent.resourceBundle == orig(this.logger.parent.resourceBundle)
this.logger.parent.repository == orig(this.logger.parent.repository)
this.logger.parent.aai == orig(this.logger.parent.aai)
this.logger.parent.additive == orig(this.logger.parent.additive)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
this.logger.resourceBundle == orig(this.logger.resourceBundle)
this.logger.repository == orig(this.logger.repository)
this.logger.aai == orig(this.logger.aai)
this.logger.additive == orig(this.logger.additive)
this.timeUnit == orig(this.timeUnit)
org.swiftgantt.ui.TimeUnit.Hour == orig(org.swiftgantt.ui.TimeUnit.Hour)
org.swiftgantt.ui.TimeUnit.AllDay == orig(org.swiftgantt.ui.TimeUnit.AllDay)
org.swiftgantt.ui.TimeUnit.Day == orig(org.swiftgantt.ui.TimeUnit.Day)
org.swiftgantt.ui.TimeUnit.Week == orig(org.swiftgantt.ui.TimeUnit.Week)
org.swiftgantt.ui.TimeUnit.Month == orig(org.swiftgantt.ui.TimeUnit.Month)
org.swiftgantt.ui.TimeUnit.Year == orig(org.swiftgantt.ui.TimeUnit.Year)
org.swiftgantt.ui.TimeUnit.defaultUnit == orig(org.swiftgantt.ui.TimeUnit.defaultUnit)
org.swiftgantt.ui.TimeUnit.$VALUES == orig(org.swiftgantt.ui.TimeUnit.$VALUES)
org.swiftgantt.ui.TimeUnit.$VALUES[] == orig(org.swiftgantt.ui.TimeUnit.$VALUES[])
this.model == orig(this.model)
this.showTreeView == orig(this.showTreeView)
this.ganttChartView == orig(this.ganttChartView)
this.timeScaleView == orig(this.timeScaleView)
this.taskTreeView == orig(this.taskTreeView)
this.treeViewScrollBar == orig(this.treeViewScrollBar)
this.logoView == orig(this.logoView)
this.totalSteps == orig(this.totalSteps)
this.totalScheduleSteps == orig(this.totalScheduleSteps)
this.tasksCount == orig(this.tasksCount)
return has only one value
return.ganttChartBackColor has only one value
return.workingTimeBackColor has only one value
return.restoutTimeBackColor has only one value
return.currentTimeBackColor has only one value
return.kickoffTimeBackColor has only one value
return.deadlineBackColor has only one value
return.taskTreeViewBackColor has only one value
return.taskGroupBarBackColor has only one value
return.taskBarBackColor has only one value
return.progressBarBackColor has only one value
return.selectionColor has only one value
return.timeUnitWidth == 24
return.ganttChartRowHeight == 24
return.taskBarHeight == 16
return.progressBarHeight == 8
return.blankStepsToKickoffTime == 2
return.blankStepsToDeadline == 10
return.showTaskInfoBehindTaskBar == true
return.workingDaysSpanOfWeek has only one value
return.workingDaysSpanOfWeek[] == [2, 6]
return.workingDaysSpanOfWeek[] elements one of { 2, 6 }
return.workingHoursSpanOfDay has only one value
return.workingHoursSpanOfDay[] == [9, 16]
return.workingHoursSpanOfDay[] elements one of { 9, 16 }
return.allowAccurateTaskBar == true
return.fillInvalidArea == false
return.propChangeEvent == null
return.listenerList has only one value
size(return.workingDaysSpanOfWeek[]) == 2
size(return.workingHoursSpanOfDay[]) == 2
===========================================================================
org.swiftgantt.TimeScaleView:::CLASS
===========================================================================
org.swiftgantt.TimeScaleView:::OBJECT
this has only one value
this.tasUI == null
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
org.swiftgantt.GanttChart.config has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == [2, 6]
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] elements one of { 2, 6 }
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY has only one value
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == [9, 16]
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] elements one of { 9, 16 }
this.logger has only one value
this.logger.name has only one value
this.logger.name.toString == "org.swiftgantt.TimeScaleView"
this.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
this.logger.parent has only one value
this.logger.parent.name has only one value
this.logger.parent.name.toString == "root"
this.logger.parent.level has only one value
this.logger.parent.parent == null
this.logger.parent.resourceBundle == null
this.logger.parent.repository has only one value
this.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.parent.aai == null
this.logger.parent.additive == true
this.logger.resourceBundle == null
this.logger.repository has only one value
this.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.aai == null
this.logger.additive == true
this.ganttChart has only one value
org.swiftgantt.GanttChart.config.ganttChartBackColor has only one value
org.swiftgantt.GanttChart.config.workingTimeBackColor has only one value
org.swiftgantt.GanttChart.config.restoutTimeBackColor has only one value
org.swiftgantt.GanttChart.config.currentTimeBackColor has only one value
org.swiftgantt.GanttChart.config.kickoffTimeBackColor has only one value
org.swiftgantt.GanttChart.config.deadlineBackColor has only one value
org.swiftgantt.GanttChart.config.taskTreeViewBackColor has only one value
org.swiftgantt.GanttChart.config.taskGroupBarBackColor has only one value
org.swiftgantt.GanttChart.config.taskBarBackColor has only one value
org.swiftgantt.GanttChart.config.progressBarBackColor has only one value
org.swiftgantt.GanttChart.config.selectionColor has only one value
org.swiftgantt.GanttChart.config.timeUnitWidth == 24
org.swiftgantt.GanttChart.config.ganttChartRowHeight == 24
org.swiftgantt.GanttChart.config.taskBarHeight == 16
org.swiftgantt.GanttChart.config.progressBarHeight == 8
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == 2
org.swiftgantt.GanttChart.config.blankStepsToDeadline == 10
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == true
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek has only one value
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == [2, 6]
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] elements one of { 2, 6 }
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay has only one value
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == [9, 16]
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == true
org.swiftgantt.GanttChart.config.fillInvalidArea == false
org.swiftgantt.GanttChart.config.propChangeEvent == null
org.swiftgantt.GanttChart.config.listenerList has only one value
this.ganttChart.layoutSuspendCount == 0
this.ganttChart.logger has only one value
this.ganttChart.logger.name has only one value
this.ganttChart.logger.name.toString == "org.swiftgantt.GanttChart"
this.ganttChart.logger.level == null
this.ganttChart.logger.parent has only one value
this.ganttChart.logger.resourceBundle == null
this.ganttChart.logger.repository has only one value
this.ganttChart.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.ganttChart.logger.aai == null
this.ganttChart.logger.additive == true
this.ganttChart.timeUnit has only one value
org.swiftgantt.ui.TimeUnit.Hour has only one value
org.swiftgantt.ui.TimeUnit.AllDay has only one value
org.swiftgantt.ui.TimeUnit.Day has only one value
org.swiftgantt.ui.TimeUnit.Week has only one value
org.swiftgantt.ui.TimeUnit.Month has only one value
org.swiftgantt.ui.TimeUnit.Year has only one value
org.swiftgantt.ui.TimeUnit.defaultUnit has only one value
org.swiftgantt.ui.TimeUnit.$VALUES has only one value
org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName() == org.swiftgantt.ui.TimeUnit[].class
org.swiftgantt.ui.TimeUnit.$VALUES[] contains no nulls and has only one value, of length 6
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() == [org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit]
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() elements == org.swiftgantt.ui.TimeUnit.class
this.ganttChart.model == null
this.ganttChart.showTreeView == true
this.ganttChart.ganttChartView == null
this.ganttChart.timeScaleView == null
this.ganttChart.taskTreeView == null
this.ganttChart.treeViewScrollBar == null
this.ganttChart.logoView == null
this.ganttChart.totalSteps == 0
this.ganttChart.totalScheduleSteps == 0
this.ganttChart.tasksCount == 0
this.config has only one value
this.config.ganttChartBackColor has only one value
this.config.workingTimeBackColor has only one value
this.config.restoutTimeBackColor has only one value
this.config.currentTimeBackColor has only one value
this.config.kickoffTimeBackColor has only one value
this.config.deadlineBackColor has only one value
this.config.taskTreeViewBackColor has only one value
this.config.taskGroupBarBackColor has only one value
this.config.taskBarBackColor has only one value
this.config.progressBarBackColor has only one value
this.config.selectionColor has only one value
this.config.timeUnitWidth == 24
this.config.ganttChartRowHeight == 24
this.config.taskBarHeight == 16
this.config.progressBarHeight == 8
this.config.blankStepsToKickoffTime == 2
this.config.blankStepsToDeadline == 10
this.config.showTaskInfoBehindTaskBar == true
this.config.workingDaysSpanOfWeek has only one value
this.config.workingDaysSpanOfWeek[] == [2, 6]
this.config.workingDaysSpanOfWeek[] elements one of { 2, 6 }
this.config.workingHoursSpanOfDay has only one value
this.config.workingHoursSpanOfDay[] == [9, 16]
this.config.workingHoursSpanOfDay[] elements one of { 9, 16 }
this.config.allowAccurateTaskBar == true
this.config.fillInvalidArea == false
this.config.propChangeEvent == null
this.config.listenerList has only one value
this.totalSteps == 0
this.totalScheduleSteps == 0
this.x == 0
this.y == 0
size(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[]) == 2
size(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[]) == 2
size(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[]) == 2
size(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[]) == 2
size(org.swiftgantt.ui.TimeUnit.$VALUES[]) == 6
size(this.config.workingDaysSpanOfWeek[]) == 2
size(this.config.workingHoursSpanOfDay[]) == 2
===========================================================================
org.swiftgantt.TimeScaleView.getUIClassID():::ENTER
===========================================================================
org.swiftgantt.TimeScaleView.getUIClassID():::EXIT
this.tasUI == orig(this.tasUI)
org.apache.log4j.Logger.FQCN == orig(org.apache.log4j.Logger.FQCN)
org.apache.log4j.Logger.FQCN.toString == orig(org.apache.log4j.Logger.FQCN.toString)
org.apache.log4j.Logger.class$org$apache$log4j$Logger == orig(org.apache.log4j.Logger.class$org$apache$log4j$Logger)
org.apache.log4j.Category.FQCN == orig(org.apache.log4j.Category.FQCN)
org.apache.log4j.Category.FQCN.toString == orig(org.apache.log4j.Category.FQCN.toString)
org.apache.log4j.Category.class$org$apache$log4j$Category == orig(org.apache.log4j.Category.class$org$apache$log4j$Category)
org.swiftgantt.GanttChart.config == orig(org.swiftgantt.GanttChart.config)
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK == orig(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK)
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == orig(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[])
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY == orig(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY)
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == orig(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[])
this.logger == orig(this.logger)
this.logger.name == orig(this.logger.name)
this.logger.name.toString == orig(this.logger.name.toString)
this.logger.level == orig(this.logger.level)
org.apache.log4j.Level.OFF == orig(org.apache.log4j.Level.OFF)
org.apache.log4j.Level.FATAL == orig(org.apache.log4j.Level.FATAL)
org.apache.log4j.Level.ERROR == orig(org.apache.log4j.Level.ERROR)
org.apache.log4j.Level.WARN == orig(org.apache.log4j.Level.WARN)
org.apache.log4j.Level.INFO == orig(org.apache.log4j.Level.INFO)
org.apache.log4j.Level.DEBUG == orig(org.apache.log4j.Level.DEBUG)
org.apache.log4j.Level.TRACE == orig(org.apache.log4j.Level.TRACE)
org.apache.log4j.Level.ALL == orig(org.apache.log4j.Level.ALL)
org.apache.log4j.Level.class$org$apache$log4j$Level == orig(org.apache.log4j.Level.class$org$apache$log4j$Level)
org.apache.log4j.Priority.FATAL == orig(org.apache.log4j.Priority.FATAL)
org.apache.log4j.Priority.ERROR == orig(org.apache.log4j.Priority.ERROR)
org.apache.log4j.Priority.WARN == orig(org.apache.log4j.Priority.WARN)
org.apache.log4j.Priority.INFO == orig(org.apache.log4j.Priority.INFO)
org.apache.log4j.Priority.DEBUG == orig(org.apache.log4j.Priority.DEBUG)
this.logger.parent == orig(this.logger.parent)
this.logger.parent.name == orig(this.logger.parent.name)
this.logger.parent.name.toString == orig(this.logger.parent.name.toString)
this.logger.parent.level == orig(this.logger.parent.level)
this.logger.parent.parent == orig(this.logger.parent.parent)
this.logger.parent.resourceBundle == orig(this.logger.parent.resourceBundle)
this.logger.parent.repository == orig(this.logger.parent.repository)
this.logger.parent.repository.getClass().getName() == orig(this.logger.parent.repository.getClass().getName())
this.logger.parent.aai == orig(this.logger.parent.aai)
this.logger.parent.additive == orig(this.logger.parent.additive)
this.logger.resourceBundle == orig(this.logger.resourceBundle)
this.logger.repository == orig(this.logger.repository)
this.logger.repository.getClass().getName() == orig(this.logger.repository.getClass().getName())
this.logger.aai == orig(this.logger.aai)
this.logger.additive == orig(this.logger.additive)
this.ganttChart == orig(this.ganttChart)
org.swiftgantt.GanttChart.config.ganttChartBackColor == orig(org.swiftgantt.GanttChart.config.ganttChartBackColor)
org.swiftgantt.GanttChart.config.workingTimeBackColor == orig(org.swiftgantt.GanttChart.config.workingTimeBackColor)
org.swiftgantt.GanttChart.config.restoutTimeBackColor == orig(org.swiftgantt.GanttChart.config.restoutTimeBackColor)
org.swiftgantt.GanttChart.config.currentTimeBackColor == orig(org.swiftgantt.GanttChart.config.currentTimeBackColor)
org.swiftgantt.GanttChart.config.kickoffTimeBackColor == orig(org.swiftgantt.GanttChart.config.kickoffTimeBackColor)
org.swiftgantt.GanttChart.config.deadlineBackColor == orig(org.swiftgantt.GanttChart.config.deadlineBackColor)
org.swiftgantt.GanttChart.config.taskTreeViewBackColor == orig(org.swiftgantt.GanttChart.config.taskTreeViewBackColor)
org.swiftgantt.GanttChart.config.taskGroupBarBackColor == orig(org.swiftgantt.GanttChart.config.taskGroupBarBackColor)
org.swiftgantt.GanttChart.config.taskBarBackColor == orig(org.swiftgantt.GanttChart.config.taskBarBackColor)
org.swiftgantt.GanttChart.config.progressBarBackColor == orig(org.swiftgantt.GanttChart.config.progressBarBackColor)
org.swiftgantt.GanttChart.config.selectionColor == orig(org.swiftgantt.GanttChart.config.selectionColor)
org.swiftgantt.GanttChart.config.timeUnitWidth == orig(org.swiftgantt.GanttChart.config.timeUnitWidth)
org.swiftgantt.GanttChart.config.ganttChartRowHeight == orig(org.swiftgantt.GanttChart.config.ganttChartRowHeight)
org.swiftgantt.GanttChart.config.taskBarHeight == orig(org.swiftgantt.GanttChart.config.taskBarHeight)
org.swiftgantt.GanttChart.config.progressBarHeight == orig(org.swiftgantt.GanttChart.config.progressBarHeight)
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == orig(org.swiftgantt.GanttChart.config.blankStepsToKickoffTime)
org.swiftgantt.GanttChart.config.blankStepsToDeadline == orig(org.swiftgantt.GanttChart.config.blankStepsToDeadline)
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == orig(org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar)
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek == orig(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek)
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == orig(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[])
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay == orig(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay)
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == orig(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[])
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == orig(org.swiftgantt.GanttChart.config.allowAccurateTaskBar)
org.swiftgantt.GanttChart.config.fillInvalidArea == orig(org.swiftgantt.GanttChart.config.fillInvalidArea)
org.swiftgantt.GanttChart.config.propChangeEvent == orig(org.swiftgantt.GanttChart.config.propChangeEvent)
org.swiftgantt.GanttChart.config.listenerList == orig(org.swiftgantt.GanttChart.config.listenerList)
this.ganttChart.layoutSuspendCount == orig(this.ganttChart.layoutSuspendCount)
this.ganttChart.logger == orig(this.ganttChart.logger)
this.ganttChart.logger.name == orig(this.ganttChart.logger.name)
this.ganttChart.logger.name.toString == orig(this.ganttChart.logger.name.toString)
this.ganttChart.logger.level == orig(this.ganttChart.logger.level)
this.ganttChart.logger.parent == orig(this.ganttChart.logger.parent)
this.ganttChart.logger.resourceBundle == orig(this.ganttChart.logger.resourceBundle)
this.ganttChart.logger.repository == orig(this.ganttChart.logger.repository)
this.ganttChart.logger.repository.getClass().getName() == orig(this.ganttChart.logger.repository.getClass().getName())
this.ganttChart.logger.aai == orig(this.ganttChart.logger.aai)
this.ganttChart.logger.additive == orig(this.ganttChart.logger.additive)
this.ganttChart.timeUnit == orig(this.ganttChart.timeUnit)
org.swiftgantt.ui.TimeUnit.Hour == orig(org.swiftgantt.ui.TimeUnit.Hour)
org.swiftgantt.ui.TimeUnit.AllDay == orig(org.swiftgantt.ui.TimeUnit.AllDay)
org.swiftgantt.ui.TimeUnit.Day == orig(org.swiftgantt.ui.TimeUnit.Day)
org.swiftgantt.ui.TimeUnit.Week == orig(org.swiftgantt.ui.TimeUnit.Week)
org.swiftgantt.ui.TimeUnit.Month == orig(org.swiftgantt.ui.TimeUnit.Month)
org.swiftgantt.ui.TimeUnit.Year == orig(org.swiftgantt.ui.TimeUnit.Year)
org.swiftgantt.ui.TimeUnit.defaultUnit == orig(org.swiftgantt.ui.TimeUnit.defaultUnit)
org.swiftgantt.ui.TimeUnit.$VALUES == orig(org.swiftgantt.ui.TimeUnit.$VALUES)
org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName() == orig(org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName())
org.swiftgantt.ui.TimeUnit.$VALUES[] == orig(org.swiftgantt.ui.TimeUnit.$VALUES[])
this.ganttChart.model == orig(this.ganttChart.model)
this.ganttChart.showTreeView == orig(this.ganttChart.showTreeView)
this.ganttChart.ganttChartView == orig(this.ganttChart.ganttChartView)
this.ganttChart.timeScaleView == orig(this.ganttChart.timeScaleView)
this.ganttChart.taskTreeView == orig(this.ganttChart.taskTreeView)
this.ganttChart.treeViewScrollBar == orig(this.ganttChart.treeViewScrollBar)
this.ganttChart.logoView == orig(this.ganttChart.logoView)
this.ganttChart.totalSteps == orig(this.ganttChart.totalSteps)
this.ganttChart.totalScheduleSteps == orig(this.ganttChart.totalScheduleSteps)
this.ganttChart.tasksCount == orig(this.ganttChart.tasksCount)
this.config == orig(this.config)
this.config.ganttChartBackColor == orig(this.config.ganttChartBackColor)
this.config.workingTimeBackColor == orig(this.config.workingTimeBackColor)
this.config.restoutTimeBackColor == orig(this.config.restoutTimeBackColor)
this.config.currentTimeBackColor == orig(this.config.currentTimeBackColor)
this.config.kickoffTimeBackColor == orig(this.config.kickoffTimeBackColor)
this.config.deadlineBackColor == orig(this.config.deadlineBackColor)
this.config.taskTreeViewBackColor == orig(this.config.taskTreeViewBackColor)
this.config.taskGroupBarBackColor == orig(this.config.taskGroupBarBackColor)
this.config.taskBarBackColor == orig(this.config.taskBarBackColor)
this.config.progressBarBackColor == orig(this.config.progressBarBackColor)
this.config.selectionColor == orig(this.config.selectionColor)
this.config.timeUnitWidth == orig(this.config.timeUnitWidth)
this.config.ganttChartRowHeight == orig(this.config.ganttChartRowHeight)
this.config.taskBarHeight == orig(this.config.taskBarHeight)
this.config.progressBarHeight == orig(this.config.progressBarHeight)
this.config.blankStepsToKickoffTime == orig(this.config.blankStepsToKickoffTime)
this.config.blankStepsToDeadline == orig(this.config.blankStepsToDeadline)
this.config.showTaskInfoBehindTaskBar == orig(this.config.showTaskInfoBehindTaskBar)
this.config.workingDaysSpanOfWeek == orig(this.config.workingDaysSpanOfWeek)
this.config.workingDaysSpanOfWeek[] == orig(this.config.workingDaysSpanOfWeek[])
this.config.workingHoursSpanOfDay == orig(this.config.workingHoursSpanOfDay)
this.config.workingHoursSpanOfDay[] == orig(this.config.workingHoursSpanOfDay[])
this.config.allowAccurateTaskBar == orig(this.config.allowAccurateTaskBar)
this.config.fillInvalidArea == orig(this.config.fillInvalidArea)
this.config.propChangeEvent == orig(this.config.propChangeEvent)
this.config.listenerList == orig(this.config.listenerList)
this.totalSteps == orig(this.totalSteps)
this.totalScheduleSteps == orig(this.totalScheduleSteps)
this.x == orig(this.x)
this.y == orig(this.y)
return has only one value
return.toString == "TimeScaleUI"
===========================================================================
org.swiftgantt.ui.BaseUI:::OBJECT
this has only one value
this.getClass().getName() == org.swiftgantt.ui.TimeScaleUI.class
this.logger has only one value
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
this.logger.name has only one value
this.logger.name.toString == "org.swiftgantt.ui"
this.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
this.logger.parent has only one value
this.logger.parent.name has only one value
this.logger.parent.name.toString == "root"
this.logger.parent.level has only one value
this.logger.parent.parent == null
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
this.logger.parent.resourceBundle == null
this.logger.parent.repository has only one value
this.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.parent.aai == null
this.logger.parent.additive == true
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
this.logger.resourceBundle == null
this.logger.repository has only one value
this.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.aai == null
this.logger.additive == false
this.ganttChart == null
org.swiftgantt.GanttChart.config has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == [2, 6]
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] elements one of { 2, 6 }
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY has only one value
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == [9, 16]
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.ganttChartBackColor has only one value
org.swiftgantt.GanttChart.config.workingTimeBackColor has only one value
org.swiftgantt.GanttChart.config.restoutTimeBackColor has only one value
org.swiftgantt.GanttChart.config.currentTimeBackColor has only one value
org.swiftgantt.GanttChart.config.kickoffTimeBackColor has only one value
org.swiftgantt.GanttChart.config.deadlineBackColor has only one value
org.swiftgantt.GanttChart.config.taskTreeViewBackColor has only one value
org.swiftgantt.GanttChart.config.taskGroupBarBackColor has only one value
org.swiftgantt.GanttChart.config.taskBarBackColor has only one value
org.swiftgantt.GanttChart.config.progressBarBackColor has only one value
org.swiftgantt.GanttChart.config.selectionColor has only one value
org.swiftgantt.GanttChart.config.timeUnitWidth == 24
org.swiftgantt.GanttChart.config.ganttChartRowHeight == 24
org.swiftgantt.GanttChart.config.taskBarHeight == 16
org.swiftgantt.GanttChart.config.progressBarHeight == 8
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == 2
org.swiftgantt.GanttChart.config.blankStepsToDeadline == 10
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == true
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek has only one value
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == [2, 6]
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] elements one of { 2, 6 }
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay has only one value
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == [9, 16]
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == true
org.swiftgantt.GanttChart.config.fillInvalidArea == false
org.swiftgantt.GanttChart.config.propChangeEvent == null
org.swiftgantt.GanttChart.config.listenerList has only one value
org.swiftgantt.ui.TimeUnit.Hour has only one value
org.swiftgantt.ui.TimeUnit.AllDay has only one value
org.swiftgantt.ui.TimeUnit.Day has only one value
org.swiftgantt.ui.TimeUnit.Week has only one value
org.swiftgantt.ui.TimeUnit.Month has only one value
org.swiftgantt.ui.TimeUnit.Year has only one value
org.swiftgantt.ui.TimeUnit.defaultUnit has only one value
org.swiftgantt.ui.TimeUnit.$VALUES has only one value
org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName() == org.swiftgantt.ui.TimeUnit[].class
org.swiftgantt.ui.TimeUnit.$VALUES[] contains no nulls and has only one value, of length 6
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() == [org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit]
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() elements == org.swiftgantt.ui.TimeUnit.class
this.timeAxis == null
this.config == null
this.clientWidth == 0
this.clientHeight == 0
size(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[]) == 2
size(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[]) == 2
size(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[]) == 2
size(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[]) == 2
size(org.swiftgantt.ui.TimeUnit.$VALUES[]) == 6
===========================================================================
org.swiftgantt.ui.BaseUI.BaseUI():::EXIT
===========================================================================
org.swiftgantt.ui.TimeScaleUI:::OBJECT
this has only one value
this.timeScaleView == null
org.apache.log4j.Logger.FQCN has only one value
org.apache.log4j.Logger.FQCN.toString == "org.apache.log4j.Logger"
org.apache.log4j.Logger.class$org$apache$log4j$Logger has only one value
org.apache.log4j.Category.FQCN has only one value
org.apache.log4j.Category.FQCN.toString == "org.apache.log4j.Category"
org.apache.log4j.Category.class$org$apache$log4j$Category has only one value
org.swiftgantt.GanttChart.config has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK has only one value
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] == [2, 6]
org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[] elements one of { 2, 6 }
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY has only one value
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] == [9, 16]
org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[] elements one of { 9, 16 }
this.logger has only one value
this.logger.name has only one value
this.logger.name.toString == "org.swiftgantt.ui.TimeScaleUI"
this.logger.level == null
org.apache.log4j.Level.OFF has only one value
org.apache.log4j.Level.FATAL has only one value
org.apache.log4j.Level.ERROR has only one value
org.apache.log4j.Level.WARN has only one value
org.apache.log4j.Level.INFO has only one value
org.apache.log4j.Level.DEBUG has only one value
org.apache.log4j.Level.TRACE has only one value
org.apache.log4j.Level.ALL has only one value
org.apache.log4j.Level.class$org$apache$log4j$Level == null
org.apache.log4j.Priority.FATAL has only one value
org.apache.log4j.Priority.ERROR has only one value
org.apache.log4j.Priority.WARN has only one value
org.apache.log4j.Priority.INFO has only one value
org.apache.log4j.Priority.DEBUG has only one value
this.logger.parent has only one value
this.logger.parent.name has only one value
this.logger.parent.name.toString == "org.swiftgantt.ui"
this.logger.parent.level == null
this.logger.parent.parent has only one value
this.logger.parent.resourceBundle == null
this.logger.parent.repository has only one value
this.logger.parent.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.parent.aai == null
this.logger.parent.additive == false
this.logger.resourceBundle == null
this.logger.repository has only one value
this.logger.repository.getClass().getName() == org.apache.log4j.Hierarchy.class
this.logger.aai == null
this.logger.additive == true
this.ganttChart == null
org.swiftgantt.GanttChart.config.ganttChartBackColor has only one value
org.swiftgantt.GanttChart.config.workingTimeBackColor has only one value
org.swiftgantt.GanttChart.config.restoutTimeBackColor has only one value
org.swiftgantt.GanttChart.config.currentTimeBackColor has only one value
org.swiftgantt.GanttChart.config.kickoffTimeBackColor has only one value
org.swiftgantt.GanttChart.config.deadlineBackColor has only one value
org.swiftgantt.GanttChart.config.taskTreeViewBackColor has only one value
org.swiftgantt.GanttChart.config.taskGroupBarBackColor has only one value
org.swiftgantt.GanttChart.config.taskBarBackColor has only one value
org.swiftgantt.GanttChart.config.progressBarBackColor has only one value
org.swiftgantt.GanttChart.config.selectionColor has only one value
org.swiftgantt.GanttChart.config.timeUnitWidth == 24
org.swiftgantt.GanttChart.config.ganttChartRowHeight == 24
org.swiftgantt.GanttChart.config.taskBarHeight == 16
org.swiftgantt.GanttChart.config.progressBarHeight == 8
org.swiftgantt.GanttChart.config.blankStepsToKickoffTime == 2
org.swiftgantt.GanttChart.config.blankStepsToDeadline == 10
org.swiftgantt.GanttChart.config.showTaskInfoBehindTaskBar == true
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek has only one value
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] == [2, 6]
org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[] elements one of { 2, 6 }
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay has only one value
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] == [9, 16]
org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[] elements one of { 9, 16 }
org.swiftgantt.GanttChart.config.allowAccurateTaskBar == true
org.swiftgantt.GanttChart.config.fillInvalidArea == false
org.swiftgantt.GanttChart.config.propChangeEvent == null
org.swiftgantt.GanttChart.config.listenerList has only one value
org.swiftgantt.ui.TimeUnit.Hour has only one value
org.swiftgantt.ui.TimeUnit.AllDay has only one value
org.swiftgantt.ui.TimeUnit.Day has only one value
org.swiftgantt.ui.TimeUnit.Week has only one value
org.swiftgantt.ui.TimeUnit.Month has only one value
org.swiftgantt.ui.TimeUnit.Year has only one value
org.swiftgantt.ui.TimeUnit.defaultUnit has only one value
org.swiftgantt.ui.TimeUnit.$VALUES has only one value
org.swiftgantt.ui.TimeUnit.$VALUES.getClass().getName() == org.swiftgantt.ui.TimeUnit[].class
org.swiftgantt.ui.TimeUnit.$VALUES[] contains no nulls and has only one value, of length 6
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() == [org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit, org.swiftgantt.ui.TimeUnit]
org.swiftgantt.ui.TimeUnit.$VALUES[].getClass().getName() elements == org.swiftgantt.ui.TimeUnit.class
this.timeAxis == null
this.config == null
this.clientWidth == 0
this.clientHeight == 0
size(org.swiftgantt.Config.DEFAULT_WORKING_DAYS_SPAN_OF_WEEK[]) == 2
size(org.swiftgantt.Config.DEFAULT_WORKING_HOURS_SPAN_OF_DAY[]) == 2
size(org.swiftgantt.GanttChart.config.workingDaysSpanOfWeek[]) == 2
size(org.swiftgantt.GanttChart.config.workingHoursSpanOfDay[]) == 2
size(org.swiftgantt.ui.TimeUnit.$VALUES[]) == 6
===========================================================================
org.swiftgantt.ui.TimeScaleUI.TimeScaleUI():::EXIT
===========================================================================
org.swiftgantt.ui.TimeScaleUI.createUI(javax.swing.JComponent):::ENTER
arg0 has only one value
arg0.getClass().getName() == org.swiftgantt.TimeScaleView.class
===========================================================================
org.swiftgantt.ui.TimeScaleUI.createUI(javax.swing.JComponent):::EXIT
return has only one value
return.getClass().getName() == org.swiftgantt.ui.TimeScaleUI.class
===========================================================================
org.swiftgantt.ui.TimeUnit:::OBJECT
===========================================================================
org.swiftgantt.ui.TimeUnit.TimeUnit(java.lang.String, int):::ENTER
===========================================================================
org.swiftgantt.ui.TimeUnit.TimeUnit(java.lang.String, int):::EXIT
arg0.toString == orig(arg0.toString)
Exiting Daikon.
